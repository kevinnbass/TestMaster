# ðŸŽ¯ UNIFIED TESTMASTER CONFIGURATION
# Codebase-Agnostic Hybrid Intelligence System

# ============================================================================
# CORE CODEBASE DETECTION & ABSTRACTION
# ============================================================================
core:
  codebase_detection:
    auto_detect: true
    supported_languages: 
      - python
      - javascript
      - typescript
      - java
      - csharp
      - go
      - rust
      - cpp
      - c
      - php
      - ruby
      - kotlin
      - swift
      - dart
      - scala
      - clojure
      - haskell
      - erlang
      - elixir
      - lua
    fallback_analyzers: 
      - "ast_generic"
      - "text_pattern" 
      - "ai_inference"
    
  testing_frameworks:
    python: 
      - "pytest"
      - "unittest" 
      - "nose2"
      - "doctest"
      - "hypothesis"
    javascript: 
      - "jest"
      - "mocha"
      - "jasmine"
      - "cypress"
      - "playwright"
      - "vitest"
    typescript:
      - "jest"
      - "mocha" 
      - "jasmine"
      - "vitest"
    java: 
      - "junit"
      - "testng"
      - "mockito"
      - "spock"
    csharp: 
      - "nunit"
      - "xunit"
      - "mstest"
    go:
      - "testing"
      - "testify"
      - "ginkgo"
    rust:
      - "cargo_test"
      - "quickcheck"
    cpp:
      - "gtest"
      - "catch2"
      - "boost_test"
    php:
      - "phpunit"
      - "codeception"
    ruby:
      - "rspec"
      - "minitest"
    kotlin:
      - "junit"
      - "kotlintest"
    swift:
      - "xctest"
      - "quick_nimble"
    
  build_systems:
    python: ["pip", "poetry", "pipenv", "conda"]
    javascript: ["npm", "yarn", "pnpm"]
    java: ["maven", "gradle", "ant"]
    csharp: ["dotnet", "msbuild", "nuget"]
    go: ["go_modules"]
    rust: ["cargo"]
    cpp: ["cmake", "make", "ninja"]
    php: ["composer"]
    ruby: ["bundler", "gem"]

# ============================================================================
# INTELLIGENCE LAYERS - HYBRID SYSTEM INTEGRATION
# ============================================================================
intelligence_layers:
  
  # Layer 1: Universal Foundation
  layer1_universal_foundation:
    enabled: true
    features:
      language_agnostic_analysis: true
      universal_test_generation: true
      cross_language_patterns: true
      framework_abstraction: true
      ast_abstraction: true
      semantic_analysis: true
    enhancements:
      pattern_recognition:
        enabled: true
        cross_language_learning: true
        pattern_confidence_threshold: 0.8
      universal_ast:
        enabled: true
        cache_parsed_asts: true
        ast_optimization: true
      framework_adaptation:
        enabled: true
        auto_detect_frameworks: true
        custom_adapter_support: true
        
  # Layer 2: Hybrid Intelligence
  layer2_hybrid_intelligence:
    enabled: true
    features:
      tree_of_thought_reasoning: true
      multi_objective_optimization: true
      adaptive_learning: true
      provider_abstraction: true
      cross_language_transfer: true
    enhancements:
      tot_reasoning:
        enabled: true
        reasoning_depth: 5
        branching_factor: 3
        thought_evaluation_threshold: 0.7
        parallel_thought_generation: true
      multi_objective_optimization:
        enabled: true
        objectives:
          - name: "coverage"
            weight: 0.25
            target: 0.95
          - name: "performance" 
            weight: 0.20
            target: 0.85
          - name: "security"
            weight: 0.20
            target: 0.90
          - name: "maintainability"
            weight: 0.15
            target: 0.80
          - name: "reliability"
            weight: 0.10
            target: 0.85
          - name: "readability"
            weight: 0.10
            target: 0.75
      llm_provider_management:
        enabled: true
        primary_provider: "openai"
        fallback_providers: 
          - "anthropic"
          - "google"
          - "local"
        cost_optimization: true
        performance_routing: true
        language_specific_routing: true
        
  # Layer 3: Security Intelligence  
  layer3_security_intelligence:
    enabled: true
    features:
      universal_vulnerability_scanning: true
      cross_language_compliance: true
      security_pattern_detection: true
      threat_modeling: true
      secure_coding_analysis: true
    enhancements:
      vulnerability_scanning:
        enabled: true
        scan_depth: "deep"
        real_time_scanning: true
        cve_database_integration: true
        custom_rule_support: true
        scan_interval: 3600  # 1 hour
      compliance_assessment:
        enabled: true
        frameworks: 
          - "SOX"
          - "GDPR" 
          - "PCI-DSS"
          - "HIPAA"
          - "ISO27001"
          - "NIST"
          - "CIS"
        auto_remediation_suggestions: true
        compliance_reporting: true
      threat_detection:
        enabled: true
        real_time_monitoring: true
        threat_threshold: 0.7
        behavioral_analysis: true
        anomaly_detection: true
        
  # Layer 4: Enterprise Orchestration
  layer4_enterprise_orchestration:
    enabled: true
    features:
      workflow_management: true
      execution_optimization: true
      quality_assurance: true
      real_time_monitoring: true
      ci_cd_integration: true
    enhancements:
      workflow_orchestration:
        enabled: true
        parallel_execution: true
        adaptive_scheduling: true
        resource_optimization: true
      universal_qa:
        enabled: true
        quality_threshold: 0.85
        auto_improvement: true
        continuous_learning: true
      monitoring_system:
        enabled: true
        dashboard_enabled: true
        alert_system: true
        performance_tracking: true
        usage_analytics: true

# ============================================================================
# LLM PROVIDER CONFIGURATION
# ============================================================================
llm_providers:
  openai:
    enabled: true
    api_key_env: "OPENAI_API_KEY"
    models:
      - "gpt-4"
      - "gpt-4-turbo"
      - "gpt-3.5-turbo"
    language_specializations:
      python: 0.95
      javascript: 0.90
      typescript: 0.90
      java: 0.85
      csharp: 0.80
    cost_per_1k_tokens: 0.03
    
  anthropic:
    enabled: true
    api_key_env: "ANTHROPIC_API_KEY"
    models:
      - "claude-3-opus"
      - "claude-3-sonnet"
      - "claude-3-haiku"
    language_specializations:
      python: 0.90
      javascript: 0.85
      rust: 0.90
      go: 0.85
    cost_per_1k_tokens: 0.025
    
  google:
    enabled: true
    api_key_env: "GOOGLE_API_KEY"
    models:
      - "gemini-pro"
      - "gemini-pro-vision"
    language_specializations:
      python: 0.85
      javascript: 0.80
      java: 0.90
      kotlin: 0.85
    cost_per_1k_tokens: 0.02
    
  local:
    enabled: true
    models:
      - "codellama"
      - "starcoder"
      - "wizardcoder"
    endpoint: "http://localhost:11434"
    language_specializations:
      python: 0.75
      javascript: 0.70
      cpp: 0.80
    cost_per_1k_tokens: 0.0

# ============================================================================
# SECURITY CONFIGURATION
# ============================================================================
security:
  vulnerability_databases:
    - name: "nvd"
      url: "https://nvd.nist.gov/feeds/json/cve/1.1/"
      update_interval: 86400  # 24 hours
    - name: "mitre"
      url: "https://cve.mitre.org/data/downloads/"
      update_interval: 86400
    - name: "github_advisory"
      url: "https://api.github.com/advisories"
      update_interval: 43200  # 12 hours
      
  security_scanners:
    universal:
      - "semgrep"
      - "codeql"
      - "snyk"
    python:
      - "bandit"
      - "safety"
      - "pip-audit"
    javascript:
      - "eslint-security"
      - "npm-audit"
      - "retire.js"
    java:
      - "spotbugs"
      - "findsecbugs"
      - "dependency-check"
    csharp:
      - "security-code-scan"
      - "devskim"
    go:
      - "gosec"
      - "nancy"
    rust:
      - "cargo-audit"
      - "clippy"
      
  compliance_frameworks:
    SOX:
      enabled: true
      audit_trails: true
      data_integrity: true
      access_controls: true
    GDPR:
      enabled: true
      data_privacy: true
      consent_management: true
      right_to_deletion: true
    PCI-DSS:
      enabled: true
      payment_data_protection: true
      secure_transmission: true
      access_monitoring: true

# ============================================================================
# PERFORMANCE OPTIMIZATION
# ============================================================================
performance:
  caching:
    enabled: true
    ast_caching: true
    analysis_caching: true
    llm_response_caching: true
    cache_ttl: 3600  # 1 hour
    
  parallel_processing:
    enabled: true
    max_workers: 8
    async_processing: true
    batch_processing: true
    
  resource_management:
    memory_limit_mb: 4096
    timeout_seconds: 300
    retry_attempts: 3
    rate_limiting: true
    
  optimization:
    lazy_loading: true
    progressive_analysis: true
    incremental_processing: true
    smart_scheduling: true

# ============================================================================
# OUTPUT CONFIGURATION
# ============================================================================
output:
  formats:
    supported:
      - "native_framework"  # Output in detected framework format
      - "universal_json"     # Universal test specification
      - "documentation"      # Human-readable documentation
      - "coverage_report"    # Coverage analysis
      - "security_report"    # Security assessment
      - "compliance_report"  # Compliance status
      
  destinations:
    - type: "file_system"
      path: "./generated_tests/"
      organize_by: "language"
    - type: "ci_cd_integration"
      auto_commit: false
      create_pr: false
    - type: "dashboard"
      real_time_updates: true
      
# ============================================================================
# MONITORING & ANALYTICS
# ============================================================================
monitoring:
  enabled: true
  metrics:
    - "generation_time"
    - "test_quality_score"
    - "security_score"
    - "compliance_score"
    - "coverage_percentage"
    - "provider_performance"
    - "cost_tracking"
    
  dashboard:
    enabled: true
    port: 8080
    auto_refresh: 30
    language_breakdown: true
    framework_breakdown: true
    
  alerts:
    enabled: true
    thresholds:
      low_quality: 0.6
      security_risk: 0.7
      compliance_failure: 0.8
      high_cost: 100.0  # dollars per day
      
# ============================================================================
# INTEGRATION SETTINGS
# ============================================================================
integrations:
  ci_cd:
    supported_systems:
      - "github_actions"
      - "gitlab_ci"
      - "jenkins"
      - "azure_devops"
      - "circleci"
      - "travis_ci"
    auto_generation: true
    webhook_support: true
    
  ides:
    supported:
      - "vscode"
      - "intellij"
      - "pycharm"
      - "eclipse"
      - "vim"
      - "emacs"
    plugin_generation: true
    
  version_control:
    supported:
      - "git"
      - "mercurial"
      - "svn"
    hook_integration: true
    
# ============================================================================
# EXPERIMENTAL FEATURES
# ============================================================================
experimental:
  enabled: true
  features:
    ai_code_generation: false
    quantum_optimization: false
    blockchain_verification: false
    neuromorphic_processing: false
    
# ============================================================================
# DEVELOPMENT & DEBUGGING
# ============================================================================
development:
  debug_mode: false
  verbose_logging: false
  profiling: false
  test_mode: false
  mock_providers: false