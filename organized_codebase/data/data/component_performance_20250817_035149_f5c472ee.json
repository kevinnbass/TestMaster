{
  "metadata": {
    "generated_at": "2025-08-17T03:51:49.654939",
    "report_type": "component_performance",
    "time_range_hours": 1
  },
  "sections": [
    {
      "section_id": "executive_summary",
      "title": "Executive Summary",
      "content": "# Executive Summary\n\n**Report Generated:** 2025-08-17T03:51:49.654939\n**Report Type:** component_performance\n**Time Range:** Last 1 hours\n\n## Key Highlights\n\n- System operational status: Healthy\n- Performance metrics within acceptable ranges\n- No critical issues detected\n\n## System Overview\n\nThis report provides comprehensive insights into TestMaster performance\nand operational metrics over the specified time period.",
      "data": {},
      "charts": []
    },
    {
      "section_id": "component_async_executor",
      "title": "Async Executor Performance",
      "content": "## Async Executor Performance\n\n- **Enabled:** True\n- **Is Running:** True\n- **Max Concurrent Tasks:** 100\n- **Active Tasks:** 0\n- **Completed Tasks:** 0\n- **Tasks Executed:** 0\n- **Tasks Succeeded:** 0\n- **Tasks Failed:** 0\n- **Success Rate:** 100\n- **Avg Execution Time Ms:** 0.0\n- **Total Execution Time Ms:** 0.0\n",
      "data": {},
      "charts": []
    },
    {
      "section_id": "component_thread_pool_manager",
      "title": "Thread Pool Manager Performance",
      "content": "## Thread Pool Manager Performance\n\n- **Enabled:** True\n- **Total Pools:** 4\n- **Total Workers:** 8\n- **Active Workers:** 0\n- **Pending Tasks:** 0\n- **Completed Tasks:** 0\n- **Failed Tasks:** 0\n- **Success Rate:** 0.0\n",
      "data": {},
      "charts": []
    },
    {
      "section_id": "component_async_monitor",
      "title": "Async Monitor Performance",
      "content": "## Async Monitor Performance\n\n- **Enabled:** True\n- **Is Monitoring:** True\n- **Total Tasks Tracked:** 0\n- **Active Tasks:** 0\n- **Completed Tasks:** 0\n- **Pending Tasks:** 0\n- **Running Tasks:** 0\n- **Success Rate:** 0.0\n- **Avg Duration Ms:** 0.0\n- **Components Monitored:** 0\n- **Active Alerts:** 0\n- **Alerts Generated:** 0\n",
      "data": {},
      "charts": []
    },
    {
      "section_id": "component_stream_generator",
      "title": "Stream Generator Performance",
      "content": "## Stream Generator Performance\n\n- **Enabled:** True\n- **Active Sessions:** 0\n- **Total Sessions:** 0\n- **Successful Generations:** 0\n- **Total Chunks Generated:** 0\n- **Success Rate:** 0.0\n- **Buffer Size:** 1000\n- **Chunk Size:** 100\n",
      "data": {},
      "charts": []
    },
    {
      "section_id": "component_incremental_enhancer",
      "title": "Incremental Enhancer Performance",
      "content": "## Incremental Enhancer Performance\n\n- **Enabled:** True\n- **Active Enhancements:** 0\n- **Total Enhancements:** 0\n- **Successful Enhancements:** 0\n- **Total Refinement Steps:** 0\n- **Success Rate:** 0.0\n- **Max Iterations:** 3\n- **Quality Threshold:** 0.8\n",
      "data": {},
      "charts": []
    },
    {
      "section_id": "component_feedback_collector",
      "title": "Feedback Collector Performance",
      "content": "## Feedback Collector Performance\n\n- **Enabled:** True\n- **Is Collecting:** True\n- **Active Sessions:** 0\n- **Total Sessions:** 0\n- **Total Feedback:** 0\n- **Processed Feedback:** 0\n- **Overall Average Rating:** 0.0\n- **Collection Interval:** 5.0\n- **Feedback Processors:** 0\n",
      "data": {},
      "charts": []
    },
    {
      "section_id": "trends",
      "title": "Trend Analysis",
      "content": "\n## Trend Analysis\n\nBased on historical data analysis:\n\n- **Performance Trend:** Stable\n- **Usage Trend:** Increasing\n- **Error Rate Trend:** Decreasing\n- **Resource Usage Trend:** Optimized\n\n### Recommendations\n\n- Continue current operational practices\n- Monitor for capacity planning needs\n- Consider optimization opportunities\n",
      "data": {},
      "charts": []
    },
    {
      "section_id": "recommendations",
      "title": "Recommendations",
      "content": "\n## Recommendations\n\n### Performance Optimizations\n- Consider enabling async processing for better throughput\n- Review thread pool configurations for optimal resource usage\n- Implement caching strategies for frequently accessed data\n\n### Monitoring Enhancements\n- Set up automated alerting for critical metrics\n- Increase monitoring frequency for high-traffic components\n- Consider additional custom metrics for business-specific KPIs\n\n### System Improvements\n- Regular maintenance windows for system optimization\n- Capacity planning based on growth trends\n- Security audit and updates\n",
      "data": {},
      "charts": []
    }
  ],
  "raw_data": {
    "generated_at": "2025-08-17T03:51:49.654939",
    "report_type": "component_performance",
    "time_range_hours": 1,
    "custom_data": {
      "test_component": {
        "operations_count": 100,
        "success_rate": 95.5,
        "avg_response_time": 150.0
      }
    },
    "components": {
      "async_executor": {
        "enabled": true,
        "is_running": true,
        "max_concurrent_tasks": 100,
        "active_tasks": 0,
        "completed_tasks": 0,
        "tasks_executed": 0,
        "tasks_succeeded": 0,
        "tasks_failed": 0,
        "success_rate": 100,
        "avg_execution_time_ms": 0.0,
        "total_execution_time_ms": 0.0
      },
      "thread_pool_manager": {
        "enabled": true,
        "total_pools": 4,
        "total_workers": 8,
        "active_workers": 0,
        "pending_tasks": 0,
        "completed_tasks": 0,
        "failed_tasks": 0,
        "success_rate": 0.0,
        "pools": {
          "default": {
            "type": "default",
            "max_workers": 8,
            "auto_scale": true,
            "current_workers": 2,
            "active_workers": 0,
            "pending_tasks": 0
          },
          "io_intensive": {
            "type": "io_intensive",
            "max_workers": 20,
            "auto_scale": true,
            "current_workers": 4,
            "active_workers": 0,
            "pending_tasks": 0
          },
          "cpu_intensive": {
            "type": "cpu_intensive",
            "max_workers": 4,
            "auto_scale": false,
            "current_workers": 1,
            "active_workers": 0,
            "pending_tasks": 0
          },
          "background": {
            "type": "background",
            "max_workers": 3,
            "auto_scale": true,
            "current_workers": 1,
            "active_workers": 0,
            "pending_tasks": 0
          }
        }
      },
      "async_monitor": {
        "enabled": true,
        "is_monitoring": true,
        "total_tasks_tracked": 0,
        "active_tasks": 0,
        "completed_tasks": 0,
        "pending_tasks": 0,
        "running_tasks": 0,
        "success_rate": 0.0,
        "avg_duration_ms": 0.0,
        "components_monitored": 0,
        "active_alerts": 0,
        "alerts_generated": 0
      },
      "stream_generator": {
        "enabled": true,
        "active_sessions": 0,
        "total_sessions": 0,
        "successful_generations": 0,
        "total_chunks_generated": 0,
        "success_rate": 0.0,
        "buffer_size": 1000,
        "chunk_size": 100
      },
      "incremental_enhancer": {
        "enabled": true,
        "active_enhancements": 0,
        "total_enhancements": 0,
        "successful_enhancements": 0,
        "total_refinement_steps": 0,
        "success_rate": 0.0,
        "max_iterations": 3,
        "quality_threshold": 0.8
      },
      "feedback_collector": {
        "enabled": true,
        "is_collecting": true,
        "active_sessions": 0,
        "total_sessions": 0,
        "total_feedback": 0,
        "processed_feedback": 0,
        "overall_average_rating": 0.0,
        "collection_interval": 5.0,
        "feedback_processors": 0
      }
    }
  }
}