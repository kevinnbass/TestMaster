{
  "summary": {
    "files_analyzed": 1571,
    "total_lines": 801341,
    "redundancy_candidates": 3412,
    "architecture_opportunities": 10
  },
  "redundancy_analysis": {
    "high_priority": [
      {
        "type": "function",
        "name": "get_remaining_modules()",
        "files": [
          "accelerated_converter.py",
          "enhanced_self_healing_verifier.py",
          "parallel_converter.py",
          "parallel_converter_fixed.py",
          "turbo_converter.py",
          "week_7_8_converter.py",
          "archive\\legacy_scripts\\accelerated_converter.py",
          "archive\\legacy_scripts\\enhanced_self_healing_verifier.py",
          "archive\\legacy_scripts\\parallel_converter.py",
          "archive\\legacy_scripts\\parallel_converter_fixed.py",
          "archive\\legacy_scripts\\parallel_converter_working.py",
          "archive\\legacy_scripts\\parallel_coverage_converter.py",
          "archive\\legacy_scripts\\parallel_coverage_converter_fixed.py",
          "archive\\legacy_scripts\\self_healing_converter.py",
          "archive\\legacy_scripts\\turbo_converter.py",
          "archive\\legacy_scripts\\week_7_8_converter.py",
          "archive\\original_backup\\accelerated_converter.py",
          "archive\\original_backup\\enhanced_self_healing_verifier.py",
          "archive\\original_backup\\parallel_converter.py",
          "archive\\original_backup\\parallel_converter_fixed.py",
          "archive\\original_backup\\turbo_converter.py",
          "archive\\original_backup\\week_7_8_converter.py",
          "archive\\original_backup\\scripts\\parallel_converter_working.py",
          "archive\\original_backup\\scripts\\parallel_coverage_converter.py",
          "archive\\original_backup\\scripts\\parallel_coverage_converter_fixed.py",
          "archive\\original_backup\\scripts\\self_healing_converter.py",
          "scripts\\parallel_converter_working.py",
          "scripts\\parallel_coverage_converter.py",
          "scripts\\parallel_coverage_converter_fixed.py",
          "scripts\\self_healing_converter.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "generate_test(module_path)",
        "files": [
          "accelerated_converter.py",
          "parallel_converter.py",
          "parallel_converter_fixed.py",
          "turbo_converter.py",
          "week_7_8_converter.py",
          "archive\\legacy_scripts\\accelerated_converter.py",
          "archive\\legacy_scripts\\parallel_converter.py",
          "archive\\legacy_scripts\\parallel_converter_fixed.py",
          "archive\\legacy_scripts\\parallel_converter_working.py",
          "archive\\legacy_scripts\\parallel_coverage_converter.py",
          "archive\\legacy_scripts\\parallel_coverage_converter_fixed.py",
          "archive\\legacy_scripts\\simple_test_generator.py",
          "archive\\legacy_scripts\\turbo_converter.py",
          "archive\\legacy_scripts\\week_7_8_converter.py",
          "archive\\original_backup\\accelerated_converter.py",
          "archive\\original_backup\\parallel_converter.py",
          "archive\\original_backup\\parallel_converter_fixed.py",
          "archive\\original_backup\\turbo_converter.py",
          "archive\\original_backup\\week_7_8_converter.py",
          "archive\\original_backup\\scripts\\parallel_converter_working.py",
          "archive\\original_backup\\scripts\\parallel_coverage_converter.py",
          "archive\\original_backup\\scripts\\parallel_coverage_converter_fixed.py",
          "archive\\original_backup\\scripts\\simple_test_generator.py",
          "scripts\\parallel_converter_working.py",
          "scripts\\parallel_coverage_converter.py",
          "scripts\\parallel_coverage_converter_fixed.py",
          "scripts\\simple_test_generator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "main()",
        "files": [
          "accelerated_converter.py",
          "architecture_centralization_analysis.py",
          "auto_readme_updater.py",
          "batch_convert_broken_tests.py",
          "comprehensive_codebase_analysis.py",
          "comprehensive_feature_audit.py",
          "convert_batch_small.py",
          "convert_with_genai_sdk.py",
          "convert_with_generativeai.py",
          "debug_integration_tests.py",
          "documentation_cli.py",
          "enhanced_incremental_ast_engine.py",
          "enhanced_intelligent_test_builder.py",
          "enhanced_realtime_security_monitor.py",
          "enhanced_security_intelligence_agent.py",
          "enhanced_self_healing_verifier.py",
          "enhance_analytics.py",
          "enhance_auto_generated_tests.py",
          "enhance_missing_robust_systems.py",
          "exhaustive_stub_analysis.py",
          "final_archive_sweep.py",
          "final_integration_fix.py",
          "find_all_stubs.py",
          "find_critical_stubs.py",
          "fix_backend_issues.py",
          "fix_dashboard_imports.py",
          "fix_enhanced_test_imports.py",
          "fix_failing_tests.py",
          "fix_final_four_systems.py",
          "fix_final_issues.py",
          "fix_integration_issues_final.py",
          "fix_integration_tests.py",
          "fix_integration_tests_simple.py",
          "fix_testmaster_imports.py",
          "fix_tests_for_real_modules.py",
          "fix_to_100_percent.py",
          "fix_week2_test_imports.py",
          "implement_test_stubs.py",
          "intelligent_test_builder.py",
          "intelligent_test_builder_offline.py",
          "intelligent_test_builder_v2.py",
          "live_code_quality_monitor.py",
          "llm_analysis_monitor.py",
          "parallel_converter.py",
          "parallel_converter_fixed.py",
          "performance_profiler.py",
          "phase7_validation.py",
          "quick_test_summary.py",
          "realtime_metrics_collector.py",
          "real_time_monitor.py",
          "restore_archive_robust.py",
          "restore_missing_methods.py",
          "restore_real_implementations.py",
          "restore_robust_implementations.py",
          "risk_based_test_targeter.py",
          "run_debt_analysis.py",
          "simple_integration_test.py",
          "simple_test.py",
          "simple_test_runner.py",
          "simple_web_monitor.py",
          "split_massive_test_file.py",
          "start_monitoring.py",
          "testmaster_orchestrator.py",
          "test_advanced_telemetry_system.py",
          "test_after_refactor.py",
          "test_agent_b_integrations.py",
          "test_agent_qa_integration.py",
          "test_api_functionality.py",
          "test_backend_health.py",
          "test_before_refactor.py",
          "test_complexity_prioritizer.py",
          "test_comprehensive_analysis.py",
          "test_dependency_orderer.py",
          "test_exhaustive_features.py",
          "test_final_integration.py",
          "test_hierarchical_planning_complete.py",
          "test_integration_restoration.py",
          "test_integration_systems.py",
          "test_our_implementations.py",
          "test_performance_dashboard_integration.py",
          "test_phase1_simple.py",
          "test_phase2_final_validation.py",
          "test_phase2_quick_validation.py",
          "test_phase2_simple.py",
          "test_phase2_simple_validation.py",
          "test_unified_integration.py",
          "turbo_converter.py",
          "unified_orchestration_example.py",
          "unified_security_scanner.py",
          "utility_analysis_report.py",
          "web_monitor.py",
          "week_5_8_batch_converter.py",
          "week_7_8_converter.py",
          "write_real_tests.py",
          "analytics\\failure_analyzer.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_enhanced_test_imports.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_failing_tests.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_tests_for_real_modules.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_week2_test_imports.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
          "archive\\legacy_scripts\\accelerated_converter.py",
          "archive\\legacy_scripts\\achieve_100_percent.py",
          "archive\\legacy_scripts\\ai_test_generator.py",
          "archive\\legacy_scripts\\batch_convert_broken_tests.py",
          "archive\\legacy_scripts\\batch_gemini_generator.py",
          "archive\\legacy_scripts\\branch_coverage_analyzer.py",
          "archive\\legacy_scripts\\convert_batch_small.py",
          "archive\\legacy_scripts\\convert_with_genai_sdk.py",
          "archive\\legacy_scripts\\convert_with_generativeai.py",
          "archive\\legacy_scripts\\coverage_baseline.py",
          "archive\\legacy_scripts\\coverage_improver.py",
          "archive\\legacy_scripts\\diagnose_final_five.py",
          "archive\\legacy_scripts\\enhanced_self_healing_verifier.py",
          "archive\\legacy_scripts\\enhance_auto_generated_tests.py",
          "archive\\legacy_scripts\\fast_converter.py",
          "archive\\legacy_scripts\\final_five_converter.py",
          "archive\\legacy_scripts\\fix_all_imports.py",
          "archive\\legacy_scripts\\fix_enhanced_test_imports.py",
          "archive\\legacy_scripts\\fix_failing_tests.py",
          "archive\\legacy_scripts\\fix_remaining_issues.py",
          "archive\\legacy_scripts\\fix_tests_for_real_modules.py",
          "archive\\legacy_scripts\\fix_test_infrastructure.py",
          "archive\\legacy_scripts\\fix_week2_test_imports.py",
          "archive\\legacy_scripts\\gemini_test_generator.py",
          "archive\\legacy_scripts\\generate_coverage_sequential.py",
          "archive\\legacy_scripts\\implement_test_stubs.py",
          "archive\\legacy_scripts\\intelligent_converter.py",
          "archive\\legacy_scripts\\intelligent_test_builder.py",
          "archive\\legacy_scripts\\intelligent_test_builder_offline.py",
          "archive\\legacy_scripts\\intelligent_test_builder_v2.py",
          "archive\\legacy_scripts\\measure_final_coverage.py",
          "archive\\legacy_scripts\\parallel_converter.py",
          "archive\\legacy_scripts\\parallel_converter_fixed.py",
          "archive\\legacy_scripts\\parallel_converter_working.py",
          "archive\\legacy_scripts\\parallel_coverage_converter.py",
          "archive\\legacy_scripts\\parallel_coverage_converter_fixed.py",
          "archive\\legacy_scripts\\quick_coverage_boost.py",
          "archive\\legacy_scripts\\quick_test_generator.py",
          "archive\\legacy_scripts\\quick_test_summary.py",
          "archive\\legacy_scripts\\self_healing_converter.py",
          "archive\\legacy_scripts\\simple_test_generator.py",
          "archive\\legacy_scripts\\simple_test_runner.py",
          "archive\\legacy_scripts\\smart_test_generator.py",
          "archive\\legacy_scripts\\systematic_coverage.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\legacy_scripts\\test_single_api_call.py",
          "archive\\legacy_scripts\\turbo_converter.py",
          "archive\\legacy_scripts\\week_5_8_batch_converter.py",
          "archive\\legacy_scripts\\week_7_8_converter.py",
          "archive\\legacy_scripts\\write_real_tests.py",
          "archive\\original_backup\\accelerated_converter.py",
          "archive\\original_backup\\batch_convert_broken_tests.py",
          "archive\\original_backup\\convert_batch_small.py",
          "archive\\original_backup\\convert_with_genai_sdk.py",
          "archive\\original_backup\\convert_with_generativeai.py",
          "archive\\original_backup\\enhanced_self_healing_verifier.py",
          "archive\\original_backup\\enhance_auto_generated_tests.py",
          "archive\\original_backup\\fix_enhanced_test_imports.py",
          "archive\\original_backup\\fix_failing_tests.py",
          "archive\\original_backup\\fix_tests_for_real_modules.py",
          "archive\\original_backup\\fix_week2_test_imports.py",
          "archive\\original_backup\\implement_test_stubs.py",
          "archive\\original_backup\\intelligent_test_builder.py",
          "archive\\original_backup\\intelligent_test_builder_offline.py",
          "archive\\original_backup\\intelligent_test_builder_v2.py",
          "archive\\original_backup\\parallel_converter.py",
          "archive\\original_backup\\parallel_converter_fixed.py",
          "archive\\original_backup\\quick_test_summary.py",
          "archive\\original_backup\\simple_test_runner.py",
          "archive\\original_backup\\testmaster_orchestrator.py",
          "archive\\original_backup\\turbo_converter.py",
          "archive\\original_backup\\week_5_8_batch_converter.py",
          "archive\\original_backup\\week_7_8_converter.py",
          "archive\\original_backup\\write_real_tests.py",
          "archive\\original_backup\\analytics\\failure_analyzer.py",
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "archive\\original_backup\\config\\testmaster_config.py",
          "archive\\original_backup\\dashboard\\quality_dashboard.py",
          "archive\\original_backup\\deduplication\\test_deduplicator.py",
          "archive\\original_backup\\incremental\\dependency_tracker.py",
          "archive\\original_backup\\integration\\cross_module_tester.py",
          "archive\\original_backup\\optimization\\execution_optimizer.py",
          "archive\\original_backup\\scripts\\achieve_100_percent.py",
          "archive\\original_backup\\scripts\\ai_test_generator.py",
          "archive\\original_backup\\scripts\\batch_gemini_generator.py",
          "archive\\original_backup\\scripts\\branch_coverage_analyzer.py",
          "archive\\original_backup\\scripts\\coverage_baseline.py",
          "archive\\original_backup\\scripts\\coverage_improver.py",
          "archive\\original_backup\\scripts\\diagnose_final_five.py",
          "archive\\original_backup\\scripts\\fast_converter.py",
          "archive\\original_backup\\scripts\\final_five_converter.py",
          "archive\\original_backup\\scripts\\fix_all_imports.py",
          "archive\\original_backup\\scripts\\fix_remaining_issues.py",
          "archive\\original_backup\\scripts\\fix_test_infrastructure.py",
          "archive\\original_backup\\scripts\\gemini_test_generator.py",
          "archive\\original_backup\\scripts\\generate_coverage_sequential.py",
          "archive\\original_backup\\scripts\\intelligent_converter.py",
          "archive\\original_backup\\scripts\\measure_final_coverage.py",
          "archive\\original_backup\\scripts\\parallel_converter_working.py",
          "archive\\original_backup\\scripts\\parallel_coverage_converter.py",
          "archive\\original_backup\\scripts\\parallel_coverage_converter_fixed.py",
          "archive\\original_backup\\scripts\\quick_coverage_boost.py",
          "archive\\original_backup\\scripts\\quick_test_generator.py",
          "archive\\original_backup\\scripts\\self_healing_converter.py",
          "archive\\original_backup\\scripts\\simple_test_generator.py",
          "archive\\original_backup\\scripts\\smart_test_generator.py",
          "archive\\original_backup\\scripts\\systematic_coverage.py",
          "archive\\original_backup\\scripts\\test_single_api_call.py",
          "archive\\oversized_modules_20250821_042018\\coordination\\agent_coordination_protocols.py",
          "archive\\oversized_modules_20250821_042018\\coordination\\unified_workflow_orchestrator.py",
          "archive\\oversized_modules_20250821_042018\\ml\\enterprise\\ml_infrastructure_orchestrator.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "cache\\intelligent_cache.py",
          "config\\testmaster_config.py",
          "consolidation\\feature_discovery.py",
          "core\\intelligence\\coordination\\cross_agent_bridge.py",
          "core\\intelligence\\ml\\enterprise\\ml_auto_scaling.py",
          "core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
          "dashboard\\automated_frontend_simulator.py",
          "dashboard\\automated_frontend_tester.py",
          "dashboard\\comprehensive_frontend_validator.py",
          "dashboard\\frontend_display_validator.py",
          "dashboard\\quality_dashboard.py",
          "dashboard\\server.py",
          "dashboard\\simple_robustness_test.py",
          "dashboard\\test_all_features.py",
          "dashboard\\test_api_endpoints.py",
          "dashboard\\test_final_enhancements.py",
          "dashboard\\test_frontend_automated.py",
          "dashboard\\test_multi_agent_integration.py",
          "dashboard\\test_new_robustness_features.py",
          "dashboard\\test_robustness_verification.py",
          "dashboard\\test_ultra_reliability.py",
          "dashboard\\ultimate_frontend_validator.py",
          "deduplication\\test_deduplicator.py",
          "incremental\\dependency_tracker.py",
          "integration\\cross_module_tester.py",
          "optimization\\execution_optimizer.py",
          "prioritization\\test_prioritizer.py",
          "scripts\\achieve_100_percent.py",
          "scripts\\ai_test_generator.py",
          "scripts\\analyze_components.py",
          "scripts\\api_documenter.py",
          "scripts\\batch_gemini_generator.py",
          "scripts\\branch_coverage_analyzer.py",
          "scripts\\coverage_baseline.py",
          "scripts\\coverage_improver.py",
          "scripts\\dependency_analyzer.py",
          "scripts\\diagnose_final_five.py",
          "scripts\\fast_converter.py",
          "scripts\\final_five_converter.py",
          "scripts\\fix_all_imports.py",
          "scripts\\fix_remaining_issues.py",
          "scripts\\fix_test_infrastructure.py",
          "scripts\\gemini_test_generator.py",
          "scripts\\generate_coverage_sequential.py",
          "scripts\\intelligent_converter.py",
          "scripts\\measure_final_coverage.py",
          "scripts\\parallel_converter_working.py",
          "scripts\\parallel_coverage_converter.py",
          "scripts\\parallel_coverage_converter_fixed.py",
          "scripts\\quick_coverage_boost.py",
          "scripts\\quick_test_generator.py",
          "scripts\\self_healing_converter.py",
          "scripts\\simple_test_generator.py",
          "scripts\\smart_test_generator.py",
          "scripts\\systematic_coverage.py",
          "scripts\\test_single_api_call.py",
          "testmaster\\main.py",
          "testmaster\\converters\\batch.py",
          "testmaster\\converters\\intelligent.py",
          "testmaster\\converters\\parallel.py",
          "testmaster\\generators\\intelligent.py",
          "testmaster\\verification\\quality.py",
          "testmaster\\verification\\self_healing.py",
          "tools\\migration\\analyze_legacy_code.py",
          "tools\\migration\\safety_checker.py",
          "validation\\phase_validator.py",
          "workflow\\consolidation_workflow.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self)",
        "files": [
          "agent_d_comprehensive_test_executor.py",
          "ARCHIVE_PROTECTION_SYSTEM.py",
          "comprehensive_feature_audit.py",
          "enhanced_context_aware_test_generator.py",
          "enhanced_incremental_ast_engine.py",
          "enhanced_incremental_ast_engine.py",
          "enhanced_incremental_ast_engine.py",
          "enhanced_incremental_ast_engine.py",
          "enhanced_incremental_ast_engine.py",
          "enhanced_realtime_security_monitor.py",
          "enhanced_realtime_security_monitor.py",
          "enhanced_security_intelligence_agent.py",
          "enhance_analytics.py",
          "enhance_auto_generated_tests.py",
          "finalize_module_splits.py",
          "final_archive_sweep.py",
          "fix_enhanced_test_imports.py",
          "fix_failing_tests.py",
          "fix_tests_for_real_modules.py",
          "fix_week2_test_imports.py",
          "IMPLEMENTATION_STATUS_CHECK.py",
          "integration_test_generator.py",
          "performance_profiler.py",
          "performance_profiler.py",
          "performance_profiler.py",
          "phase7_validation.py",
          "realtime_metrics_collector.py",
          "realtime_metrics_collector.py",
          "replace_stubs_with_archive_implementations.py",
          "restored_asyncio_4.py",
          "restored_asyncio_4.py",
          "restored_json_4.py",
          "restored_json_4.py",
          "restored_json_6.py",
          "restored_logging_4.py",
          "restored_logging_4.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_4.py",
          "restored_threading_4.py",
          "restored_threading_6.py",
          "restored_time_4.py",
          "restored_time_4.py",
          "restored_time_6.py",
          "restored_uuid_4.py",
          "restored_uuid_4.py",
          "specialized_test_generators.py",
          "split_oversized_modules.py",
          "testmaster_orchestrator.py",
          "test_agent_qa_system.py",
          "test_async_processing.py",
          "test_backend_health.py",
          "test_complexity_prioritizer.py",
          "test_flow_optimizer_system.py",
          "test_integration_systems.py",
          "test_reporting_system.py",
          "test_streaming_generation.py",
          "test_universal_ast_system.py",
          "test_universal_language_detector.py",
          "unified_security_scanner.py",
          "write_real_tests.py",
          "agents\\roles\\quality_assurance.py",
          "agents\\roles\\test_architect.py",
          "agents\\roles\\test_coordinator.py",
          "agents\\roles\\test_engineer.py",
          "agents\\roles\\test_executor.py",
          "analysis\\comprehensive_analysis\\anomaly_detection\\anomaly_detection_analyzer.py",
          "analysis\\comprehensive_analysis\\business_analysis\\business_core_analyzer.py",
          "analysis\\comprehensive_analysis\\business_analysis\\business_domain_analyzer.py",
          "analysis\\comprehensive_analysis\\business_analysis\\business_validation_analyzer.py",
          "analysis\\comprehensive_analysis\\business_analysis\\business_workflow_analyzer.py",
          "analysis\\comprehensive_analysis\\cognitive_load\\cognitive_load_analyzer.py",
          "analysis\\comprehensive_analysis\\cognitive_load\\cognitive_load_analyzer.py",
          "analysis\\comprehensive_analysis\\data_pipeline\\data_pipeline_analyzer.py",
          "analysis\\comprehensive_analysis\\data_security\\data_leakage_detector.py",
          "analysis\\comprehensive_analysis\\debt_analysis\\debt_category_analyzer.py",
          "analysis\\comprehensive_analysis\\debt_analysis\\debt_core_analyzer.py",
          "analysis\\comprehensive_analysis\\debt_analysis\\debt_financial_analyzer.py",
          "analysis\\comprehensive_analysis\\domain_modeling\\domain_model_analyzer.py",
          "analysis\\comprehensive_analysis\\energy_analysis\\energy_algorithm_analyzer.py",
          "analysis\\comprehensive_analysis\\energy_analysis\\energy_carbon_analyzer.py",
          "analysis\\comprehensive_analysis\\energy_analysis\\energy_core_analyzer.py",
          "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_core_analyzer.py",
          "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_reflection_analyzer.py",
          "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_security_analyzer.py",
          "analysis\\comprehensive_analysis\\ml_analysis\\ml_core_analyzer.py",
          "analysis\\comprehensive_analysis\\ml_analysis\\ml_data_analyzer.py",
          "analysis\\comprehensive_analysis\\ml_analysis\\ml_model_analyzer.py",
          "analysis\\comprehensive_analysis\\ml_analysis\\ml_tensor_analyzer.py",
          "analysis\\comprehensive_analysis\\pattern_mining\\cross_repo_pattern_miner.py",
          "analysis\\comprehensive_analysis\\pattern_recognition\\ml_pattern_recognition.py",
          "analysis\\comprehensive_analysis\\realtime_analysis\\realtime_ast_engine.py",
          "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py",
          "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_context_analyzer.py",
          "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_core_analyzer.py",
          "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_pattern_analyzer.py",
          "analysis\\comprehensive_analysis\\workflow_analysis\\workflow_pattern_detector.py",
          "archive\\archive_system.py",
          "archive\\placeholder_replacement_20250820_011555_cross_system_communication.py",
          "archive\\real_impl_backup_1755670819_distributed_task_queue.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_enhanced_test_imports.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_failing_tests.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_tests_for_real_modules.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_week2_test_imports.py",
          "archive\\legacy_scripts\\achieve_100_percent.py",
          "archive\\legacy_scripts\\branch_coverage_analyzer.py",
          "archive\\legacy_scripts\\branch_coverage_analyzer.py",
          "archive\\legacy_scripts\\coverage_baseline.py",
          "archive\\legacy_scripts\\data_flow_tests.py",
          "archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
          "archive\\legacy_scripts\\enhance_auto_generated_tests.py",
          "archive\\legacy_scripts\\fix_enhanced_test_imports.py",
          "archive\\legacy_scripts\\fix_failing_tests.py",
          "archive\\legacy_scripts\\fix_remaining_issues.py",
          "archive\\legacy_scripts\\fix_tests_for_real_modules.py",
          "archive\\legacy_scripts\\fix_test_infrastructure.py",
          "archive\\legacy_scripts\\fix_week2_test_imports.py",
          "archive\\legacy_scripts\\generate_coverage_sequential.py",
          "archive\\legacy_scripts\\integration_test_generator.py",
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\legacy_scripts\\intelligent_converter.py",
          "archive\\legacy_scripts\\quick_coverage_boost.py",
          "archive\\legacy_scripts\\smart_test_generator.py",
          "archive\\legacy_scripts\\specialized_test_generators.py",
          "archive\\legacy_scripts\\systematic_coverage.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\legacy_scripts\\write_real_tests.py",
          "archive\\original_backup\\enhanced_context_aware_test_generator.py",
          "archive\\original_backup\\enhance_auto_generated_tests.py",
          "archive\\original_backup\\fix_enhanced_test_imports.py",
          "archive\\original_backup\\fix_failing_tests.py",
          "archive\\original_backup\\fix_tests_for_real_modules.py",
          "archive\\original_backup\\fix_week2_test_imports.py",
          "archive\\original_backup\\integration_test_generator.py",
          "archive\\original_backup\\specialized_test_generators.py",
          "archive\\original_backup\\testmaster_orchestrator.py",
          "archive\\original_backup\\write_real_tests.py",
          "archive\\original_backup\\config\\testmaster_config.py",
          "archive\\original_backup\\incremental\\dependency_tracker.py",
          "archive\\original_backup\\integration\\cross_module_tester.py",
          "archive\\original_backup\\scripts\\achieve_100_percent.py",
          "archive\\original_backup\\scripts\\branch_coverage_analyzer.py",
          "archive\\original_backup\\scripts\\branch_coverage_analyzer.py",
          "archive\\original_backup\\scripts\\coverage_baseline.py",
          "archive\\original_backup\\scripts\\fix_remaining_issues.py",
          "archive\\original_backup\\scripts\\fix_test_infrastructure.py",
          "archive\\original_backup\\scripts\\generate_coverage_sequential.py",
          "archive\\original_backup\\scripts\\intelligent_converter.py",
          "archive\\original_backup\\scripts\\quick_coverage_boost.py",
          "archive\\original_backup\\scripts\\smart_test_generator.py",
          "archive\\original_backup\\scripts\\systematic_coverage.py",
          "archive\\original_backup\\src\\data_flow_tests.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "archive\\oversized_modules_20250821_042018\\api\\enterprise_integration_layer.py",
          "archive\\oversized_modules_20250821_042018\\api\\enterprise_integration_layer.py",
          "archive\\oversized_modules_20250821_042018\\api\\enterprise_integration_layer.py",
          "archive\\oversized_modules_20250821_042018\\coordination\\resource_coordination_system.py",
          "archive\\oversized_modules_20250821_042018\\coordination\\resource_coordination_system.py",
          "archive\\oversized_modules_20250821_042018\\coordination\\resource_coordination_system.py",
          "archive\\oversized_modules_20250821_042018\\documentation\\revolutionary\\neo4j_dominator.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\performance_optimization_engine.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\performance_optimization_engine.py",
          "archive\\oversized_modules_20250821_042018\\validation\\integration_test_suite.py",
          "archive\\oversized_modules_20250821_042018\\validation\\integration_test_suite.py",
          "archive\\oversized_modules_20250821_042018\\validation\\system_validation_framework.py",
          "archive\\oversized_modules_20250821_042018\\validation\\system_validation_framework.py",
          "archive\\oversized_modules_20250821_042018\\validation\\system_validation_framework.py",
          "archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
          "archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\enhanced_monitor.py",
          "archive\\phase1c_consolidation_20250820_150000\\enhanced_monitor.py",
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py",
          "archive\\phase4_archive\\replaced_code\\enhanced_monitor_20250819_195132.py",
          "archive\\phase4_archive\\replaced_code\\enhanced_monitor_20250819_195132.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "archive\\phase7_archive\\replaced_code\\enhanced_monitor_20250819_202006.py",
          "archive\\phase7_archive\\replaced_code\\enhanced_monitor_20250819_202006.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "config\\testmaster_config.py",
          "consolidation\\feature_discovery.py",
          "core\\ast_abstraction.py",
          "core\\context_manager.py",
          "core\\framework_abstraction.stub_backup.py",
          "core\\language_detection.py",
          "core\\language_detection.py",
          "core\\shared_state.py",
          "core\\tracking_manager.py",
          "core\\intelligence\\analysis\\business_base.py",
          "core\\intelligence\\analysis\\semantic_base.py",
          "core\\intelligence\\analytics\\statistical_engine.py",
          "core\\intelligence\\api\\unified_api_gateway.py",
          "core\\intelligence\\api\\unified_api_gateway.py",
          "core\\intelligence\\api\\unified_api_gateway.py",
          "core\\intelligence\\base\\__init__.py",
          "core\\intelligence\\config\\enterprise_config_manager.py",
          "core\\intelligence\\coordination\\distributed_lock_manager.py",
          "core\\intelligence\\coordination\\distributed_lock_manager.py",
          "core\\intelligence\\dashboard\\intelligence_backend.py",
          "core\\intelligence\\documentation\\api_docs_extractor.py",
          "core\\intelligence\\documentation\\api_spec_builder.py",
          "core\\intelligence\\documentation\\auto_generator.py",
          "core\\intelligence\\documentation\\changelog_generator.py",
          "core\\intelligence\\documentation\\comprehensive_visualization_engine.py",
          "core\\intelligence\\documentation\\comprehensive_visualization_engine.py",
          "core\\intelligence\\documentation\\cross_framework_integration.py",
          "core\\intelligence\\documentation\\cross_framework_integration.py",
          "core\\intelligence\\documentation\\diagram_creator.py",
          "core\\intelligence\\documentation\\doc_orchestrator.py",
          "core\\intelligence\\documentation\\enterprise_api_docs.py",
          "core\\intelligence\\documentation\\faq_system.py",
          "core\\intelligence\\documentation\\intelligence_integration.py",
          "core\\intelligence\\documentation\\intelligent_content_orchestrator.py",
          "core\\intelligence\\documentation\\json_docs_processor.py",
          "core\\intelligence\\documentation\\knowledge_management_framework.py",
          "core\\intelligence\\documentation\\knowledge_management_framework.py",
          "core\\intelligence\\documentation\\knowledge_management_framework.py",
          "core\\intelligence\\documentation\\knowledge_management_framework.py",
          "core\\intelligence\\documentation\\legacy_integration_framework.py",
          "core\\intelligence\\documentation\\markdown_generator.py",
          "core\\intelligence\\documentation\\master_documentation_orchestrator.py",
          "core\\intelligence\\documentation\\master_documentation_orchestrator.py",
          "core\\intelligence\\documentation\\mdx_generator.py",
          "core\\intelligence\\documentation\\metrics_reporter.py",
          "core\\intelligence\\documentation\\metrics_reporter.py",
          "core\\intelligence\\documentation\\migration_guide_generator.py",
          "core\\intelligence\\documentation\\multilingual_docs.py",
          "core\\intelligence\\documentation\\phase_1_7_integration.py",
          "core\\intelligence\\documentation\\quality_assessment_engine.py",
          "core\\intelligence\\documentation\\quality_assessment_engine.py",
          "core\\intelligence\\documentation\\quality_assessment_engine.py",
          "core\\intelligence\\documentation\\swarms_auto_generation_adapter.py",
          "core\\intelligence\\documentation\\swarms_doc_intelligence_extractor.py",
          "core\\intelligence\\documentation\\swarms_navigation_intelligence.py",
          "core\\intelligence\\documentation\\swarms_self_healing_docs.py",
          "core\\intelligence\\documentation\\tracking_integration_docs.py",
          "core\\intelligence\\documentation\\tutorial_system.py",
          "core\\intelligence\\documentation\\ux_excellence_framework.py",
          "core\\intelligence\\documentation\\ux_excellence_framework.py",
          "core\\intelligence\\documentation\\ux_excellence_framework.py",
          "core\\intelligence\\documentation\\ux_excellence_framework.py",
          "core\\intelligence\\documentation\\ux_excellence_framework.py",
          "core\\intelligence\\documentation\\yaml_config_processor.py",
          "core\\intelligence\\documentation\\enterprise\\documentation_intelligence.py",
          "core\\intelligence\\documentation\\enterprise\\documentation_validator.py",
          "core\\intelligence\\documentation\\enterprise\\enterprise_doc_orchestrator.py",
          "core\\intelligence\\documentation\\enterprise\\workflow_automation.py",
          "core\\intelligence\\documentation\\intelligence\\analyzer.py",
          "core\\intelligence\\documentation\\intelligence\\optimizer.py",
          "core\\intelligence\\documentation\\intelligence\\optimization\\content_enhancer.py",
          "core\\intelligence\\documentation\\intelligence\\optimization\\strategy_engine.py",
          "core\\intelligence\\documentation\\revolutionary\\ai_documentation_synthesizer.py",
          "core\\intelligence\\documentation\\revolutionary\\codesee_annihilator.py",
          "core\\intelligence\\documentation\\revolutionary\\falkordb_obliterator.py",
          "core\\intelligence\\documentation\\revolutionary\\interactive_chat_interface.py",
          "core\\intelligence\\documentation\\revolutionary\\living_documentation_engine.py",
          "core\\intelligence\\documentation\\revolutionary\\newton_graph_destroyer.py",
          "core\\intelligence\\enterprise\\api_orchestrator.py",
          "core\\intelligence\\enterprise\\integration_validator.py",
          "core\\intelligence\\enterprise\\reporting_engine.py",
          "core\\intelligence\\enterprise\\api\\endpoint_manager.py",
          "core\\intelligence\\enterprise\\api\\request_router.py",
          "core\\intelligence\\enterprise\\api\\service_registry.py",
          "core\\intelligence\\knowledge_graph\\code_knowledge_graph_engine.py",
          "core\\intelligence\\knowledge_graph\\multi_language_analyzer.py",
          "core\\intelligence\\knowledge_graph\\predictive_code_intelligence.py",
          "core\\intelligence\\ml\\anomaly_algorithms.py",
          "core\\intelligence\\ml\\correlation_engine.py",
          "core\\intelligence\\ml\\feature_engineering.py",
          "core\\intelligence\\ml\\gpu_accelerator.py",
          "core\\intelligence\\ml\\gpu_accelerator.py",
          "core\\intelligence\\ml\\gpu_accelerator.py",
          "core\\intelligence\\ml\\integration_analysis.py",
          "core\\intelligence\\ml\\advanced\\ensemble_meta_learner.py",
          "core\\intelligence\\ml\\advanced\\smart_cache.py",
          "core\\intelligence\\monitoring\\pattern_detector.py",
          "core\\intelligence\\orchestration\\cross_system_orchestrator.py",
          "core\\intelligence\\orchestration\\cross_system_orchestrator.py",
          "core\\intelligence\\orchestration\\integration_hub.py",
          "core\\intelligence\\orchestration\\integration_hub.py",
          "core\\intelligence\\orchestration\\integration_hub.py",
          "core\\intelligence\\orchestration\\workflow_orchestration_engine.py",
          "core\\intelligence\\reliability\\enterprise_error_recovery.py",
          "core\\intelligence\\security\\ai_security_integration.py",
          "core\\intelligence\\security\\code_vulnerability_scanner.py",
          "core\\intelligence\\security\\compliance_checker.py",
          "core\\intelligence\\security\\crypto_analyzer.py",
          "core\\intelligence\\security\\dependency_scanner.py",
          "core\\intelligence\\security\\knowledge_graph_integration.py",
          "core\\intelligence\\security\\security_analytics.py",
          "core\\intelligence\\security\\security_compliance_validator.py",
          "core\\intelligence\\security\\threat_intelligence_engine.py",
          "core\\intelligence\\security\\threat_modeler.py",
          "core\\intelligence\\security\\unified_security_service.py",
          "core\\intelligence\\security\\vulnerability_scanner.py",
          "core\\intelligence\\security\\enterprise\\compliance_automation.py",
          "core\\intelligence\\security\\enterprise\\enterprise_security_monitor.py",
          "core\\intelligence\\security\\enterprise\\governance_framework.py",
          "core\\intelligence\\security\\enterprise\\security_intelligence.py",
          "core\\intelligence\\security\\enterprise\\security_validator.py",
          "core\\intelligence\\security\\enterprise\\intelligence\\incident_responder.py",
          "core\\intelligence\\security\\enterprise\\intelligence\\threat_detector.py",
          "core\\intelligence\\security\\enterprise\\validation\\compliance_validator.py",
          "core\\intelligence\\security\\enterprise\\validation\\integration_validator.py",
          "core\\intelligence\\security\\enterprise\\validation\\penetration_tester.py",
          "core\\intelligence\\testing\\automation_engine.py",
          "core\\intelligence\\testing\\automation_engine.py",
          "core\\intelligence\\testing\\chaos_engineer.py",
          "core\\intelligence\\testing\\contract_tester.py",
          "core\\intelligence\\testing\\load_generator.py",
          "core\\intelligence\\testing\\quality_dashboard.py",
          "core\\intelligence\\testing\\regression_detector.py",
          "core\\intelligence\\testing\\test_analytics.py",
          "core\\intelligence\\testing\\test_intelligence.py",
          "core\\intelligence\\testing\\test_intelligence.py",
          "core\\intelligence\\testing\\test_intelligence.py",
          "core\\intelligence\\testing\\test_intelligence.py",
          "core\\intelligence\\testing\\test_selector.py",
          "core\\intelligence\\testing\\enterprise\\predictive_test_failure.py",
          "core\\intelligence\\testing\\enterprise\\quality_analytics_engine.py",
          "core\\intelligence\\testing\\enterprise\\quality_gate_automation.py",
          "core\\intelligence\\visualization\\agent_interface_systems.py",
          "core\\intelligence\\visualization\\agent_interface_systems.py",
          "core\\intelligence\\visualization\\agent_interface_systems.py",
          "core\\intelligence\\visualization\\dashboard_systems.py",
          "core\\intelligence\\visualization\\dashboard_systems.py",
          "core\\intelligence\\visualization\\dashboard_systems.py",
          "core\\intelligence\\visualization\\dashboard_systems.py",
          "core\\intelligence\\visualization\\dashboard_systems.py",
          "core\\intelligence\\visualization\\development_tools_ui.py",
          "core\\intelligence\\visualization\\development_tools_ui.py",
          "core\\intelligence\\visualization\\development_tools_ui.py",
          "core\\intelligence\\visualization\\development_tools_ui.py",
          "core\\intelligence\\visualization\\interactive_visualizations.py",
          "core\\intelligence\\visualization\\interactive_visualizations.py",
          "core\\intelligence\\visualization\\observability_systems.py",
          "core\\intelligence\\visualization\\observability_systems.py",
          "core\\intelligence\\visualization\\observability_systems.py",
          "core\\intelligence\\visualization\\realtime_ui_components.py",
          "core\\intelligence\\visualization\\user_experience_frameworks.py",
          "core\\intelligence\\visualization\\user_experience_frameworks.py",
          "core\\intelligence\\visualization\\user_experience_frameworks.py",
          "core\\intelligence\\visualization\\user_experience_frameworks.py",
          "core\\observability\\agent_ops_separate.py",
          "core\\observability\\agent_ops_separate.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "core\\security\\adaptive_security_resilience.py",
          "core\\security\\adaptive_security_resilience.py",
          "core\\security\\adaptive_security_resilience.py",
          "core\\security\\authentication_system.py",
          "core\\security\\byzantine_consensus_security.py",
          "core\\security\\cloud_event_security.py",
          "core\\security\\code_generation_security.py",
          "core\\security\\code_generation_security.py",
          "core\\security\\code_generation_security.py",
          "core\\security\\configuration_security.py",
          "core\\security\\configuration_security.py",
          "core\\security\\container_security_validator.py",
          "core\\security\\container_security_validator.py",
          "core\\security\\container_security_validator.py",
          "core\\security\\data_integrity_guardian.py",
          "core\\security\\deployment_pipeline_security.py",
          "core\\security\\deployment_pipeline_security.py",
          "core\\security\\deployment_pipeline_security.py",
          "core\\security\\distributed_coordination_security.py",
          "core\\security\\distributed_coordination_security.py",
          "core\\security\\distributed_key_management_security.py",
          "core\\security\\document_classification_security.py",
          "core\\security\\document_classification_security.py",
          "core\\security\\document_classification_security.py",
          "core\\security\\enterprise_authentication.py",
          "core\\security\\enterprise_authentication.py",
          "core\\security\\enum_security.py",
          "core\\security\\enum_security.py",
          "core\\security\\error_handler.py",
          "core\\security\\error_recovery_framework.py",
          "core\\security\\exception_monitoring.py",
          "core\\security\\exception_monitoring.py",
          "core\\security\\file_security_handler.py",
          "core\\security\\guardrail_security_system.py",
          "core\\security\\identity_validation_system.py",
          "core\\security\\identity_validation_system.py",
          "core\\security\\license_compliance_framework.py",
          "core\\security\\license_compliance_framework.py",
          "core\\security\\license_compliance_framework.py",
          "core\\security\\message_context_security.py",
          "core\\security\\message_context_security.py",
          "core\\security\\multi_agent_access_control.py",
          "core\\security\\multi_agent_access_control.py",
          "core\\security\\multi_agent_access_control.py",
          "core\\security\\multi_agent_evaluation_security.py",
          "core\\security\\network_security_controls.py",
          "core\\security\\network_security_controls.py",
          "core\\security\\network_security_controls.py",
          "core\\security\\operational_security.py",
          "core\\security\\operational_security.py",
          "core\\security\\operational_security.py",
          "core\\security\\rate_limiter.py",
          "core\\security\\retry_mechanism_system.py",
          "core\\security\\secure_message_delivery.py",
          "core\\security\\secure_performance_optimizer.py",
          "core\\security\\secure_performance_optimizer.py",
          "core\\security\\secure_performance_optimizer.py",
          "core\\security\\security_monitoring_system.py",
          "core\\security\\security_monitoring_system.py",
          "core\\security\\service_mesh_security.py",
          "core\\security\\thread_safety_manager.py",
          "core\\security\\validation_framework.py",
          "core\\security\\validation_security.py",
          "core\\security\\validation_security.py",
          "core\\security\\vulnerability_detection_framework.py",
          "core\\state\\enhanced_state_manager.py",
          "core\\state\\enhanced_state_manager.py",
          "core\\testing\\adaptive_testing_framework.py",
          "core\\testing\\adaptive_testing_framework.py",
          "core\\testing\\agent_reasoning_testing.py",
          "core\\testing\\agent_reasoning_testing.py",
          "core\\testing\\archive_intelligence_mining.py",
          "core\\testing\\archive_intelligence_mining.py",
          "core\\testing\\async_sync_testing.py",
          "core\\testing\\collaborative_testing_platform.py",
          "core\\testing\\collaborative_testing_platform.py",
          "core\\testing\\collaborative_testing_platform.py",
          "core\\testing\\collaborative_testing_platform.py",
          "core\\testing\\collaborative_testing_platform.py",
          "core\\testing\\communication_testing.py",
          "core\\testing\\communication_testing.py",
          "core\\testing\\communication_testing.py",
          "core\\testing\\competitive_analysis_framework.py",
          "core\\testing\\crew_thread_safety_testing.py",
          "core\\testing\\crew_thread_safety_testing.py",
          "core\\testing\\crew_thread_safety_testing.py",
          "core\\testing\\distributed_test_coordinator.py",
          "core\\testing\\distributed_test_coordinator.py",
          "core\\testing\\distributed_test_coordinator.py",
          "core\\testing\\embedding_cache_testing.py",
          "core\\testing\\embedding_cache_testing.py",
          "core\\testing\\enterprise_test_framework.py",
          "core\\testing\\flow_testing.py",
          "core\\testing\\flow_testing.py",
          "core\\testing\\flow_testing.py",
          "core\\testing\\formatter_testing.py",
          "core\\testing\\graph_async_testing.py",
          "core\\testing\\graph_constraints_testing.py",
          "core\\testing\\graph_constraints_testing.py",
          "core\\testing\\graph_index_testing.py",
          "core\\testing\\graph_operations_testing.py",
          "core\\testing\\graph_performance_testing.py",
          "core\\testing\\graph_performance_testing.py",
          "core\\testing\\graph_vector_testing.py",
          "core\\testing\\graph_vector_testing.py",
          "core\\testing\\hallucination_guardrail_testing.py",
          "core\\testing\\hallucination_guardrail_testing.py",
          "core\\testing\\hallucination_guardrail_testing.py",
          "core\\testing\\hallucination_guardrail_testing.py",
          "core\\testing\\hook_testing.py",
          "core\\testing\\intelligence_synthesis_framework.py",
          "core\\testing\\intelligence_synthesis_framework.py",
          "core\\testing\\intelligence_synthesis_framework.py",
          "core\\testing\\intelligent_test_generator.py",
          "core\\testing\\intelligent_test_generator.py",
          "core\\testing\\intelligent_test_generator.py",
          "core\\testing\\langgraph_supervisor_testing.py",
          "core\\testing\\mcp_testing.py",
          "core\\testing\\mcp_testing.py",
          "core\\testing\\mcp_testing.py",
          "core\\testing\\multimodal_validation_testing.py",
          "core\\testing\\multimodal_validation_testing.py",
          "core\\testing\\multi_modal_test_engine.py",
          "core\\testing\\multi_modal_test_engine.py",
          "core\\testing\\multi_modal_test_engine.py",
          "core\\testing\\multi_modal_test_engine.py",
          "core\\testing\\pattern_consolidation_engine.py",
          "core\\testing\\pattern_consolidation_engine.py",
          "core\\testing\\pattern_consolidation_engine.py",
          "core\\testing\\pattern_consolidation_engine.py",
          "core\\testing\\performance_test_suite.py",
          "core\\testing\\pipeline_testing.py",
          "core\\testing\\react_agent_testing.py",
          "core\\testing\\react_agent_testing.py",
          "core\\testing\\react_agent_testing.py",
          "core\\testing\\react_agent_testing.py",
          "core\\testing\\repository_intelligence_aggregator.py",
          "core\\testing\\repository_intelligence_aggregator.py",
          "core\\testing\\response_validation_testing.py",
          "core\\testing\\response_validation_testing.py",
          "core\\testing\\response_validation_testing.py",
          "core\\testing\\run_all_tests.py",
          "core\\testing\\session_testing.py",
          "core\\testing\\session_testing.py",
          "core\\testing\\supercharged_test_generator.py",
          "core\\testing\\task_guardrails_testing.py",
          "core\\testing\\task_guardrails_testing.py",
          "core\\testing\\testmaster_api_gateway.py",
          "core\\testing\\testmaster_api_gateway.py",
          "core\\testing\\testmaster_api_gateway.py",
          "core\\testing\\test_evolution_analyzer.py",
          "core\\testing\\test_integration_hub.py",
          "core\\testing\\test_intelligence_orchestrator.py",
          "core\\testing\\test_quality_analyzer.py",
          "core\\testing\\thread_retry_testing.py",
          "core\\testing\\thread_retry_testing.py",
          "core\\testing\\thread_retry_testing.py",
          "core\\testing\\tool_factory_testing.py",
          "core\\testing\\tool_factory_testing.py",
          "core\\testing\\tool_factory_testing.py",
          "core\\testing\\tool_factory_testing.py",
          "core\\testing\\tool_factory_testing.py",
          "core\\testing\\tool_factory_testing.py",
          "core\\testing\\tool_factory_testing.py",
          "core\\testing\\tool_testing.py",
          "core\\testing\\tracing_testing.py",
          "core\\testing\\tracing_testing.py",
          "core\\testing\\tracing_testing.py",
          "core\\testing\\unified_test_orchestrator.py",
          "core\\testing\\unified_test_orchestrator.py",
          "core\\testing\\user_input_testing.py",
          "core\\testing\\user_input_testing.py",
          "core\\testing\\user_input_testing.py",
          "core\\tools\\type_safe_tools.py",
          "dashboard\\test_final_enhancements.py",
          "dashboard\\test_robustness_suite.py",
          "dashboard\\test_ultra_reliability.py",
          "dashboard\\api\\async_processing.py",
          "dashboard\\api\\coverage.py",
          "dashboard\\api\\crew_orchestration.py",
          "dashboard\\api\\enhanced_analytics.py",
          "dashboard\\api\\flow_optimization.py",
          "dashboard\\api\\frontend_data_contracts.py",
          "dashboard\\api\\intelligence.py",
          "dashboard\\api\\knowledge_graph.py",
          "dashboard\\api\\knowledge_graph.py",
          "dashboard\\api\\knowledge_graph.py",
          "dashboard\\api\\knowledge_graph.py",
          "dashboard\\api\\knowledge_graph.py",
          "dashboard\\api\\knowledge_graph.py",
          "dashboard\\api\\knowledge_graph.py",
          "dashboard\\api\\knowledge_graph.py",
          "dashboard\\api\\observability.py",
          "dashboard\\api\\quality_assurance.py",
          "dashboard\\api\\real_codebase_scanner.py",
          "dashboard\\api\\real_codebase_scanner.stub_backup.py",
          "dashboard\\api\\security.py",
          "dashboard\\api\\swarm_orchestration.py",
          "dashboard\\api\\telemetry.py",
          "dashboard\\api\\test_generation.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_normalizer.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_retry_manager.py",
          "dashboard\\dashboard_core\\real_data_extractor.py",
          "incremental\\dependency_tracker.py",
          "integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system_robust.py",
          "integration\\comprehensive_error_recovery.py",
          "integration\\comprehensive_error_recovery_robust.py",
          "integration\\cross_module_tester.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis_robust.py",
          "integration\\cross_system_apis_robust.py",
          "integration\\cross_system_communication.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py",
          "integration\\load_balancing_system.py",
          "integration\\multi_environment_support.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py",
          "integration\\resource_optimization_engine.py",
          "integration\\service_mesh_integration.py",
          "integration\\visual_workflow_designer.py",
          "integration\\workflow_framework.py",
          "integration\\workflow_framework.py",
          "monitoring\\enhanced_monitor_separate.py",
          "monitoring\\enhanced_monitor_separate.py",
          "monitoring\\monitoring_agents.py",
          "monitoring\\monitoring_agents.py",
          "monitoring\\monitoring_agents.py",
          "monitoring\\monitoring_agents.py",
          "observability\\core\\conversational_interface.py",
          "observability\\core\\cost_management.py",
          "observability\\core\\cost_management.py",
          "observability\\core\\event_monitoring.py",
          "observability\\core\\multimodal_analyzer.py",
          "observability\\core\\session_tracking.py",
          "observability\\core\\session_tracking.py",
          "orchestration\\unified_orchestrator.py",
          "orchestration\\unified_orchestrator.py",
          "orchestration\\unified_orchestrator.py",
          "orchestration\\unified_orchestrator.py",
          "prioritization\\test_prioritizer.py",
          "scripts\\achieve_100_percent.py",
          "scripts\\branch_coverage_analyzer.py",
          "scripts\\branch_coverage_analyzer.py",
          "scripts\\coverage_baseline.py",
          "scripts\\fix_remaining_issues.py",
          "scripts\\fix_test_infrastructure.py",
          "scripts\\generate_coverage_sequential.py",
          "scripts\\intelligent_converter.py",
          "scripts\\quick_coverage_boost.py",
          "scripts\\smart_test_generator.py",
          "scripts\\systematic_coverage.py",
          "src\\data_flow_tests.py",
          "src\\integration_test_matrix.py",
          "state\\unified_state_manager.py",
          "state\\unified_state_manager.py",
          "state\\unified_state_manager.py",
          "state\\unified_state_manager.py",
          "testmaster\\agent_qa\\benchmarking_suite.py",
          "testmaster\\agent_qa\\quality_inspector.py",
          "testmaster\\agent_qa\\quality_monitor.py",
          "testmaster\\agent_qa\\scoring_system.py",
          "testmaster\\agent_qa\\validation_engine.py",
          "testmaster\\analysis\\coverage\\interface.py",
          "testmaster\\async_processing\\thread_pool_manager.py",
          "testmaster\\communication\\dynamic_handoff.py",
          "testmaster\\communication\\dynamic_handoff.py",
          "testmaster\\communication\\dynamic_handoff.py",
          "testmaster\\core\\context_manager.py",
          "testmaster\\core\\monitoring_decorators.py",
          "testmaster\\core\\orchestrator.py",
          "testmaster\\core\\shared_state.py",
          "testmaster\\core\\framework_abstraction\\test_generator.py",
          "testmaster\\core\\framework_abstraction\\test_generator.py",
          "testmaster\\core\\framework_abstraction\\test_generator.py",
          "testmaster\\core\\framework_abstraction\\test_generator.py",
          "testmaster\\core\\framework_abstraction\\test_generator.py",
          "testmaster\\core\\framework_abstraction\\test_generator.py",
          "testmaster\\flow_optimizer\\dependency_resolver.py",
          "testmaster\\flow_optimizer\\execution_router.py",
          "testmaster\\flow_optimizer\\flow_analyzer.py",
          "testmaster\\flow_optimizer\\parallel_executor.py",
          "testmaster\\flow_optimizer\\resource_optimizer.py",
          "testmaster\\integration\\final_integration_test.py",
          "testmaster\\intelligence\\bridges\\context_variables_bridge.py",
          "testmaster\\intelligence\\bridges\\context_variables_bridge.py",
          "testmaster\\intelligence\\bridges\\context_variables_bridge.py",
          "testmaster\\intelligence\\bridges\\event_monitoring_bridge.py",
          "testmaster\\intelligence\\bridges\\protocol_communication_bridge.py",
          "testmaster\\intelligence\\bridges\\protocol_communication_bridge.py",
          "testmaster\\intelligence\\bridges\\sop_workflow_bridge.py",
          "testmaster\\intelligence\\bridges\\sop_workflow_bridge.py",
          "testmaster\\intelligence\\documentation\\core\\llm_integration.py",
          "testmaster\\intelligence\\documentation\\core\\quality_assessor.py",
          "testmaster\\intelligence\\documentation\\quality\\completeness_checker.py",
          "testmaster\\intelligence\\documentation\\quality\\doc_validator.py",
          "testmaster\\intelligence\\documentation\\quality\\style_checker.py",
          "testmaster\\intelligence\\documentation\\templates\\docstring_templates.py",
          "testmaster\\intelligence\\documentation\\templates\\readme_templates.py",
          "testmaster\\intelligence\\documentation\\templates\\template_engine.py",
          "testmaster\\intelligence\\documentation\\templates\\template_engine.py",
          "testmaster\\intelligence\\documentation\\templates\\api\\grpc_templates.py",
          "testmaster\\intelligence\\documentation\\templates\\api\\manager.py",
          "testmaster\\intelligence\\documentation\\templates\\api\\rest_templates.py",
          "testmaster\\intelligence\\documentation\\templates\\api\\websocket_templates.py",
          "testmaster\\intelligence\\hierarchical_planning\\test_plan_generator.py",
          "testmaster\\intelligence\\hierarchical_planning\\test_plan_generator.py",
          "testmaster\\intelligence\\hierarchical_planning\\test_plan_generator.py",
          "testmaster\\intelligence\\integration\\events\\event_system.py",
          "testmaster\\intelligence\\llm_providers\\universal_llm_provider.py",
          "testmaster\\intelligence\\monitoring\\bottleneck_detection_resolution_agent.py",
          "testmaster\\intelligence\\monitoring\\bottleneck_detection_resolution_agent.py",
          "testmaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
          "testmaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
          "testmaster\\intelligence\\optimization\\test_optimization_objectives.py",
          "testmaster\\intelligence\\security\\security_intelligence_agent.py",
          "testmaster\\intelligence\\security\\security_intelligence_agent.py",
          "testmaster\\intelligence\\security\\security_intelligence_agent.py",
          "testmaster\\orchestration\\framework_adapter.py",
          "testmaster\\orchestration\\output_system.py",
          "testmaster\\orchestrator\\handoff_manager.py",
          "testmaster\\orchestrator\\work_distributor.py",
          "testmaster\\reporting\\dashboard_builder.py",
          "testmaster\\reporting\\data_collector.py",
          "testmaster\\reporting\\metrics_analyzer.py",
          "testmaster\\reporting\\report_scheduler.py",
          "testmaster\\security\\compliance_framework.py",
          "testmaster\\streaming\\collaborative_generator.py",
          "testmaster\\streaming\\stream_monitor.py",
          "testmaster\\ui\\dashboard.py",
          "tools\\migration\\analyze_legacy_code.py",
          "ui\\unified_dashboard.py",
          "ui\\unified_dashboard.py",
          "ui\\unified_dashboard.py",
          "ui\\unified_dashboard.py",
          "ui_ux\\agent_verse_ui.py",
          "ui_ux\\agent_verse_ui.py",
          "ui_ux\\agent_verse_ui.py",
          "ui_ux\\studio_interface.py",
          "validation\\phase_validator.py",
          "validation\\phase_validator.py",
          "workflow\\consolidation_workflow.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_count_lines(self, file_path)",
        "files": [
          "ARCHIVE_PROTECTION_SYSTEM.py",
          "archive\\original_backup\\dashboard\\quality_dashboard.py",
          "dashboard\\quality_dashboard.py",
          "testmaster\\core\\language_detection\\universal_detector.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, project_root)",
        "files": [
          "auto_readme_updater.py",
          "integration_test_generator.py",
          "integration_test_generator.py",
          "risk_based_test_targeter.py",
          "test_complexity_prioritizer.py",
          "test_dependency_orderer.py",
          "archive\\legacy_scripts\\integration_test_generator.py",
          "archive\\legacy_scripts\\integration_test_generator.py",
          "archive\\original_backup\\integration_test_generator.py",
          "archive\\original_backup\\integration_test_generator.py",
          "core\\testing\\test_coverage_optimizer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, base_path)",
        "files": [
          "comprehensive_classical_analysis_methods.py",
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "core\\testing\\repository_intelligence_aggregator.py",
          "dashboard\\api\\real_codebase_scanner.stub_backup.py",
          "dashboard\\dashboard_core\\test_collector.py",
          "scripts\\analyze_components.py",
          "scripts\\api_documenter.py",
          "scripts\\dependency_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\base_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\clone_detection.py",
          "testmaster\\analysis\\comprehensive_analysis\\concurrency_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\crypto_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\database_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\error_handling_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\evolution_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\main_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\memory_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\security_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\supply_chain_security.py",
          "testmaster\\analysis\\comprehensive_analysis\\taint_analysis.py",
          "testmaster\\intelligence\\documentation\\generators\\architecture_doc_generator.py",
          "testmaster\\intelligence\\documentation\\generators\\tutorial_generator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_halstead_metrics(self)",
        "files": [
          "comprehensive_classical_analysis_methods.py",
          "analysis\\comprehensive_analysis\\cognitive_load\\cognitive_load_analyzer.py",
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\software_metrics.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_mccabe_complexity(self)",
        "files": [
          "comprehensive_classical_analysis_methods.py",
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\software_metrics.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_sloc_metrics(self)",
        "files": [
          "comprehensive_classical_analysis_methods.py",
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\software_metrics.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_maintainability_index(self)",
        "files": [
          "comprehensive_classical_analysis_methods.py",
          "analysis\\comprehensive_analysis\\cognitive_load\\cognitive_load_analyzer.py",
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\software_metrics.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_coupling_metrics(self)",
        "files": [
          "comprehensive_classical_analysis_methods.py",
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\coupling_cohesion.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_cohesion_metrics(self)",
        "files": [
          "comprehensive_classical_analysis_methods.py",
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\coupling_cohesion.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_detect_exact_clones(self)",
        "files": [
          "comprehensive_classical_analysis_methods.py",
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\clone_detection.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_detect_near_clones(self)",
        "files": [
          "comprehensive_classical_analysis_methods.py",
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\clone_detection.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_detect_vulnerability_patterns(self)",
        "files": [
          "comprehensive_classical_analysis_methods.py",
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\security_analysis.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_detect_code_smells(self)",
        "files": [
          "comprehensive_classical_analysis_methods.py",
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\quality_analysis.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_vocabulary_metrics(self)",
        "files": [
          "comprehensive_classical_analysis_methods.py",
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_should_analyze_file(self, file_path)",
        "files": [
          "comprehensive_classical_analysis_methods.py",
          "comprehensive_codebase_analysis.py",
          "archive\\advanced_testing_intelligence.py",
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "archive\\legacy_scripts\\coverage_analysis.py",
          "archive\\original_backup\\src\\coverage_analysis.py",
          "core\\intelligence\\analysis\\ml_code_analyzer.py",
          "core\\intelligence\\analysis\\technical_debt_analyzer.py",
          "core\\testing\\test_coverage_optimizer.py",
          "src\\coverage_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\base_analyzer.py",
          "testmaster\\overview\\coverage_intelligence.py",
          "testmaster\\overview\\structure_mapper.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_function_complexity(self, func_node)",
        "files": [
          "comprehensive_classical_analysis_methods.py",
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "core\\intelligence\\testing\\advanced\\statistical_coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\base_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_file(self, file_path)",
        "files": [
          "comprehensive_codebase_analysis.py",
          "analysis\\comprehensive_analysis\\anomaly_detection\\anomaly_detection_analyzer.py",
          "analysis\\comprehensive_analysis\\business_analysis\\business_core_analyzer.py",
          "analysis\\comprehensive_analysis\\business_analysis\\business_domain_analyzer.py",
          "analysis\\comprehensive_analysis\\business_analysis\\business_validation_analyzer.py",
          "analysis\\comprehensive_analysis\\business_analysis\\business_workflow_analyzer.py",
          "analysis\\comprehensive_analysis\\data_pipeline\\data_pipeline_analyzer.py",
          "analysis\\comprehensive_analysis\\data_security\\data_leakage_detector.py",
          "analysis\\comprehensive_analysis\\debt_analysis\\debt_category_analyzer.py",
          "analysis\\comprehensive_analysis\\debt_analysis\\debt_core_analyzer.py",
          "analysis\\comprehensive_analysis\\debt_analysis\\debt_financial_analyzer.py",
          "analysis\\comprehensive_analysis\\domain_modeling\\domain_model_analyzer.py",
          "analysis\\comprehensive_analysis\\energy_analysis\\energy_algorithm_analyzer.py",
          "analysis\\comprehensive_analysis\\energy_analysis\\energy_carbon_analyzer.py",
          "analysis\\comprehensive_analysis\\energy_analysis\\energy_core_analyzer.py",
          "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_core_analyzer.py",
          "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_reflection_analyzer.py",
          "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_security_analyzer.py",
          "analysis\\comprehensive_analysis\\ml_analysis\\ml_core_analyzer.py",
          "analysis\\comprehensive_analysis\\ml_analysis\\ml_data_analyzer.py",
          "analysis\\comprehensive_analysis\\ml_analysis\\ml_model_analyzer.py",
          "analysis\\comprehensive_analysis\\ml_analysis\\ml_tensor_analyzer.py",
          "analysis\\comprehensive_analysis\\pattern_recognition\\ml_pattern_recognition.py",
          "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_context_analyzer.py",
          "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_core_analyzer.py",
          "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_pattern_analyzer.py",
          "analysis\\comprehensive_analysis\\workflow_analysis\\workflow_pattern_detector.py",
          "core\\intelligence\\analysis\\ml_code_analyzer.py",
          "core\\intelligence\\analysis\\technical_debt_analyzer.py",
          "core\\intelligence\\documentation\\diagram_creator.py",
          "scripts\\analyze_components.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_complexity(self, node)",
        "files": [
          "comprehensive_feature_audit.py",
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "archive\\original_backup\\deduplication\\test_deduplicator.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "core\\intelligence\\analysis\\debt_code_analyzer.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_pattern_detector.py",
          "core\\intelligence\\analysis\\technical_debt_analyzer.py",
          "core\\intelligence\\documentation\\auto_generator.py",
          "core\\intelligence\\documentation\\revolutionary\\codesee_annihilator.py",
          "core\\testing\\supercharged_test_generator.py_stub_backup_20250821_042438.py",
          "core\\testing\\test_quality_analyzer.py",
          "deduplication\\test_deduplicator.py",
          "prioritization\\test_prioritizer.py",
          "src\\automated_test_generation.py",
          "src\\comprehensive_test_framework.py",
          "testmaster\\core\\ast_abstraction\\language_parsers.py",
          "tools\\migration\\analyze_legacy_code.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "build_test_for_module(module_path, client)",
        "files": [
          "convert_batch_small.py",
          "convert_with_genai_sdk.py",
          "archive\\legacy_scripts\\convert_batch_small.py",
          "archive\\legacy_scripts\\convert_with_genai_sdk.py",
          "archive\\original_backup\\convert_batch_small.py",
          "archive\\original_backup\\convert_with_genai_sdk.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "analyze(self, file_path)",
        "files": [
          "documentation_cli.py",
          "documentation_cli.py",
          "documentation_cli.py",
          "risk_based_test_targeter.py",
          "risk_based_test_targeter.py",
          "test_complexity_prioritizer.py",
          "test_complexity_prioritizer.py",
          "test_complexity_prioritizer.py",
          "test_dependency_orderer.py",
          "test_dependency_orderer.py",
          "analysis\\comprehensive_analysis\\anomaly_detection\\anomaly_detection_analyzer.py",
          "analysis\\comprehensive_analysis\\business_analysis\\business_core_analyzer.py",
          "analysis\\comprehensive_analysis\\business_analysis\\business_domain_analyzer.py",
          "analysis\\comprehensive_analysis\\business_analysis\\business_rule_analysis_wrapper.py",
          "analysis\\comprehensive_analysis\\business_analysis\\business_validation_analyzer.py",
          "analysis\\comprehensive_analysis\\business_analysis\\business_workflow_analyzer.py",
          "analysis\\comprehensive_analysis\\data_pipeline\\data_pipeline_analyzer.py",
          "analysis\\comprehensive_analysis\\data_security\\data_leakage_detector.py",
          "analysis\\comprehensive_analysis\\debt_analysis\\debt_category_analyzer.py",
          "analysis\\comprehensive_analysis\\debt_analysis\\debt_core_analyzer.py",
          "analysis\\comprehensive_analysis\\debt_analysis\\debt_financial_analyzer.py",
          "analysis\\comprehensive_analysis\\debt_analysis\\technical_debt_analysis_wrapper.py",
          "analysis\\comprehensive_analysis\\domain_modeling\\domain_model_analyzer.py",
          "analysis\\comprehensive_analysis\\energy_analysis\\energy_algorithm_analyzer.py",
          "analysis\\comprehensive_analysis\\energy_analysis\\energy_carbon_analyzer.py",
          "analysis\\comprehensive_analysis\\energy_analysis\\energy_consumption_analysis_wrapper.py",
          "analysis\\comprehensive_analysis\\energy_analysis\\energy_core_analyzer.py",
          "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprogramming_analysis_wrapper.py",
          "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_core_analyzer.py",
          "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_reflection_analyzer.py",
          "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_security_analyzer.py",
          "analysis\\comprehensive_analysis\\ml_analysis\\ml_code_analysis_wrapper.py",
          "analysis\\comprehensive_analysis\\ml_analysis\\ml_core_analyzer.py",
          "analysis\\comprehensive_analysis\\ml_analysis\\ml_data_analyzer.py",
          "analysis\\comprehensive_analysis\\ml_analysis\\ml_model_analyzer.py",
          "analysis\\comprehensive_analysis\\ml_analysis\\ml_tensor_analyzer.py",
          "analysis\\comprehensive_analysis\\pattern_mining\\cross_repo_pattern_miner.py",
          "analysis\\comprehensive_analysis\\pattern_recognition\\ml_pattern_recognition.py",
          "analysis\\comprehensive_analysis\\realtime_analysis\\realtime_ast_engine.py",
          "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py",
          "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_analysis_wrapper.py",
          "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_context_analyzer.py",
          "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_core_analyzer.py",
          "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_pattern_analyzer.py",
          "analysis\\comprehensive_analysis\\workflow_analysis\\workflow_pattern_detector.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, config)",
        "files": [
          "documentation_cli.py",
          "enhanced_incremental_ast_engine.py",
          "enhanced_incremental_ast_engine.py",
          "enhanced_realtime_security_monitor.py",
          "enhanced_security_intelligence_agent.py",
          "live_code_quality_monitor.py",
          "restored_asyncio_6.py",
          "restored_random_6.py",
          "restored_uuid_6.py",
          "unified_security_scanner.py",
          "analysis\\comprehensive_analysis\\anomaly_detection\\anomaly_detection_analyzer.py",
          "analysis\\comprehensive_analysis\\business_analysis\\business_rule_analysis_wrapper.py",
          "analysis\\comprehensive_analysis\\cognitive_load\\cognitive_load_analyzer.py",
          "analysis\\comprehensive_analysis\\debt_analysis\\technical_debt_analysis_wrapper.py",
          "analysis\\comprehensive_analysis\\energy_analysis\\energy_consumption_analysis_wrapper.py",
          "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprogramming_analysis_wrapper.py",
          "analysis\\comprehensive_analysis\\ml_analysis\\ml_code_analysis_wrapper.py",
          "analysis\\comprehensive_analysis\\pattern_mining\\cross_repo_pattern_miner.py",
          "analysis\\comprehensive_analysis\\realtime_analysis\\realtime_ast_engine.py",
          "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py",
          "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_analysis_wrapper.py",
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\from_subarchive_ml_code_analysis_original.py",
          "archive\\from_subarchive_semantic_analysis_original.py",
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py",
          "archive\\superseded_toplevel_ml_code_analysis.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
          "core\\intelligence\\__init__.py",
          "core\\intelligence\\analysis\\business_analyzer_modular.py",
          "core\\intelligence\\analysis\\business_constraint_analyzer.py",
          "core\\intelligence\\analysis\\business_rule_extractor.py",
          "core\\intelligence\\analysis\\business_workflow_analyzer.py",
          "core\\intelligence\\analysis\\debt_analyzer_modular.py",
          "core\\intelligence\\analysis\\debt_code_analyzer.py",
          "core\\intelligence\\analysis\\debt_quantifier.py",
          "core\\intelligence\\analysis\\debt_test_analyzer.py",
          "core\\intelligence\\analysis\\ml_analyzer.py",
          "core\\intelligence\\analysis\\ml_code_analyzer.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_analyzer_modular.py",
          "core\\intelligence\\analysis\\semantic_intent_analyzer.py",
          "core\\intelligence\\analysis\\semantic_pattern_detector.py",
          "core\\intelligence\\analysis\\semantic_relationship_analyzer.py",
          "core\\intelligence\\analysis\\technical_debt_analyzer.py",
          "core\\intelligence\\analysis\\__init__.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py",
          "core\\intelligence\\analytics\\advanced_anomaly_detector.py",
          "core\\intelligence\\analytics\\analytics_hub.py",
          "core\\intelligence\\analytics\\__init__.py",
          "core\\intelligence\\analytics\\__init__.py",
          "core\\intelligence\\analytics\\__init__.py",
          "core\\intelligence\\analytics\\__init__.py",
          "core\\intelligence\\analytics\\__init__.py",
          "core\\intelligence\\caching\\distributed_smart_cache.py",
          "core\\intelligence\\correlation\\cross_system_analytics.py",
          "core\\intelligence\\data_pipeline\\advanced_data_pipeline.py",
          "core\\intelligence\\integration\\__init__.py",
          "core\\intelligence\\integration\\components\\cross_system_analyzer.py",
          "core\\intelligence\\integration\\components\\endpoint_manager.py",
          "core\\intelligence\\integration\\components\\event_processor.py",
          "core\\intelligence\\integration\\components\\performance_monitor.py",
          "core\\intelligence\\knowledge_graph\\instant_graph_engine.py",
          "core\\intelligence\\ml\\advanced\\anomaly_detection.py",
          "core\\intelligence\\ml\\advanced\\ensemble_meta_learner.py",
          "core\\intelligence\\monitoring\\qa_monitor.py",
          "core\\intelligence\\monitoring\\qa_scorer.py",
          "core\\intelligence\\queuing\\express_priority_queue.py",
          "core\\intelligence\\security\\advanced_security_intelligence.py",
          "core\\intelligence\\testing\\automation_engine.py",
          "core\\intelligence\\testing\\chaos_engineer.py",
          "core\\intelligence\\testing\\contract_tester.py",
          "core\\intelligence\\testing\\flaky_test_detector.py",
          "core\\intelligence\\testing\\fuzzer.py",
          "core\\intelligence\\testing\\mutation_engine.py",
          "core\\intelligence\\testing\\property_tester.py",
          "core\\intelligence\\testing\\regression_detector.py",
          "core\\intelligence\\testing\\security_fuzzer.py",
          "core\\intelligence\\testing\\test_orchestrator.py",
          "core\\intelligence\\testing\\test_quality_scorer.py",
          "core\\intelligence\\testing\\test_selector.py",
          "core\\intelligence\\testing\\__init__.py",
          "core\\intelligence\\testing\\components\\coverage_analyzer.py",
          "core\\intelligence\\testing\\components\\execution_engine.py",
          "core\\intelligence\\testing\\components\\integration_generator.py",
          "core\\intelligence\\testing\\components\\ml_optimizer.py",
          "core\\security\\adaptive_fallback_orchestrator.py",
          "core\\security\\api_security_layer.py",
          "core\\security\\api_security_layer.py",
          "core\\security\\api_security_layer.py",
          "core\\security\\flow_persistence_security.py",
          "core\\security\\flow_persistence_security.py",
          "core\\security\\retry_mechanism_system.py",
          "core\\security\\retry_mechanism_system.py",
          "core\\security\\retry_mechanism_system.py",
          "core\\security\\thread_safety_manager.py",
          "core\\testing\\enterprise_test_framework.py",
          "core\\testing\\supercharged_test_generator.py_stub_backup_20250821_042438.py",
          "deployment\\swarm_orchestrator.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py",
          "testmaster\\converters\\base.py",
          "testmaster\\core\\orchestrator.py",
          "testmaster\\core\\ast_abstraction\\language_parsers.py",
          "testmaster\\core\\ast_abstraction\\universal_ast.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\test_generator.py",
          "testmaster\\core\\language_detection\\universal_detector.py",
          "testmaster\\generators\\base.py",
          "testmaster\\intelligence\\consensus\\agent_coordination.py",
          "testmaster\\intelligence\\documentation\\core\\llm_integration.py",
          "testmaster\\intelligence\\documentation\\core\\llm_integration.py",
          "testmaster\\intelligence\\documentation\\core\\llm_integration.py",
          "testmaster\\intelligence\\documentation\\integrations\\ci_cd_integration.py",
          "testmaster\\intelligence\\hierarchical_planning\\llm_integration.py",
          "testmaster\\intelligence\\hierarchical_planning\\llm_integration.py",
          "testmaster\\intelligence\\hierarchical_planning\\unified_integration.py",
          "testmaster\\intelligence\\integration\\storage\\unified_storage.py",
          "testmaster\\intelligence\\llm_providers\\provider_implementations.py",
          "testmaster\\intelligence\\llm_providers\\provider_implementations.py",
          "testmaster\\intelligence\\llm_providers\\provider_implementations.py",
          "testmaster\\intelligence\\llm_providers\\provider_implementations.py",
          "testmaster\\intelligence\\llm_providers\\provider_implementations.py",
          "testmaster\\intelligence\\llm_providers\\provider_implementations.py",
          "testmaster\\intelligence\\llm_providers\\universal_llm_provider.py",
          "testmaster\\intelligence\\monitoring\\adaptive_resource_bridge.py",
          "testmaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
          "testmaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
          "testmaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
          "testmaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
          "testmaster\\intelligence\\tree_of_thought\\universal_tot_integration.py",
          "testmaster\\orchestration\\universal_orchestrator.py",
          "testmaster\\security\\security_test_generator.py",
          "testmaster\\security\\universal_scanner.py",
          "testmaster\\streaming\\stream_generator.py",
          "testmaster\\telemetry\\telemetry_dashboard.py",
          "testmaster\\ui\\dashboard.py",
          "testmaster\\verification\\base.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "extract_from_module(self, module_path)",
        "files": [
          "enhanced_context_aware_test_generator.py",
          "archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
          "archive\\original_backup\\enhanced_context_aware_test_generator.py",
          "core\\testing\\supercharged_test_generator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_find_existing_test_patterns(self, module_path)",
        "files": [
          "enhanced_context_aware_test_generator.py",
          "archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
          "archive\\original_backup\\enhanced_context_aware_test_generator.py",
          "core\\testing\\supercharged_test_generator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_extract_invariants(self, code)",
        "files": [
          "enhanced_context_aware_test_generator.py",
          "archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
          "archive\\original_backup\\enhanced_context_aware_test_generator.py",
          "core\\testing\\supercharged_test_generator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_identify_edge_cases(self, code)",
        "files": [
          "enhanced_context_aware_test_generator.py",
          "archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
          "archive\\original_backup\\enhanced_context_aware_test_generator.py",
          "core\\testing\\supercharged_test_generator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "generate_properties(self, module_path, context)",
        "files": [
          "enhanced_context_aware_test_generator.py",
          "archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
          "archive\\original_backup\\enhanced_context_aware_test_generator.py",
          "core\\testing\\supercharged_test_generator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "extract_contracts(self, module_path)",
        "files": [
          "enhanced_context_aware_test_generator.py",
          "archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
          "archive\\original_backup\\enhanced_context_aware_test_generator.py",
          "core\\testing\\supercharged_test_generator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "generate_contract_tests(self, contracts)",
        "files": [
          "enhanced_context_aware_test_generator.py",
          "archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
          "archive\\original_backup\\enhanced_context_aware_test_generator.py",
          "core\\intelligence\\testing\\contract_tester.py",
          "core\\testing\\supercharged_test_generator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "generate_enhanced_test(self, module_path)",
        "files": [
          "enhanced_context_aware_test_generator.py",
          "archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
          "archive\\original_backup\\enhanced_context_aware_test_generator.py",
          "core\\testing\\supercharged_test_generator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_build_context_aware_prompt(self, module_path, context, contracts)",
        "files": [
          "enhanced_context_aware_test_generator.py",
          "archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
          "archive\\original_backup\\enhanced_context_aware_test_generator.py",
          "core\\testing\\supercharged_test_generator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_generate_with_llm(self, prompt)",
        "files": [
          "enhanced_context_aware_test_generator.py",
          "archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
          "archive\\original_backup\\enhanced_context_aware_test_generator.py",
          "core\\testing\\supercharged_test_generator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_generate_edge_case_tests(self, context)",
        "files": [
          "enhanced_context_aware_test_generator.py",
          "archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
          "archive\\original_backup\\enhanced_context_aware_test_generator.py",
          "core\\testing\\supercharged_test_generator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, cache_dir)",
        "files": [
          "enhanced_incremental_ast_engine.py",
          "analysis\\comprehensive_analysis\\pattern_mining\\cross_repo_pattern_miner.py",
          "archive\\original_backup\\incremental\\dependency_tracker.py",
          "incremental\\dependency_tracker.py",
          "testmaster\\mapping\\mapping_cache.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "start(self)",
        "files": [
          "enhanced_realtime_security_monitor.py",
          "analysis\\comprehensive_analysis\\realtime_analysis\\realtime_ast_engine.py",
          "analysis\\comprehensive_analysis\\realtime_analysis\\realtime_ast_engine.py",
          "analysis\\comprehensive_analysis\\realtime_analysis\\realtime_ast_engine.py",
          "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "core\\intelligence\\testing\\automation_engine.py",
          "core\\intelligence\\visualization\\dashboard_systems.py",
          "core\\testing\\mcp_testing.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\metrics_feed.py",
          "dashboard\\dashboard_core\\system_monitor.py",
          "testmaster\\communication\\message_queue.py",
          "testmaster\\monitoring\\file_watcher.py",
          "testmaster\\monitoring\\test_scheduler.py",
          "testmaster\\ui\\alert_system.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "stop(self)",
        "files": [
          "enhanced_realtime_security_monitor.py",
          "web_monitor.py",
          "analysis\\comprehensive_analysis\\realtime_analysis\\realtime_ast_engine.py",
          "analysis\\comprehensive_analysis\\realtime_analysis\\realtime_ast_engine.py",
          "analysis\\comprehensive_analysis\\realtime_analysis\\realtime_ast_engine.py",
          "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
          "core\\intelligence\\api\\unified_intelligence_api.py",
          "core\\intelligence\\testing\\automation_engine.py",
          "core\\intelligence\\testing\\load_generator.py",
          "core\\intelligence\\visualization\\dashboard_systems.py",
          "core\\testing\\mcp_testing.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\metrics_feed.py",
          "dashboard\\dashboard_core\\system_monitor.py",
          "testmaster\\layer2_integration.py",
          "testmaster\\communication\\message_queue.py",
          "testmaster\\monitoring\\file_watcher.py",
          "testmaster\\monitoring\\test_scheduler.py",
          "testmaster\\ui\\alert_system.py",
          "testmaster\\ui\\dashboard.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_cyclomatic_complexity(self, tree)",
        "files": [
          "enhanced_security_intelligence_agent.py",
          "live_code_quality_monitor.py",
          "analysis\\comprehensive_analysis\\anomaly_detection\\anomaly_detection_analyzer.py",
          "analysis\\comprehensive_analysis\\pattern_recognition\\ml_pattern_recognition.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "fix_syntax_error(test_code, error_msg, iteration)",
        "files": [
          "enhanced_self_healing_verifier.py",
          "archive\\legacy_scripts\\enhanced_self_healing_verifier.py",
          "archive\\legacy_scripts\\self_healing_converter.py",
          "archive\\original_backup\\enhanced_self_healing_verifier.py",
          "archive\\original_backup\\scripts\\self_healing_converter.py",
          "scripts\\self_healing_converter.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, calls_per_minute)",
        "files": [
          "enhanced_self_healing_verifier.py",
          "parallel_converter.py",
          "parallel_converter_fixed.py",
          "archive\\legacy_scripts\\enhanced_self_healing_verifier.py",
          "archive\\legacy_scripts\\parallel_converter.py",
          "archive\\legacy_scripts\\parallel_converter_fixed.py",
          "archive\\legacy_scripts\\parallel_converter_working.py",
          "archive\\legacy_scripts\\parallel_coverage_converter.py",
          "archive\\legacy_scripts\\parallel_coverage_converter_fixed.py",
          "archive\\legacy_scripts\\self_healing_converter.py",
          "archive\\original_backup\\enhanced_self_healing_verifier.py",
          "archive\\original_backup\\parallel_converter.py",
          "archive\\original_backup\\parallel_converter_fixed.py",
          "archive\\original_backup\\scripts\\parallel_converter_working.py",
          "archive\\original_backup\\scripts\\parallel_coverage_converter.py",
          "archive\\original_backup\\scripts\\parallel_coverage_converter_fixed.py",
          "archive\\original_backup\\scripts\\self_healing_converter.py",
          "scripts\\parallel_converter_working.py",
          "scripts\\parallel_coverage_converter.py",
          "scripts\\parallel_coverage_converter_fixed.py",
          "scripts\\self_healing_converter.py",
          "testmaster\\converters\\base.py",
          "testmaster\\verification\\base.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "wait_if_needed(self)",
        "files": [
          "enhanced_self_healing_verifier.py",
          "parallel_converter.py",
          "parallel_converter_fixed.py",
          "archive\\legacy_scripts\\enhanced_self_healing_verifier.py",
          "archive\\legacy_scripts\\parallel_converter.py",
          "archive\\legacy_scripts\\parallel_converter_fixed.py",
          "archive\\legacy_scripts\\parallel_converter_working.py",
          "archive\\legacy_scripts\\parallel_coverage_converter.py",
          "archive\\legacy_scripts\\parallel_coverage_converter_fixed.py",
          "archive\\legacy_scripts\\self_healing_converter.py",
          "archive\\original_backup\\enhanced_self_healing_verifier.py",
          "archive\\original_backup\\parallel_converter.py",
          "archive\\original_backup\\parallel_converter_fixed.py",
          "archive\\original_backup\\scripts\\parallel_converter_working.py",
          "archive\\original_backup\\scripts\\parallel_coverage_converter.py",
          "archive\\original_backup\\scripts\\parallel_coverage_converter_fixed.py",
          "archive\\original_backup\\scripts\\self_healing_converter.py",
          "core\\security\\thread_safety_manager.py",
          "scripts\\parallel_converter_working.py",
          "scripts\\parallel_coverage_converter.py",
          "scripts\\parallel_coverage_converter_fixed.py",
          "scripts\\self_healing_converter.py",
          "testmaster\\converters\\base.py",
          "testmaster\\verification\\base.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "start_collection(self)",
        "files": [
          "enhance_analytics.py",
          "realtime_metrics_collector.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "core\\security\\threat_intelligence_system.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py",
          "testmaster\\reporting\\data_collector.py",
          "testmaster\\streaming\\live_feedback.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "stop_collection(self)",
        "files": [
          "enhance_analytics.py",
          "realtime_metrics_collector.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py",
          "testmaster\\reporting\\data_collector.py",
          "testmaster\\streaming\\live_feedback.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_collection_loop(self)",
        "files": [
          "enhance_analytics.py",
          "realtime_metrics_collector.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "core\\intelligence\\visualization\\observability_systems.py",
          "core\\security\\threat_intelligence_system.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\system_observability_metrics.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_collect_system_metrics(self)",
        "files": [
          "enhance_analytics.py",
          "realtime_metrics_collector.py",
          "core\\intelligence\\dashboard\\intelligence_backend.py",
          "core\\intelligence\\integration\\components\\performance_monitor.py",
          "dashboard\\dashboard_core\\monitor.py",
          "dashboard\\dashboard_core\\system_monitor.py",
          "dashboard\\dashboard_core\\system_observability_metrics.py",
          "testmaster\\telemetry\\system_profiler.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "fix_test_file(self, test_file)",
        "files": [
          "fix_enhanced_test_imports.py",
          "fix_failing_tests.py",
          "fix_week2_test_imports.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_enhanced_test_imports.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_failing_tests.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_week2_test_imports.py",
          "archive\\legacy_scripts\\fix_enhanced_test_imports.py",
          "archive\\legacy_scripts\\fix_failing_tests.py",
          "archive\\legacy_scripts\\fix_week2_test_imports.py",
          "archive\\original_backup\\fix_enhanced_test_imports.py",
          "archive\\original_backup\\fix_failing_tests.py",
          "archive\\original_backup\\fix_week2_test_imports.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "fix_missing_imports(self, content)",
        "files": [
          "fix_enhanced_test_imports.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_enhanced_test_imports.py",
          "archive\\legacy_scripts\\fix_enhanced_test_imports.py",
          "archive\\original_backup\\fix_enhanced_test_imports.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "fix_class_instantiation(self, content)",
        "files": [
          "fix_enhanced_test_imports.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_enhanced_test_imports.py",
          "archive\\legacy_scripts\\fix_enhanced_test_imports.py",
          "archive\\original_backup\\fix_enhanced_test_imports.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "fix_method_calls(self, content)",
        "files": [
          "fix_enhanced_test_imports.py",
          "fix_failing_tests.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_enhanced_test_imports.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_failing_tests.py",
          "archive\\legacy_scripts\\fix_enhanced_test_imports.py",
          "archive\\legacy_scripts\\fix_failing_tests.py",
          "archive\\original_backup\\fix_enhanced_test_imports.py",
          "archive\\original_backup\\fix_failing_tests.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "improve_mock_behavior(self, content)",
        "files": [
          "fix_enhanced_test_imports.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_enhanced_test_imports.py",
          "archive\\legacy_scripts\\fix_enhanced_test_imports.py",
          "archive\\original_backup\\fix_enhanced_test_imports.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "fix_all_tests(self)",
        "files": [
          "fix_enhanced_test_imports.py",
          "fix_failing_tests.py",
          "fix_week2_test_imports.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_enhanced_test_imports.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_failing_tests.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_week2_test_imports.py",
          "archive\\legacy_scripts\\achieve_100_percent.py",
          "archive\\legacy_scripts\\fix_enhanced_test_imports.py",
          "archive\\legacy_scripts\\fix_failing_tests.py",
          "archive\\legacy_scripts\\fix_week2_test_imports.py",
          "archive\\original_backup\\fix_enhanced_test_imports.py",
          "archive\\original_backup\\fix_failing_tests.py",
          "archive\\original_backup\\fix_week2_test_imports.py",
          "archive\\original_backup\\scripts\\achieve_100_percent.py",
          "scripts\\achieve_100_percent.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "safe_call_replacement(match)",
        "files": [
          "fix_enhanced_test_imports.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_enhanced_test_imports.py",
          "archive\\legacy_scripts\\fix_enhanced_test_imports.py",
          "archive\\original_backup\\fix_enhanced_test_imports.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "fix_imports(self, content)",
        "files": [
          "fix_failing_tests.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_failing_tests.py",
          "archive\\legacy_scripts\\fix_failing_tests.py",
          "archive\\original_backup\\fix_failing_tests.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "fix_undefined_variables(self, content)",
        "files": [
          "fix_failing_tests.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_failing_tests.py",
          "archive\\legacy_scripts\\fix_failing_tests.py",
          "archive\\original_backup\\fix_failing_tests.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "fix_initialization_issues(self, content)",
        "files": [
          "fix_failing_tests.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_failing_tests.py",
          "archive\\legacy_scripts\\fix_failing_tests.py",
          "archive\\original_backup\\fix_failing_tests.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "add_mock_helpers(self, content)",
        "files": [
          "fix_failing_tests.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_failing_tests.py",
          "archive\\legacy_scripts\\fix_failing_tests.py",
          "archive\\original_backup\\fix_failing_tests.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "fix_pytest_issues(self, content)",
        "files": [
          "fix_failing_tests.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_failing_tests.py",
          "archive\\legacy_scripts\\fix_failing_tests.py",
          "archive\\original_backup\\fix_failing_tests.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "fix_import_path(test_content, test_filename)",
        "files": [
          "fix_import_paths.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_import_paths.py",
          "archive\\legacy_scripts\\fix_import_paths.py",
          "archive\\original_backup\\fix_import_paths.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "process_test_files()",
        "files": [
          "fix_import_paths.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_import_paths.py",
          "archive\\legacy_scripts\\fix_import_paths.py",
          "archive\\original_backup\\fix_import_paths.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "verify_imports()",
        "files": [
          "fix_import_paths.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_import_paths.py",
          "archive\\legacy_scripts\\fix_import_paths.py",
          "archive\\original_backup\\fix_import_paths.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "find_importable_modules(self)",
        "files": [
          "fix_tests_for_real_modules.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_tests_for_real_modules.py",
          "archive\\legacy_scripts\\fix_tests_for_real_modules.py",
          "archive\\original_backup\\fix_tests_for_real_modules.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_module_contents(self, module)",
        "files": [
          "fix_tests_for_real_modules.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_tests_for_real_modules.py",
          "archive\\legacy_scripts\\fix_tests_for_real_modules.py",
          "archive\\original_backup\\fix_tests_for_real_modules.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_get_init_signature(self, cls)",
        "files": [
          "fix_tests_for_real_modules.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_tests_for_real_modules.py",
          "archive\\legacy_scripts\\fix_tests_for_real_modules.py",
          "archive\\original_backup\\fix_tests_for_real_modules.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "fix_test_for_real_module(self, test_file, module_name, module_contents)",
        "files": [
          "fix_tests_for_real_modules.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_tests_for_real_modules.py",
          "archive\\legacy_scripts\\fix_tests_for_real_modules.py",
          "archive\\original_backup\\fix_tests_for_real_modules.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_fix_imports(self, content, module_name)",
        "files": [
          "fix_tests_for_real_modules.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_tests_for_real_modules.py",
          "archive\\legacy_scripts\\fix_tests_for_real_modules.py",
          "archive\\original_backup\\fix_tests_for_real_modules.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_fix_class_tests(self, content, classes)",
        "files": [
          "fix_tests_for_real_modules.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_tests_for_real_modules.py",
          "archive\\legacy_scripts\\fix_tests_for_real_modules.py",
          "archive\\original_backup\\fix_tests_for_real_modules.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_fix_function_tests(self, content, functions)",
        "files": [
          "fix_tests_for_real_modules.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_tests_for_real_modules.py",
          "archive\\legacy_scripts\\fix_tests_for_real_modules.py",
          "archive\\original_backup\\fix_tests_for_real_modules.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_generate_real_params(self, param_names)",
        "files": [
          "fix_tests_for_real_modules.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_tests_for_real_modules.py",
          "archive\\legacy_scripts\\fix_tests_for_real_modules.py",
          "archive\\original_backup\\fix_tests_for_real_modules.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_remove_unnecessary_skips(self, content)",
        "files": [
          "fix_tests_for_real_modules.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_tests_for_real_modules.py",
          "archive\\legacy_scripts\\fix_tests_for_real_modules.py",
          "archive\\original_backup\\fix_tests_for_real_modules.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "fix_all_available_modules(self)",
        "files": [
          "fix_tests_for_real_modules.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_tests_for_real_modules.py",
          "archive\\legacy_scripts\\fix_tests_for_real_modules.py",
          "archive\\original_backup\\fix_tests_for_real_modules.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "generate_report(self)",
        "files": [
          "IMPLEMENTATION_STATUS_CHECK.py",
          "test_backend_health.py",
          "analytics\\failure_analyzer.py",
          "archive\\legacy_scripts\\coverage_baseline.py",
          "archive\\original_backup\\analytics\\failure_analyzer.py",
          "archive\\original_backup\\scripts\\coverage_baseline.py",
          "core\\intelligence\\security\\crypto_analyzer.py",
          "core\\intelligence\\security\\dependency_scanner.py",
          "core\\intelligence\\security\\vulnerability_scanner.py",
          "core\\intelligence\\testing\\chaos_engineer.py",
          "core\\intelligence\\testing\\contract_tester.py",
          "core\\intelligence\\testing\\flaky_test_detector.py",
          "core\\intelligence\\testing\\regression_detector.py",
          "core\\intelligence\\testing\\security_fuzzer.py",
          "dashboard\\comprehensive_frontend_validator.py",
          "dashboard\\test_api_endpoints.py",
          "scripts\\coverage_baseline.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_generate_recommendations(self)",
        "files": [
          "IMPLEMENTATION_STATUS_CHECK.py",
          "analysis\\comprehensive_analysis\\business_analysis\\business_core_analyzer.py",
          "analysis\\comprehensive_analysis\\business_analysis\\business_domain_analyzer.py",
          "analysis\\comprehensive_analysis\\business_analysis\\business_validation_analyzer.py",
          "analysis\\comprehensive_analysis\\business_analysis\\business_workflow_analyzer.py",
          "analysis\\comprehensive_analysis\\data_pipeline\\data_pipeline_analyzer.py",
          "analysis\\comprehensive_analysis\\data_security\\data_leakage_detector.py",
          "analysis\\comprehensive_analysis\\debt_analysis\\debt_category_analyzer.py",
          "analysis\\comprehensive_analysis\\debt_analysis\\debt_core_analyzer.py",
          "analysis\\comprehensive_analysis\\debt_analysis\\debt_financial_analyzer.py",
          "analysis\\comprehensive_analysis\\domain_modeling\\domain_model_analyzer.py",
          "analysis\\comprehensive_analysis\\energy_analysis\\energy_algorithm_analyzer.py",
          "analysis\\comprehensive_analysis\\energy_analysis\\energy_carbon_analyzer.py",
          "analysis\\comprehensive_analysis\\energy_analysis\\energy_core_analyzer.py",
          "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_core_analyzer.py",
          "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_reflection_analyzer.py",
          "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_security_analyzer.py",
          "analysis\\comprehensive_analysis\\pattern_mining\\cross_repo_pattern_miner.py",
          "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_context_analyzer.py",
          "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_core_analyzer.py",
          "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_pattern_analyzer.py",
          "analysis\\comprehensive_analysis\\workflow_analysis\\workflow_pattern_detector.py",
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py",
          "core\\intelligence\\analysis\\ml_code_analyzer.py",
          "core\\intelligence\\analysis\\technical_debt_analyzer.py",
          "core\\intelligence\\testing\\regression_detector.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "test_gemini_connection()",
        "files": [
          "intelligent_test_builder.py",
          "archive\\legacy_scripts\\intelligent_test_builder.py",
          "archive\\original_backup\\intelligent_test_builder.py",
          "testmaster\\generators\\intelligent.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, model, api_key)",
        "files": [
          "intelligent_test_builder.py",
          "intelligent_test_builder_v2.py",
          "archive\\legacy_scripts\\intelligent_test_builder.py",
          "archive\\legacy_scripts\\intelligent_test_builder_v2.py",
          "archive\\original_backup\\intelligent_test_builder.py",
          "archive\\original_backup\\intelligent_test_builder_v2.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "analyze_module(self, module_path)",
        "files": [
          "intelligent_test_builder.py",
          "intelligent_test_builder_v2.py",
          "archive\\legacy_scripts\\ai_test_generator.py",
          "archive\\legacy_scripts\\gemini_test_generator.py",
          "archive\\legacy_scripts\\intelligent_converter.py",
          "archive\\legacy_scripts\\intelligent_test_builder.py",
          "archive\\legacy_scripts\\intelligent_test_builder_v2.py",
          "archive\\legacy_scripts\\smart_test_generator.py",
          "archive\\original_backup\\intelligent_test_builder.py",
          "archive\\original_backup\\intelligent_test_builder_v2.py",
          "archive\\original_backup\\integration\\cross_module_tester.py",
          "archive\\original_backup\\scripts\\ai_test_generator.py",
          "archive\\original_backup\\scripts\\gemini_test_generator.py",
          "archive\\original_backup\\scripts\\intelligent_converter.py",
          "archive\\original_backup\\scripts\\smart_test_generator.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "integration\\cross_module_tester.py",
          "scripts\\ai_test_generator.py",
          "scripts\\gemini_test_generator.py",
          "scripts\\intelligent_converter.py",
          "scripts\\smart_test_generator.py",
          "testmaster\\generators\\intelligent.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "generate_intelligent_test(self, module_path, analysis)",
        "files": [
          "intelligent_test_builder.py",
          "intelligent_test_builder_v2.py",
          "archive\\legacy_scripts\\intelligent_test_builder.py",
          "archive\\legacy_scripts\\intelligent_test_builder_v2.py",
          "archive\\original_backup\\intelligent_test_builder.py",
          "archive\\original_backup\\intelligent_test_builder_v2.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "build_test_for_module(self, module_path, output_dir)",
        "files": [
          "intelligent_test_builder.py",
          "intelligent_test_builder_offline.py",
          "intelligent_test_builder_v2.py",
          "archive\\legacy_scripts\\intelligent_test_builder.py",
          "archive\\legacy_scripts\\intelligent_test_builder_offline.py",
          "archive\\legacy_scripts\\intelligent_test_builder_v2.py",
          "archive\\original_backup\\intelligent_test_builder.py",
          "archive\\original_backup\\intelligent_test_builder_offline.py",
          "archive\\original_backup\\intelligent_test_builder_v2.py",
          "testmaster\\generators\\base.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "stop_monitoring(self)",
        "files": [
          "live_code_quality_monitor.py",
          "llm_analysis_monitor.py",
          "real_time_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\original_backup\\optimization\\execution_optimizer.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "core\\intelligence\\analytics\\advanced_anomaly_detector.py",
          "core\\intelligence\\integration\\components\\performance_monitor.py",
          "core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
          "core\\intelligence\\monitoring\\agent_qa_modular.py",
          "core\\intelligence\\monitoring\\enterprise_performance_monitor.py",
          "core\\intelligence\\monitoring\\qa_monitor.py",
          "core\\intelligence\\security\\security_dashboard.py",
          "core\\intelligence\\testing\\automation_engine.py",
          "core\\security\\distributed_agent_registry.py",
          "core\\security\\operational_security.py",
          "core\\testing\\parallel_test_executor.py",
          "dashboard\\api\\backend_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_performance_monitor.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\monitor.py",
          "integration\\resource_optimization_engine.py",
          "optimization\\execution_optimizer.py",
          "testmaster\\agent_qa\\quality_monitor.py",
          "testmaster\\async_processing\\async_monitor.py",
          "testmaster\\communication\\claude_messenger.py",
          "testmaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
          "testmaster\\monitoring\\idle_detector.py",
          "testmaster\\monitoring\\test_monitor.py",
          "testmaster\\telemetry\\system_profiler.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_monitoring_loop(self)",
        "files": [
          "live_code_quality_monitor.py",
          "llm_analysis_monitor.py",
          "real_time_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_flow_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "core\\intelligence\\dashboard\\intelligence_backend.py",
          "core\\intelligence\\documentation\\live_architecture.py",
          "core\\intelligence\\monitoring\\enterprise_performance_monitor.py",
          "core\\intelligence\\security\\advanced_security_intelligence.py",
          "core\\intelligence\\security\\security_dashboard.py",
          "core\\security\\adaptive_security_resilience.py",
          "core\\security\\data_integrity_guardian.py",
          "core\\security\\operational_security.py",
          "core\\security\\security_monitoring_system.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py",
          "dashboard\\dashboard_core\\analytics_dead_letter_queue.py",
          "dashboard\\dashboard_core\\analytics_flow_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_performance_monitor.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\emergency_backup_recovery.py",
          "dashboard\\dashboard_core\\monitor.py",
          "dashboard\\dashboard_core\\predictive_flow_optimizer.py",
          "testmaster\\agent_qa\\quality_monitor.py",
          "testmaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
          "testmaster\\monitoring\\idle_detector.py",
          "testmaster\\monitoring\\test_monitor.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "start_monitoring(self)",
        "files": [
          "llm_analysis_monitor.py",
          "real_time_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\original_backup\\optimization\\execution_optimizer.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "core\\intelligence\\analytics\\advanced_anomaly_detector.py",
          "core\\intelligence\\monitoring\\agent_qa_modular.py",
          "core\\intelligence\\monitoring\\enterprise_performance_monitor.py",
          "core\\intelligence\\monitoring\\qa_monitor.py",
          "core\\intelligence\\testing\\automation_engine.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "core\\security\\distributed_agent_registry.py",
          "core\\security\\operational_security.py",
          "dashboard\\api\\backend_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_performance_monitor.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\monitor.py",
          "integration\\resource_optimization_engine.py",
          "monitoring\\enhanced_monitor_separate.py",
          "optimization\\execution_optimizer.py",
          "testmaster\\agent_qa\\quality_monitor.py",
          "testmaster\\async_processing\\async_monitor.py",
          "testmaster\\communication\\claude_messenger.py",
          "testmaster\\monitoring\\idle_detector.py",
          "testmaster\\streaming\\stream_monitor.py",
          "testmaster\\telemetry\\system_profiler.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "monitor()",
        "files": [
          "monitor_progress.py",
          "monitor_to_100.py",
          "archive\\legacy_scripts\\monitor_progress.py",
          "archive\\legacy_scripts\\monitor_to_100.py",
          "archive\\original_backup\\monitor_progress.py",
          "archive\\original_backup\\monitor_to_100.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "process_modules_parallel(modules, max_workers)",
        "files": [
          "parallel_converter.py",
          "parallel_converter_fixed.py",
          "archive\\legacy_scripts\\parallel_converter.py",
          "archive\\legacy_scripts\\parallel_converter_fixed.py",
          "archive\\legacy_scripts\\parallel_converter_working.py",
          "archive\\legacy_scripts\\parallel_coverage_converter.py",
          "archive\\legacy_scripts\\parallel_coverage_converter_fixed.py",
          "archive\\original_backup\\parallel_converter.py",
          "archive\\original_backup\\parallel_converter_fixed.py",
          "archive\\original_backup\\scripts\\parallel_converter_working.py",
          "archive\\original_backup\\scripts\\parallel_coverage_converter.py",
          "archive\\original_backup\\scripts\\parallel_coverage_converter_fixed.py",
          "scripts\\parallel_converter_working.py",
          "scripts\\parallel_coverage_converter.py",
          "scripts\\parallel_coverage_converter_fixed.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "save_incremental_results(results, filename)",
        "files": [
          "parallel_converter_fixed.py",
          "archive\\legacy_scripts\\parallel_converter_fixed.py",
          "archive\\legacy_scripts\\parallel_coverage_converter_fixed.py",
          "archive\\original_backup\\parallel_converter_fixed.py",
          "archive\\original_backup\\scripts\\parallel_coverage_converter_fixed.py",
          "scripts\\parallel_coverage_converter_fixed.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_trend(self, values)",
        "files": [
          "performance_profiler.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_monitor.py",
          "core\\intelligence\\analytics\\analytics_anomaly_detector.py",
          "core\\intelligence\\dashboard\\intelligence_backend.py",
          "core\\intelligence\\ml\\advanced\\anomaly_detection.py",
          "core\\intelligence\\monitoring\\enterprise_performance_monitor.py",
          "core\\intelligence\\monitoring\\qa_monitor.py",
          "core\\intelligence\\testing\\quality_dashboard.py",
          "dashboard\\dashboard_core\\analytics_anomaly_detector.py",
          "dashboard\\dashboard_core\\analytics_performance_monitor.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "wrapper()",
        "files": [
          "performance_profiler.py",
          "restored_threading_4.py",
          "api\\orchestration_flask.py",
          "api\\orchestration_flask.py",
          "api\\phase2_api.py",
          "api\\phase2_api.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py",
          "cache\\intelligent_cache.py",
          "core\\feature_flags.py",
          "core\\tracking_manager.py",
          "core\\intelligence\\testing\\contract_tester.py",
          "core\\intelligence\\testing\\contract_tester.py",
          "core\\observability\\agent_ops_separate.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "core\\security\\circuit_breaker_matrix.py",
          "core\\security\\error_recovery_framework.py",
          "core\\security\\exception_monitoring.py",
          "core\\security\\retry_mechanism_system.py",
          "core\\security\\secure_performance_optimizer.py",
          "core\\tools\\type_safe_tools.py",
          "dashboard\\api\\enhanced_telemetry.py",
          "dashboard\\api\\observability.py",
          "dashboard\\api\\orchestration_flask.py",
          "dashboard\\api\\orchestration_flask.py",
          "dashboard\\api\\phase2_api.py",
          "dashboard\\api\\phase2_api.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_retry_manager.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\error_handler.py",
          "dashboard\\dashboard_core\\error_handler.py",
          "dashboard\\dashboard_core\\error_handler.py",
          "observability\\unified_observability.py",
          "observability\\unified_observability.py",
          "testmaster\\breaking\\failure_detector.py",
          "testmaster\\core\\feature_flags.py",
          "testmaster\\core\\layer_manager.py",
          "testmaster\\core\\monitoring_decorators.py",
          "testmaster\\core\\tracking_manager.py",
          "testmaster\\telemetry\\performance_monitor.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, max_size)",
        "files": [
          "realtime_metrics_collector.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "core\\security\\distributed_communication_security.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "clear(self)",
        "files": [
          "realtime_metrics_collector.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "cache\\intelligent_cache.py",
          "core\\testing\\react_agent_testing.py",
          "core\\testing\\session_testing.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py",
          "dashboard\\dashboard_core\\cache.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py",
          "testmaster\\mapping\\mapping_cache.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_percentile(self, values, percentile)",
        "files": [
          "realtime_metrics_collector.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_monitor.py",
          "core\\intelligence\\monitoring\\enterprise_performance_monitor.py",
          "dashboard\\dashboard_core\\analytics_performance_monitor.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "add_alert_callback(self, callback)",
        "files": [
          "realtime_metrics_collector.py",
          "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py",
          "testmaster\\agent_qa\\quality_monitor.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_current_metrics(self)",
        "files": [
          "realtime_metrics_collector.py",
          "core\\intelligence\\integration\\components\\performance_monitor.py",
          "integration\\realtime_performance_monitoring.py",
          "testmaster\\telemetry\\system_profiler.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, name, capabilities)",
        "files": [
          "restored_asyncio_4.py",
          "restored_json_4.py",
          "restored_logging_4.py",
          "restored_time_4.py",
          "restored_uuid_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\enhanced_monitor.py",
          "archive\\phase4_archive\\replaced_code\\enhanced_monitor_20250819_195132.py",
          "archive\\phase7_archive\\replaced_code\\enhanced_monitor_20250819_202006.py",
          "observability\\core\\event_monitoring.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "add_agent(self, agent)",
        "files": [
          "restored_asyncio_4.py",
          "restored_asyncio_6.py",
          "restored_json_4.py",
          "restored_logging_4.py",
          "restored_random_6.py",
          "restored_time_4.py",
          "restored_uuid_4.py",
          "restored_uuid_6.py",
          "archive\\phase1c_consolidation_20250820_150000\\enhanced_monitor.py",
          "archive\\phase4_archive\\replaced_code\\enhanced_monitor_20250819_195132.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
          "archive\\phase7_archive\\replaced_code\\enhanced_monitor_20250819_202006.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "deployment\\swarm_orchestrator.py",
          "monitoring\\enhanced_monitor_separate.py",
          "observability\\core\\conversational_interface.py",
          "ui_ux\\agent_verse_ui.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_get_system_status(self)",
        "files": [
          "restored_asyncio_4.py",
          "restored_json_4.py",
          "restored_logging_4.py",
          "restored_time_4.py",
          "restored_uuid_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\enhanced_monitor.py",
          "archive\\phase4_archive\\replaced_code\\enhanced_monitor_20250819_195132.py",
          "archive\\phase7_archive\\replaced_code\\enhanced_monitor_20250819_202006.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py",
          "observability\\core\\conversational_interface.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_get_help_message(self)",
        "files": [
          "restored_asyncio_4.py",
          "restored_json_4.py",
          "restored_logging_4.py",
          "restored_time_4.py",
          "restored_uuid_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\enhanced_monitor.py",
          "archive\\phase4_archive\\replaced_code\\enhanced_monitor_20250819_195132.py",
          "archive\\phase7_archive\\replaced_code\\enhanced_monitor_20250819_202006.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py",
          "observability\\core\\conversational_interface.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_dict_depth(self, d, current_depth)",
        "files": [
          "restored_asyncio_4.py",
          "restored_json_4.py",
          "restored_logging_4.py",
          "restored_time_4.py",
          "restored_uuid_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\enhanced_monitor.py",
          "archive\\phase4_archive\\replaced_code\\enhanced_monitor_20250819_195132.py",
          "archive\\phase7_archive\\replaced_code\\enhanced_monitor_20250819_202006.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py",
          "observability\\core\\multimodal_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, mode)",
        "files": [
          "restored_asyncio_4.py",
          "restored_json_4.py",
          "restored_logging_4.py",
          "restored_time_4.py",
          "restored_uuid_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\enhanced_monitor.py",
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "archive\\phase4_archive\\replaced_code\\enhanced_monitor_20250819_195132.py",
          "archive\\phase7_archive\\replaced_code\\enhanced_monitor_20250819_202006.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py",
          "observability\\core\\event_monitoring.py",
          "observability\\core\\event_monitoring.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "add_monitoring_agent(self, agent)",
        "files": [
          "restored_asyncio_4.py",
          "restored_json_4.py",
          "restored_logging_4.py",
          "restored_time_4.py",
          "restored_uuid_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\enhanced_monitor.py",
          "archive\\phase4_archive\\replaced_code\\enhanced_monitor_20250819_195132.py",
          "archive\\phase7_archive\\replaced_code\\enhanced_monitor_20250819_202006.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py",
          "observability\\unified_observability.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_monitoring_status(self)",
        "files": [
          "restored_asyncio_4.py",
          "restored_json_4.py",
          "restored_logging_4.py",
          "restored_time_4.py",
          "restored_uuid_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\enhanced_monitor.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "archive\\phase4_archive\\replaced_code\\enhanced_monitor_20250819_195132.py",
          "archive\\phase7_archive\\replaced_code\\enhanced_monitor_20250819_202006.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py",
          "monitoring\\enhanced_monitor_separate.py",
          "observability\\unified_observability.py",
          "testmaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__post_init__(self)",
        "files": [
          "restored_asyncio_5.py",
          "restored_logging_5.py",
          "restored_threading_5.py",
          "restored_time_5.py",
          "restored_uuid_5.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\original_backup\\config\\testmaster_config.py",
          "archive\\original_backup\\deduplication\\test_deduplicator.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "archive\\phase5_archive\\replaced_code\\agent_graph_20250819_195602.py",
          "archive\\phase6_archive\\replaced_code\\agent_graph_20250819_200928.py",
          "config\\testmaster_config.py",
          "core\\framework_abstraction.py",
          "core\\framework_abstraction.stub_backup.py",
          "core\\intelligence\\config\\enterprise_config_manager.py",
          "core\\intelligence\\documentation\\api_docs_extractor.py",
          "core\\intelligence\\documentation\\api_docs_extractor.py",
          "core\\intelligence\\visualization\\agent_interface_systems.py",
          "core\\intelligence\\visualization\\data_visualization_engines.py",
          "core\\intelligence\\visualization\\interactive_visualizations.py",
          "core\\intelligence\\visualization\\interactive_visualizations.py",
          "core\\intelligence\\visualization\\user_experience_frameworks.py",
          "core\\intelligence\\visualization\\user_experience_frameworks.py",
          "core\\intelligence\\visualization\\user_experience_frameworks.py",
          "core\\orchestration\\agent_graph.py",
          "core\\reliability\\emergency_backup_recovery.py",
          "core\\reliability\\emergency_backup_recovery.py",
          "core\\security\\agent_communication_security.py",
          "core\\security\\agent_communication_security.py",
          "core\\security\\api_security_layer.py",
          "core\\security\\byzantine_consensus_security.py",
          "core\\security\\byzantine_consensus_security.py",
          "core\\security\\cloud_event_security.py",
          "core\\security\\configuration_security.py",
          "core\\security\\deployment_pipeline_security.py",
          "core\\security\\distributed_agent_registry.py",
          "core\\security\\distributed_communication_security.py",
          "core\\security\\distributed_communication_security.py",
          "core\\security\\distributed_communication_security.py",
          "core\\security\\distributed_key_management_security.py",
          "core\\security\\enterprise_audit_logging.py",
          "core\\security\\file_security_handler.py",
          "core\\security\\flow_persistence_security.py",
          "core\\security\\message_context_security.py",
          "core\\security\\multi_agent_evaluation_security.py",
          "core\\security\\multi_agent_evaluation_security.py",
          "core\\security\\multi_agent_evaluation_security.py",
          "core\\security\\multi_agent_evaluation_security.py",
          "core\\security\\retry_mechanism_system.py",
          "core\\security\\secure_message_delivery.py",
          "core\\security\\secure_performance_optimizer.py",
          "core\\security\\security_monitoring_system.py",
          "core\\security\\thread_safety_manager.py",
          "core\\testing\\graph_async_testing.py",
          "core\\testing\\graph_constraints_testing.py",
          "core\\testing\\graph_vector_testing.py",
          "core\\testing\\langgraph_supervisor_testing.py",
          "core\\testing\\supercharged_test_generator.py_stub_backup_20250821_042438.py",
          "dashboard\\api\\enhanced_analytics.py",
          "dashboard\\api\\enhanced_telemetry.py",
          "dashboard\\api\\enhanced_telemetry.py",
          "dashboard\\api\\frontend_data_contracts.py",
          "dashboard\\api\\frontend_data_contracts.py",
          "dashboard\\api\\frontend_data_contracts.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py",
          "dashboard\\dashboard_core\\system_observability_metrics.py",
          "deduplication\\test_deduplicator.py",
          "testmaster\\agent_qa\\quality_inspector.py",
          "testmaster\\agent_qa\\scoring_system.py",
          "testmaster\\core\\context_manager.py",
          "testmaster\\flow_optimizer\\dependency_resolver.py",
          "testmaster\\flow_optimizer\\dependency_resolver.py",
          "testmaster\\flow_optimizer\\execution_router.py",
          "testmaster\\flow_optimizer\\flow_analyzer.py",
          "testmaster\\flow_optimizer\\resource_optimizer.py",
          "testmaster\\generators\\base.py",
          "testmaster\\intelligence\\documentation\\quality\\style_checker.py",
          "testmaster\\intelligence\\documentation\\templates\\docstring_templates.py",
          "testmaster\\intelligence\\documentation\\templates\\readme_templates.py",
          "testmaster\\intelligence\\documentation\\templates\\template_engine.py",
          "testmaster\\intelligence\\documentation\\templates\\api\\base.py",
          "testmaster\\intelligence\\documentation\\templates\\api\\base.py",
          "testmaster\\intelligence\\documentation\\templates\\api\\base.py",
          "testmaster\\intelligence\\hierarchical_planning\\htp_reasoning.py",
          "testmaster\\intelligence\\hierarchical_planning\\unified_integration.py",
          "testmaster\\intelligence\\tree_of_thought\\tot_reasoning.py",
          "testmaster\\monitoring\\test_monitor.py",
          "testmaster\\orchestration\\universal_orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, monitor)",
        "files": [
          "restored_asyncio_5.py",
          "restored_logging_5.py",
          "restored_threading_5.py",
          "restored_time_5.py",
          "restored_uuid_5.py",
          "archive\\phase5_archive\\replaced_code\\agent_graph_20250819_195602.py",
          "archive\\phase6_archive\\replaced_code\\agent_graph_20250819_200928.py",
          "core\\orchestration\\agent_graph.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "register_agent(self, agent)",
        "files": [
          "restored_asyncio_5.py",
          "restored_logging_5.py",
          "restored_threading_5.py",
          "restored_time_5.py",
          "restored_uuid_5.py",
          "archive\\phase5_archive\\replaced_code\\agent_graph_20250819_195602.py",
          "archive\\phase6_archive\\replaced_code\\agent_graph_20250819_200928.py",
          "core\\intelligence\\orchestration\\agent_coordinator.py",
          "core\\orchestration\\agent_graph.py",
          "core\\orchestration\\enhanced_agent_orchestrator.py",
          "core\\security\\agent_communication_security.py",
          "core\\security\\distributed_agent_registry.py",
          "orchestration\\unified_orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "create_test_crew(self, crew_type)",
        "files": [
          "restored_asyncio_5.py",
          "restored_logging_5.py",
          "restored_threading_5.py",
          "restored_time_5.py",
          "restored_uuid_5.py",
          "archive\\phase5_archive\\replaced_code\\agent_graph_20250819_195602.py",
          "archive\\phase6_archive\\replaced_code\\agent_graph_20250819_200928.py",
          "core\\orchestration\\agent_graph.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "create_orchestration_task(self, name, agent_id, function, parameters, dependencies, timeout)",
        "files": [
          "restored_asyncio_5.py",
          "restored_logging_5.py",
          "restored_threading_5.py",
          "restored_time_5.py",
          "restored_uuid_5.py",
          "archive\\phase5_archive\\replaced_code\\agent_graph_20250819_195602.py",
          "archive\\phase6_archive\\replaced_code\\agent_graph_20250819_200928.py",
          "core\\orchestration\\agent_graph.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_create_task_from_config(self, task_config)",
        "files": [
          "restored_asyncio_5.py",
          "restored_logging_5.py",
          "restored_threading_5.py",
          "restored_time_5.py",
          "restored_uuid_5.py",
          "archive\\phase5_archive\\replaced_code\\agent_graph_20250819_195602.py",
          "archive\\phase6_archive\\replaced_code\\agent_graph_20250819_200928.py",
          "core\\orchestration\\agent_graph.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_update_agent_metrics(self, agent, execution_time, success)",
        "files": [
          "restored_asyncio_5.py",
          "restored_logging_5.py",
          "restored_threading_5.py",
          "restored_time_5.py",
          "restored_uuid_5.py",
          "archive\\phase5_archive\\replaced_code\\agent_graph_20250819_195602.py",
          "archive\\phase6_archive\\replaced_code\\agent_graph_20250819_200928.py",
          "core\\orchestration\\agent_graph.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_update_session_metrics(self, session_id, execution_time)",
        "files": [
          "restored_asyncio_5.py",
          "restored_logging_5.py",
          "restored_threading_5.py",
          "restored_time_5.py",
          "restored_uuid_5.py",
          "archive\\phase5_archive\\replaced_code\\agent_graph_20250819_195602.py",
          "archive\\phase6_archive\\replaced_code\\agent_graph_20250819_200928.py",
          "core\\orchestration\\agent_graph.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_orchestration_status(self)",
        "files": [
          "restored_asyncio_5.py",
          "restored_logging_5.py",
          "restored_threading_5.py",
          "restored_time_5.py",
          "restored_uuid_5.py",
          "archive\\oversized_modules_20250821_042018\\coordination\\unified_workflow_orchestrator.py",
          "archive\\phase5_archive\\replaced_code\\agent_graph_20250819_195602.py",
          "archive\\phase6_archive\\replaced_code\\agent_graph_20250819_200928.py",
          "core\\intelligence\\ml\\ml_orchestrator.py",
          "core\\intelligence\\orchestration\\cross_system_orchestrator.py",
          "core\\intelligence\\orchestration\\workflow_orchestration_engine.py",
          "core\\orchestration\\agent_graph.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_system_health(self)",
        "files": [
          "restored_asyncio_5.py",
          "restored_logging_5.py",
          "restored_threading_5.py",
          "restored_time_5.py",
          "restored_uuid_5.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "archive\\phase5_archive\\replaced_code\\agent_graph_20250819_195602.py",
          "archive\\phase6_archive\\replaced_code\\agent_graph_20250819_200928.py",
          "core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
          "core\\orchestration\\agent_graph.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py",
          "dashboard\\dashboard_core\\analytics_performance_monitor.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "cleanup_completed_sessions(self, max_age_hours)",
        "files": [
          "restored_asyncio_5.py",
          "restored_logging_5.py",
          "restored_threading_5.py",
          "restored_time_5.py",
          "restored_uuid_5.py",
          "archive\\phase5_archive\\replaced_code\\agent_graph_20250819_195602.py",
          "archive\\phase6_archive\\replaced_code\\agent_graph_20250819_200928.py",
          "core\\orchestration\\agent_graph.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "is_ready(self, completed_tasks)",
        "files": [
          "restored_asyncio_6.py",
          "restored_random_6.py",
          "restored_uuid_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
          "deployment\\swarm_orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "is_timeout(self)",
        "files": [
          "restored_asyncio_6.py",
          "restored_random_6.py",
          "restored_uuid_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
          "deployment\\swarm_orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "can_accept_task(self, task)",
        "files": [
          "restored_asyncio_6.py",
          "restored_random_6.py",
          "restored_uuid_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
          "deployment\\swarm_orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "update_performance(self, success, execution_time)",
        "files": [
          "restored_asyncio_6.py",
          "restored_random_6.py",
          "restored_uuid_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
          "deployment\\swarm_orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "remove_agent(self, agent_id)",
        "files": [
          "restored_asyncio_6.py",
          "restored_random_6.py",
          "restored_uuid_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
          "deployment\\swarm_orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "submit_task(self, task)",
        "files": [
          "restored_asyncio_6.py",
          "restored_random_6.py",
          "restored_uuid_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
          "core\\orchestration\\enhanced_agent_orchestrator.py",
          "deployment\\swarm_orchestrator.py",
          "orchestration\\unified_orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "submit_batch(self, tasks)",
        "files": [
          "restored_asyncio_6.py",
          "restored_random_6.py",
          "restored_uuid_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
          "deployment\\swarm_orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_select_agent(self, task)",
        "files": [
          "restored_asyncio_6.py",
          "restored_random_6.py",
          "restored_uuid_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
          "deployment\\swarm_orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_update_collective_knowledge(self, task, result)",
        "files": [
          "restored_asyncio_6.py",
          "restored_random_6.py",
          "restored_uuid_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
          "deployment\\swarm_orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_swarm_status(self)",
        "files": [
          "restored_asyncio_6.py",
          "restored_random_6.py",
          "restored_uuid_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
          "deployment\\swarm_orchestrator.py",
          "orchestration\\unified_orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_agent_details(self, agent_id)",
        "files": [
          "restored_asyncio_6.py",
          "restored_random_6.py",
          "restored_uuid_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
          "deployment\\swarm_orchestrator.py",
          "ui_ux\\agent_verse_ui.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_task_details(self, task_id)",
        "files": [
          "restored_asyncio_6.py",
          "restored_random_6.py",
          "restored_uuid_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
          "deployment\\swarm_orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_initialize_core_services(self)",
        "files": [
          "restored_json_5.py",
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "archive\\phase5_archive\\replaced_code\\enterprise_deployment_20250819_195602.py",
          "deployment\\enterprise_deployment.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "list_swarms()",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "create_swarm()",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "execute_swarm_task(swarm_id)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_swarm_status(swarm_id)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "list_architectures()",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "list_swarm_agents()",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_swarm_analytics()",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_initialize_swarm_agents(self)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "create_swarm(self, config)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "execute_swarm_task(self, swarm_id, task)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_execute_sequential_workflow(self, swarm, task)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_execute_concurrent_workflow(self, swarm, task)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_execute_hierarchical_swarm(self, swarm, task)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_execute_mixture_of_agents(self, swarm, task)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_execute_majority_voting(self, swarm, task)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_execute_deep_research_swarm(self, swarm, task)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_execute_adaptive_swarm(self, swarm, task)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_execute_agent_step(self, agent, input_text, task, step_type)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_generate_security_output(self, input_text, task, step_type)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_generate_test_output(self, input_text, task, step_type)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_generate_quality_output(self, input_text, task, step_type)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_generate_consensus_output(self, input_text, task, step_type)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_aggregate_concurrent_outputs(self, results, task)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_aggregate_expert_mixture(self, expert_outputs, task)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_majority_vote(self, votes, task)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_consolidate_research_findings(self, initial_research)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_synthesize_research(self, initial_research, deep_analysis, task)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_task_for_architecture(self, task)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_update_performance_metrics(self, swarm_id, execution_time, success)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_swarm_status(self, swarm_id)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "enhanced_api_endpoint()",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\analytics.py",
          "dashboard\\api\\crew_orchestration.py",
          "dashboard\\api\\llm.py",
          "dashboard\\api\\performance.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "handle_api_error(func)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\analytics.py",
          "dashboard\\api\\crew_orchestration.py",
          "dashboard\\api\\llm.py",
          "dashboard\\api\\performance.py",
          "dashboard\\api\\swarm_orchestration.py",
          "dashboard\\dashboard_core\\error_handler.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_real_data_extractor()",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\crew_orchestration.py",
          "dashboard\\api\\swarm_orchestration.py",
          "dashboard\\dashboard_core\\real_data_extractor.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "decorator(func)",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_4.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "core\\feature_flags.py",
          "core\\tracking_manager.py",
          "core\\intelligence\\testing\\contract_tester.py",
          "core\\intelligence\\testing\\contract_tester.py",
          "core\\observability\\agent_ops_separate.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "core\\security\\api_security_layer.py",
          "core\\security\\error_recovery_framework.py",
          "core\\security\\retry_mechanism_system.py",
          "core\\security\\secure_performance_optimizer.py",
          "core\\testing\\flow_testing.py",
          "core\\testing\\flow_testing.py",
          "core\\testing\\flow_testing.py",
          "core\\testing\\tracing_testing.py",
          "dashboard\\api\\analytics.py",
          "dashboard\\api\\crew_orchestration.py",
          "dashboard\\api\\crew_orchestration.py",
          "dashboard\\api\\enhanced_telemetry.py",
          "dashboard\\api\\llm.py",
          "dashboard\\api\\observability.py",
          "dashboard\\api\\performance.py",
          "dashboard\\api\\swarm_orchestration.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\error_handler.py",
          "dashboard\\dashboard_core\\error_handler.py",
          "observability\\unified_observability.py",
          "observability\\unified_observability.py",
          "testmaster\\core\\feature_flags.py",
          "testmaster\\core\\layer_manager.py",
          "testmaster\\core\\monitoring_decorators.py",
          "testmaster\\core\\tracking_manager.py",
          "testmaster\\telemetry\\performance_monitor.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "track_test_execution(session_name, observability_system)",
        "files": [
          "restored_threading_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py",
          "core\\observability\\agent_ops_separate.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "duration(self)",
        "files": [
          "restored_threading_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py",
          "core\\observability\\agent_ops_separate.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "core\\testing\\tracing_testing.py",
          "dashboard\\api\\enhanced_telemetry.py",
          "observability\\core\\session_tracking.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "calculate_cost(self, model, input_tokens, output_tokens)",
        "files": [
          "restored_threading_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py",
          "core\\observability\\agent_ops_separate.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "track_llm_call(self, session_id, llm_call)",
        "files": [
          "restored_threading_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py",
          "core\\observability\\agent_ops_separate.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_session_costs(self, session_id)",
        "files": [
          "restored_threading_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py",
          "core\\observability\\agent_ops_separate.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\core\\cost_management.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "start_test_session(self, session_name, metadata, tags)",
        "files": [
          "restored_threading_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py",
          "core\\observability\\agent_ops_separate.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "end_test_session(self, session_id, status)",
        "files": [
          "restored_threading_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py",
          "core\\observability\\agent_ops_separate.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "track_agent_action(self, session_id, agent_name, action_type, parameters)",
        "files": [
          "restored_threading_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "complete_agent_action(self, action_id, result, error, llm_calls)",
        "files": [
          "restored_threading_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py",
          "core\\observability\\agent_ops_separate.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "track_llm_call(self, session_id, model, provider, prompt_tokens, completion_tokens, latency, success, error, metadata)",
        "files": [
          "restored_threading_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py",
          "core\\observability\\agent_ops_separate.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\unified_observability.py",
          "observability\\core\\cost_management.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "generate_session_replay(self, session_id)",
        "files": [
          "restored_threading_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py",
          "core\\observability\\agent_ops_separate.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\unified_observability.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_generate_session_timeline(self, session, actions, llm_calls)",
        "files": [
          "restored_threading_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py",
          "core\\observability\\agent_ops_separate.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_session_performance(self, session)",
        "files": [
          "restored_threading_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py",
          "core\\observability\\agent_ops_separate.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_generate_session_analytics(self, session)",
        "files": [
          "restored_threading_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py",
          "core\\observability\\agent_ops_separate.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_efficiency_score(self, session)",
        "files": [
          "restored_threading_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py",
          "core\\observability\\agent_ops_separate.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\unified_observability.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_observability_status(self)",
        "files": [
          "restored_threading_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py",
          "core\\observability\\agent_ops_separate.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "to_dict(self)",
        "files": [
          "risk_based_test_targeter.py",
          "risk_based_test_targeter.py",
          "risk_based_test_targeter.py",
          "run_debt_analysis.py",
          "test_complexity_prioritizer.py",
          "test_complexity_prioritizer.py",
          "test_dependency_orderer.py",
          "test_dependency_orderer.py",
          "analysis\\comprehensive_analysis\\pattern_mining\\cross_repo_pattern_miner.py",
          "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
          "archive\\original_backup\\config\\testmaster_config.py",
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "config\\testmaster_config.py",
          "core\\framework_abstraction.py",
          "core\\intelligence\\analysis\\business_base.py",
          "core\\intelligence\\analysis\\business_base.py",
          "core\\intelligence\\analysis\\business_base.py",
          "core\\intelligence\\analysis\\business_base.py",
          "core\\intelligence\\analysis\\business_base.py",
          "core\\intelligence\\analysis\\debt_base.py",
          "core\\intelligence\\analysis\\debt_base.py",
          "core\\intelligence\\analysis\\debt_base.py",
          "core\\intelligence\\analysis\\debt_base.py",
          "core\\intelligence\\analysis\\ml_code_analyzer.py",
          "core\\intelligence\\analysis\\ml_code_analyzer.py",
          "core\\intelligence\\analysis\\semantic_base.py",
          "core\\intelligence\\analysis\\semantic_base.py",
          "core\\intelligence\\analysis\\semantic_base.py",
          "core\\intelligence\\analysis\\technical_debt_analyzer.py",
          "core\\intelligence\\analysis\\technical_debt_analyzer.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "core\\intelligence\\base\\__init__.py",
          "core\\intelligence\\correlation\\cross_system_analytics.py",
          "core\\intelligence\\correlation\\cross_system_analytics.py",
          "core\\intelligence\\correlation\\cross_system_analytics.py",
          "core\\intelligence\\orchestration\\agent_coordinator.py",
          "core\\intelligence\\orchestration\\integration_hub.py",
          "core\\intelligence\\reliability\\quantum_retry_orchestrator.py",
          "core\\intelligence\\security\\advanced_security_intelligence.py",
          "core\\intelligence\\security\\audit\\audit_events.py",
          "core\\intelligence\\streaming\\event_streaming_engine.py",
          "core\\orchestration\\enhanced_agent_orchestrator.py",
          "core\\reliability\\emergency_backup_recovery.py",
          "core\\reliability\\emergency_backup_recovery.py",
          "core\\security\\adaptive_security_resilience.py",
          "core\\security\\adaptive_security_resilience.py",
          "core\\security\\agent_communication_security.py",
          "core\\security\\byzantine_consensus_security.py",
          "core\\security\\cloud_event_security.py",
          "core\\security\\cloud_event_security.py",
          "core\\security\\data_integrity_guardian.py",
          "core\\security\\enterprise_audit_logging.py",
          "core\\security\\flow_persistence_security.py",
          "core\\security\\license_compliance_framework.py",
          "core\\security\\message_context_security.py",
          "core\\security\\multi_agent_evaluation_security.py",
          "core\\security\\multi_agent_evaluation_security.py",
          "core\\security\\quantum_retry_engine.py",
          "core\\security\\secure_message_delivery.py",
          "core\\security\\secure_performance_optimizer.py",
          "core\\security\\security_monitoring_system.py",
          "core\\security\\security_monitoring_system.py",
          "core\\state\\enhanced_state_manager.py",
          "core\\state\\enhanced_state_manager.py",
          "core\\state\\enhanced_state_manager.py",
          "core\\testing\\graph_index_testing.py",
          "core\\testing\\session_testing.py",
          "core\\testing\\session_testing.py",
          "core\\testing\\tracing_testing.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_delivery_guarantee.py",
          "dashboard\\dashboard_core\\analytics_integrity_guardian.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\emergency_backup_recovery.py",
          "dashboard\\dashboard_core\\emergency_backup_recovery.py",
          "dashboard\\dashboard_core\\predictive_flow_optimizer.py",
          "dashboard\\dashboard_core\\predictive_flow_optimizer.py",
          "dashboard\\dashboard_core\\realtime_analytics_tracker.py",
          "dashboard\\dashboard_core\\system_observability_metrics.py",
          "integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics_robust.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis_robust.py",
          "integration\\cross_system_communication.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py",
          "integration\\workflow_framework.py",
          "orchestration\\unified_orchestrator.py",
          "orchestration\\unified_orchestrator.py",
          "orchestration\\unified_orchestrator.py",
          "orchestration\\unified_orchestrator.py",
          "state\\unified_state_manager.py",
          "state\\unified_state_manager.py",
          "state\\unified_state_manager.py",
          "state\\unified_state_manager.py",
          "state\\unified_state_manager.py",
          "state\\unified_state_manager.py",
          "testmaster\\core\\framework_abstraction\\test_generator.py",
          "testmaster\\core\\framework_abstraction\\test_generator.py",
          "testmaster\\core\\framework_abstraction\\universal_test.py",
          "testmaster\\core\\framework_abstraction\\universal_test.py",
          "testmaster\\core\\framework_abstraction\\universal_test.py",
          "testmaster\\intelligence\\bridges\\context_variables_bridge.py",
          "testmaster\\intelligence\\bridges\\event_monitoring_bridge.py",
          "testmaster\\intelligence\\bridges\\sop_workflow_bridge.py",
          "testmaster\\intelligence\\hierarchical_planning\\unified_integration.py",
          "testmaster\\intelligence\\hierarchical_planning\\unified_integration.py",
          "testmaster\\intelligence\\integration\\agents\\documentation_agent.py",
          "testmaster\\intelligence\\integration\\agents\\documentation_agent.py",
          "testmaster\\intelligence\\integration\\coordination\\analysis_coordinator.py",
          "testmaster\\intelligence\\integration\\events\\event_system.py",
          "testmaster\\intelligence\\integration\\features\\feature_flags.py",
          "testmaster\\intelligence\\integration\\layers\\layer_manager.py",
          "testmaster\\intelligence\\integration\\layers\\layer_manager.py",
          "testmaster\\intelligence\\integration\\storage\\unified_storage.py",
          "testmaster\\intelligence\\llm_providers\\provider_optimization.py",
          "testmaster\\intelligence\\llm_providers\\universal_llm_provider.py",
          "testmaster\\intelligence\\llm_providers\\universal_llm_provider.py",
          "testmaster\\intelligence\\llm_providers\\universal_llm_provider.py",
          "testmaster\\intelligence\\optimization\\multi_objective_optimizer.py",
          "testmaster\\intelligence\\optimization\\multi_objective_optimizer.py",
          "testmaster\\intelligence\\optimization\\multi_objective_optimizer.py",
          "testmaster\\intelligence\\tree_of_thought\\test_thought_generator.py",
          "testmaster\\intelligence\\tree_of_thought\\test_thought_generator.py",
          "testmaster\\intelligence\\tree_of_thought\\test_thought_generator.py",
          "testmaster\\intelligence\\tree_of_thought\\tot_reasoning.py",
          "testmaster\\intelligence\\tree_of_thought\\universal_tot_integration.py",
          "testmaster\\intelligence\\tree_of_thought\\universal_tot_integration.py",
          "testmaster\\orchestration\\framework_adapter.py",
          "testmaster\\orchestration\\framework_adapter.py",
          "testmaster\\orchestration\\output_system.py",
          "testmaster\\orchestration\\output_system.py",
          "testmaster\\orchestration\\universal_orchestrator.py",
          "testmaster\\orchestration\\universal_orchestrator.py",
          "testmaster\\orchestration\\universal_orchestrator.py",
          "testmaster\\security\\compliance_framework.py",
          "testmaster\\security\\compliance_framework.py",
          "testmaster\\security\\compliance_framework.py",
          "testmaster\\security\\security_test_generator.py",
          "testmaster\\security\\security_test_generator.py",
          "testmaster\\security\\security_test_generator.py",
          "testmaster\\security\\universal_scanner.py",
          "testmaster\\security\\universal_scanner.py",
          "testmaster\\security\\universal_scanner.py",
          "ui\\nocode_enhancement.py",
          "ui\\nocode_enhancement.py",
          "ui\\unified_dashboard.py",
          "ui\\unified_dashboard.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, port, host)",
        "files": [
          "simple_web_monitor.py",
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_setup_routes(self)",
        "files": [
          "simple_web_monitor.py",
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
          "core\\intelligence\\api\\unified_intelligence_api.py",
          "core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
          "dashboard\\api\\async_processing.py",
          "dashboard\\api\\comprehensive_monitoring.py",
          "dashboard\\api\\coverage.py",
          "dashboard\\api\\flow_optimization.py",
          "dashboard\\api\\health.py",
          "dashboard\\api\\intelligence.py",
          "dashboard\\api\\monitoring.py",
          "dashboard\\api\\quality_assurance.py",
          "dashboard\\api\\real_codebase_scanner.stub_backup.py",
          "dashboard\\api\\security.py",
          "dashboard\\api\\telemetry.py",
          "dashboard\\api\\test_generation.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "run(self, debug)",
        "files": [
          "simple_web_monitor.py",
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
          "dashboard\\server.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "dashboard()",
        "files": [
          "simple_web_monitor.py",
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
          "core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
          "dashboard\\server.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_metrics()",
        "files": [
          "simple_web_monitor.py",
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
          "core\\intelligence\\documentation\\docs_api.py",
          "core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_tests_status()",
        "files": [
          "simple_web_monitor.py",
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_dependency_graph()",
        "files": [
          "simple_web_monitor.py",
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_refactor_analysis()",
        "files": [
          "simple_web_monitor.py",
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
          "dashboard\\api\\refactor.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "health_check()",
        "files": [
          "simple_web_monitor.py",
          "web_monitor.py",
          "api\\orchestration_flask.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
          "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "core\\framework_abstraction.stub_backup.py",
          "core\\intelligence\\api\\endpoints.py",
          "core\\intelligence\\api\\intelligence_api.py",
          "core\\intelligence\\api\\security_blueprint.py",
          "core\\intelligence\\api\\unified_intelligence_api.py",
          "core\\intelligence\\documentation\\docs_api.py",
          "core\\intelligence\\security\\security_api.py",
          "core\\intelligence\\testing\\testing_api.py",
          "dashboard\\server.py",
          "dashboard\\api\\health.py",
          "dashboard\\api\\intelligence_integration.py",
          "dashboard\\api\\orchestration_flask.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "analyze_module(self, file_path)",
        "files": [
          "split_oversized_modules.py",
          "archive\\original_backup\\incremental\\dependency_tracker.py",
          "core\\intelligence\\documentation\\auto_generator.py",
          "incremental\\dependency_tracker.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__hash__(self)",
        "files": [
          "testmaster_orchestrator.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py",
          "testmaster\\core\\orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__lt__(self, other)",
        "files": [
          "testmaster_orchestrator.py",
          "analysis\\comprehensive_analysis\\realtime_analysis\\realtime_ast_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py",
          "core\\intelligence\\ml\\advanced\\batch_processor.py",
          "core\\intelligence\\ml\\advanced\\performance_execution_manager.py",
          "core\\intelligence\\queuing\\express_priority_queue.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py",
          "integration\\distributed_task_queue.py",
          "testmaster\\core\\orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "add_task(self, task)",
        "files": [
          "testmaster_orchestrator.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py",
          "testmaster\\core\\orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_ready_tasks(self)",
        "files": [
          "testmaster_orchestrator.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py",
          "testmaster\\core\\orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "has_cycles(self)",
        "files": [
          "testmaster_orchestrator.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py",
          "testmaster\\core\\orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, config_path)",
        "files": [
          "testmaster_orchestrator.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py",
          "archive\\oversized_modules_20250821_042018\\ml\\enterprise\\ml_infrastructure_orchestrator.py",
          "core\\intelligence\\ml\\enterprise\\ml_auto_scaling.py",
          "core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
          "core\\intelligence\\testing\\automation\\enterprise_test_orchestrator.py",
          "testmaster\\core\\layer_manager.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_initialize_handlers(self)",
        "files": [
          "testmaster_orchestrator.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py",
          "testmaster\\core\\orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "create_test_generation_workflow(self, module_paths)",
        "files": [
          "testmaster_orchestrator.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py",
          "testmaster\\core\\orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_execute_task(self, task)",
        "files": [
          "testmaster_orchestrator.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py",
          "core\\intelligence\\testing\\automation_engine.py",
          "integration\\distributed_task_queue.py",
          "testmaster\\core\\orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_handle_generate_test(self, task)",
        "files": [
          "testmaster_orchestrator.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py",
          "testmaster\\core\\orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_handle_self_heal(self, task)",
        "files": [
          "testmaster_orchestrator.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py",
          "testmaster\\core\\orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_handle_verify_quality(self, task)",
        "files": [
          "testmaster_orchestrator.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py",
          "testmaster\\core\\orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_handle_fix_imports(self, task)",
        "files": [
          "testmaster_orchestrator.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py",
          "testmaster\\core\\orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_status(self)",
        "files": [
          "testmaster_orchestrator.py",
          "agents\\roles\\base_role.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_batch_processor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\original_backup\\testmaster_orchestrator.py",
          "archive\\oversized_modules_20250821_042018\\coordination\\resource_coordination_system.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "core\\intelligence\\orchestrator.py",
          "core\\intelligence\\analytics\\__init__.py",
          "core\\intelligence\\base\\__init__.py",
          "core\\intelligence\\compatibility\\__init__.py",
          "core\\intelligence\\integration\\__init__.py",
          "core\\intelligence\\testing\\automation_engine.py",
          "core\\intelligence\\testing\\__init__.py",
          "core\\testing\\unified_test_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_batch_processor.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py",
          "dashboard\\dashboard_core\\monitor.py",
          "testmaster\\agent_qa\\quality_monitor.py",
          "testmaster\\core\\layer_manager.py",
          "testmaster\\core\\orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "visit(task_id)",
        "files": [
          "testmaster_orchestrator.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py",
          "testmaster\\core\\orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "test_basic_functionality()",
        "files": [
          "test_agent_qa_integration.py",
          "test_phase1_simple.py",
          "test_phase2_final_validation.py",
          "test_phase2_quick_validation.py",
          "test_phase2_simple.py",
          "test_phase2_simple_validation.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "display_results(self)",
        "files": [
          "test_agent_qa_system.py",
          "test_async_processing.py",
          "test_flow_optimizer_system.py",
          "test_reporting_system.py",
          "test_streaming_generation.py",
          "test_universal_ast_system.py",
          "test_universal_language_detector.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "run_all_tests(self)",
        "files": [
          "test_backend_health.py",
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "core\\testing\\run_all_tests.py",
          "dashboard\\test_multi_agent_integration.py",
          "dashboard\\test_robustness_suite.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "generate_integration_report(self)",
        "files": [
          "test_integration_systems.py",
          "archive\\original_backup\\integration\\cross_module_tester.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "dashboard\\test_frontend_integration.py",
          "integration\\cross_module_tester.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_statistics(self)",
        "files": [
          "unified_security_scanner.py",
          "analysis\\comprehensive_analysis\\realtime_analysis\\realtime_ast_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "archive\\original_backup\\incremental\\dependency_tracker.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "core\\intelligence\\analytics\\analytics_anomaly_detector.py",
          "core\\intelligence\\security\\audit_logger.py",
          "core\\security\\compliance_framework.py",
          "core\\security\\enterprise_auth_gateway.py",
          "core\\security\\threat_intelligence_system.py",
          "core\\security\\vulnerability_detection_framework.py",
          "dashboard\\dashboard_core\\analytics_anomaly_detector.py",
          "dashboard\\dashboard_core\\analytics_dead_letter_queue.py",
          "dashboard\\dashboard_core\\analytics_event_queue.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py",
          "incremental\\dependency_tracker.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py",
          "testmaster\\intelligence\\hierarchical_planning\\htp_reasoning.py",
          "testmaster\\intelligence\\tree_of_thought\\tot_reasoning.py",
          "testmaster\\monitoring\\file_watcher.py",
          "testmaster\\monitoring\\idle_detector.py",
          "testmaster\\monitoring\\test_scheduler.py",
          "testmaster\\telemetry\\telemetry_collector.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, base_url)",
        "files": [
          "validate_api_endpoints.py",
          "core\\intelligence\\documentation\\api_validation_framework.py",
          "core\\intelligence\\documentation\\interactive_docs.py",
          "dashboard\\automated_frontend_simulator.py",
          "dashboard\\automated_frontend_tester.py",
          "dashboard\\comprehensive_frontend_validator.py",
          "dashboard\\frontend_display_validator.py",
          "dashboard\\test_api_endpoints.py",
          "dashboard\\test_frontend_automated.py",
          "dashboard\\test_frontend_integration.py",
          "dashboard\\test_multi_agent_integration.py",
          "dashboard\\ultimate_frontend_validator.py",
          "dashboard\\api\\backend_health_monitor.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_start_background_monitoring(self)",
        "files": [
          "web_monitor.py",
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "dashboard\\server.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_alerts()",
        "files": [
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
          "core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
          "core\\intelligence\\security\\security_api.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "resolve_alert(alert_id)",
        "files": [
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
          "core\\intelligence\\testing\\testing_api.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "workflow_status()",
        "files": [
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
          "dashboard\\api\\flow_optimization.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_llm_metrics()",
        "files": [
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
          "dashboard\\api\\llm.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "toggle_llm_mode()",
        "files": [
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
          "dashboard\\api\\llm.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_llm_status()",
        "files": [
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
          "dashboard\\api\\llm.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "can_handle_action(self, action_type)",
        "files": [
          "agents\\roles\\base_role.py",
          "agents\\roles\\quality_assurance.py",
          "agents\\roles\\test_architect.py",
          "agents\\roles\\test_coordinator.py",
          "agents\\roles\\test_engineer.py",
          "agents\\roles\\test_executor.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_detect_anomalies(self)",
        "files": [
          "analysis\\comprehensive_analysis\\anomaly_detection\\anomaly_detection_analyzer.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_generate_report(self)",
        "files": [
          "analysis\\comprehensive_analysis\\anomaly_detection\\anomaly_detection_analyzer.py",
          "analysis\\comprehensive_analysis\\business_analysis\\business_core_analyzer.py",
          "analysis\\comprehensive_analysis\\business_analysis\\business_domain_analyzer.py",
          "analysis\\comprehensive_analysis\\business_analysis\\business_validation_analyzer.py",
          "analysis\\comprehensive_analysis\\business_analysis\\business_workflow_analyzer.py",
          "analysis\\comprehensive_analysis\\data_pipeline\\data_pipeline_analyzer.py",
          "analysis\\comprehensive_analysis\\data_security\\data_leakage_detector.py",
          "analysis\\comprehensive_analysis\\debt_analysis\\debt_category_analyzer.py",
          "analysis\\comprehensive_analysis\\debt_analysis\\debt_core_analyzer.py",
          "analysis\\comprehensive_analysis\\debt_analysis\\debt_financial_analyzer.py",
          "analysis\\comprehensive_analysis\\domain_modeling\\domain_model_analyzer.py",
          "analysis\\comprehensive_analysis\\energy_analysis\\energy_algorithm_analyzer.py",
          "analysis\\comprehensive_analysis\\energy_analysis\\energy_carbon_analyzer.py",
          "analysis\\comprehensive_analysis\\energy_analysis\\energy_core_analyzer.py",
          "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_core_analyzer.py",
          "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_reflection_analyzer.py",
          "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_security_analyzer.py",
          "analysis\\comprehensive_analysis\\pattern_recognition\\ml_pattern_recognition.py",
          "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_context_analyzer.py",
          "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_core_analyzer.py",
          "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_pattern_analyzer.py",
          "analysis\\comprehensive_analysis\\workflow_analysis\\workflow_pattern_detector.py",
          "core\\intelligence\\analysis\\debt_analyzer_modular.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_depth(node, current_depth)",
        "files": [
          "analysis\\comprehensive_analysis\\anomaly_detection\\anomaly_detection_analyzer.py",
          "core\\intelligence\\analysis\\semantic_pattern_detector.py",
          "testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
          "testmaster\\orchestrator\\file_tagger.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_generate_combined_summary(self)",
        "files": [
          "analysis\\comprehensive_analysis\\business_analysis\\business_rule_analysis_wrapper.py",
          "analysis\\comprehensive_analysis\\debt_analysis\\technical_debt_analysis_wrapper.py",
          "analysis\\comprehensive_analysis\\energy_analysis\\energy_consumption_analysis_wrapper.py",
          "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprogramming_analysis_wrapper.py",
          "analysis\\comprehensive_analysis\\ml_analysis\\ml_code_analysis_wrapper.py",
          "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_analysis_wrapper.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "extract_common_patterns(tree, content)",
        "files": [
          "analysis\\comprehensive_analysis\\business_analysis\\_shared_utils.py",
          "analysis\\comprehensive_analysis\\debt_analysis\\_shared_utils.py",
          "analysis\\comprehensive_analysis\\energy_analysis\\_shared_utils.py",
          "analysis\\comprehensive_analysis\\metaprog_analysis\\_shared_utils.py",
          "analysis\\comprehensive_analysis\\semantic_analysis\\_shared_utils.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "calculate_complexity_score(node)",
        "files": [
          "analysis\\comprehensive_analysis\\business_analysis\\_shared_utils.py",
          "analysis\\comprehensive_analysis\\debt_analysis\\_shared_utils.py",
          "analysis\\comprehensive_analysis\\energy_analysis\\_shared_utils.py",
          "analysis\\comprehensive_analysis\\metaprog_analysis\\_shared_utils.py",
          "analysis\\comprehensive_analysis\\semantic_analysis\\_shared_utils.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "analyze(self)",
        "files": [
          "analysis\\comprehensive_analysis\\cognitive_load\\cognitive_load_analyzer.py",
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\from_subarchive_ml_code_analysis_original.py",
          "archive\\from_subarchive_semantic_analysis_original.py",
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py",
          "archive\\superseded_toplevel_ml_code_analysis.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "core\\ast_abstraction.py",
          "core\\ast_abstraction.py",
          "core\\ast_abstraction.py",
          "testmaster\\analysis\\comprehensive_analysis\\api_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\clone_detection.py",
          "testmaster\\analysis\\comprehensive_analysis\\complexity_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\concurrency_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\coupling_cohesion.py",
          "testmaster\\analysis\\comprehensive_analysis\\crypto_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\database_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\error_handling_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\evolution_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\graph_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\inheritance_polymorphism.py",
          "testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\memory_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\performance_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\quality_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\resource_io_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\security_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\software_metrics.py",
          "testmaster\\analysis\\comprehensive_analysis\\statistical_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\structural_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\supply_chain_security.py",
          "testmaster\\analysis\\comprehensive_analysis\\taint_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\testing_analysis.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_generate_summary(self)",
        "files": [
          "analysis\\comprehensive_analysis\\cognitive_load\\cognitive_load_analyzer.py",
          "core\\intelligence\\analysis\\ml_code_analyzer.py",
          "core\\intelligence\\analysis\\technical_debt_analyzer.py",
          "core\\testing\\performance_test_suite.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_cyclomatic_complexity(self, node)",
        "files": [
          "analysis\\comprehensive_analysis\\cognitive_load\\cognitive_load_analyzer.py",
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
          "archive\\oversized_modules_20250821_042018\\documentation\\revolutionary\\neo4j_dominator.py",
          "testmaster\\core\\ast_abstraction\\language_parsers.py",
          "testmaster\\overview\\structure_mapper.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "visit_If(self, node)",
        "files": [
          "analysis\\comprehensive_analysis\\cognitive_load\\cognitive_load_analyzer.py",
          "analysis\\comprehensive_analysis\\cognitive_load\\cognitive_load_analyzer.py",
          "archive\\legacy_scripts\\branch_coverage_analyzer.py",
          "archive\\original_backup\\scripts\\branch_coverage_analyzer.py",
          "core\\intelligence\\documentation\\metrics_reporter.py",
          "scripts\\branch_coverage_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "visit_While(self, node)",
        "files": [
          "analysis\\comprehensive_analysis\\cognitive_load\\cognitive_load_analyzer.py",
          "analysis\\comprehensive_analysis\\cognitive_load\\cognitive_load_analyzer.py",
          "archive\\legacy_scripts\\branch_coverage_analyzer.py",
          "archive\\original_backup\\scripts\\branch_coverage_analyzer.py",
          "core\\intelligence\\documentation\\metrics_reporter.py",
          "scripts\\branch_coverage_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "visit_For(self, node)",
        "files": [
          "analysis\\comprehensive_analysis\\cognitive_load\\cognitive_load_analyzer.py",
          "analysis\\comprehensive_analysis\\cognitive_load\\cognitive_load_analyzer.py",
          "archive\\legacy_scripts\\branch_coverage_analyzer.py",
          "archive\\original_backup\\scripts\\branch_coverage_analyzer.py",
          "core\\intelligence\\documentation\\metrics_reporter.py",
          "scripts\\branch_coverage_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "visit_Try(self, node)",
        "files": [
          "analysis\\comprehensive_analysis\\cognitive_load\\cognitive_load_analyzer.py",
          "archive\\legacy_scripts\\branch_coverage_analyzer.py",
          "archive\\original_backup\\scripts\\branch_coverage_analyzer.py",
          "scripts\\branch_coverage_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, db_path)",
        "files": [
          "analysis\\comprehensive_analysis\\pattern_mining\\cross_repo_pattern_miner.py",
          "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py",
          "core\\security\\compliance_framework.py",
          "core\\security\\compliance_framework.py",
          "core\\security\\data_integrity_guardian.py",
          "core\\security\\enterprise_auth_gateway.py",
          "core\\security\\error_isolation_system.py",
          "core\\security\\fault_tolerance_engine.py",
          "core\\security\\graceful_degradation_manager.py",
          "core\\security\\health_monitoring_nexus.py",
          "core\\security\\resilience_orchestrator.py",
          "core\\security\\secure_message_delivery.py",
          "core\\security\\self_healing_coordinator.py",
          "core\\security\\threat_intelligence_system.py",
          "core\\security\\threat_intelligence_system.py",
          "core\\security\\threat_intelligence_system.py",
          "core\\security\\vulnerability_detection_framework.py",
          "testmaster\\core\\tracking_manager.py",
          "testmaster\\intelligence\\bridges\\event_monitoring_bridge.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_init_database(self)",
        "files": [
          "analysis\\comprehensive_analysis\\pattern_mining\\cross_repo_pattern_miner.py",
          "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "cache\\intelligent_cache.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "core\\reliability\\emergency_backup_recovery.py",
          "core\\security\\circuit_breaker_matrix.py",
          "core\\security\\data_integrity_guardian.py",
          "core\\security\\error_isolation_system.py",
          "core\\security\\fault_tolerance_engine.py",
          "core\\security\\graceful_degradation_manager.py",
          "core\\security\\health_monitoring_nexus.py",
          "core\\security\\resilience_orchestrator.py",
          "core\\security\\secure_message_delivery.py",
          "core\\security\\self_healing_coordinator.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_delivery_guarantee.py",
          "dashboard\\dashboard_core\\analytics_event_queue.py",
          "dashboard\\dashboard_core\\analytics_integrity_guardian.py",
          "dashboard\\dashboard_core\\analytics_persistence.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\data_store.py",
          "dashboard\\dashboard_core\\emergency_backup_recovery.py",
          "dashboard\\dashboard_core\\predictive_flow_optimizer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_active_alerts(self)",
        "files": [
          "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py",
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "core\\intelligence\\monitoring\\qa_monitor.py",
          "core\\intelligence\\security\\security_dashboard.py",
          "testmaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
          "testmaster\\telemetry\\system_profiler.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_monitor_loop(self)",
        "files": [
          "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py",
          "archive\\original_backup\\optimization\\execution_optimizer.py",
          "core\\intelligence\\analytics\\advanced_anomaly_detector.py",
          "core\\intelligence\\monitoring\\qa_monitor.py",
          "core\\intelligence\\testing\\automation_engine.py",
          "core\\observability\\unified_monitor_enhanced.py",
          "dashboard\\dashboard_core\\system_monitor.py",
          "integration\\resource_optimization_engine.py",
          "optimization\\execution_optimizer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "generate_insights(self)",
        "files": [
          "analytics\\failure_analyzer.py",
          "archive\\original_backup\\analytics\\failure_analyzer.py",
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\core\\event_monitoring.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "async_route(f)",
        "files": [
          "api\\orchestration_flask.py",
          "api\\phase2_api.py",
          "dashboard\\api\\orchestration_flask.py",
          "dashboard\\api\\phase2_api.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "not_found(error)",
        "files": [
          "api\\phase3_api.py",
          "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "core\\intelligence\\api\\intelligence_endpoints.py",
          "core\\intelligence\\testing\\testing_api.py",
          "dashboard\\server.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "internal_error(error)",
        "files": [
          "api\\phase3_api.py",
          "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "core\\intelligence\\api\\intelligence_endpoints.py",
          "dashboard\\server.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_coverage_data(self, cov)",
        "files": [
          "archive\\advanced_testing_intelligence.py",
          "archive\\legacy_scripts\\coverage_analysis.py",
          "archive\\original_backup\\src\\coverage_analysis.py",
          "src\\coverage_analysis.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_module_coverage(self, cov, file_path)",
        "files": [
          "archive\\advanced_testing_intelligence.py",
          "archive\\legacy_scripts\\coverage_analysis.py",
          "archive\\original_backup\\src\\coverage_analysis.py",
          "src\\coverage_analysis.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_function_coverage(self, file_path, executed, missing)",
        "files": [
          "archive\\advanced_testing_intelligence.py",
          "archive\\legacy_scripts\\coverage_analysis.py",
          "archive\\original_backup\\src\\coverage_analysis.py",
          "src\\coverage_analysis.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_function_complexity(self, node)",
        "files": [
          "archive\\advanced_testing_intelligence.py",
          "archive\\legacy_scripts\\coverage_analysis.py",
          "archive\\original_backup\\src\\coverage_analysis.py",
          "src\\coverage_analysis.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "shutdown(self)",
        "files": [
          "archive\\advanced_testing_intelligence.py",
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_enhancer.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_flow_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "archive\\oversized_modules_20250821_042018\\coordination\\resource_coordination_system.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\delivery_optimizer.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\integrity_ml_guardian.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\performance_optimizer.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\sla_ml_optimizer.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "core\\intelligence\\__init__.py",
          "core\\intelligence\\analytics\\analytics_anomaly_detector.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\__init__.py",
          "core\\intelligence\\base\\__init__.py",
          "core\\intelligence\\caching\\distributed_smart_cache.py",
          "core\\intelligence\\compatibility\\__init__.py",
          "core\\intelligence\\config\\enterprise_config_manager.py",
          "core\\intelligence\\coordination\\distributed_lock_manager.py",
          "core\\intelligence\\coordination\\service_discovery_registry.py",
          "core\\intelligence\\correlation\\cross_system_analytics.py",
          "core\\intelligence\\data_pipeline\\advanced_data_pipeline.py",
          "core\\intelligence\\documentation\\revolutionary\\living_documentation_engine.py",
          "core\\intelligence\\integration\\__init__.py",
          "core\\intelligence\\integration\\__init__.py",
          "core\\intelligence\\integration\\components\\endpoint_manager.py",
          "core\\intelligence\\integration\\components\\event_processor.py",
          "core\\intelligence\\ml\\advanced\\performance_ml_engine.py",
          "core\\intelligence\\monitoring\\enterprise_performance_monitor.py",
          "core\\intelligence\\orchestration\\integration_hub.py",
          "core\\intelligence\\orchestration\\workflow_orchestration_engine.py",
          "core\\intelligence\\queuing\\express_priority_queue.py",
          "core\\intelligence\\reliability\\enterprise_error_recovery.py",
          "core\\intelligence\\reliability\\quantum_retry_orchestrator.py",
          "core\\intelligence\\security\\advanced_security_intelligence.py",
          "core\\intelligence\\security\\unified_security_service.py",
          "core\\intelligence\\streaming\\event_streaming_engine.py",
          "core\\intelligence\\testing\\__init__.py",
          "core\\intelligence\\testing\\__init__.py",
          "core\\intelligence\\testing\\components\\execution_engine.py",
          "core\\observability\\unified_monitor_enhanced.py",
          "core\\orchestration\\enhanced_agent_orchestrator.py",
          "core\\reliability\\emergency_backup_recovery.py",
          "core\\security\\adaptive_fallback_orchestrator.py",
          "core\\security\\adaptive_security_resilience.py",
          "core\\security\\circuit_breaker_matrix.py",
          "core\\security\\data_integrity_guardian.py",
          "core\\security\\error_isolation_system.py",
          "core\\security\\fault_tolerance_engine.py",
          "core\\security\\graceful_degradation_manager.py",
          "core\\security\\health_monitoring_nexus.py",
          "core\\security\\quantum_retry_engine.py",
          "core\\security\\resilience_orchestrator.py",
          "core\\security\\secure_message_delivery.py",
          "core\\security\\security_monitoring_system.py",
          "core\\security\\self_healing_coordinator.py",
          "core\\security\\thread_safety_manager.py",
          "core\\state\\enhanced_state_manager.py",
          "dashboard\\server.py",
          "dashboard\\api\\production_deployment.py",
          "dashboard\\api\\websocket_dashboard.py",
          "dashboard\\dashboard_core\\analytics_anomaly_detector.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_dead_letter_queue.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_delivery_enhancer.py",
          "dashboard\\dashboard_core\\analytics_delivery_guarantee.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_event_queue.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_flow_monitor.py",
          "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py",
          "dashboard\\dashboard_core\\analytics_integrity_guardian.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_persistence.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\analytics_retry_manager.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\emergency_backup_recovery.py",
          "dashboard\\dashboard_core\\predictive_flow_optimizer.py",
          "dashboard\\dashboard_core\\realtime_analytics_tracker.py",
          "dashboard\\dashboard_core\\system_observability_metrics.py",
          "integration\\distributed_task_queue.py",
          "integration\\load_balancing_system.py",
          "integration\\resource_optimization_engine.py",
          "integration\\service_mesh_integration.py",
          "testmaster\\async_processing\\async_executor.py",
          "testmaster\\async_processing\\async_monitor.py",
          "testmaster\\async_processing\\concurrent_scheduler.py",
          "testmaster\\flow_optimizer\\execution_router.py",
          "testmaster\\flow_optimizer\\parallel_executor.py",
          "testmaster\\intelligence\\bridges\\context_variables_bridge.py",
          "testmaster\\intelligence\\bridges\\event_monitoring_bridge.py",
          "testmaster\\intelligence\\bridges\\protocol_communication_bridge.py",
          "testmaster\\intelligence\\bridges\\session_tracking_bridge.py",
          "testmaster\\intelligence\\bridges\\sop_workflow_bridge.py",
          "testmaster\\intelligence\\monitoring\\adaptive_resource_bridge.py",
          "testmaster\\reporting\\metrics_analyzer.py",
          "testmaster\\reporting\\report_generator.py",
          "testmaster\\reporting\\report_scheduler.py",
          "testmaster\\streaming\\collaborative_generator.py",
          "testmaster\\streaming\\incremental_enhancer.py",
          "testmaster\\streaming\\stream_generator.py",
          "testmaster\\streaming\\stream_monitor.py",
          "testmaster\\telemetry\\flow_analyzer.py",
          "testmaster\\telemetry\\performance_monitor.py",
          "testmaster\\telemetry\\system_profiler.py",
          "testmaster\\telemetry\\telemetry_collector.py",
          "testmaster\\telemetry\\telemetry_dashboard.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, source_dir, test_dir)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "archive\\legacy_scripts\\coverage_improver.py",
          "archive\\original_backup\\scripts\\coverage_improver.py",
          "scripts\\coverage_improver.py",
          "testmaster\\mapping\\test_mapper.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_assess_documentation_quality(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\quality_analysis.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_quality_metrics(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "core\\intelligence\\analysis\\semantic_analyzer_modular.py",
          "core\\intelligence\\documentation\\revolutionary\\ai_documentation_synthesizer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_detect_circular_dependencies(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "archive\\original_backup\\integration\\cross_module_tester.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "core\\intelligence\\testing\\components\\coverage_analyzer.py",
          "core\\intelligence\\testing\\components\\coverage_analyzer.py",
          "integration\\cross_module_tester.py",
          "scripts\\dependency_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_rule_dependencies(self)",
        "files": [
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modular.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_generate_business_summary(self)",
        "files": [
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_function_for_rules(self, node, file_path)",
        "files": [
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_rule_extractor.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_extract_conditions(self, node)",
        "files": [
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_rule_extractor.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_extract_actions(self, node)",
        "files": [
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_rule_extractor.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_extract_constraints(self, node)",
        "files": [
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_rule_extractor.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_extract_domain_entities(self, node)",
        "files": [
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_rule_extractor.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_rule_confidence(self, node)",
        "files": [
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_rule_extractor.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_ast_to_string(self, node)",
        "files": [
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_rule_extractor.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_generate_rule_description(self, node)",
        "files": [
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_rule_extractor.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_is_domain_entity(self, node)",
        "files": [
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_workflow_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_documentation_quality_score(self, documented_rules)",
        "files": [
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modular.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_get_function_name(self, node)",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\from_subarchive_semantic_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_generate_semantic_recommendations(self)",
        "files": [
          "archive\\from_subarchive_semantic_analysis_original.py",
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_analyzer_modular.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_generate_semantic_summary(self)",
        "files": [
          "archive\\from_subarchive_semantic_analysis_original.py",
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_analyzer_modular.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_function_intent(self, node, file_path)",
        "files": [
          "archive\\from_subarchive_semantic_analysis_original.py",
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_intent_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_inventory_technical_debt(self)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_code_debt(self)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_design_debt(self)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_test_debt(self)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_documentation_debt(self)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_dependency_debt(self)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_security_debt(self)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_performance_debt(self)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_quantify_debt_in_hours(self)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_debt_interest(self)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_debt_impact(self)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_velocity_impact(self)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_quality_impact(self)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_create_remediation_plan(self)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_remediation_roi(self)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_identify_quick_wins(self)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_suggest_debt_prevention_measures(self)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_define_monitoring_metrics(self)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_generate_debt_summary(self)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_detect_code_duplication(self, tree, file_path)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_is_poor_naming(self, name)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_lacks_error_handling(self, node)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_priority_score(self, item)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
          "core\\intelligence\\analysis\\debt_quantifier.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_monthly_interest(self)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_get_debt_category(self, debt_type)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_estimate_duration(self, items)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_summarize_item(self, item)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_recommend_team_size(self, total_hours)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_estimate_timeline(self, total_hours, team_size)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_generate_milestones(self, months)",
        "files": [
          "archive\\from_subarchive_technical_debt_analysis_original.py",
          "archive\\superseded_toplevel_technical_debt_analysis.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_setup_logging(self)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
          "core\\intelligence\\__init__.py",
          "core\\intelligence\\analysis\\business_analyzer_modular.py",
          "core\\intelligence\\analysis\\debt_analyzer_modular.py",
          "core\\intelligence\\analysis\\semantic_analyzer_modular.py",
          "core\\intelligence\\analysis\\__init__.py",
          "core\\intelligence\\integration\\__init__.py",
          "core\\intelligence\\testing\\__init__.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_initialize_components(self)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\documentation\\comprehensive_visualization_engine.py",
          "testmaster\\orchestration\\universal_orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "connect_to_system(self, endpoint_id, retry_attempts)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\__init__.py",
          "core\\intelligence\\integration\\components\\endpoint_manager.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "subscribe_to_events(self, event_types, callback, filter_rules)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\__init__.py",
          "core\\intelligence\\integration\\components\\event_processor.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_validate_endpoint_config(self, endpoint)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\components\\endpoint_manager.py",
          "core\\security\\network_security_controls.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "process(self, data)",
        "files": [
          "archive\\placeholder_replacement_20250820_011555_cross_system_communication.py",
          "archive\\real_impl_backup_1755670819_distributed_task_queue.py",
          "integration\\cross_system_communication.py",
          "integration\\distributed_task_queue.py",
          "integration\\multi_environment_support.py",
          "integration\\resource_optimization_engine.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "health_check(self)",
        "files": [
          "archive\\placeholder_replacement_20250820_011555_cross_system_communication.py",
          "archive\\real_impl_backup_1755670819_distributed_task_queue.py",
          "integration\\cross_system_communication.py",
          "integration\\distributed_task_queue.py",
          "integration\\multi_environment_support.py",
          "integration\\resource_optimization_engine.py",
          "testmaster\\intelligence\\llm_providers\\universal_llm_provider.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_accuracy_level(self)",
        "files": [
          "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "core\\intelligence\\analytics\\predictive_analytics_engine.py",
          "core\\intelligence\\ml\\advanced\\predictive_engine.py",
          "integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "serialize(self)",
        "files": [
          "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_next_value(self)",
        "files": [
          "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "core\\intelligence\\analytics\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_trend_direction(self)",
        "files": [
          "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "core\\intelligence\\analytics\\predictive_analytics_engine.py",
          "core\\intelligence\\ml\\advanced\\predictive_engine.py",
          "integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, model_storage_path)",
        "files": [
          "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "core\\intelligence\\analytics\\predictive_analytics_engine.py",
          "core\\intelligence\\ml\\advanced\\predictive_engine.py",
          "integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_initialize_decision_rules(self)",
        "files": [
          "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_prepare_training_data(self, series)",
        "files": [
          "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_prepare_prediction_data(self, series)",
        "files": [
          "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_choose_model_type(self, series, X, y)",
        "files": [
          "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_rule_high_cpu_predicted(self, prediction)",
        "files": [
          "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_rule_memory_pressure_forecast(self, prediction)",
        "files": [
          "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_rule_error_rate_increasing(self, prediction)",
        "files": [
          "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_rule_latency_degradation(self, prediction)",
        "files": [
          "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_rule_capacity_shortage(self, prediction)",
        "files": [
          "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_rule_cost_optimization(self, prediction)",
        "files": [
          "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_cleanup_old_predictions(self)",
        "files": [
          "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "core\\intelligence\\analytics\\predictive_analytics_engine.py",
          "core\\intelligence\\ml\\advanced\\predictive_engine.py",
          "integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_cleanup_old_decisions(self)",
        "files": [
          "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "core\\intelligence\\ml\\advanced\\predictive_engine.py",
          "integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_active_predictions(self, metric_id)",
        "files": [
          "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "core\\intelligence\\analytics\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_intelligent_decisions(self, urgency_threshold)",
        "files": [
          "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "core\\intelligence\\analytics\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_capacity_forecasts(self)",
        "files": [
          "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_model_performance_summary(self)",
        "files": [
          "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "core\\intelligence\\analytics\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_engine_analytics(self)",
        "files": [
          "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "core\\intelligence\\analytics\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_detect_anomalies(self, metric_name, value, timestamp)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "core\\intelligence\\analytics\\advanced_anomaly_detector.py",
          "core\\intelligence\\analytics\\analytics_anomaly_detector.py",
          "dashboard\\dashboard_core\\analytics_anomaly_detector.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_detect_iqr_anomaly(self, metric_name, value, timestamp)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "core\\intelligence\\analytics\\analytics_anomaly_detector.py",
          "core\\intelligence\\ml\\advanced\\anomaly_detection.py",
          "dashboard\\dashboard_core\\analytics_anomaly_detector.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_detect_trend_anomaly(self, metric_name, value, timestamp)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "core\\intelligence\\analytics\\analytics_anomaly_detector.py",
          "core\\intelligence\\ml\\advanced\\anomaly_detection.py",
          "dashboard\\dashboard_core\\analytics_anomaly_detector.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_detect_correlation_anomaly(self, metric_name, value, timestamp)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "core\\intelligence\\analytics\\analytics_anomaly_detector.py",
          "core\\intelligence\\ml\\advanced\\anomaly_detection.py",
          "dashboard\\dashboard_core\\analytics_anomaly_detector.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "add_correlation_pair(self, metric1, metric2)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "core\\intelligence\\analytics\\analytics_anomaly_detector.py",
          "core\\intelligence\\ml\\advanced\\anomaly_detection.py",
          "dashboard\\dashboard_core\\analytics_anomaly_detector.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__call__(self, func)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "cache\\intelligent_cache.py",
          "core\\security\\circuit_breaker_matrix.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "execute(self, func)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "core\\security\\circuit_breaker_matrix.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "add_failure_callback(self, callback)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "reset(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "core\\testing\\graph_operations_testing.py",
          "core\\testing\\langgraph_supervisor_testing.py",
          "core\\testing\\langgraph_supervisor_testing.py",
          "core\\testing\\react_agent_testing.py",
          "core\\testing\\user_input_testing.py",
          "dashboard\\api\\enhanced_telemetry.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py",
          "dashboard\\dashboard_core\\analytics_retry_manager.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_check_system_health(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_system_status(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "core\\intelligence\\orchestration\\agent_coordinator.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis_robust.py",
          "integration\\cross_system_apis_robust.py",
          "testmaster\\layer2_integration.py",
          "testmaster\\intelligence\\integration\\coordination\\analysis_coordinator.py",
          "testmaster\\intelligence\\integration\\layers\\layer_manager.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "target()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "core\\security\\circuit_breaker_matrix.py",
          "core\\security\\circuit_breaker_matrix.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "add_alert_handler(self, handler)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "core\\security\\operational_security.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\system_observability_metrics.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_setup_default_validation_rules(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_checksum(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "core\\security\\flow_persistence_security.py",
          "dashboard\\dashboard_core\\analytics_dead_letter_queue.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_failure_patterns(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_dead_letter_queue.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_normalize_data(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_integrity_guardian.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_extract_structure(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_cleanup_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "core\\intelligence\\caching\\distributed_smart_cache.py",
          "core\\intelligence\\correlation\\cross_system_analytics.py",
          "core\\security\\data_integrity_guardian.py",
          "core\\security\\secure_message_delivery.py",
          "core\\security\\security_monitoring_system.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_delivery_guarantee.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_guardian.py",
          "dashboard\\dashboard_core\\system_observability_metrics.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_setup_default_rules(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "core\\security\\security_monitoring_system.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py",
          "integration\\resource_optimization_engine.py",
          "testmaster\\agent_qa\\validation_engine.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_retry_worker(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_enhancer.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "dashboard\\dashboard_core\\analytics_delivery_enhancer.py",
          "dashboard\\dashboard_core\\analytics_event_queue.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_attempt_delivery(self, record)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_enhancer.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "core\\security\\secure_message_delivery.py",
          "dashboard\\dashboard_core\\analytics_delivery_enhancer.py",
          "dashboard\\dashboard_core\\analytics_delivery_guarantee.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_delivery_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "core\\security\\secure_message_delivery.py",
          "dashboard\\dashboard_core\\analytics_delivery_guarantee.py",
          "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_verification_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_guarantee.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_guardian.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_update_delivery_stats(self, delivery_time, success)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_guarantee.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_delivery_status(self, delivery_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_delivery_guarantee.py",
          "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_health_monitoring_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "archive\\oversized_modules_20250821_042018\\ml\\enterprise\\ml_infrastructure_orchestrator.py",
          "core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
          "core\\intelligence\\orchestration\\integration_hub.py",
          "core\\security\\adaptive_security_resilience.py",
          "core\\security\\self_healing_coordinator.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "register_handler(self, event_type, handler)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "dashboard\\dashboard_core\\analytics_event_queue.py",
          "observability\\core\\event_monitoring.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "stop_processing(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "core\\intelligence\\ml\\advanced\\batch_processor.py",
          "core\\security\\distributed_communication_security.py",
          "dashboard\\dashboard_core\\analytics_event_queue.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py",
          "testmaster\\intelligence\\bridges\\event_monitoring_bridge.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "start_scheduler(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py",
          "testmaster\\async_processing\\concurrent_scheduler.py",
          "testmaster\\reporting\\report_scheduler.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "execute(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "core\\testing\\crew_thread_safety_testing.py",
          "core\\testing\\multimodal_validation_testing.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_stats(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "cache\\intelligent_cache.py",
          "core\\shared_state.py",
          "core\\observability\\unified_monitor_enhanced.py",
          "core\\security\\rate_limiter.py",
          "core\\security\\secure_performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\cache.py",
          "testmaster\\converters\\base.py",
          "testmaster\\generators\\base.py",
          "testmaster\\verification\\base.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, check_interval)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "core\\security\\distributed_key_management_security.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_heartbeat_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "archive\\oversized_modules_20250821_042018\\coordination\\agent_coordination_protocols.py",
          "core\\orchestration\\enhanced_agent_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_integrity_summary(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_guardian.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_summary(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "core\\framework_abstraction.py",
          "core\\tracking_manager.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py",
          "testmaster\\core\\monitoring_decorators.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_normalize_timestamps(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_normalizer.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_normalize_units(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_normalizer.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "normalize_recursive(obj)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_normalizer.py",
          "dashboard\\dashboard_core\\analytics_normalizer.py",
          "dashboard\\dashboard_core\\analytics_normalizer.py",
          "dashboard\\dashboard_core\\analytics_normalizer.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "clear_cache(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_optimizer.py",
          "core\\intelligence\\integration\\components\\cross_system_analyzer.py",
          "core\\intelligence\\testing\\components\\coverage_analyzer.py",
          "core\\intelligence\\testing\\components\\ml_optimizer.py",
          "dashboard\\dashboard_core\\analytics_optimizer.py",
          "testmaster\\intelligence\\documentation\\core\\doc_generator.py",
          "testmaster\\intelligence\\documentation\\core\\llm_integration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "set(self, key, value)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py",
          "testmaster\\core\\shared_state.py",
          "testmaster\\mapping\\mapping_cache.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, max_workers)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "archive\\oversized_modules_20250821_042018\\validation\\integration_test_suite.py",
          "core\\intelligence\\orchestration\\cross_system_orchestrator.py",
          "core\\security\\byzantine_consensus_security.py",
          "core\\security\\multi_agent_evaluation_security.py",
          "core\\testing\\parallel_test_executor.py",
          "core\\testing\\performance_test_suite.py",
          "dashboard\\api\\production_deployment.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py",
          "testmaster\\refactoring\\hierarchical_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "start_optimization(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "core\\intelligence\\ml\\advanced\\smart_cache.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "stop_optimization(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "core\\intelligence\\ml\\advanced\\smart_cache.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_performance_summary(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_monitor.py",
          "core\\security\\secure_performance_optimizer.py",
          "core\\testing\\graph_performance_testing.py",
          "core\\tools\\type_safe_tools.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_monitor.py",
          "testmaster\\async_processing\\async_monitor.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_cleanup_old_metrics(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_monitor.py",
          "core\\intelligence\\dashboard\\intelligence_backend.py",
          "core\\intelligence\\documentation\\live_architecture.py",
          "core\\intelligence\\monitoring\\enterprise_performance_monitor.py",
          "dashboard\\dashboard_core\\analytics_performance_monitor.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_optimization_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "core\\intelligence\\caching\\distributed_smart_cache.py",
          "core\\intelligence\\ml\\advanced\\smart_cache.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py",
          "dashboard\\dashboard_core\\predictive_flow_optimizer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_metrics_collection_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "core\\intelligence\\ml\\enterprise\\ml_auto_scaling.py",
          "core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
          "core\\security\\security_monitoring_system.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_cleanup_old_data(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "core\\observability\\unified_monitor_enhanced.py",
          "dashboard\\dashboard_core\\analytics_persistence.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "core\\testing\\graph_index_testing.py",
          "core\\testing\\graph_operations_testing.py",
          "core\\testing\\hook_testing.py",
          "core\\testing\\react_agent_testing.py",
          "core\\testing\\tool_factory_testing.py",
          "core\\testing\\tracing_testing.py",
          "core\\testing\\user_input_testing.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_transform_impl(self, data, context)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "reset_stats(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "core\\testing\\pipeline_testing.py",
          "core\\testing\\react_agent_testing.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_initialize_database(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "archive\\oversized_modules_20250821_042018\\coordination\\unified_workflow_orchestrator.py",
          "core\\security\\flow_persistence_security.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py",
          "testmaster\\core\\tracking_manager.py",
          "testmaster\\intelligence\\bridges\\event_monitoring_bridge.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_save_metric_to_db(self, metric)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_check_database_health(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "core\\security\\flow_persistence_security.py",
          "dashboard\\api\\health.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_health_summary(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "core\\intelligence\\visualization\\observability_systems.py",
          "dashboard\\api\\backend_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "start_processing(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "core\\intelligence\\ml\\advanced\\batch_processor.py",
          "core\\security\\distributed_communication_security.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py",
          "testmaster\\intelligence\\bridges\\event_monitoring_bridge.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_queue_status(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "core\\intelligence\\queuing\\express_priority_queue.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py",
          "testmaster\\monitoring\\test_scheduler.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_identify_bottlenecks(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "core\\intelligence\\integration\\components\\performance_monitor.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py",
          "monitoring\\monitoring_agents.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_determine_quality_level(self, score)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "core\\intelligence\\documentation\\quality_assessment_engine.py",
          "core\\intelligence\\documentation\\quality_assessment_engine.py",
          "core\\intelligence\\monitoring\\qa_scorer.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "collect_timestamps(obj)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_pattern_analysis_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "core\\security\\fault_tolerance_engine.py",
          "core\\security\\quantum_retry_engine.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_prediction_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py",
          "dashboard\\dashboard_core\\predictive_flow_optimizer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_update_predictions(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
          "core\\intelligence\\prediction\\forecaster.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_processing_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "core\\intelligence\\queuing\\express_priority_queue.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\realtime_analytics_tracker.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_compress_data(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "core\\intelligence\\caching\\distributed_smart_cache.py",
          "core\\intelligence\\ml\\advanced\\smart_cache.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_update_statistics(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
          "core\\intelligence\\analytics\\advanced\\correlation_engine.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\emergency_backup_recovery.py",
          "integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics_robust.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py",
          "integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "add_recovery_callback(self, callback)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get(self, key, default)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "cache\\intelligent_cache.py",
          "core\\shared_state.py",
          "core\\intelligence\\caching\\distributed_smart_cache.py",
          "core\\intelligence\\ml\\advanced\\smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py",
          "dashboard\\dashboard_core\\cache.py",
          "testmaster\\core\\config.py",
          "testmaster\\core\\shared_state.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "invalidate(self, key)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "core\\intelligence\\ml\\advanced\\smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py",
          "integration\\intelligent_caching_layer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_cache_stats(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "core\\intelligence\\ml\\advanced\\smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py",
          "dashboard\\dashboard_core\\data_store.py",
          "testmaster\\intelligence\\documentation\\core\\llm_integration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "streaming_wrapper()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "dashboard\\dashboard_core\\analytics_streaming.py",
          "dashboard\\dashboard_core\\analytics_streaming.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "add_data_point(self, point)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_trend(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system_robust.py",
          "integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics_robust.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_recent_values(self, count)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics_robust.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_values_in_timeframe(self, start_time, end_time)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "is_significant(self, threshold)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "is_strong(self, threshold)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, max_metrics)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_classify_metric_type(self, metric_name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_align_time_series(self, series1, series2)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
          "core\\intelligence\\analytics\\advanced\\correlation_engine.py",
          "integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_metric_series(self, metric_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_system_metrics(self, system)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_correlations(self, metric_id, min_strength)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_recent_anomalies(self, hours, metric_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_predictions(self, metric_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_analytics_summary(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_metric_insights(self, metric_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics.py",
          "integration\\cross_system_analytics_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "measure_coverage(self)",
        "files": [
          "archive\\legacy_scripts\\achieve_100_percent.py",
          "archive\\legacy_scripts\\gemini_test_generator.py",
          "archive\\legacy_scripts\\generate_coverage_sequential.py",
          "archive\\legacy_scripts\\intelligent_converter.py",
          "archive\\original_backup\\scripts\\achieve_100_percent.py",
          "archive\\original_backup\\scripts\\gemini_test_generator.py",
          "archive\\original_backup\\scripts\\generate_coverage_sequential.py",
          "archive\\original_backup\\scripts\\intelligent_converter.py",
          "scripts\\achieve_100_percent.py",
          "scripts\\gemini_test_generator.py",
          "scripts\\generate_coverage_sequential.py",
          "scripts\\intelligent_converter.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "load_env()",
        "files": [
          "archive\\legacy_scripts\\achieve_100_percent_coverage.py",
          "archive\\legacy_scripts\\generate_coverage_sequential.py",
          "archive\\legacy_scripts\\test_gemini_config.py",
          "archive\\legacy_scripts\\test_single_generation.py",
          "archive\\original_backup\\scripts\\achieve_100_percent_coverage.py",
          "archive\\original_backup\\scripts\\generate_coverage_sequential.py",
          "archive\\original_backup\\scripts\\test_gemini_config.py",
          "archive\\original_backup\\scripts\\test_single_generation.py",
          "scripts\\achieve_100_percent_coverage.py",
          "scripts\\generate_coverage_sequential.py",
          "scripts\\test_gemini_config.py",
          "scripts\\test_single_generation.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, api_key)",
        "files": [
          "archive\\legacy_scripts\\achieve_100_percent_coverage.py",
          "archive\\legacy_scripts\\ai_test_generator.py",
          "archive\\legacy_scripts\\gemini_powered_test_generator.py",
          "archive\\legacy_scripts\\gemini_test_generator.py",
          "archive\\original_backup\\scripts\\achieve_100_percent_coverage.py",
          "archive\\original_backup\\scripts\\ai_test_generator.py",
          "archive\\original_backup\\scripts\\gemini_powered_test_generator.py",
          "archive\\original_backup\\scripts\\gemini_test_generator.py",
          "scripts\\achieve_100_percent_coverage.py",
          "scripts\\ai_test_generator.py",
          "scripts\\gemini_powered_test_generator.py",
          "scripts\\gemini_test_generator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_current_coverage(self)",
        "files": [
          "archive\\legacy_scripts\\achieve_100_percent_coverage.py",
          "archive\\legacy_scripts\\systematic_coverage.py",
          "archive\\original_backup\\scripts\\achieve_100_percent_coverage.py",
          "archive\\original_backup\\scripts\\systematic_coverage.py",
          "scripts\\achieve_100_percent_coverage.py",
          "scripts\\systematic_coverage.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "generate_comprehensive_test(self, module_path, analysis)",
        "files": [
          "archive\\legacy_scripts\\ai_test_generator.py",
          "archive\\legacy_scripts\\gemini_test_generator.py",
          "archive\\legacy_scripts\\intelligent_converter.py",
          "archive\\legacy_scripts\\smart_test_generator.py",
          "archive\\original_backup\\scripts\\ai_test_generator.py",
          "archive\\original_backup\\scripts\\gemini_test_generator.py",
          "archive\\original_backup\\scripts\\intelligent_converter.py",
          "archive\\original_backup\\scripts\\smart_test_generator.py",
          "scripts\\ai_test_generator.py",
          "scripts\\gemini_test_generator.py",
          "scripts\\intelligent_converter.py",
          "scripts\\smart_test_generator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "write_tests(self, tests)",
        "files": [
          "archive\\legacy_scripts\\ai_test_generator.py",
          "archive\\legacy_scripts\\gemini_test_generator.py",
          "archive\\original_backup\\scripts\\ai_test_generator.py",
          "archive\\original_backup\\scripts\\gemini_test_generator.py",
          "scripts\\ai_test_generator.py",
          "scripts\\gemini_test_generator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_load_test_templates(self)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py",
          "testmaster\\intelligence\\security\\security_intelligence_agent.py",
          "testmaster\\security\\security_test_generator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_generate_function_tests(self, func_info, module_name)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\automated_test_generation.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_generate_class_tests(self, class_info, module_name)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\automated_test_generation.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_generate_assertions(self, func_info)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "core\\testing\\intelligent_test_generator.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_path_to_module_name(self, file_path)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\legacy_scripts\\coverage_analysis.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\coverage_analysis.py",
          "src\\automated_test_generation.py",
          "src\\comprehensive_test_framework.py",
          "src\\coverage_analysis.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_class(self, node)",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "scripts\\analyze_components.py",
          "src\\comprehensive_test_framework.py",
          "tools\\migration\\analyze_legacy_code.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "identify_coverage_gaps(self)",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "core\\testing\\test_coverage_optimizer.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "export_coverage_report(self, output_path)",
        "files": [
          "archive\\legacy_scripts\\coverage_analysis.py",
          "archive\\original_backup\\src\\coverage_analysis.py",
          "core\\testing\\test_coverage_optimizer.py",
          "src\\coverage_analysis.py",
          "testmaster\\overview\\coverage_intelligence.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "register_implementation(self, interface, implementation)",
        "files": [
          "archive\\legacy_scripts\\data_flow_tests.py",
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\data_flow_tests.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\data_flow_tests.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "apply_all_fixes(self)",
        "files": [
          "archive\\legacy_scripts\\fix_remaining_issues.py",
          "archive\\legacy_scripts\\fix_test_infrastructure.py",
          "archive\\original_backup\\scripts\\fix_remaining_issues.py",
          "archive\\original_backup\\scripts\\fix_test_infrastructure.py",
          "scripts\\fix_remaining_issues.py",
          "scripts\\fix_test_infrastructure.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "validate_fixes(self)",
        "files": [
          "archive\\legacy_scripts\\fix_test_infrastructure.py",
          "archive\\original_backup\\scripts\\fix_test_infrastructure.py",
          "core\\intelligence\\testing\\automation\\test_maintenance_system.py",
          "scripts\\fix_test_infrastructure.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_uncovered_modules(self)",
        "files": [
          "archive\\legacy_scripts\\generate_coverage_sequential.py",
          "archive\\original_backup\\scripts\\generate_coverage_sequential.py",
          "scripts\\generate_coverage_sequential.py",
          "testmaster\\mapping\\test_mapper.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "generate_test_report(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "dashboard\\test_multi_agent_integration.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_coverage_data()",
        "files": [
          "archive\\legacy_scripts\\parallel_coverage_converter.py",
          "archive\\legacy_scripts\\parallel_coverage_converter_fixed.py",
          "archive\\original_backup\\scripts\\parallel_coverage_converter.py",
          "archive\\original_backup\\scripts\\parallel_coverage_converter_fixed.py",
          "scripts\\parallel_coverage_converter.py",
          "scripts\\parallel_coverage_converter_fixed.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_module_coverage(module_path, coverage_data)",
        "files": [
          "archive\\legacy_scripts\\parallel_coverage_converter.py",
          "archive\\legacy_scripts\\parallel_coverage_converter_fixed.py",
          "archive\\original_backup\\scripts\\parallel_coverage_converter.py",
          "archive\\original_backup\\scripts\\parallel_coverage_converter_fixed.py",
          "scripts\\parallel_coverage_converter.py",
          "scripts\\parallel_coverage_converter_fixed.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "measure_current_coverage()",
        "files": [
          "archive\\legacy_scripts\\parallel_coverage_converter.py",
          "archive\\legacy_scripts\\parallel_coverage_converter_fixed.py",
          "archive\\original_backup\\scripts\\parallel_coverage_converter.py",
          "archive\\original_backup\\scripts\\parallel_coverage_converter_fixed.py",
          "scripts\\parallel_coverage_converter.py",
          "scripts\\parallel_coverage_converter_fixed.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_setup_default_thresholds(self)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\benchmarking_suite.py",
          "testmaster\\agent_qa\\quality_monitor.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_generate_recommendations(self, metrics)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "core\\intelligence\\analysis\\debt_quantifier.py",
          "core\\testing\\enterprise_test_framework.py",
          "dashboard\\api\\quality_assurance.py",
          "testmaster\\agent_qa\\quality_inspector.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "add_threshold(self, threshold)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "core\\intelligence\\monitoring\\qa_monitor.py",
          "testmaster\\agent_qa\\quality_monitor.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_agent_status(self, agent_id)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "core\\intelligence\\orchestration\\agent_coordinator.py",
          "core\\orchestration\\enhanced_agent_orchestrator.py",
          "testmaster\\agent_qa\\quality_monitor.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "acknowledge_alert(self, alert_id)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "core\\intelligence\\security\\security_dashboard.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py",
          "testmaster\\agent_qa\\quality_monitor.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "analyze(self, root_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modular.py",
          "core\\intelligence\\analysis\\debt_analyzer_modular.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_get_python_files(self)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modular.py",
          "core\\intelligence\\analysis\\debt_analyzer_modular.py",
          "core\\intelligence\\analysis\\ml_analyzer.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_analyzer_modular.py",
          "testmaster\\analysis\\comprehensive_analysis\\base_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_parse_file(self, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
          "core\\intelligence\\analysis\\business_constraint_analyzer.py",
          "core\\intelligence\\analysis\\business_rule_extractor.py",
          "core\\intelligence\\analysis\\business_workflow_analyzer.py",
          "core\\intelligence\\analysis\\debt_code_analyzer.py",
          "core\\intelligence\\analysis\\debt_test_analyzer.py",
          "core\\intelligence\\analysis\\ml_analyzer.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_intent_analyzer.py",
          "core\\intelligence\\analysis\\semantic_pattern_detector.py",
          "core\\intelligence\\analysis\\semantic_relationship_analyzer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_class_for_rules(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_rule_extractor.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_extract_conditional_rule(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_rule_extractor.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_validation_function(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_rule_extractor.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_calculation_function(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_rule_extractor.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_extract_formula(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_rule_extractor.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_authorization_function(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_rule_extractor.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_workflow_class(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_workflow_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_workflow_step(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_workflow_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_detect_state_transition(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_workflow_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_state_machine(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_workflow_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_extract_states(self, node)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_workflow_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_transition(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_workflow_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_guard(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_workflow_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_state_action(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_workflow_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_domain_entity(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_workflow_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_extract_entity_relationships(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_workflow_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_extract_invariants(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_workflow_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_extract_domain_event(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_workflow_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_extract_constraint_logic(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_constraint_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_decision_function(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_constraint_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_is_complex_decision(self, node)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_constraint_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_extract_decision_tree(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_constraint_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_is_decision_table(self, node)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_constraint_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_extract_decision_table(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_constraint_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_extract_match_statement(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_constraint_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_event_class(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_workflow_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_event_handler(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_workflow_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_event_publisher(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_workflow_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_event_subscriber(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_workflow_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_event_flows(self, events)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_workflow_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_compliance_function(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_constraint_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_sla_function(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_constraint_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_pricing_function(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_constraint_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_analyze_pricing_model(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_constraint_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_is_promotion_rule(self, node)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_constraint_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_extract_promotion_rule(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "core\\intelligence\\analysis\\business_constraint_analyzer.py",
          "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "analyze(self, path)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\ml_analyzer.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_analyzer_modular.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "is_expired(self)",
        "files": [
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "archive\\oversized_modules_20250821_042018\\coordination\\resource_coordination_system.py",
          "archive\\oversized_modules_20250821_042018\\coordination\\resource_coordination_system.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "cache\\intelligent_cache.py",
          "core\\intelligence\\caching\\distributed_smart_cache.py",
          "core\\intelligence\\coordination\\distributed_lock_manager.py",
          "core\\intelligence\\coordination\\distributed_lock_manager.py",
          "core\\intelligence\\orchestration\\integration_hub.py",
          "core\\security\\agent_communication_security.py",
          "core\\security\\byzantine_consensus_security.py",
          "core\\security\\cloud_event_security.py",
          "core\\security\\distributed_communication_security.py",
          "core\\security\\distributed_coordination_security.py",
          "core\\security\\distributed_coordination_security.py",
          "core\\security\\distributed_key_management_security.py",
          "core\\security\\enterprise_authentication.py",
          "core\\security\\identity_validation_system.py",
          "core\\security\\message_context_security.py",
          "core\\security\\multi_agent_evaluation_security.py",
          "core\\security\\secure_message_delivery.py",
          "core\\security\\secure_performance_optimizer.py",
          "core\\state\\enhanced_state_manager.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "delete(self, key)",
        "files": [
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "cache\\intelligent_cache.py",
          "core\\shared_state.py",
          "core\\intelligence\\caching\\distributed_smart_cache.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__new__(cls)",
        "files": [
          "archive\\original_backup\\config\\testmaster_config.py",
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "config\\testmaster_config.py",
          "core\\feature_flags.py",
          "core\\shared_state.py",
          "core\\intelligence\\config\\enterprise_config_manager.py",
          "testmaster\\core\\feature_flags.py",
          "testmaster\\core\\monitoring_decorators.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, output_dir)",
        "files": [
          "archive\\original_backup\\dashboard\\quality_dashboard.py",
          "core\\intelligence\\documentation\\unified_doc_generator.py",
          "core\\intelligence\\visualization\\data_visualization_engines.py",
          "dashboard\\quality_dashboard.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "analyze_test_file(self, file_path)",
        "files": [
          "archive\\original_backup\\deduplication\\test_deduplicator.py",
          "core\\testing\\test_quality_analyzer.py",
          "deduplication\\test_deduplicator.py",
          "prioritization\\test_prioritizer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_calculate_complexity(self, tree)",
        "files": [
          "archive\\original_backup\\incremental\\dependency_tracker.py",
          "core\\intelligence\\documentation\\metrics_reporter.py",
          "core\\intelligence\\testing\\test_quality_scorer.py",
          "core\\intelligence\\testing\\ai_generation\\claude_test_generator.py",
          "incremental\\dependency_tracker.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_extract_function_signature(self, node)",
        "files": [
          "archive\\original_backup\\integration\\cross_module_tester.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "integration\\cross_module_tester.py",
          "tools\\migration\\analyze_legacy_code.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "dfs(node, path)",
        "files": [
          "archive\\original_backup\\integration\\cross_module_tester.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "core\\intelligence\\coordination\\distributed_lock_manager.py",
          "integration\\cross_module_tester.py",
          "testmaster\\analysis\\comprehensive_analysis\\graph_analysis.py",
          "testmaster\\core\\ast_abstraction\\universal_ast.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, update_interval)",
        "files": [
          "archive\\original_backup\\optimization\\execution_optimizer.py",
          "core\\intelligence\\documentation\\live_architecture.py",
          "core\\intelligence\\visualization\\dashboard_systems.py",
          "dashboard\\dashboard_core\\system_monitor.py",
          "integration\\resource_optimization_engine.py",
          "optimization\\execution_optimizer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, strategy)",
        "files": [
          "archive\\original_backup\\optimization\\execution_optimizer.py",
          "core\\intelligence\\testing\\advanced\\ml_test_optimizer.py",
          "integration\\resource_optimization_engine.py",
          "optimization\\execution_optimizer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "register_endpoint(self, endpoint)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\api\\enterprise_integration_layer.py",
          "core\\intelligence\\api\\unified_api_gateway.py",
          "core\\intelligence\\enterprise\\api\\endpoint_manager.py",
          "core\\testing\\testmaster_api_gateway.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_integration_status(self)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\api\\enterprise_integration_layer.py",
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "core\\intelligence\\documentation\\intelligence_integration.py",
          "core\\intelligence\\orchestration\\integration_hub.py",
          "core\\intelligence\\security\\unified_security_service.py",
          "core\\testing\\test_integration_hub.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get(self)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "testmaster\\ui\\dashboard.py",
          "testmaster\\ui\\dashboard.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get(self, module_name)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "archive\\oversized_modules_20250821_042018\\api\\ml_api.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_coordination_status(self)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\coordination\\agent_coordination_protocols.py",
          "archive\\oversized_modules_20250821_042018\\coordination\\resource_coordination_system.py",
          "core\\intelligence\\coordination\\cross_agent_bridge.py",
          "core\\security\\distributed_coordination_security.py",
          "core\\testing\\distributed_test_coordinator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "stop_coordination(self)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\coordination\\agent_coordination_protocols.py",
          "core\\intelligence\\coordination\\cross_agent_bridge.py",
          "core\\intelligence\\orchestration\\agent_coordinator.py",
          "core\\testing\\distributed_test_coordinator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_identify_optimization_opportunities(self)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\coordination\\resource_coordination_system.py",
          "core\\intelligence\\integration\\components\\performance_monitor.py",
          "core\\intelligence\\ml\\ml_orchestrator.py",
          "dashboard\\dashboard_core\\predictive_flow_optimizer.py",
          "testmaster\\analysis\\comprehensive_analysis\\database_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\performance_analysis.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_initialize_templates(self)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\coordination\\unified_workflow_orchestrator.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "config\\yaml_config_enhancer.py",
          "core\\testing\\intelligent_test_generator.py",
          "core\\testing\\multi_modal_test_engine.py",
          "integration\\workflow_framework.py",
          "testmaster\\reporting\\report_generator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_optimize_resource_allocation(self)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\coordination\\unified_workflow_orchestrator.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\delivery_optimizer.py",
          "archive\\oversized_modules_20250821_042018\\ml\\enterprise\\ml_infrastructure_orchestrator.py",
          "core\\intelligence\\ml\\enterprise\\ml_auto_scaling.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_ml_optimization_loop(self)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\delivery_optimizer.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\performance_optimizer.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\sla_ml_optimizer.py",
          "core\\intelligence\\ml\\advanced\\performance_ml_engine.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_initialize_ml_models(self)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\delivery_optimizer.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\integrity_ml_guardian.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\sla_ml_optimizer.py",
          "core\\intelligence\\ml\\advanced\\adaptive_configuration_manager.py",
          "core\\intelligence\\ml\\advanced\\adaptive_load_balancer.py",
          "core\\intelligence\\ml\\advanced\\distributed_ml_coordinator.py",
          "core\\intelligence\\ml\\advanced\\intelligent_data_pipeline.py",
          "core\\intelligence\\ml\\advanced\\intelligent_resource_scheduler.py",
          "core\\intelligence\\ml\\advanced\\ml_network_optimizer.py",
          "core\\intelligence\\ml\\advanced\\performance_ml_engine.py",
          "core\\intelligence\\ml\\advanced\\predictive_maintenance_ai.py",
          "core\\intelligence\\ml\\advanced\\telemetry_ml_collector.py",
          "core\\intelligence\\ml\\advanced\\telemetry_observability_engine.py",
          "core\\intelligence\\ml\\advanced\\watchdog_ml_monitor.py",
          "core\\intelligence\\ml\\advanced\\watchdog_process_manager.py",
          "core\\intelligence\\ml\\advanced\\watchdog_recovery_system.py",
          "core\\intelligence\\testing\\enterprise\\predictive_test_failure.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "cleanup(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "core\\async_state_manager.py",
          "core\\intelligence\\ml\\gpu_accelerator.py",
          "core\\testing\\formatter_testing.py",
          "core\\testing\\mcp_testing.py",
          "core\\testing\\mcp_testing.py",
          "core\\testing\\session_testing.py",
          "core\\testing\\session_testing.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "to_message(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "core\\intelligence\\orchestration\\integration_hub.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis_robust.py",
          "integration\\cross_system_communication.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_system_type(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis_robust.py",
          "integration\\cross_system_apis_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "handle_cross_system_message(self, message)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis_robust.py",
          "integration\\cross_system_apis_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_available_operations(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis_robust.py",
          "integration\\cross_system_apis_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "validate_operation_parameters(self, operation, parameters)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis_robust.py",
          "integration\\cross_system_apis_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "register_system(self, system)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "register_event_handler(self, event_type, handler)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis_robust.py",
          "integration\\cross_system_communication.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_update_delivery_stats(self, delivery_time_ms)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis_robust.py",
          "integration\\cross_system_communication.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_bus_statistics(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis_robust.py",
          "integration\\cross_system_communication.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_create_system_adapter(self, system_type, config)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, sys_type)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_context_manager()",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "core\\context_manager.py",
          "core\\shared_state.py",
          "testmaster\\core\\context_manager.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "set(self, key, value, ttl)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "core\\shared_state.py",
          "dashboard\\dashboard_core\\cache.py",
          "integration\\intelligent_caching_layer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "track_test_session(name, metadata)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\unified_observability.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "track_agent_action(session_id, action_type)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\unified_observability.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "calculate_cost(self, model, prompt_tokens, completion_tokens)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\core\\cost_management.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "track_llm_call(self, session_id, call)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\core\\cost_management.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_reset_daily_usage(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\core\\cost_management.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "check_limits(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\core\\cost_management.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "record_action(self, session_id, action)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\core\\session_tracking.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "set_breakpoint(self, session_id, action_index)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\core\\session_tracking.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "replay_session(self, session_id, speed, start_from, end_at)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\core\\session_tracking.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_timeline_visualization(self, session_id)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\core\\session_tracking.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "emit_event(self, event)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\core\\event_monitoring.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_handle_alert(self, event)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\core\\event_monitoring.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_recent_events(self, count, level)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\core\\event_monitoring.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_generate_recommendations(self, events)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\intelligence\\security\\audit\\audit_reporter.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\core\\event_monitoring.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "track_session(self, name, metadata, tags)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\unified_observability.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "track_action(self, session_id, agent_name, action_type, parameters)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\unified_observability.py",
          "observability\\core\\session_tracking.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "complete_action(self, session_id, action_id, result, error, cost)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\unified_observability.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_session_analytics(self, session_id)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\unified_observability.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_system_health(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\intelligence\\enterprise\\api_orchestrator.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "core\\reliability\\emergency_backup_recovery.py",
          "observability\\unified_observability.py",
          "observability\\core\\event_monitoring.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_update_session_metrics(self, session)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\unified_observability.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_consolidation_info(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\unified_observability.py",
          "orchestration\\unified_orchestrator.py",
          "state\\unified_state_manager.py",
          "ui\\unified_dashboard.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_initialize_default_rules(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "core\\security\\network_security_controls.py",
          "integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "add_recovery_attempt(self, attempt)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "core\\intelligence\\reliability\\enterprise_error_recovery.py",
          "integration\\comprehensive_error_recovery.py",
          "integration\\comprehensive_error_recovery_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "mark_resolved(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "core\\intelligence\\reliability\\enterprise_error_recovery.py",
          "integration\\comprehensive_error_recovery.py",
          "integration\\comprehensive_error_recovery_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_resolution_duration(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "core\\intelligence\\reliability\\enterprise_error_recovery.py",
          "integration\\comprehensive_error_recovery.py",
          "integration\\comprehensive_error_recovery_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "calculate_impact_score(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "core\\intelligence\\reliability\\enterprise_error_recovery.py",
          "integration\\comprehensive_error_recovery.py",
          "integration\\comprehensive_error_recovery_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "start_attempt(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "core\\intelligence\\reliability\\enterprise_error_recovery.py",
          "integration\\comprehensive_error_recovery.py",
          "integration\\comprehensive_error_recovery_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "complete_attempt(self, success, error_message)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "core\\intelligence\\reliability\\enterprise_error_recovery.py",
          "integration\\comprehensive_error_recovery.py",
          "integration\\comprehensive_error_recovery_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_execution_duration(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "core\\intelligence\\orchestration\\workflow_orchestration_engine.py",
          "core\\intelligence\\reliability\\enterprise_error_recovery.py",
          "integration\\comprehensive_error_recovery.py",
          "integration\\comprehensive_error_recovery_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "record_success(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "core\\intelligence\\reliability\\enterprise_error_recovery.py",
          "integration\\comprehensive_error_recovery.py",
          "integration\\comprehensive_error_recovery_robust.py",
          "integration\\service_mesh_integration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "record_failure(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "core\\intelligence\\reliability\\enterprise_error_recovery.py",
          "integration\\comprehensive_error_recovery.py",
          "integration\\comprehensive_error_recovery_robust.py",
          "integration\\service_mesh_integration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "can_call(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "core\\intelligence\\reliability\\enterprise_error_recovery.py",
          "integration\\comprehensive_error_recovery.py",
          "integration\\comprehensive_error_recovery_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_failure_rate(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "core\\intelligence\\reliability\\enterprise_error_recovery.py",
          "integration\\comprehensive_error_recovery.py",
          "integration\\comprehensive_error_recovery_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_register_recovery_strategies(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "core\\intelligence\\reliability\\enterprise_error_recovery.py",
          "integration\\comprehensive_error_recovery.py",
          "integration\\comprehensive_error_recovery_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_recovery_status(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "core\\intelligence\\ml\\advanced\\watchdog_recovery_system.py",
          "core\\intelligence\\reliability\\enterprise_error_recovery.py",
          "integration\\comprehensive_error_recovery.py",
          "integration\\comprehensive_error_recovery_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_error_summary(self, hours)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "core\\intelligence\\reliability\\enterprise_error_recovery.py",
          "integration\\comprehensive_error_recovery.py",
          "integration\\comprehensive_error_recovery_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "access(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "core\\security\\secure_performance_optimizer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get(self, key)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_cache_info(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py",
          "testmaster\\mapping\\mapping_cache.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "resolve_alert(self, alert_id)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "core\\intelligence\\monitoring\\qa_monitor.py",
          "core\\intelligence\\testing\\quality_dashboard.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py",
          "testmaster\\telemetry\\system_profiler.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_get_performance_trends(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py",
          "monitoring\\monitoring_agents.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_variable(self, name)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "core\\intelligence\\orchestration\\workflow_orchestration_engine.py",
          "integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine_robust.py",
          "integration\\workflow_framework.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "set_variable(self, name, value)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
          "core\\framework_abstraction.py",
          "integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "interpolate_value(self, value)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "can_execute(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "needs_retry(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
          "core\\security\\guardrail_security_system.py",
          "integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, max_concurrent_workflows, max_concurrent_steps)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_initialize_step_executions(self, execution_id, context)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_update_execution_progress(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_cleanup_old_executions(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "register_event_handler(self, event_name, handler)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_workflow_status(self, execution_id)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
          "core\\intelligence\\testing\\automation\\enterprise_test_orchestrator.py",
          "integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_engine_statistics(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "list_active_executions(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine_robust.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_step(self, step_id)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "core\\intelligence\\orchestration\\workflow_orchestration_engine.py",
          "integration\\workflow_framework.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "validate(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "integration\\workflow_framework.py",
          "testmaster\\core\\config.py",
          "ui_ux\\studio_interface.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_has_circular_dependencies(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "integration\\workflow_framework.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_progress_percentage(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "integration\\workflow_framework.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_execution_summary(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "core\\testing\\pipeline_testing.py",
          "integration\\workflow_framework.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "parse_workflow_file(self, file_path)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "integration\\workflow_framework.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "parse_workflow_dict(self, yaml_dict)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "integration\\workflow_framework.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_parse_step(self, step_dict)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "integration\\workflow_framework.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "export_workflow_to_yaml(self, workflow)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "integration\\workflow_framework.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_template(self, template_name)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "integration\\workflow_framework.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "list_templates(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "integration\\workflow_framework.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "add_template(self, name, yaml_content)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "integration\\workflow_framework.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "create_workflow_from_template(self, template_name, variables)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "integration\\workflow_framework.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_dashboard_data(self)",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "core\\intelligence\\dashboard\\intelligence_backend.py",
          "core\\intelligence\\testing\\quality_dashboard.py",
          "dashboard\\dashboard_core\\system_monitor.py",
          "integration\\realtime_performance_monitoring.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__bool__(self)",
        "files": [
          "core\\async_state_manager.py",
          "core\\framework_abstraction.py",
          "core\\framework_abstraction.py",
          "core\\framework_abstraction.py",
          "core\\framework_abstraction.stub_backup.py",
          "core\\framework_abstraction.stub_backup.py",
          "core\\framework_abstraction.stub_backup.py",
          "core\\framework_abstraction.stub_backup.py",
          "core\\framework_abstraction.stub_backup.py",
          "core\\testing\\graph_operations_testing.py",
          "testmaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
          "testmaster\\intelligence\\security\\security_intelligence_agent.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, framework)",
        "files": [
          "core\\framework_abstraction.py",
          "core\\framework_abstraction.py",
          "core\\framework_abstraction.py",
          "core\\framework_abstraction.stub_backup.py",
          "core\\framework_abstraction.stub_backup.py",
          "core\\framework_abstraction.stub_backup.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, name, framework)",
        "files": [
          "core\\framework_abstraction.py",
          "core\\framework_abstraction.py",
          "core\\framework_abstraction.stub_backup.py",
          "core\\framework_abstraction.stub_backup.py",
          "core\\framework_abstraction.stub_backup.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "add_assertion(self, assertion)",
        "files": [
          "core\\framework_abstraction.py",
          "core\\framework_abstraction.stub_backup.py",
          "core\\framework_abstraction.stub_backup.py",
          "testmaster\\core\\framework_abstraction\\universal_test.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "run(self)",
        "files": [
          "core\\framework_abstraction.py",
          "core\\framework_abstraction.py",
          "core\\framework_abstraction.stub_backup.py",
          "core\\framework_abstraction.stub_backup.py",
          "core\\framework_abstraction.stub_backup.py",
          "core\\testing\\communication_testing.py",
          "core\\testing\\tool_factory_testing.py",
          "core\\testing\\tool_factory_testing.py",
          "core\\testing\\tool_factory_testing.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__str__(self)",
        "files": [
          "core\\framework_abstraction.py",
          "core\\security\\agent_communication_security.py",
          "core\\security\\enum_security.py",
          "core\\security\\enum_security.py",
          "core\\security\\enum_security.py",
          "core\\security\\enum_security.py",
          "core\\testing\\flow_testing.py",
          "core\\testing\\flow_testing.py",
          "core\\testing\\graph_operations_testing.py",
          "core\\testing\\graph_operations_testing.py",
          "core\\testing\\graph_operations_testing.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, storage_path)",
        "files": [
          "core\\intelligence\\orchestrator.py",
          "core\\intelligence\\ml\\model_registry.py",
          "core\\security\\data_integrity_guardian.py",
          "core\\security\\enterprise_audit_logging.py",
          "core\\security\\enterprise_audit_logging.py",
          "testmaster\\intelligence\\bridges\\session_tracking_bridge.py",
          "testmaster\\intelligence\\bridges\\session_tracking_bridge.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "initialize(self, config)",
        "files": [
          "core\\intelligence\\analytics\\__init__.py",
          "core\\intelligence\\base\\__init__.py",
          "core\\intelligence\\compatibility\\__init__.py",
          "core\\intelligence\\integration\\__init__.py",
          "core\\intelligence\\testing\\__init__.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_capabilities(self)",
        "files": [
          "core\\intelligence\\analytics\\__init__.py",
          "core\\intelligence\\base\\__init__.py",
          "core\\intelligence\\compatibility\\__init__.py",
          "core\\intelligence\\integration\\__init__.py",
          "core\\intelligence\\testing\\__init__.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_realtime_metrics()",
        "files": [
          "core\\intelligence\\api\\endpoints.py",
          "dashboard\\api\\enhanced_analytics.py",
          "dashboard\\api\\intelligence_integration.py",
          "dashboard\\api\\performance.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_metrics(self)",
        "files": [
          "core\\intelligence\\documentation\\auto_generator.py",
          "core\\intelligence\\ml\\online_learning.py",
          "core\\intelligence\\ml\\online_learning.py",
          "core\\intelligence\\ml\\online_learning.py",
          "core\\intelligence\\visualization\\dashboard_systems.py",
          "core\\intelligence\\visualization\\dashboard_systems.py",
          "core\\intelligence\\visualization\\dashboard_systems.py",
          "dashboard\\api\\enhanced_telemetry.py",
          "dashboard\\api\\production_deployment.py",
          "testmaster\\intelligence\\bridges\\event_monitoring_bridge.py",
          "testmaster\\intelligence\\bridges\\protocol_communication_bridge.py",
          "testmaster\\intelligence\\integration\\events\\event_system.py",
          "testmaster\\intelligence\\llm_providers\\universal_llm_provider.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "analyze_file(self, file_path)",
        "files": [
          "core\\intelligence\\documentation\\docstring_analyzer.py",
          "core\\intelligence\\documentation\\metrics_reporter.py",
          "core\\intelligence\\security\\crypto_analyzer.py",
          "core\\security\\vulnerability_detection_framework.py",
          "core\\testing\\intelligent_test_generator.py",
          "dashboard\\api\\real_codebase_scanner.py",
          "tools\\migration\\analyze_legacy_code.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, docs_dir)",
        "files": [
          "core\\intelligence\\documentation\\interactive_docs_system.py",
          "core\\intelligence\\documentation\\multi_agent_pattern_docs.py",
          "core\\intelligence\\documentation\\production_ready_docs.py",
          "core\\intelligence\\documentation\\service_oriented_arch_docs.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "on_modified(self, event)",
        "files": [
          "core\\intelligence\\documentation\\revolutionary\\living_documentation_engine.py",
          "core\\intelligence\\testing\\automation\\continuous_testing_engine.py",
          "testmaster\\core\\layer_manager.py",
          "testmaster\\monitoring\\file_watcher.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "predict(self, X)",
        "files": [
          "core\\intelligence\\ml\\advanced_models.py",
          "core\\intelligence\\ml\\advanced_models.py",
          "core\\intelligence\\ml\\advanced_models.py",
          "core\\intelligence\\ml\\online_learning.py",
          "core\\intelligence\\ml\\online_learning.py",
          "core\\intelligence\\ml\\online_learning.py",
          "core\\intelligence\\ml\\online_learning.py",
          "core\\intelligence\\ml\\advanced\\ensemble_meta_learner.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "extract(self, data)",
        "files": [
          "core\\intelligence\\ml\\feature_engineering.py",
          "core\\intelligence\\ml\\feature_engineering.py",
          "core\\intelligence\\ml\\feature_engineering.py",
          "core\\intelligence\\ml\\feature_engineering.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__repr__(self)",
        "files": [
          "core\\intelligence\\monitoring\\agent_qa_modular.py",
          "core\\testing\\hook_testing.py",
          "core\\testing\\hook_testing.py",
          "core\\testing\\tracing_testing.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_execution_status(self, execution_id)",
        "files": [
          "core\\intelligence\\orchestration\\workflow_orchestration_engine.py",
          "core\\intelligence\\testing\\test_orchestrator.py",
          "orchestration\\unified_orchestrator.py",
          "orchestration\\unified_orchestrator.py",
          "testmaster\\core\\workflow_graph.py",
          "testmaster\\intelligence\\bridges\\sop_workflow_bridge.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "from_dict(cls, data)",
        "files": [
          "core\\intelligence\\streaming\\event_streaming_engine.py",
          "core\\security\\flow_persistence_security.py",
          "core\\testing\\session_testing.py",
          "testmaster\\core\\layer_manager.py",
          "testmaster\\intelligence\\bridges\\event_monitoring_bridge.py",
          "testmaster\\intelligence\\llm_providers\\universal_llm_provider.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, watch_paths)",
        "files": [
          "core\\intelligence\\testing\\automation_engine.py",
          "testmaster\\communication\\tag_reader.py",
          "testmaster\\orchestrator\\file_tagger.py",
          "testmaster\\orchestrator\\investigator.py",
          "testmaster\\overview\\coverage_intelligence.py",
          "testmaster\\overview\\structure_mapper.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "wrapped()",
        "files": [
          "core\\intelligence\\testing\\chaos_engineer.py",
          "core\\intelligence\\testing\\chaos_engineer.py",
          "core\\intelligence\\testing\\chaos_engineer.py",
          "core\\intelligence\\testing\\chaos_engineer.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "gen(size)",
        "files": [
          "core\\intelligence\\testing\\property_tester.py",
          "core\\intelligence\\testing\\property_tester.py",
          "core\\intelligence\\testing\\property_tester.py",
          "core\\intelligence\\testing\\property_tester.py",
          "core\\intelligence\\testing\\property_tester.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "shrink(val)",
        "files": [
          "core\\intelligence\\testing\\property_tester.py",
          "core\\intelligence\\testing\\property_tester.py",
          "core\\intelligence\\testing\\property_tester.py",
          "core\\intelligence\\testing\\property_tester.py",
          "core\\intelligence\\testing\\property_tester.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "add_subscriber(self, callback)",
        "files": [
          "core\\intelligence\\visualization\\agent_interface_systems.py",
          "core\\intelligence\\visualization\\dashboard_systems.py",
          "core\\intelligence\\visualization\\realtime_ui_components.py",
          "core\\intelligence\\visualization\\realtime_ui_components.py",
          "core\\intelligence\\visualization\\realtime_ui_components.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_alerts(self)",
        "files": [
          "core\\intelligence\\visualization\\dashboard_systems.py",
          "core\\intelligence\\visualization\\dashboard_systems.py",
          "core\\intelligence\\visualization\\dashboard_systems.py",
          "integration\\realtime_performance_monitoring.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "execute_task(self, task)",
        "files": [
          "core\\orchestration\\agent_graph.py",
          "core\\testing\\agent_reasoning_testing.py",
          "core\\testing\\crew_thread_safety_testing.py",
          "core\\testing\\multimodal_validation_testing.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_task_status(self, task_id)",
        "files": [
          "core\\orchestration\\enhanced_agent_orchestrator.py",
          "integration\\distributed_task_queue.py",
          "integration\\distributed_task_queue.py",
          "testmaster\\async_processing\\async_executor.py",
          "testmaster\\intelligence\\integration\\coordination\\analysis_coordinator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, secret_key)",
        "files": [
          "core\\security\\agent_communication_security.py",
          "core\\security\\distributed_communication_security.py",
          "core\\security\\enterprise_authentication.py",
          "core\\security\\secure_message_delivery.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_initialize_db(self)",
        "files": [
          "core\\security\\compliance_framework.py",
          "core\\security\\enterprise_auth_gateway.py",
          "core\\security\\enterprise_auth_gateway.py",
          "core\\security\\threat_intelligence_system.py",
          "core\\security\\vulnerability_detection_framework.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, message, details)",
        "files": [
          "core\\security\\error_handler.py",
          "core\\security\\error_handler.py",
          "core\\security\\error_handler.py",
          "core\\security\\error_handler.py",
          "core\\security\\error_handler.py",
          "dashboard\\dashboard_core\\error_handler.py",
          "dashboard\\dashboard_core\\error_handler.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "failed(self)",
        "files": [
          "core\\security\\error_recovery_framework.py",
          "core\\security\\guardrail_security_system.py",
          "core\\security\\retry_mechanism_system.py",
          "core\\security\\retry_mechanism_system.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "can_handle(self, error_context)",
        "files": [
          "core\\security\\error_recovery_framework.py",
          "core\\security\\error_recovery_framework.py",
          "core\\security\\error_recovery_framework.py",
          "core\\security\\error_recovery_framework.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "recover(self, error_context, original_function)",
        "files": [
          "core\\security\\error_recovery_framework.py",
          "core\\security\\error_recovery_framework.py",
          "core\\security\\error_recovery_framework.py",
          "core\\security\\error_recovery_framework.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, message)",
        "files": [
          "core\\security\\exception_monitoring.py",
          "core\\security\\exception_monitoring.py",
          "core\\security\\exception_monitoring.py",
          "core\\security\\exception_monitoring.py",
          "core\\testing\\thread_retry_testing.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, message, context)",
        "files": [
          "core\\security\\message_context_security.py",
          "core\\security\\message_context_security.py",
          "core\\security\\message_context_security.py",
          "core\\security\\message_context_security.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "calculate_delay(self, attempt_number, previous_delays)",
        "files": [
          "core\\security\\retry_mechanism_system.py",
          "core\\security\\retry_mechanism_system.py",
          "core\\security\\retry_mechanism_system.py",
          "core\\security\\retry_mechanism_system.py",
          "core\\security\\retry_mechanism_system.py",
          "core\\security\\retry_mechanism_system.py",
          "core\\security\\retry_mechanism_system.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "run_comprehensive_tests(self)",
        "files": [
          "core\\testing\\adaptive_testing_framework.py",
          "core\\testing\\graph_constraints_testing.py",
          "core\\testing\\graph_performance_testing.py",
          "core\\testing\\graph_vector_testing.py",
          "core\\testing\\intelligence_synthesis_framework.py",
          "core\\testing\\intelligent_test_generator.py",
          "core\\testing\\langgraph_supervisor_testing.py",
          "core\\testing\\multi_modal_test_engine.py",
          "dashboard\\test_api_endpoints.py",
          "dashboard\\test_frontend_automated.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "call(self, messages)",
        "files": [
          "core\\testing\\agent_reasoning_testing.py",
          "core\\testing\\hallucination_guardrail_testing.py",
          "core\\testing\\multimodal_validation_testing.py",
          "core\\testing\\task_guardrails_testing.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "setUp(self)",
        "files": [
          "core\\testing\\collaborative_testing_platform.py",
          "core\\testing\\distributed_test_coordinator.py",
          "core\\testing\\enterprise_test_framework.py",
          "core\\testing\\repository_intelligence_aggregator.py",
          "core\\testing\\testmaster_api_gateway.py",
          "core\\testing\\test_ai_code_exploration.py",
          "core\\testing\\test_integration_hub.py",
          "core\\testing\\test_knowledge_graph_engine.py",
          "core\\testing\\test_multi_language_superiority.py",
          "core\\testing\\test_ui_interface_superiority.py",
          "core\\testing\\test_zero_setup_domination.py",
          "core\\testing\\unified_test_orchestrator.py",
          "tests\\test_intelligence_ml.py",
          "tests\\test_intelligence_ml.py",
          "tests\\test_intelligence_ml.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, role, content, name)",
        "files": [
          "core\\testing\\formatter_testing.py",
          "core\\testing\\hook_testing.py",
          "core\\testing\\react_agent_testing.py",
          "core\\testing\\tracing_testing.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "framework(self)",
        "files": [
          "core\\testing\\graph_constraints_testing.py",
          "core\\testing\\graph_performance_testing.py",
          "core\\testing\\graph_vector_testing.py",
          "core\\testing\\langgraph_supervisor_testing.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__eq__(self, other)",
        "files": [
          "core\\testing\\graph_operations_testing.py",
          "core\\testing\\graph_operations_testing.py",
          "core\\testing\\graph_operations_testing.py",
          "core\\testing\\hook_testing.py",
          "core\\testing\\tracing_testing.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "default_behavior(self, message)",
        "files": [
          "core\\testing\\pipeline_testing.py",
          "core\\testing\\pipeline_testing.py",
          "core\\testing\\pipeline_testing.py",
          "core\\testing\\pipeline_testing.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, metadata)",
        "files": [
          "core\\tools\\concrete_tools.py",
          "core\\tools\\concrete_tools.py",
          "core\\tools\\concrete_tools.py",
          "core\\tools\\type_safe_tools.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "validate_input(self, input_data)",
        "files": [
          "core\\tools\\concrete_tools.py",
          "core\\tools\\concrete_tools.py",
          "core\\tools\\concrete_tools.py",
          "core\\tools\\type_safe_tools.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "validate_output(self, output_data)",
        "files": [
          "core\\tools\\concrete_tools.py",
          "core\\tools\\concrete_tools.py",
          "core\\tools\\concrete_tools.py",
          "core\\tools\\type_safe_tools.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "make_request(endpoint)",
        "files": [
          "dashboard\\automated_frontend_simulator.py",
          "dashboard\\automated_frontend_tester.py",
          "dashboard\\comprehensive_frontend_validator.py",
          "dashboard\\demo_automated_frontend_testing.py",
          "dashboard\\quick_frontend_test.py",
          "dashboard\\test_frontend_integration.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_comprehensive_metrics(self)",
        "files": [
          "integration\\multi_environment_support.py",
          "integration\\resource_optimization_engine.py",
          "testmaster\\intelligence\\bridges\\context_variables_bridge.py",
          "testmaster\\intelligence\\bridges\\event_monitoring_bridge.py",
          "testmaster\\intelligence\\bridges\\protocol_communication_bridge.py",
          "testmaster\\intelligence\\bridges\\session_tracking_bridge.py",
          "testmaster\\intelligence\\bridges\\sop_workflow_bridge.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "convert_module(self, module_path)",
        "files": [
          "testmaster\\converters\\base.py",
          "testmaster\\converters\\batch.py",
          "testmaster\\converters\\intelligent.py",
          "testmaster\\converters\\parallel.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, mode, model, api_key, config)",
        "files": [
          "testmaster\\converters\\batch.py",
          "testmaster\\converters\\intelligent.py",
          "testmaster\\converters\\parallel.py",
          "testmaster\\generators\\intelligent.py",
          "testmaster\\verification\\quality.py",
          "testmaster\\verification\\self_healing.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_auto_initialize(self)",
        "files": [
          "testmaster\\converters\\intelligent.py",
          "testmaster\\generators\\intelligent.py",
          "testmaster\\verification\\quality.py",
          "testmaster\\verification\\self_healing.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_init_provider_mode(self)",
        "files": [
          "testmaster\\converters\\intelligent.py",
          "testmaster\\generators\\intelligent.py",
          "testmaster\\verification\\quality.py",
          "testmaster\\verification\\self_healing.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "_init_sdk_mode(self)",
        "files": [
          "testmaster\\converters\\intelligent.py",
          "testmaster\\generators\\intelligent.py",
          "testmaster\\verification\\quality.py",
          "testmaster\\verification\\self_healing.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "parse_to_universal(self, file_path, content)",
        "files": [
          "testmaster\\core\\ast_abstraction\\language_parsers.py",
          "testmaster\\core\\ast_abstraction\\language_parsers.py",
          "testmaster\\core\\ast_abstraction\\language_parsers.py",
          "testmaster\\core\\ast_abstraction\\language_parsers.py",
          "testmaster\\core\\ast_abstraction\\language_parsers.py",
          "testmaster\\core\\ast_abstraction\\language_parsers.py",
          "testmaster\\core\\ast_abstraction\\language_parsers.py",
          "testmaster\\core\\ast_abstraction\\language_parsers.py",
          "testmaster\\core\\ast_abstraction\\universal_ast.py",
          "testmaster\\core\\ast_abstraction\\universal_ast.py",
          "testmaster\\core\\ast_abstraction\\universal_ast.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "get_target_language(self)",
        "files": [
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "convert_test_suite(self, suite)",
        "files": [
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "convert_assertion(self, assertion)",
        "files": [
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "generate_tests(self, function, config)",
        "files": [
          "testmaster\\core\\framework_abstraction\\test_generator.py",
          "testmaster\\core\\framework_abstraction\\test_generator.py",
          "testmaster\\core\\framework_abstraction\\test_generator.py",
          "testmaster\\core\\framework_abstraction\\test_generator.py",
          "testmaster\\core\\framework_abstraction\\test_generator.py",
          "testmaster\\core\\framework_abstraction\\test_generator.py",
          "testmaster\\core\\framework_abstraction\\test_generator.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "process(self, template, variables)",
        "files": [
          "testmaster\\intelligence\\documentation\\templates\\template_engine.py",
          "testmaster\\intelligence\\documentation\\templates\\template_engine.py",
          "testmaster\\intelligence\\documentation\\templates\\template_engine.py",
          "testmaster\\intelligence\\documentation\\templates\\template_engine.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "validate_template(self, template)",
        "files": [
          "testmaster\\intelligence\\documentation\\templates\\template_engine.py",
          "testmaster\\intelligence\\documentation\\templates\\template_engine.py",
          "testmaster\\intelligence\\documentation\\templates\\template_engine.py",
          "testmaster\\intelligence\\documentation\\templates\\template_engine.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "generate(self, parent_node, context)",
        "files": [
          "testmaster\\intelligence\\hierarchical_planning\\htp_reasoning.py",
          "testmaster\\intelligence\\hierarchical_planning\\llm_integration.py",
          "testmaster\\intelligence\\hierarchical_planning\\test_plan_generator.py",
          "testmaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
          "testmaster\\intelligence\\security\\security_intelligence_agent.py",
          "testmaster\\intelligence\\tree_of_thought\\test_thought_generator.py",
          "testmaster\\intelligence\\tree_of_thought\\tot_reasoning.py",
          "testmaster\\intelligence\\tree_of_thought\\tot_reasoning.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "evaluate(self, node, criteria)",
        "files": [
          "testmaster\\intelligence\\hierarchical_planning\\htp_reasoning.py",
          "testmaster\\intelligence\\hierarchical_planning\\llm_integration.py",
          "testmaster\\intelligence\\hierarchical_planning\\test_plan_generator.py",
          "testmaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
          "testmaster\\intelligence\\security\\security_intelligence_agent.py",
          "testmaster\\intelligence\\tree_of_thought\\test_thought_generator.py",
          "testmaster\\intelligence\\tree_of_thought\\tot_reasoning.py",
          "testmaster\\intelligence\\tree_of_thought\\tot_reasoning.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "generate_sync(self, messages)",
        "files": [
          "testmaster\\intelligence\\llm_providers\\provider_implementations.py",
          "testmaster\\intelligence\\llm_providers\\provider_implementations.py",
          "testmaster\\intelligence\\llm_providers\\provider_implementations.py",
          "testmaster\\intelligence\\llm_providers\\provider_implementations.py",
          "testmaster\\intelligence\\llm_providers\\universal_llm_provider.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, provider_manager)",
        "files": [
          "testmaster\\intelligence\\llm_providers\\provider_optimization.py",
          "testmaster\\intelligence\\llm_providers\\provider_optimization.py",
          "testmaster\\intelligence\\llm_providers\\provider_optimization.py",
          "testmaster\\intelligence\\llm_providers\\provider_optimization.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "evaluate(self, solution)",
        "files": [
          "testmaster\\intelligence\\optimization\\multi_objective_optimizer.py",
          "testmaster\\intelligence\\optimization\\test_optimization_objectives.py",
          "testmaster\\intelligence\\optimization\\test_optimization_objectives.py",
          "testmaster\\intelligence\\optimization\\test_optimization_objectives.py",
          "testmaster\\intelligence\\optimization\\test_optimization_objectives.py",
          "testmaster\\intelligence\\optimization\\test_optimization_objectives.py",
          "testmaster\\intelligence\\optimization\\test_optimization_objectives.py",
          "testmaster\\intelligence\\optimization\\test_optimization_objectives.py"
        ],
        "severity": "high"
      },
      {
        "type": "function",
        "name": "__init__(self, objectives, config)",
        "files": [
          "testmaster\\intelligence\\optimization\\multi_objective_optimizer.py",
          "testmaster\\intelligence\\optimization\\optimization_algorithms.py",
          "testmaster\\intelligence\\optimization\\optimization_algorithms.py",
          "testmaster\\intelligence\\optimization\\optimization_algorithms.py",
          "testmaster\\intelligence\\optimization\\optimization_algorithms.py",
          "testmaster\\intelligence\\optimization\\optimization_algorithms.py"
        ],
        "severity": "high"
      },
      {
        "type": "class",
        "name": "ArchitectureAnalyzer",
        "files": [
          "documentation_cli.py",
          "test_complexity_prioritizer.py",
          "test_dependency_orderer.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "BusinessContextExtractor",
        "files": [
          "enhanced_context_aware_test_generator.py",
          "archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
          "archive\\original_backup\\enhanced_context_aware_test_generator.py",
          "core\\testing\\supercharged_test_generator.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "PropertyBasedTestGenerator",
        "files": [
          "enhanced_context_aware_test_generator.py",
          "archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
          "archive\\original_backup\\enhanced_context_aware_test_generator.py",
          "core\\testing\\supercharged_test_generator.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "ContractBasedTestGenerator",
        "files": [
          "enhanced_context_aware_test_generator.py",
          "archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
          "archive\\original_backup\\enhanced_context_aware_test_generator.py",
          "core\\testing\\supercharged_test_generator.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "EnhancedTestGenerator",
        "files": [
          "enhanced_context_aware_test_generator.py",
          "archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
          "archive\\original_backup\\enhanced_context_aware_test_generator.py",
          "core\\testing\\supercharged_test_generator.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "RateLimiter",
        "files": [
          "enhanced_self_healing_verifier.py",
          "parallel_converter.py",
          "parallel_converter_fixed.py",
          "archive\\legacy_scripts\\enhanced_self_healing_verifier.py",
          "archive\\legacy_scripts\\parallel_converter.py",
          "archive\\legacy_scripts\\parallel_converter_fixed.py",
          "archive\\legacy_scripts\\parallel_converter_working.py",
          "archive\\legacy_scripts\\parallel_coverage_converter.py",
          "archive\\legacy_scripts\\parallel_coverage_converter_fixed.py",
          "archive\\legacy_scripts\\self_healing_converter.py",
          "archive\\original_backup\\enhanced_self_healing_verifier.py",
          "archive\\original_backup\\parallel_converter.py",
          "archive\\original_backup\\parallel_converter_fixed.py",
          "archive\\original_backup\\scripts\\parallel_converter_working.py",
          "archive\\original_backup\\scripts\\parallel_coverage_converter.py",
          "archive\\original_backup\\scripts\\parallel_coverage_converter_fixed.py",
          "archive\\original_backup\\scripts\\self_healing_converter.py",
          "core\\testing\\testmaster_api_gateway.py",
          "scripts\\parallel_converter_working.py",
          "scripts\\parallel_coverage_converter.py",
          "scripts\\parallel_coverage_converter_fixed.py",
          "scripts\\self_healing_converter.py",
          "testmaster\\converters\\base.py",
          "testmaster\\verification\\base.py"
        ],
        "similarity": 0.9375,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "TestEnhancer",
        "files": [
          "enhance_auto_generated_tests.py",
          "archive\\legacy_scripts\\enhance_auto_generated_tests.py",
          "archive\\original_backup\\enhance_auto_generated_tests.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "EnhancedTestImportFixer",
        "files": [
          "fix_enhanced_test_imports.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_enhanced_test_imports.py",
          "archive\\legacy_scripts\\fix_enhanced_test_imports.py",
          "archive\\original_backup\\fix_enhanced_test_imports.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "TestFixer",
        "files": [
          "fix_failing_tests.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_failing_tests.py",
          "archive\\legacy_scripts\\fix_failing_tests.py",
          "archive\\original_backup\\fix_failing_tests.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "RealModuleTestFixer",
        "files": [
          "fix_tests_for_real_modules.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_tests_for_real_modules.py",
          "archive\\legacy_scripts\\fix_tests_for_real_modules.py",
          "archive\\original_backup\\fix_tests_for_real_modules.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "Week2ImportFixer",
        "files": [
          "fix_week2_test_imports.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_week2_test_imports.py",
          "archive\\legacy_scripts\\fix_week2_test_imports.py",
          "archive\\original_backup\\fix_week2_test_imports.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "IntegrationTestBuilder",
        "files": [
          "integration_test_generator.py",
          "archive\\legacy_scripts\\integration_test_generator.py",
          "archive\\original_backup\\integration_test_generator.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "SmartIntegrationTestGenerator",
        "files": [
          "integration_test_generator.py",
          "archive\\legacy_scripts\\integration_test_generator.py",
          "archive\\original_backup\\integration_test_generator.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "OfflineIntelligentTestBuilder",
        "files": [
          "intelligent_test_builder_offline.py",
          "archive\\legacy_scripts\\intelligent_test_builder_offline.py",
          "archive\\original_backup\\intelligent_test_builder_offline.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "IntelligentTestBuilderV2",
        "files": [
          "intelligent_test_builder_v2.py",
          "archive\\legacy_scripts\\intelligent_test_builder_v2.py",
          "archive\\original_backup\\intelligent_test_builder_v2.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "TestAgent",
        "files": [
          "restored_asyncio_5.py",
          "restored_logging_5.py",
          "restored_threading_5.py",
          "restored_time_5.py",
          "restored_uuid_5.py",
          "archive\\phase5_archive\\replaced_code\\agent_graph_20250819_195602.py",
          "archive\\phase6_archive\\replaced_code\\agent_graph_20250819_200928.py",
          "core\\orchestration\\agent_graph.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "TestOrchestrationEngine",
        "files": [
          "restored_asyncio_5.py",
          "restored_logging_5.py",
          "restored_threading_5.py",
          "restored_time_5.py",
          "restored_uuid_5.py",
          "archive\\phase5_archive\\replaced_code\\agent_graph_20250819_195602.py",
          "archive\\phase6_archive\\replaced_code\\agent_graph_20250819_200928.py",
          "core\\orchestration\\agent_graph.py"
        ],
        "similarity": 0.9772727272727275,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "SwarmOrchestrator",
        "files": [
          "restored_asyncio_6.py",
          "restored_random_6.py",
          "restored_uuid_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
          "deployment\\swarm_orchestrator.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "EnterpriseTestDeployment",
        "files": [
          "restored_json_5.py",
          "archive\\phase5_archive\\replaced_code\\enterprise_deployment_20250819_195602.py",
          "deployment\\enterprise_deployment.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "UniversalSwarmOrchestrator",
        "files": [
          "restored_json_6.py",
          "restored_logging_6.py",
          "restored_os_6.py",
          "restored_sys_6.py",
          "restored_threading_6.py",
          "restored_time_6.py",
          "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "dashboard\\api\\swarm_orchestration.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "RegressionTestGenerator",
        "files": [
          "specialized_test_generators.py",
          "archive\\legacy_scripts\\specialized_test_generators.py",
          "archive\\original_backup\\specialized_test_generators.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "PerformanceTestGenerator",
        "files": [
          "specialized_test_generators.py",
          "archive\\legacy_scripts\\specialized_test_generators.py",
          "archive\\original_backup\\specialized_test_generators.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "DataValidationTestGenerator",
        "files": [
          "specialized_test_generators.py",
          "archive\\legacy_scripts\\specialized_test_generators.py",
          "archive\\original_backup\\specialized_test_generators.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "LLMTestGenerator",
        "files": [
          "specialized_test_generators.py",
          "archive\\legacy_scripts\\specialized_test_generators.py",
          "archive\\original_backup\\specialized_test_generators.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "ConfigurationTestGenerator",
        "files": [
          "specialized_test_generators.py",
          "archive\\legacy_scripts\\specialized_test_generators.py",
          "archive\\original_backup\\specialized_test_generators.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "ExperimentTestGenerator",
        "files": [
          "specialized_test_generators.py",
          "archive\\legacy_scripts\\specialized_test_generators.py",
          "archive\\original_backup\\specialized_test_generators.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "ComprehensiveTestSuiteGenerator",
        "files": [
          "specialized_test_generators.py",
          "archive\\legacy_scripts\\specialized_test_generators.py",
          "archive\\original_backup\\specialized_test_generators.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "WorkflowDAG",
        "files": [
          "testmaster_orchestrator.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py",
          "testmaster\\core\\orchestrator.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "PipelineOrchestrator",
        "files": [
          "testmaster_orchestrator.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "WebMonitoringServer",
        "files": [
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "RealTestWriter",
        "files": [
          "write_real_tests.py",
          "archive\\legacy_scripts\\write_real_tests.py",
          "archive\\original_backup\\write_real_tests.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "FailureAnalyzer",
        "files": [
          "analytics\\failure_analyzer.py",
          "archive\\original_backup\\analytics\\failure_analyzer.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AdvancedDependencyMapper",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "CodebaseHealthAssessment",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "EnergyConsumptionAnalyzer",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "MetaprogrammingAnalyzer",
        "files": [
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsAggregator",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_aggregator.py",
          "dashboard\\dashboard_core\\analytics_aggregator.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsAnomalyDetector",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "core\\intelligence\\analytics\\analytics_anomaly_detector.py",
          "dashboard\\dashboard_core\\analytics_anomaly_detector.py"
        ],
        "similarity": 0.9420289855072465,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsBackupManager",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
          "dashboard\\dashboard_core\\analytics_backup.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsBatchProcessor",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_batch_processor.py",
          "dashboard\\dashboard_core\\analytics_batch_processor.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsCircuitBreakerManager",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsCompressor",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_compressor.py",
          "dashboard\\dashboard_core\\analytics_compressor.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsConnectivityMonitor",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsCorrelator",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_correlator.py",
          "dashboard\\dashboard_core\\analytics_correlator.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsDataSanitizer",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsDeadLetterQueue",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "dashboard\\dashboard_core\\analytics_dead_letter_queue.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsFingerprint",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsDeduplication",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "similarity": 0.888888888888889,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsDeduplicationEngine",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "JSONEncoder",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_enhancer.py",
          "dashboard\\dashboard_core\\analytics_delivery_enhancer.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsDeliveryEnhancer",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_enhancer.py",
          "dashboard\\dashboard_core\\analytics_delivery_enhancer.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsDeliveryGuarantee",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "dashboard\\dashboard_core\\analytics_delivery_guarantee.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "VerificationTest",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsDeliveryVerifier",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsErrorRecovery",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "ErrorPatternDetector",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsEventQueue",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "dashboard\\dashboard_core\\analytics_event_queue.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsExportManager",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsFallbackSystem",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsFlowMonitor",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_flow_monitor.py",
          "dashboard\\dashboard_core\\analytics_flow_monitor.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsHealthMonitor",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "DashboardHeartbeatMonitor",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsIntegrityGuardian",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
          "dashboard\\dashboard_core\\analytics_integrity_guardian.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsIntegrityVerifier",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "Timer",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsMetricsCollector",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsDataNormalizer",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "dashboard\\dashboard_core\\analytics_normalizer.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsOptimizer",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_optimizer.py",
          "dashboard\\dashboard_core\\analytics_optimizer.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "FastCacheManager",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsPerformanceBooster",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsPerformanceMonitor",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_monitor.py",
          "dashboard\\dashboard_core\\analytics_performance_monitor.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsPerformanceOptimizer",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsPersistenceEngine",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "dashboard\\dashboard_core\\analytics_persistence.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "DataTransformer",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "DataEnricher",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "DataNormalizer",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "DataAggregator",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsPipeline",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsPipelineHealthMonitor",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "QueuedAnalytics",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "core\\intelligence\\queuing\\express_priority_queue.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsPriorityQueue",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsQualityAssurance",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsQuantumRetry",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsRateLimiter",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsReceiptTracker",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsRecoveryOrchestrator",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsRedundancyManager",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsRetryManager",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
          "dashboard\\dashboard_core\\analytics_retry_manager.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsSLATracker",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "SmartAnalyticsCache",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsStreamManager",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "dashboard\\dashboard_core\\analytics_streaming.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsStreamIntegrator",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "dashboard\\dashboard_core\\analytics_streaming.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsTelemetryCollector",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsValidator",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_validator.py",
          "dashboard\\dashboard_core\\analytics_validator.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AnalyticsWatchdog",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "CoverageMaximizer",
        "files": [
          "archive\\legacy_scripts\\achieve_100_percent.py",
          "archive\\original_backup\\scripts\\achieve_100_percent.py",
          "scripts\\achieve_100_percent.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "Gemini25ProTestGenerator",
        "files": [
          "archive\\legacy_scripts\\achieve_100_percent_coverage.py",
          "archive\\original_backup\\scripts\\achieve_100_percent_coverage.py",
          "scripts\\achieve_100_percent_coverage.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AITestGenerator",
        "files": [
          "archive\\legacy_scripts\\ai_test_generator.py",
          "archive\\original_backup\\scripts\\ai_test_generator.py",
          "scripts\\ai_test_generator.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AutomatedTestGenerator",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "BranchCoverageAnalyzer",
        "files": [
          "archive\\legacy_scripts\\branch_coverage_analyzer.py",
          "archive\\original_backup\\scripts\\branch_coverage_analyzer.py",
          "scripts\\branch_coverage_analyzer.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "BranchVisitor",
        "files": [
          "archive\\legacy_scripts\\branch_coverage_analyzer.py",
          "archive\\original_backup\\scripts\\branch_coverage_analyzer.py",
          "scripts\\branch_coverage_analyzer.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "ComprehensiveTestFramework",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\comprehensive_test_framework.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "CoverageBaseline",
        "files": [
          "archive\\legacy_scripts\\coverage_baseline.py",
          "archive\\original_backup\\scripts\\coverage_baseline.py",
          "scripts\\coverage_baseline.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "CoverageImprover",
        "files": [
          "archive\\legacy_scripts\\coverage_improver.py",
          "archive\\original_backup\\scripts\\coverage_improver.py",
          "scripts\\coverage_improver.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "DataFlowTester",
        "files": [
          "archive\\legacy_scripts\\data_flow_tests.py",
          "archive\\original_backup\\src\\data_flow_tests.py",
          "src\\data_flow_tests.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "TestIssueFixer",
        "files": [
          "archive\\legacy_scripts\\fix_remaining_issues.py",
          "archive\\original_backup\\scripts\\fix_remaining_issues.py",
          "scripts\\fix_remaining_issues.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "TestInfrastructureFixer",
        "files": [
          "archive\\legacy_scripts\\fix_test_infrastructure.py",
          "archive\\original_backup\\scripts\\fix_test_infrastructure.py",
          "scripts\\fix_test_infrastructure.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "SequentialTestGenerator",
        "files": [
          "archive\\legacy_scripts\\generate_coverage_sequential.py",
          "archive\\original_backup\\scripts\\generate_coverage_sequential.py",
          "scripts\\generate_coverage_sequential.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "IntegrationTestMatrix",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "IntelligentTestConverter",
        "files": [
          "archive\\legacy_scripts\\intelligent_converter.py",
          "archive\\original_backup\\scripts\\intelligent_converter.py",
          "scripts\\intelligent_converter.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "QuickCoverageBooster",
        "files": [
          "archive\\legacy_scripts\\quick_coverage_boost.py",
          "archive\\original_backup\\scripts\\quick_coverage_boost.py",
          "scripts\\quick_coverage_boost.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "MockLogger",
        "files": [
          "archive\\legacy_scripts\\simple_100_percent.py",
          "archive\\original_backup\\scripts\\simple_100_percent.py",
          "scripts\\simple_100_percent.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "SmartTestGenerator",
        "files": [
          "archive\\legacy_scripts\\smart_test_generator.py",
          "archive\\original_backup\\scripts\\smart_test_generator.py",
          "scripts\\smart_test_generator.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "SystematicCoverageAnalyzer",
        "files": [
          "archive\\legacy_scripts\\systematic_coverage.py",
          "archive\\original_backup\\scripts\\systematic_coverage.py",
          "scripts\\systematic_coverage.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "IntelligentCache",
        "files": [
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "cache\\intelligent_cache.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "CachedFunction",
        "files": [
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "cache\\intelligent_cache.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "TestDeduplicator",
        "files": [
          "archive\\original_backup\\deduplication\\test_deduplicator.py",
          "deduplication\\test_deduplicator.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "IncrementalTestGenerator",
        "files": [
          "archive\\original_backup\\incremental\\dependency_tracker.py",
          "incremental\\dependency_tracker.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "ModuleAnalyzer",
        "files": [
          "archive\\original_backup\\integration\\cross_module_tester.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "integration\\cross_module_tester.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "CrossModuleTestGenerator",
        "files": [
          "archive\\original_backup\\integration\\cross_module_tester.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "integration\\cross_module_tester.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "ExecutionOptimizer",
        "files": [
          "archive\\original_backup\\optimization\\execution_optimizer.py",
          "optimization\\execution_optimizer.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "AsyncStateManager",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "core\\async_state_manager.py"
        ],
        "similarity": 0.9090909090909091,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "SystemMessage",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "core\\intelligence\\orchestration\\integration_hub.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis_robust.py",
          "integration\\cross_system_communication.py"
        ],
        "similarity": 0.8333333333333334,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "CrossSystemRequest",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "core\\intelligence\\orchestration\\integration_hub.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis_robust.py",
          "integration\\cross_system_communication.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "UnifiedSystemInterface",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis_robust.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "CrossSystemMessageBus",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis_robust.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "CrossSystemAPICoordinator",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis_robust.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "MockSystemAdapter",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "integration\\cross_system_apis.py",
          "integration\\cross_system_apis_robust.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "SessionReplay",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\core\\session_tracking.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "MultiModalMonitor",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\core\\event_monitoring.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "UnifiedObservabilitySystem",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "observability\\unified_observability.py"
        ],
        "similarity": 0.8214285714285715,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "ScalingMetric",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system_robust.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "ScalingRule",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system_robust.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "ErrorEvent",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "core\\intelligence\\reliability\\enterprise_error_recovery.py",
          "integration\\comprehensive_error_recovery.py",
          "integration\\comprehensive_error_recovery_robust.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "CircuitBreakerState",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "core\\intelligence\\reliability\\enterprise_error_recovery.py",
          "integration\\comprehensive_error_recovery.py",
          "integration\\comprehensive_error_recovery_robust.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "CacheStatistics",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "MemoryCache",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "SystemHealthSnapshot",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "WorkflowDesignSession",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "VisualWorkflowDesigner",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "StepExecution",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine_robust.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "WorkflowExecutionEngine",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine.py",
          "integration\\workflow_execution_engine_robust.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "WorkflowYAMLParser",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "integration\\workflow_framework.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "WorkflowTemplateLibrary",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "integration\\workflow_framework.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "RealtimeChart",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "MetricsPanel",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "ControlPanel",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "InteractiveDashboard",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "FeatureFlags",
        "files": [
          "core\\feature_flags.py",
          "testmaster\\core\\feature_flags.py"
        ],
        "similarity": 0.8421052631578947,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "ServiceConfiguration",
        "files": [
          "core\\state\\enhanced_state_manager.py",
          "state\\unified_state_manager.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "MockCrewResult",
        "files": [
          "core\\testing\\crew_thread_safety_testing.py",
          "core\\testing\\multimodal_validation_testing.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "MockTaskOutput",
        "files": [
          "core\\testing\\hallucination_guardrail_testing.py",
          "core\\testing\\task_guardrails_testing.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "MockToolUseBlock",
        "files": [
          "core\\testing\\react_agent_testing.py",
          "core\\testing\\tracing_testing.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "MockChatResponse",
        "files": [
          "core\\testing\\react_agent_testing.py",
          "core\\testing\\tracing_testing.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "MockFormatter",
        "files": [
          "core\\testing\\react_agent_testing.py",
          "core\\testing\\tracing_testing.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "GeneratedTool",
        "files": [
          "core\\testing\\tool_factory_testing.py",
          "core\\testing\\tool_factory_testing.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      },
      {
        "type": "class",
        "name": "GraphNode",
        "files": [
          "orchestration\\unified_orchestrator.py",
          "state\\unified_state_manager.py"
        ],
        "similarity": 1.0,
        "severity": "high"
      }
    ],
    "medium_priority": [
      {
        "type": "function",
        "name": "convert_module_with_delay(module_path, delay)",
        "files": [
          "accelerated_converter.py",
          "archive\\legacy_scripts\\accelerated_converter.py",
          "archive\\original_backup\\accelerated_converter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_archive_system()",
        "files": [
          "ARCHIVE_PROTECTION_SYSTEM.py",
          "archive\\archive_system.py",
          "validation\\phase_validator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_load_manifest(self)",
        "files": [
          "ARCHIVE_PROTECTION_SYSTEM.py",
          "archive\\archive_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "restore_from_archive(self, archive_id, target_path)",
        "files": [
          "ARCHIVE_PROTECTION_SYSTEM.py",
          "archive\\archive_system.py",
          "validation\\phase_validator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_save_manifest(self)",
        "files": [
          "ARCHIVE_PROTECTION_SYSTEM.py",
          "archive\\archive_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_broken_test_files()",
        "files": [
          "batch_convert_broken_tests.py",
          "archive\\legacy_scripts\\batch_convert_broken_tests.py",
          "archive\\original_backup\\batch_convert_broken_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "batch_convert(test_files, max_count)",
        "files": [
          "batch_convert_broken_tests.py",
          "archive\\legacy_scripts\\batch_convert_broken_tests.py",
          "archive\\original_backup\\batch_convert_broken_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "print_summary(results)",
        "files": [
          "batch_convert_broken_tests.py",
          "archive\\legacy_scripts\\batch_convert_broken_tests.py",
          "archive\\original_backup\\batch_convert_broken_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "validate_conversions(results)",
        "files": [
          "batch_convert_broken_tests.py",
          "archive\\legacy_scripts\\batch_convert_broken_tests.py",
          "archive\\original_backup\\batch_convert_broken_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_build_call_graph(self)",
        "files": [
          "comprehensive_classical_analysis_methods.py",
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_call_graph(self)",
        "files": [
          "comprehensive_classical_analysis_methods.py",
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_identifiers(self)",
        "files": [
          "comprehensive_classical_analysis_methods.py",
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_file_content(self, file_path)",
        "files": [
          "comprehensive_classical_analysis_methods.py",
          "testmaster\\analysis\\comprehensive_analysis\\base_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_ast(self, file_path)",
        "files": [
          "comprehensive_classical_analysis_methods.py",
          "testmaster\\analysis\\comprehensive_analysis\\base_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_nesting_depth(self, node)",
        "files": [
          "comprehensive_classical_analysis_methods.py",
          "core\\intelligence\\analysis\\semantic_pattern_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "build_test_for_module(module_path)",
        "files": [
          "convert_with_generativeai.py",
          "archive\\legacy_scripts\\convert_with_generativeai.py",
          "archive\\original_backup\\convert_with_generativeai.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "calculate_complexity_and_depth(node, depth)",
        "files": [
          "enhanced_incremental_ast_engine.py",
          "analysis\\comprehensive_analysis\\realtime_analysis\\realtime_ast_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_collect_security_metrics(self)",
        "files": [
          "enhanced_realtime_security_monitor.py",
          "dashboard\\dashboard_core\\system_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_security_status()",
        "files": [
          "enhanced_security_dashboard_api.py",
          "core\\security\\operational_security.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_security_trends()",
        "files": [
          "enhanced_security_dashboard_api.py",
          "core\\intelligence\\security\\security_api.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_dashboard_summary()",
        "files": [
          "enhanced_security_dashboard_api.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "dashboard\\api\\analytics.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_cognitive_complexity(self, tree)",
        "files": [
          "enhanced_security_intelligence_agent.py",
          "core\\intelligence\\documentation\\metrics_reporter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_nesting_depth(self, tree)",
        "files": [
          "enhanced_security_intelligence_agent.py",
          "live_code_quality_monitor.py",
          "testmaster\\orchestrator\\file_tagger.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "calculate_depth(node, depth)",
        "files": [
          "enhanced_security_intelligence_agent.py",
          "live_code_quality_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "make_llm_call(prompt, purpose)",
        "files": [
          "enhanced_self_healing_verifier.py",
          "archive\\legacy_scripts\\enhanced_self_healing_verifier.py",
          "archive\\original_backup\\enhanced_self_healing_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "verify_test_exhaustiveness(test_code, module_code, module_name, pass_number)",
        "files": [
          "enhanced_self_healing_verifier.py",
          "archive\\legacy_scripts\\enhanced_self_healing_verifier.py",
          "archive\\original_backup\\enhanced_self_healing_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_enhanced_test(module_path, max_healing_iterations, max_verifier_passes)",
        "files": [
          "enhanced_self_healing_verifier.py",
          "archive\\legacy_scripts\\enhanced_self_healing_verifier.py",
          "archive\\original_backup\\enhanced_self_healing_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "process_modules_enhanced(modules, max_workers)",
        "files": [
          "enhanced_self_healing_verifier.py",
          "archive\\legacy_scripts\\enhanced_self_healing_verifier.py",
          "archive\\original_backup\\enhanced_self_healing_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_source_module(self, module_name)",
        "files": [
          "enhance_auto_generated_tests.py",
          "archive\\legacy_scripts\\enhance_auto_generated_tests.py",
          "archive\\original_backup\\enhance_auto_generated_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_init_args(self, class_node)",
        "files": [
          "enhance_auto_generated_tests.py",
          "archive\\legacy_scripts\\enhance_auto_generated_tests.py",
          "archive\\original_backup\\enhance_auto_generated_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "enhance_test_file(self, test_file)",
        "files": [
          "enhance_auto_generated_tests.py",
          "archive\\legacy_scripts\\enhance_auto_generated_tests.py",
          "archive\\original_backup\\enhance_auto_generated_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "enhance_initialization_tests(self, content, analysis)",
        "files": [
          "enhance_auto_generated_tests.py",
          "archive\\legacy_scripts\\enhance_auto_generated_tests.py",
          "archive\\original_backup\\enhance_auto_generated_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "enhance_method_tests(self, content, analysis)",
        "files": [
          "enhance_auto_generated_tests.py",
          "archive\\legacy_scripts\\enhance_auto_generated_tests.py",
          "archive\\original_backup\\enhance_auto_generated_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "enhance_edge_case_tests(self, content, analysis)",
        "files": [
          "enhance_auto_generated_tests.py",
          "archive\\legacy_scripts\\enhance_auto_generated_tests.py",
          "archive\\original_backup\\enhance_auto_generated_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "enhance_integration_tests(self, content, analysis)",
        "files": [
          "enhance_auto_generated_tests.py",
          "archive\\legacy_scripts\\enhance_auto_generated_tests.py",
          "archive\\original_backup\\enhance_auto_generated_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_test_data(self, class_name, init_args)",
        "files": [
          "enhance_auto_generated_tests.py",
          "archive\\legacy_scripts\\enhance_auto_generated_tests.py",
          "archive\\original_backup\\enhance_auto_generated_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_enhancement_marker(self, content)",
        "files": [
          "enhance_auto_generated_tests.py",
          "archive\\legacy_scripts\\enhance_auto_generated_tests.py",
          "archive\\original_backup\\enhance_auto_generated_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "enhance_all_tests(self)",
        "files": [
          "enhance_auto_generated_tests.py",
          "archive\\legacy_scripts\\enhance_auto_generated_tests.py",
          "archive\\original_backup\\enhance_auto_generated_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "replace_method_call(match)",
        "files": [
          "enhance_auto_generated_tests.py",
          "archive\\legacy_scripts\\enhance_auto_generated_tests.py",
          "archive\\original_backup\\enhance_auto_generated_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "fix_realtime_monitoring()",
        "files": [
          "final_integration_fix.py",
          "restore_missing_methods.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "fix_resource_optimization()",
        "files": [
          "final_integration_fix.py",
          "restore_missing_methods.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "fix_service_mesh()",
        "files": [
          "final_integration_fix.py",
          "restore_missing_methods.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "fix_orchestration_engine()",
        "files": [
          "fix_backend_issues.py",
          "fix_to_100_percent.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "fix_analytics_aggregator()",
        "files": [
          "fix_backend_issues.py",
          "fix_to_100_percent.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "fix_load_balancing_system()",
        "files": [
          "fix_integration_issues_final.py",
          "restore_missing_methods.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_error_recovery_alias()",
        "files": [
          "fix_integration_tests.py",
          "fix_integration_tests_simple.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_features(self, file_path)",
        "files": [
          "IMPLEMENTATION_STATUS_CHECK.py",
          "archive\\archive_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_module(module_path)",
        "files": [
          "implement_test_stubs.py",
          "archive\\legacy_scripts\\implement_test_stubs.py",
          "archive\\original_backup\\implement_test_stubs.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_test_implementation(class_info, module_name)",
        "files": [
          "implement_test_stubs.py",
          "archive\\legacy_scripts\\implement_test_stubs.py",
          "archive\\original_backup\\implement_test_stubs.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_function_tests(functions, module_name)",
        "files": [
          "implement_test_stubs.py",
          "archive\\legacy_scripts\\implement_test_stubs.py",
          "archive\\original_backup\\implement_test_stubs.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "implement_test_stub(stub_path, module_path)",
        "files": [
          "implement_test_stubs.py",
          "archive\\legacy_scripts\\implement_test_stubs.py",
          "archive\\original_backup\\implement_test_stubs.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "batch_implement_stubs(test_dir, limit)",
        "files": [
          "implement_test_stubs.py",
          "archive\\legacy_scripts\\implement_test_stubs.py",
          "archive\\original_backup\\implement_test_stubs.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_test_template(module_name, output_path)",
        "files": [
          "implement_test_stubs.py",
          "archive\\legacy_scripts\\implement_test_stubs.py",
          "archive\\original_backup\\implement_test_stubs.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_test_coverage(test_file, module_file)",
        "files": [
          "independent_test_verifier.py",
          "archive\\legacy_scripts\\independent_test_verifier.py",
          "archive\\original_backup\\independent_test_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "verify_with_llm(test_file, module_file, basic_metrics)",
        "files": [
          "independent_test_verifier.py",
          "archive\\legacy_scripts\\independent_test_verifier.py",
          "archive\\original_backup\\independent_test_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "verify_test_suite(test_dir, module_dir, limit)",
        "files": [
          "independent_test_verifier.py",
          "archive\\legacy_scripts\\independent_test_verifier.py",
          "archive\\original_backup\\independent_test_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_main(self, main_file)",
        "files": [
          "integration_test_generator.py",
          "archive\\legacy_scripts\\integration_test_generator.py",
          "archive\\original_backup\\integration_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_main_flow(self, tree)",
        "files": [
          "integration_test_generator.py",
          "archive\\legacy_scripts\\integration_test_generator.py",
          "archive\\original_backup\\integration_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_trace_call_chains(self, tree)",
        "files": [
          "integration_test_generator.py",
          "archive\\legacy_scripts\\integration_test_generator.py",
          "archive\\original_backup\\integration_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_identify_critical_paths(self, content)",
        "files": [
          "integration_test_generator.py",
          "archive\\legacy_scripts\\integration_test_generator.py",
          "archive\\original_backup\\integration_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_modules_from_calls(self, calls)",
        "files": [
          "integration_test_generator.py",
          "archive\\legacy_scripts\\integration_test_generator.py",
          "archive\\original_backup\\integration_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_trace_data_flow(self, tree, calls)",
        "files": [
          "integration_test_generator.py",
          "archive\\legacy_scripts\\integration_test_generator.py",
          "archive\\original_backup\\integration_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_integration_tests(self, paths)",
        "files": [
          "integration_test_generator.py",
          "archive\\legacy_scripts\\integration_test_generator.py",
          "archive\\original_backup\\integration_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_path_test(self, path, index)",
        "files": [
          "integration_test_generator.py",
          "archive\\legacy_scripts\\integration_test_generator.py",
          "archive\\original_backup\\integration_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_sequential_test(self, steps)",
        "files": [
          "integration_test_generator.py",
          "archive\\legacy_scripts\\integration_test_generator.py",
          "archive\\original_backup\\integration_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_pipeline_test(self, modules)",
        "files": [
          "integration_test_generator.py",
          "archive\\legacy_scripts\\integration_test_generator.py",
          "archive\\original_backup\\integration_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_error_path_test(self, path)",
        "files": [
          "integration_test_generator.py",
          "archive\\legacy_scripts\\integration_test_generator.py",
          "archive\\original_backup\\integration_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_data_flow_test(self, flow)",
        "files": [
          "integration_test_generator.py",
          "archive\\legacy_scripts\\integration_test_generator.py",
          "archive\\original_backup\\integration_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_data_flow_tests(self, paths)",
        "files": [
          "integration_test_generator.py",
          "archive\\legacy_scripts\\integration_test_generator.py",
          "archive\\original_backup\\integration_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_end_to_end_test(self, paths)",
        "files": [
          "integration_test_generator.py",
          "archive\\legacy_scripts\\integration_test_generator.py",
          "archive\\original_backup\\integration_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_from_main(self, main_file)",
        "files": [
          "integration_test_generator.py",
          "archive\\legacy_scripts\\integration_test_generator.py",
          "archive\\original_backup\\integration_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_test_utilities(self)",
        "files": [
          "integration_test_generator.py",
          "archive\\legacy_scripts\\integration_test_generator.py",
          "archive\\original_backup\\integration_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_and_save(self, output_file)",
        "files": [
          "integration_test_generator.py",
          "archive\\legacy_scripts\\integration_test_generator.py",
          "archive\\original_backup\\integration_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_module_ast(self, module_path)",
        "files": [
          "intelligent_test_builder_offline.py",
          "archive\\legacy_scripts\\intelligent_test_builder_offline.py",
          "archive\\original_backup\\intelligent_test_builder_offline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_intelligent_test_template(self, module_path, analysis)",
        "files": [
          "intelligent_test_builder_offline.py",
          "archive\\legacy_scripts\\intelligent_test_builder_offline.py",
          "archive\\original_backup\\intelligent_test_builder_offline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_complexity_severity(self, complexity)",
        "files": [
          "live_code_quality_monitor.py",
          "core\\intelligence\\analysis\\debt_code_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_naming_conventions(self, tree, file_path)",
        "files": [
          "live_code_quality_monitor.py",
          "core\\intelligence\\analysis\\debt_code_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_watch_path(self, path)",
        "files": [
          "live_code_quality_monitor.py",
          "testmaster\\monitoring\\file_watcher.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "remove_watch_path(self, path)",
        "files": [
          "live_code_quality_monitor.py",
          "testmaster\\monitoring\\file_watcher.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_overall_score(self, metrics)",
        "files": [
          "live_code_quality_monitor.py",
          "testmaster\\agent_qa\\quality_inspector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_metrics(self)",
        "files": [
          "llm_analysis_monitor.py",
          "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py",
          "core\\testing\\adaptive_testing_framework.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_file(test_path)",
        "files": [
          "quick_test_summary.py",
          "archive\\legacy_scripts\\quick_test_summary.py",
          "archive\\original_backup\\quick_test_summary.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_all(self)",
        "files": [
          "realtime_metrics_collector.py",
          "core\\testing\\react_agent_testing.py",
          "core\\testing\\session_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_default_alerts(self)",
        "files": [
          "realtime_metrics_collector.py",
          "core\\intelligence\\dashboard\\intelligence_backend.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_collect_metrics(self)",
        "files": [
          "real_time_monitor.py",
          "core\\intelligence\\security\\security_dashboard.py",
          "dashboard\\dashboard_core\\metrics_feed.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_metrics_summary(self)",
        "files": [
          "real_time_monitor.py",
          "core\\intelligence\\monitoring\\qa_monitor.py",
          "testmaster\\intelligence\\llm_providers\\provider_optimization.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, deployment_mode)",
        "files": [
          "restored_json_5.py",
          "archive\\phase5_archive\\replaced_code\\enterprise_deployment_20250819_195602.py",
          "deployment\\enterprise_deployment.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_deployment_config(self)",
        "files": [
          "restored_json_5.py",
          "archive\\phase5_archive\\replaced_code\\enterprise_deployment_20250819_195602.py",
          "deployment\\enterprise_deployment.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "deploy_service(self, config)",
        "files": [
          "restored_json_5.py",
          "archive\\phase5_archive\\replaced_code\\enterprise_deployment_20250819_195602.py",
          "deployment\\enterprise_deployment.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "enable_auto_scaling(self, service_id, scale_up_threshold, scale_down_threshold)",
        "files": [
          "restored_json_5.py",
          "archive\\phase5_archive\\replaced_code\\enterprise_deployment_20250819_195602.py",
          "deployment\\enterprise_deployment.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "enable_disaster_recovery(self)",
        "files": [
          "restored_json_5.py",
          "archive\\phase5_archive\\replaced_code\\enterprise_deployment_20250819_195602.py",
          "deployment\\enterprise_deployment.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_deployment_status(self)",
        "files": [
          "restored_json_5.py",
          "archive\\phase5_archive\\replaced_code\\enterprise_deployment_20250819_195602.py",
          "deployment\\enterprise_deployment.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, service_type)",
        "files": [
          "restored_json_5.py",
          "archive\\phase5_archive\\replaced_code\\enterprise_deployment_20250819_195602.py",
          "deployment\\enterprise_deployment.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_next_instance(self, instances)",
        "files": [
          "restored_json_5.py",
          "archive\\phase5_archive\\replaced_code\\enterprise_deployment_20250819_195602.py",
          "deployment\\enterprise_deployment.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_robust_implementations_for_missing()",
        "files": [
          "restore_archive_robust.py",
          "restore_robust_implementations.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "run_single_test(test_file)",
        "files": [
          "run_intelligent_tests.py",
          "archive\\legacy_scripts\\run_intelligent_tests.py",
          "archive\\original_backup\\run_intelligent_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "run_all_intelligent_tests()",
        "files": [
          "run_intelligent_tests.py",
          "archive\\legacy_scripts\\run_intelligent_tests.py",
          "archive\\original_backup\\run_intelligent_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_markdown_report(report)",
        "files": [
          "run_intelligent_tests.py",
          "archive\\legacy_scripts\\run_intelligent_tests.py",
          "archive\\original_backup\\run_intelligent_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, gold_standard_path)",
        "files": [
          "specialized_test_generators.py",
          "archive\\legacy_scripts\\specialized_test_generators.py",
          "archive\\original_backup\\specialized_test_generators.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_regression_suite(self)",
        "files": [
          "specialized_test_generators.py",
          "archive\\legacy_scripts\\specialized_test_generators.py",
          "archive\\original_backup\\specialized_test_generators.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_performance_suite(self)",
        "files": [
          "specialized_test_generators.py",
          "archive\\legacy_scripts\\specialized_test_generators.py",
          "archive\\original_backup\\specialized_test_generators.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_data_validation_suite(self)",
        "files": [
          "specialized_test_generators.py",
          "archive\\legacy_scripts\\specialized_test_generators.py",
          "archive\\original_backup\\specialized_test_generators.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_llm_test_suite(self)",
        "files": [
          "specialized_test_generators.py",
          "archive\\legacy_scripts\\specialized_test_generators.py",
          "archive\\original_backup\\specialized_test_generators.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_config_test_suite(self)",
        "files": [
          "specialized_test_generators.py",
          "archive\\legacy_scripts\\specialized_test_generators.py",
          "archive\\original_backup\\specialized_test_generators.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_experiment_test_suite(self)",
        "files": [
          "specialized_test_generators.py",
          "archive\\legacy_scripts\\specialized_test_generators.py",
          "archive\\original_backup\\specialized_test_generators.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_all_tests(self, output_dir)",
        "files": [
          "specialized_test_generators.py",
          "archive\\legacy_scripts\\specialized_test_generators.py",
          "archive\\original_backup\\specialized_test_generators.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_test_runner(self)",
        "files": [
          "specialized_test_generators.py",
          "archive\\legacy_scripts\\specialized_test_generators.py",
          "archive\\original_backup\\specialized_test_generators.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_load_config(self, config_path)",
        "files": [
          "testmaster_orchestrator.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_handle_deduplicate(self, task)",
        "files": [
          "testmaster_orchestrator.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_handle_analyze_coverage(self, task)",
        "files": [
          "testmaster_orchestrator.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_handle_generate_report(self, task)",
        "files": [
          "testmaster_orchestrator.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_handle_monitor_changes(self, task)",
        "files": [
          "testmaster_orchestrator.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_handle_batch_convert(self, task)",
        "files": [
          "testmaster_orchestrator.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_handle_incremental_update(self, task)",
        "files": [
          "testmaster_orchestrator.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_save_progress(self)",
        "files": [
          "testmaster_orchestrator.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "load_progress(self)",
        "files": [
          "testmaster_orchestrator.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_function()",
        "files": [
          "test_advanced_telemetry_system.py",
          "test_our_implementations.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_api_endpoints(self)",
        "files": [
          "test_backend_health.py",
          "dashboard\\automated_frontend_tester.py",
          "dashboard\\test_frontend_integration.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_shared_state()",
        "files": [
          "test_backend_health.py",
          "test_enhancements.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_feature_flags()",
        "files": [
          "test_backend_health.py",
          "test_enhancements.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_risk_coverage(self, tests)",
        "files": [
          "test_complexity_prioritizer.py",
          "core\\intelligence\\testing\\test_selector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "run_integration_tests()",
        "files": [
          "test_dynamic_handoff_integration.py",
          "tests\\integration\\test_knowledge_graph_integration.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "estimate_cost()",
        "files": [
          "test_enhanced_server.py",
          "dashboard\\api\\llm.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "run_all_tests()",
        "files": [
          "test_enhancements.py",
          "test_intelligence_integration.py",
          "tests\\integration\\test_knowledge_graph_simple.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_module(self, module_path, context)",
        "files": [
          "test_enhancements.py",
          "test_tracking_manager_integration.py",
          "testmaster\\generators\\base.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_test_code(self, module_path, analysis, context)",
        "files": [
          "test_enhancements.py",
          "test_tracking_manager_integration.py",
          "testmaster\\generators\\base.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_backward_compatibility()",
        "files": [
          "test_exhaustive_features.py",
          "test_intelligence_integration.py",
          "test_unified_integration.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_fault_tolerance(self)",
        "files": [
          "test_integration_systems.py",
          "core\\testing\\distributed_test_coordinator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_imports()",
        "files": [
          "test_intelligence_integration.py",
          "test_phase1_simple.py",
          "test_phase2_simple.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_component_imports()",
        "files": [
          "test_phase2_final_validation.py",
          "test_phase2_quick_validation.py",
          "test_phase2_simple_validation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_component_initialization()",
        "files": [
          "test_phase2_final_validation.py",
          "test_phase2_quick_validation.py",
          "test_phase2_simple_validation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_package_structure()",
        "files": [
          "test_phase2_final_validation.py",
          "test_phase2_quick_validation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "chunk_callback(chunk)",
        "files": [
          "test_streaming_generation.py",
          "test_streaming_simple.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "process_batch(modules, batch_size)",
        "files": [
          "turbo_converter.py",
          "archive\\legacy_scripts\\turbo_converter.py",
          "archive\\original_backup\\turbo_converter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_statistics(self, result)",
        "files": [
          "unified_security_scanner.py",
          "core\\intelligence\\testing\\components\\execution_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_monitoring_worker(self)",
        "files": [
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_collect_performance_data(self)",
        "files": [
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_metrics_history()",
        "files": [
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_realtime_performance()",
        "files": [
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_components()",
        "files": [
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_config()",
        "files": [
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_integration()",
        "files": [
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_module_analysis(module_path)",
        "files": [
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_on_demand()",
        "files": [
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "list_llm_modules()",
        "files": [
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_ast_analysis()",
        "files": [
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "estimate_llm_cost()",
        "files": [
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "manage_codebases()",
        "files": [
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_refactoring_hierarchy()",
        "files": [
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_refactoring_opportunities()",
        "files": [
          "web_monitor.py",
          "archive\\20250818\\web_monitor.py",
          "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "read_module_content(module_path)",
        "files": [
          "week_5_8_batch_converter.py",
          "archive\\legacy_scripts\\week_5_8_batch_converter.py",
          "archive\\original_backup\\week_5_8_batch_converter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_intelligent_test(module_path, content)",
        "files": [
          "week_5_8_batch_converter.py",
          "archive\\legacy_scripts\\week_5_8_batch_converter.py",
          "archive\\original_backup\\week_5_8_batch_converter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "fix_import_paths(test_code, module_path)",
        "files": [
          "week_5_8_batch_converter.py",
          "archive\\legacy_scripts\\week_5_8_batch_converter.py",
          "archive\\original_backup\\week_5_8_batch_converter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "save_test_file(test_code, module_name)",
        "files": [
          "week_5_8_batch_converter.py",
          "archive\\legacy_scripts\\week_5_8_batch_converter.py",
          "archive\\original_backup\\week_5_8_batch_converter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "convert_batch(modules, batch_name)",
        "files": [
          "week_5_8_batch_converter.py",
          "archive\\legacy_scripts\\week_5_8_batch_converter.py",
          "archive\\original_backup\\week_5_8_batch_converter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_priority_modules()",
        "files": [
          "week_5_8_batch_converter.py",
          "archive\\legacy_scripts\\week_5_8_batch_converter.py",
          "archive\\original_backup\\week_5_8_batch_converter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "convert_batch(modules, batch_name, max_modules)",
        "files": [
          "week_7_8_converter.py",
          "archive\\legacy_scripts\\week_7_8_converter.py",
          "archive\\original_backup\\week_7_8_converter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "write_real_test_for_module(self, module_name, contents)",
        "files": [
          "write_real_tests.py",
          "archive\\legacy_scripts\\write_real_tests.py",
          "archive\\original_backup\\write_real_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_class_tests(self, classes)",
        "files": [
          "write_real_tests.py",
          "archive\\legacy_scripts\\write_real_tests.py",
          "archive\\original_backup\\write_real_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_function_tests(self, functions)",
        "files": [
          "write_real_tests.py",
          "archive\\legacy_scripts\\write_real_tests.py",
          "archive\\original_backup\\write_real_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_class_sections(self, classes, module_name)",
        "files": [
          "write_real_tests.py",
          "archive\\legacy_scripts\\write_real_tests.py",
          "archive\\original_backup\\write_real_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_function_sections(self, functions, module_name)",
        "files": [
          "write_real_tests.py",
          "archive\\legacy_scripts\\write_real_tests.py",
          "archive\\original_backup\\write_real_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_message_handlers(self)",
        "files": [
          "agents\\roles\\base_role.py",
          "archive\\oversized_modules_20250821_042018\\coordination\\agent_coordination_protocols.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, configuration)",
        "files": [
          "agents\\team\\testing_team.py",
          "archive\\phase5_archive\\replaced_code\\testing_team_20250819_195602.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_team(self)",
        "files": [
          "agents\\team\\testing_team.py",
          "archive\\phase5_archive\\replaced_code\\testing_team_20250819_195602.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_collaborations(self)",
        "files": [
          "agents\\team\\testing_team.py",
          "archive\\phase5_archive\\replaced_code\\testing_team_20250819_195602.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_team_metrics(self, workflow_result)",
        "files": [
          "agents\\team\\testing_team.py",
          "archive\\phase5_archive\\replaced_code\\testing_team_20250819_195602.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_team_status(self)",
        "files": [
          "agents\\team\\testing_team.py",
          "archive\\phase5_archive\\replaced_code\\testing_team_20250819_195602.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_standard_team(cls)",
        "files": [
          "agents\\team\\testing_team.py",
          "archive\\phase5_archive\\replaced_code\\testing_team_20250819_195602.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_minimal_team(cls)",
        "files": [
          "agents\\team\\testing_team.py",
          "archive\\phase5_archive\\replaced_code\\testing_team_20250819_195602.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_halstead_metrics(self, tree)",
        "files": [
          "analysis\\comprehensive_analysis\\anomaly_detection\\anomaly_detection_analyzer.py",
          "core\\intelligence\\documentation\\metrics_reporter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_risk_level(self, risk_score)",
        "files": [
          "analysis\\comprehensive_analysis\\anomaly_detection\\anomaly_detection_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\supply_chain_security.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_cognitive_complexity(self)",
        "files": [
          "analysis\\comprehensive_analysis\\cognitive_load\\cognitive_load_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\complexity_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_frameworks(self, content)",
        "files": [
          "analysis\\comprehensive_analysis\\data_pipeline\\data_pipeline_analyzer.py",
          "analysis\\comprehensive_analysis\\workflow_analysis\\workflow_pattern_detector.py",
          "core\\intelligence\\analysis\\ml_code_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_tensor_operations(self, tree, content, file_path)",
        "files": [
          "analysis\\comprehensive_analysis\\ml_analysis\\ml_tensor_analyzer.py",
          "core\\intelligence\\analysis\\ml_code_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_repository(self, repo_url, repo_type)",
        "files": [
          "analysis\\comprehensive_analysis\\pattern_mining\\cross_repo_pattern_miner.py",
          "analysis\\comprehensive_analysis\\pattern_mining\\cross_repo_pattern_miner.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_patterns_by_type(self, pattern_type)",
        "files": [
          "analysis\\comprehensive_analysis\\pattern_mining\\cross_repo_pattern_miner.py",
          "analysis\\comprehensive_analysis\\pattern_mining\\cross_repo_pattern_miner.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_cleanup_cache(self)",
        "files": [
          "analysis\\comprehensive_analysis\\realtime_analysis\\realtime_ast_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_handle_file_deletion(self, file_path)",
        "files": [
          "analysis\\comprehensive_analysis\\realtime_analysis\\realtime_ast_engine.py",
          "analysis\\comprehensive_analysis\\realtime_analysis\\realtime_ast_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_on_file_change(self, change)",
        "files": [
          "analysis\\comprehensive_analysis\\realtime_analysis\\realtime_ast_engine.py",
          "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_dependencies(self, tree)",
        "files": [
          "analysis\\comprehensive_analysis\\realtime_analysis\\realtime_ast_engine.py",
          "core\\intelligence\\testing\\ai_generation\\claude_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_security_rules(self)",
        "files": [
          "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py",
          "core\\security\\container_security_validator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_alert(self, alert)",
        "files": [
          "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py",
          "testmaster\\ui\\dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "suppress_alert(self, alert_id)",
        "files": [
          "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py",
          "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "mark_false_positive(self, alert_id)",
        "files": [
          "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py",
          "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_save_alert_to_db(self, alert)",
        "files": [
          "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_security_metrics(self)",
        "files": [
          "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py",
          "core\\intelligence\\security\\enterprise\\security_validator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "has_cycle(node)",
        "files": [
          "analysis\\comprehensive_analysis\\workflow_analysis\\workflow_pattern_detector.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_error_signature(self)",
        "files": [
          "analytics\\failure_analyzer.py",
          "archive\\original_backup\\analytics\\failure_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, data_dir)",
        "files": [
          "analytics\\failure_analyzer.py",
          "archive\\original_backup\\analytics\\failure_analyzer.py",
          "testmaster\\overview\\regression_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "record_failure(self, test_name, error_message, error_type, stack_trace, duration)",
        "files": [
          "analytics\\failure_analyzer.py",
          "archive\\original_backup\\analytics\\failure_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_flakiness_score(self, test_name)",
        "files": [
          "analytics\\failure_analyzer.py",
          "archive\\original_backup\\analytics\\failure_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_patterns(self)",
        "files": [
          "analytics\\failure_analyzer.py",
          "archive\\original_backup\\analytics\\failure_analyzer.py",
          "core\\intelligence\\monitoring\\pattern_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_pattern(self, signature, records)",
        "files": [
          "analytics\\failure_analyzer.py",
          "archive\\original_backup\\analytics\\failure_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_pattern(self, pattern, new_records)",
        "files": [
          "analytics\\failure_analyzer.py",
          "archive\\original_backup\\analytics\\failure_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_correlations(self, records)",
        "files": [
          "analytics\\failure_analyzer.py",
          "archive\\original_backup\\analytics\\failure_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_suggest_root_causes(self, signature, records, correlations)",
        "files": [
          "analytics\\failure_analyzer.py",
          "archive\\original_backup\\analytics\\failure_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "predict_failures(self, test_names, changed_files)",
        "files": [
          "analytics\\failure_analyzer.py",
          "archive\\original_backup\\analytics\\failure_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "identify_flaky_tests(self, threshold)",
        "files": [
          "analytics\\failure_analyzer.py",
          "archive\\original_backup\\analytics\\failure_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_failure_trends(self, days)",
        "files": [
          "analytics\\failure_analyzer.py",
          "archive\\original_backup\\analytics\\failure_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_trend_direction(self, daily_counts)",
        "files": [
          "analytics\\failure_analyzer.py",
          "archive\\original_backup\\analytics\\failure_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "save_failure_record(self, record)",
        "files": [
          "analytics\\failure_analyzer.py",
          "archive\\original_backup\\analytics\\failure_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "load_data(self)",
        "files": [
          "analytics\\failure_analyzer.py",
          "archive\\original_backup\\analytics\\failure_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "save_data(self)",
        "files": [
          "analytics\\failure_analyzer.py",
          "archive\\original_backup\\analytics\\failure_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "require_orchestration(f)",
        "files": [
          "api\\orchestration_flask.py",
          "dashboard\\api\\orchestration_flask.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_orchestration_status()",
        "files": [
          "api\\orchestration_flask.py",
          "dashboard\\api\\orchestration_flask.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "list_agents()",
        "files": [
          "api\\orchestration_flask.py",
          "dashboard\\api\\crew_orchestration.py",
          "dashboard\\api\\orchestration_flask.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_agent()",
        "files": [
          "api\\orchestration_flask.py",
          "dashboard\\api\\orchestration_flask.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_agent(agent_id)",
        "files": [
          "api\\orchestration_flask.py",
          "dashboard\\api\\orchestration_flask.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_test_crew(crew_type)",
        "files": [
          "api\\orchestration_flask.py",
          "dashboard\\api\\orchestration_flask.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "list_tasks()",
        "files": [
          "api\\orchestration_flask.py",
          "dashboard\\api\\orchestration_flask.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "list_available_tools()",
        "files": [
          "api\\orchestration_flask.py",
          "dashboard\\api\\orchestration_flask.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "list_observability_sessions()",
        "files": [
          "api\\orchestration_flask.py",
          "dashboard\\api\\orchestration_flask.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_session_replay(session_id)",
        "files": [
          "api\\orchestration_flask.py",
          "dashboard\\api\\orchestration_flask.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_system_metrics()",
        "files": [
          "api\\orchestration_flask.py",
          "dashboard\\api\\orchestration_flask.py",
          "testmaster\\telemetry\\system_profiler.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "init_orchestration_api()",
        "files": [
          "api\\orchestration_flask.py",
          "dashboard\\api\\orchestration_flask.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "require_phase2(f)",
        "files": [
          "api\\phase2_api.py",
          "dashboard\\api\\phase2_api.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "list_teams()",
        "files": [
          "api\\phase2_api.py",
          "dashboard\\api\\phase2_api.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_team(team_id)",
        "files": [
          "api\\phase2_api.py",
          "dashboard\\api\\phase2_api.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "list_monitors()",
        "files": [
          "api\\phase2_api.py",
          "dashboard\\api\\phase2_api.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_monitor(monitor_id)",
        "files": [
          "api\\phase2_api.py",
          "dashboard\\api\\phase2_api.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_phase2_status()",
        "files": [
          "api\\phase2_api.py",
          "dashboard\\api\\phase2_api.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_workflow_templates()",
        "files": [
          "api\\phase2_api.py",
          "dashboard\\api\\phase2_api.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_phase2_capabilities()",
        "files": [
          "api\\phase2_api.py",
          "dashboard\\api\\phase2_api.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "phase2_health_check()",
        "files": [
          "api\\phase2_api.py",
          "dashboard\\api\\phase2_api.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "init_phase2_api()",
        "files": [
          "api\\phase2_api.py",
          "dashboard\\api\\phase2_api.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_test_smells(self)",
        "files": [
          "archive\\advanced_testing_intelligence.py",
          "testmaster\\analysis\\comprehensive_analysis\\testing_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_predict_flaky_tests(self)",
        "files": [
          "archive\\advanced_testing_intelligence.py",
          "testmaster\\analysis\\comprehensive_analysis\\testing_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_identify_property_testing_opportunities(self)",
        "files": [
          "archive\\advanced_testing_intelligence.py",
          "testmaster\\analysis\\comprehensive_analysis\\testing_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_testing_dashboard_data(self)",
        "files": [
          "archive\\advanced_testing_intelligence.py",
          "core\\intelligence\\testing\\automation\\continuous_testing_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_load_test_patterns(self)",
        "files": [
          "archive\\advanced_testing_intelligence.py",
          "core\\intelligence\\security\\enterprise\\validation\\penetration_tester.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_archived_features(self, phase)",
        "files": [
          "archive\\archive_system.py",
          "validation\\phase_validator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "run_full_analysis(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_run_tests_with_coverage(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_modules(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_module(self, file_path)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\overview\\structure_mapper.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_functions(self, file_path, executable_lines, missing_lines)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_function(self, func_node, executable_lines, missing_lines)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_complexity(self, func_node)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_find_test_files(self, source_file)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\overview\\coverage_intelligence.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_categorize_tests(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_branch_coverage(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_function_coverage(self, modules)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_print_summary(self, report)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_uncovered_functions(self, report)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "save_report(self, report, output_path)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "perform_comprehensive_analysis(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_software_metrics(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_graph_structures(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_code_clones(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_security_patterns(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_linguistic_features(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_evolution_patterns(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_perform_statistical_analysis(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_structural_patterns(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_comprehensive_complexity_analysis(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_comprehensive_quality_analysis(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_comprehensive_summary(self, results)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_lcom(self, class_node)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\coupling_cohesion.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_distribution(self, values)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\base_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_inheritance_metrics(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\inheritance_polymorphism.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_polymorphism_metrics(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\inheritance_polymorphism.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_encapsulation_metrics(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_abstraction_metrics(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_build_control_flow_graphs(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_build_dependency_graph(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_control_flows(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_dependency_graph(self, graph)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_centrality_measures(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_graph_clustering(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_graph_connectivity(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_graph_cycles(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_critical_paths(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_line_similarity(self, lines1, lines2)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_structural_similarity(self, lines1, lines2)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_code_structure(self, lines)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_structural_clones(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\clone_detection.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_semantic_clones(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\clone_detection.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_group_clone_families(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\clone_detection.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_clone_evolution(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_clone_metrics(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\clone_detection.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_antipatterns(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_identify_security_hotspots(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\security_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_input_validation(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\security_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_authentication(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\security_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_authorization(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\security_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_cryptography_usage(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\security_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_sql_injection_risks(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_xss_vulnerabilities(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_naming_conventions(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_comments(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_readability_metrics(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_abbreviations(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_domain_terms(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_nl_patterns(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_file_ages(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\evolution_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_growth_patterns(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\evolution_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_refactoring_patterns(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\evolution_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_identify_change_hotspots(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\evolution_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_stability_metrics(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\evolution_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_change_frequency(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_code_churn(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_developer_patterns(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\evolution_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_temporal_coupling(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\evolution_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_distributions(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_correlations(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_outliers(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_perform_clustering(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_trends(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "core\\intelligence\\monitoring\\qa_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_variance(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_entropy_measures(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_apply_information_theory(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_perform_statistical_tests(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_design_patterns(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\structural_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_is_singleton_pattern(self, class_node, content)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\structural_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_is_factory_pattern(self, class_node, content)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\structural_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_is_observer_pattern(self, class_node, content)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\structural_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_is_decorator_pattern(self, class_node, content)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\structural_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_is_strategy_pattern(self, class_node, content)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\structural_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_is_command_pattern(self, class_node, content)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\structural_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_architectural_patterns(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_layered_architecture(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_modular_structure(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_package_structure(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_interfaces(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_abstract_coupling(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_concrete_coupling(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_fan_metrics(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_assess_technical_debt(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\quality_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_maintainability_factors(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_reliability_indicators(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_performance_indicators(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_portability_metrics(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_usability_metrics(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_testability_metrics(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_reusability_metrics(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detailed_cyclomatic_analysis(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_cognitive_complexity(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_npath_complexity(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_essential_complexity(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_data_complexity(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_system_complexity(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_interface_complexity(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_temporal_complexity(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_structural_complexity(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "perform_dependency_analysis(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_import_dependencies(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_function_signatures(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\api_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_cross_module_references(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_find_orphaned_modules(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_dependency_depth(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "assess_codebase_health(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_assess_code_quality(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_assess_architectural_integrity(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_assess_test_coverage_health(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_assess_dependency_health(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_assess_documentation_health(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_health_trends(self)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_health_recommendations(self, metrics)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "calculate_depth(class_name)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "has_cycle(node, path)",
        "files": [
          "archive\\coverage_analyzer_original_2697_lines.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_business_rules(self)",
        "files": [
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_validation_rules(self)",
        "files": [
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_calculation_rules(self)",
        "files": [
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_authorization_rules(self)",
        "files": [
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_workflows(self)",
        "files": [
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_state_machines(self)",
        "files": [
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_domain_model(self)",
        "files": [
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_business_constraints(self)",
        "files": [
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_decision_logic(self)",
        "files": [
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_business_events(self)",
        "files": [
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_compliance_rules(self)",
        "files": [
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_sla_rules(self)",
        "files": [
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_pricing_rules(self)",
        "files": [
          "archive\\from_subarchive_business_rule_analysis_original.py",
          "archive\\modularization_20250821\\business_analyzer_original.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_identify_energy_hotspots(self)",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_algorithm_efficiency(self)",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_resource_usage(self)",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_io_patterns(self)",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_cpu_patterns(self)",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_memory_patterns(self)",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\performance_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_network_patterns(self)",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\resource_io_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_green_practices(self)",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_anti_patterns(self)",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_identify_optimizations(self)",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_estimate_carbon_footprint(self)",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_mobile_optimization(self)",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_cloud_efficiency(self)",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_energy_summary(self)",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_function_energy(self, node, file_path)",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_estimate_complexity(self, node)",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_loop_depth(self, node)",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_carbon_impact(self, watts)",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_is_high_frequency(self, node)",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_is_resource_intensive(self, node)",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_is_cpu_intensive(self, node)",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_is_busy_wait(self, node)",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_would_benefit_from_caching(self, node)",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_would_benefit_from_parallelization(self, node)",
        "files": [
          "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "archive\\superseded_toplevel_energy_consumption_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_dynamic_execution(self)",
        "files": [
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_eval_exec(self)",
        "files": [
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_dynamic_imports(self)",
        "files": [
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_reflection(self)",
        "files": [
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_injection_risks(self)",
        "files": [
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_metaclasses(self)",
        "files": [
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_decorators(self)",
        "files": [
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_monkey_patching(self)",
        "files": [
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_code_generation(self)",
        "files": [
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_sandbox_escapes(self)",
        "files": [
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_serialization(self)",
        "files": [
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_template_injection(self)",
        "files": [
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_suggest_safe_alternatives(self)",
        "files": [
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_security_risk_assessment(self)",
        "files": [
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_metaprogramming_summary(self)",
        "files": [
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_dangerous_call(self, node, func_name, file_path)",
        "files": [
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_input_source(self, node)",
        "files": [
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_has_user_input(self, node)",
        "files": [
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_has_input_validation(self, node)",
        "files": [
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_is_safe_eval(self, node)",
        "files": [
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_is_safe_exec(self, node)",
        "files": [
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_identify_tainted_variables(self, tree)",
        "files": [
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_has_tainted_arguments(self, node, tainted_vars)",
        "files": [
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_prioritize_remediation(self)",
        "files": [
          "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "archive\\superseded_toplevel_metaprogramming_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_ml_frameworks(self)",
        "files": [
          "archive\\from_subarchive_ml_code_analysis_original.py",
          "archive\\superseded_toplevel_ml_code_analysis.py",
          "core\\intelligence\\analysis\\ml_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_tensor_shapes(self)",
        "files": [
          "archive\\from_subarchive_ml_code_analysis_original.py",
          "archive\\superseded_toplevel_ml_code_analysis.py",
          "core\\intelligence\\analysis\\ml_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_model_architecture(self)",
        "files": [
          "archive\\from_subarchive_ml_code_analysis_original.py",
          "archive\\superseded_toplevel_ml_code_analysis.py",
          "core\\intelligence\\analysis\\ml_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_data_pipeline(self)",
        "files": [
          "archive\\from_subarchive_ml_code_analysis_original.py",
          "archive\\superseded_toplevel_ml_code_analysis.py",
          "core\\intelligence\\analysis\\ml_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_training_loops(self)",
        "files": [
          "archive\\from_subarchive_ml_code_analysis_original.py",
          "archive\\superseded_toplevel_ml_code_analysis.py",
          "core\\intelligence\\analysis\\ml_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_data_leakage(self)",
        "files": [
          "archive\\from_subarchive_ml_code_analysis_original.py",
          "archive\\superseded_toplevel_ml_code_analysis.py",
          "core\\intelligence\\analysis\\ml_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_preprocessing(self)",
        "files": [
          "archive\\from_subarchive_ml_code_analysis_original.py",
          "archive\\superseded_toplevel_ml_code_analysis.py",
          "core\\intelligence\\analysis\\ml_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_hyperparameters(self)",
        "files": [
          "archive\\from_subarchive_ml_code_analysis_original.py",
          "archive\\superseded_toplevel_ml_code_analysis.py",
          "core\\intelligence\\analysis\\ml_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_gpu_usage(self)",
        "files": [
          "archive\\from_subarchive_ml_code_analysis_original.py",
          "archive\\superseded_toplevel_ml_code_analysis.py",
          "core\\intelligence\\analysis\\ml_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_model_serialization(self)",
        "files": [
          "archive\\from_subarchive_ml_code_analysis_original.py",
          "archive\\superseded_toplevel_ml_code_analysis.py",
          "core\\intelligence\\analysis\\ml_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_reproducibility(self)",
        "files": [
          "archive\\from_subarchive_ml_code_analysis_original.py",
          "archive\\superseded_toplevel_ml_code_analysis.py",
          "core\\intelligence\\analysis\\ml_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_identify_ml_bottlenecks(self)",
        "files": [
          "archive\\from_subarchive_ml_code_analysis_original.py",
          "archive\\superseded_toplevel_ml_code_analysis.py",
          "core\\intelligence\\analysis\\ml_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_ml_best_practices(self)",
        "files": [
          "archive\\from_subarchive_ml_code_analysis_original.py",
          "archive\\superseded_toplevel_ml_code_analysis.py",
          "core\\intelligence\\analysis\\ml_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_ml_security(self)",
        "files": [
          "archive\\from_subarchive_ml_code_analysis_original.py",
          "archive\\superseded_toplevel_ml_code_analysis.py",
          "core\\intelligence\\analysis\\ml_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_ml_summary(self)",
        "files": [
          "archive\\from_subarchive_ml_code_analysis_original.py",
          "archive\\superseded_toplevel_ml_code_analysis.py",
          "core\\intelligence\\analysis\\ml_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_is_model_class(self, node)",
        "files": [
          "archive\\from_subarchive_ml_code_analysis_original.py",
          "archive\\superseded_toplevel_ml_code_analysis.py",
          "core\\intelligence\\analysis\\ml_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_shape_operation(self, node, file_path)",
        "files": [
          "archive\\from_subarchive_ml_code_analysis_original.py",
          "archive\\superseded_toplevel_ml_code_analysis.py",
          "core\\intelligence\\analysis\\ml_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_call_params(self, node)",
        "files": [
          "archive\\from_subarchive_ml_code_analysis_original.py",
          "archive\\superseded_toplevel_ml_code_analysis.py",
          "core\\intelligence\\analysis\\ml_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_training_issues(self, node)",
        "files": [
          "archive\\from_subarchive_ml_code_analysis_original.py",
          "archive\\superseded_toplevel_ml_code_analysis.py",
          "core\\intelligence\\analysis\\ml_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_practice_impact(self, practice)",
        "files": [
          "archive\\from_subarchive_ml_code_analysis_original.py",
          "archive\\superseded_toplevel_ml_code_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_identify_main_concerns(self, summary)",
        "files": [
          "archive\\from_subarchive_ml_code_analysis_original.py",
          "archive\\superseded_toplevel_ml_code_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_top_ml_recommendations(self, summary)",
        "files": [
          "archive\\from_subarchive_ml_code_analysis_original.py",
          "archive\\superseded_toplevel_ml_code_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_recognize_intent(self)",
        "files": [
          "archive\\from_subarchive_semantic_analysis_original.py",
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_semantic_signatures(self)",
        "files": [
          "archive\\from_subarchive_semantic_analysis_original.py",
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_identify_conceptual_patterns(self)",
        "files": [
          "archive\\from_subarchive_semantic_analysis_original.py",
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_semantic_relationships(self)",
        "files": [
          "archive\\from_subarchive_semantic_analysis_original.py",
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_classify_code_purpose(self)",
        "files": [
          "archive\\from_subarchive_semantic_analysis_original.py",
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_naming_semantics(self)",
        "files": [
          "archive\\from_subarchive_semantic_analysis_original.py",
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_identify_behavioral_patterns(self)",
        "files": [
          "archive\\from_subarchive_semantic_analysis_original.py",
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_domain_concepts(self)",
        "files": [
          "archive\\from_subarchive_semantic_analysis_original.py",
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_perform_semantic_clustering(self)",
        "files": [
          "archive\\from_subarchive_semantic_analysis_original.py",
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_intent_consistency(self)",
        "files": [
          "archive\\from_subarchive_semantic_analysis_original.py",
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_cross_system_performance(self, systems, time_window_hours, include_correlations)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_system_correlations(self, primary_system, correlation_threshold)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "register_integration_endpoint(self, endpoint, auto_connect)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "send_cross_system_request(self, endpoint_id, request_data, timeout, retry_policy)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "publish_integration_event(self, event, routing_rules)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_integration_performance_metrics(self, endpoint_id, time_window_hours)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "optimize_integration_performance(self, endpoint_id, optimization_strategy)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "execute_unified_integration_analysis(self, systems, analysis_type)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_integration_intelligence(self)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_connection_pool(self, endpoint)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\components\\endpoint_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_authentication(self, endpoint)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\components\\endpoint_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_rate_limiting(self, endpoint)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\components\\endpoint_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_circuit_breaker(self, endpoint)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\components\\endpoint_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_health_checking(self, endpoint)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\components\\endpoint_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_metrics_collection(self, endpoint)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\components\\endpoint_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_establish_connection(self, endpoint)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\components\\endpoint_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_start_health_monitoring(self, endpoint)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\components\\endpoint_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_websocket_connection(self, endpoint)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_event_streaming(self, endpoint)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_rate_limits(self, endpoint)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_circuit_breaker(self, endpoint)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_execute_system_request(self, endpoint, request_data, timeout)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_process_response(self, response, correlation_id)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_record_request_metrics(self, endpoint, execution_time, success)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_record_circuit_breaker_success(self, endpoint)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_record_circuit_breaker_failure(self, endpoint)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_collect_system_metrics(self, system, time_window_hours)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_system_health_score(self, metrics)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\components\\cross_system_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_system_correlations(self, system_metrics)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\components\\cross_system_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_metric_correlation(self, metrics1, metrics2)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\components\\cross_system_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_performance_correlations(self, system_metrics)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\components\\cross_system_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_error_correlations(self, system_metrics)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\components\\cross_system_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_cross_system_latency(self, systems)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_identify_performance_bottlenecks(self, system_metrics)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\components\\cross_system_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_resource_contention(self, system_metrics)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\components\\cross_system_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_availability_matrix(self, systems, time_window_hours)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_cross_system_availability(self, system1, system2)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_endpoint_by_name(self, system_name)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_data_flows(self, systems)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_perform_consistency_checks(self, systems)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_optimization_recommendations(self, analysis)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\components\\cross_system_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_predict_system_failures(self, system_metrics)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\components\\cross_system_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_forecast_capacity_needs(self, system_metrics)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\components\\cross_system_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_real_time_systems(self)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_process_event_immediately(self, event)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\components\\event_processor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_schedule_event_processing(self, event)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_apply_routing_rules(self, event)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\components\\event_processor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_event_matches_filters(self, event, filter_rules)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\components\\event_processor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_endpoint_metrics(self, endpoint, time_window_hours)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\components\\performance_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_performance_insights(self)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\components\\performance_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_optimize_for_latency(self, endpoint, current_metrics)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_optimize_for_throughput(self, endpoint, current_metrics)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_optimize_for_reliability(self, endpoint, current_metrics)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_apply_balanced_optimizations(self, endpoint, current_metrics)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_optimization_recommendations_for_endpoint(self, endpoint, current_metrics)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_event_processing_performance(self)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_integration_confidence(self, cross_system_analysis)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "core\\intelligence\\integration\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_average_correlation(self, system_correlations)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_async_components(self)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_redis_components(self)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_websocket_components(self)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_store_auth_token(self, endpoint_id, token)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_store_basic_auth(self, endpoint_id, username, password)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_store_api_key_auth(self, endpoint_id, api_key, header)",
        "files": [
          "archive\\integration_hub_original_20250820_220939.py",
          "archive\\modularization_integration\\integration_hub_original_1876_lines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "init_analytics_api(aggregator)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "dashboard\\api\\analytics.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_current_metrics()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "dashboard\\api\\analytics.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_trend_analysis()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "dashboard\\api\\analytics.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_analytics_summary()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "dashboard\\api\\analytics.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_recent_analytics()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "dashboard\\api\\analytics.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_analytics_export()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "dashboard\\api\\analytics.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_insights()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "dashboard\\api\\analytics.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_analytics_snapshot()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "dashboard\\api\\analytics.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_historical_data(metric_type)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "dashboard\\api\\analytics.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_trend_calculation(metric_type)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "dashboard\\api\\analytics.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_analytics_backup()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "dashboard\\api\\analytics.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "list_analytics_backups()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "dashboard\\api\\analytics.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "export_analytics_data(format)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "dashboard\\api\\analytics.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_comprehensive_report()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "dashboard\\api\\analytics.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_optimization_metrics()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "dashboard\\api\\analytics.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, cache_ttl)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_aggregator.py",
          "dashboard\\dashboard_core\\analytics_aggregator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "aggregate_metrics(self, metrics)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_aggregator.py",
          "dashboard\\dashboard_core\\analytics_aggregator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_misplaced_init_code(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_aggregator.py",
          "dashboard\\dashboard_core\\analytics_aggregator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_fallback_init(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_aggregator.py",
          "dashboard\\dashboard_core\\analytics_aggregator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_init_components(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_aggregator.py",
          "dashboard\\dashboard_core\\analytics_aggregator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_comprehensive_analytics(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_aggregator.py",
          "dashboard\\dashboard_core\\analytics_aggregator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_process_analytics_batch(self, batch)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_aggregator.py",
          "dashboard\\dashboard_core\\analytics_aggregator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, window_size, sensitivity, min_data_points)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "core\\intelligence\\analytics\\analytics_anomaly_detector.py",
          "dashboard\\dashboard_core\\analytics_anomaly_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_data_point(self, metric_name, value, timestamp)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "core\\intelligence\\analytics\\analytics_anomaly_detector.py",
          "dashboard\\dashboard_core\\analytics_anomaly_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_statistics(self, metric_name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "core\\intelligence\\analytics\\analytics_anomaly_detector.py",
          "dashboard\\dashboard_core\\analytics_anomaly_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_baseline_model(self, metric_name, values)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "core\\intelligence\\analytics\\analytics_anomaly_detector.py",
          "dashboard\\dashboard_core\\analytics_anomaly_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_seasonality(self, values)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "dashboard\\dashboard_core\\analytics_anomaly_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_zscore_anomaly(self, metric_name, value, timestamp)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "core\\intelligence\\analytics\\analytics_anomaly_detector.py",
          "dashboard\\dashboard_core\\analytics_anomaly_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_isolation_forest_anomaly(self, metric_name, value, timestamp)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "dashboard\\dashboard_core\\analytics_anomaly_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_missing_data(self, metric_name, value, timestamp)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "core\\intelligence\\analytics\\analytics_anomaly_detector.py",
          "dashboard\\dashboard_core\\analytics_anomaly_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_correlation(self, metric1, metric2)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "core\\intelligence\\analytics\\analytics_anomaly_detector.py",
          "dashboard\\dashboard_core\\analytics_anomaly_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_severity(self, value, info_threshold, warning_threshold, critical_threshold)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "core\\intelligence\\analytics\\analytics_anomaly_detector.py",
          "dashboard\\dashboard_core\\analytics_anomaly_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_handle_anomaly(self, anomaly)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "core\\intelligence\\analytics\\analytics_anomaly_detector.py",
          "dashboard\\dashboard_core\\analytics_anomaly_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "set_threshold(self, metric_name, min_value, max_value)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "core\\intelligence\\analytics\\analytics_anomaly_detector.py",
          "dashboard\\dashboard_core\\analytics_anomaly_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_anomalies(self, metric_name, anomaly_type, severity, hours)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "core\\intelligence\\analytics\\analytics_anomaly_detector.py",
          "dashboard\\dashboard_core\\analytics_anomaly_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "resolve_anomaly(self, anomaly_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "core\\intelligence\\analytics\\analytics_anomaly_detector.py",
          "dashboard\\dashboard_core\\analytics_anomaly_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "export_anomalies(self, format)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "core\\intelligence\\analytics\\analytics_anomaly_detector.py",
          "dashboard\\dashboard_core\\analytics_anomaly_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, backup_dir, retention_days, auto_backup_hours)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
          "dashboard\\dashboard_core\\analytics_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_backup(self, data_store_path, backup_name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
          "dashboard\\dashboard_core\\analytics_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "restore_backup(self, backup_name, restore_path)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
          "dashboard\\dashboard_core\\analytics_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "list_backups(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
          "dashboard\\dashboard_core\\analytics_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "cleanup_old_backups(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
          "dashboard\\dashboard_core\\analytics_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_backup_status(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
          "dashboard\\dashboard_core\\analytics_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "start_auto_backup(self, data_store_path)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
          "dashboard\\dashboard_core\\analytics_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "stop_auto_backup(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
          "dashboard\\dashboard_core\\analytics_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "export_analytics_data(self, data_store_path, export_format)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
          "dashboard\\dashboard_core\\analytics_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_file_checksum(self, file_path)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
          "dashboard\\dashboard_core\\analytics_backup.py",
          "dashboard\\dashboard_core\\emergency_backup_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_verify_backup_integrity(self, backup_path, expected_checksum)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
          "dashboard\\dashboard_core\\analytics_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_verify_database_integrity(self, db_path)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
          "dashboard\\dashboard_core\\analytics_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_save_backup_metadata(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
          "dashboard\\dashboard_core\\analytics_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_load_backup_metadata(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
          "dashboard\\dashboard_core\\analytics_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_remove_backup(self, backup_name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
          "dashboard\\dashboard_core\\analytics_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_next_backup_time(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
          "dashboard\\dashboard_core\\analytics_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_export_to_json(self, conn, export_path)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
          "dashboard\\dashboard_core\\analytics_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_export_to_csv(self, conn, export_path)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
          "dashboard\\dashboard_core\\analytics_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__del__(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
          "dashboard\\dashboard_core\\analytics_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "auto_backup_task()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
          "dashboard\\dashboard_core\\analytics_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, batch_size, batch_bytes, flush_interval, processor_func)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_batch_processor.py",
          "dashboard\\dashboard_core\\analytics_batch_processor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_item(self, item, priority)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_batch_processor.py",
          "dashboard\\dashboard_core\\analytics_batch_processor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_batch(self, items, priority)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_batch_processor.py",
          "dashboard\\dashboard_core\\analytics_batch_processor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "flush_all(self, reason)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_batch_processor.py",
          "dashboard\\dashboard_core\\analytics_batch_processor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_should_flush(self, priority)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_batch_processor.py",
          "dashboard\\dashboard_core\\analytics_batch_processor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_flush_batch(self, priority, reason)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_batch_processor.py",
          "dashboard\\dashboard_core\\analytics_batch_processor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_flush_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_batch_processor.py",
          "dashboard\\dashboard_core\\analytics_batch_processor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_process_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_batch_processor.py",
          "dashboard\\dashboard_core\\analytics_batch_processor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_process_batch(self, batch)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_batch_processor.py",
          "dashboard\\dashboard_core\\analytics_batch_processor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_hash(self, item)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_batch_processor.py",
          "dashboard\\dashboard_core\\analytics_batch_processor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_averages(self, batch)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_batch_processor.py",
          "dashboard\\dashboard_core\\analytics_batch_processor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "adjust_strategy(self, strategy)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_batch_processor.py",
          "dashboard\\dashboard_core\\analytics_batch_processor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "auto_adjust_strategy(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_batch_processor.py",
          "dashboard\\dashboard_core\\analytics_batch_processor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "set_processor(self, processor_func)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_batch_processor.py",
          "dashboard\\dashboard_core\\analytics_batch_processor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "wait_for_completion(self, timeout)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_batch_processor.py",
          "core\\security\\thread_safety_manager.py",
          "dashboard\\dashboard_core\\analytics_batch_processor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "shutdown(self, wait)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_batch_processor.py",
          "dashboard\\dashboard_core\\analytics_batch_processor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, failure_type, error, timestamp)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, name, config)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_execute_with_timeout(self, func)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "core\\security\\circuit_breaker_matrix.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_record_success(self, call_start)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_record_failure(self, failure_type, error, call_start)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_should_attempt_reset(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_transition_to_open(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_transition_to_half_open(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_transition_to_closed(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_notify_state_change(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_state_change_callback(self, callback)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_circuit_breaker(self, name, component_type, config)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_circuit_breaker(self, name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "protect(self, name, component_type, config)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_global_stats(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_on_state_change(self, circuit_breaker, new_state)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_on_failure(self, circuit_breaker, failure)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "reset_all(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "dashboard\\dashboard_core\\analytics_circuit_breaker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, threshold_bytes, adaptive, compression_level)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_compressor.py",
          "dashboard\\dashboard_core\\analytics_compressor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "compress(self, data, algorithm, metadata)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_compressor.py",
          "dashboard\\dashboard_core\\analytics_compressor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "decompress(self, compressed_result)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_compressor.py",
          "dashboard\\dashboard_core\\analytics_compressor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_compress_adaptive(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_compressor.py",
          "dashboard\\dashboard_core\\analytics_compressor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_select_adaptive_algorithm(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_compressor.py",
          "dashboard\\dashboard_core\\analytics_compressor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_estimate_entropy(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_compressor.py",
          "dashboard\\dashboard_core\\analytics_compressor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_select_from_history(self, data_size)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_compressor.py",
          "dashboard\\dashboard_core\\analytics_compressor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "compress_stream(self, data_stream, chunk_size)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_compressor.py",
          "dashboard\\dashboard_core\\analytics_compressor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_compression_stats(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_compressor.py",
          "dashboard\\dashboard_core\\analytics_compressor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "encode_for_transport(self, compressed_result)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_compressor.py",
          "dashboard\\dashboard_core\\analytics_compressor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "decode_from_transport(self, encoded)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_compressor.py",
          "dashboard\\dashboard_core\\analytics_compressor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, monitoring_level, check_interval, data_flow_timeout)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "register_dashboard_endpoint(self, endpoint)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "verify_data_delivery(self, data, endpoint_id, expected_arrival_time)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "confirm_data_arrival(self, tracking_id, received_data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "check_endpoint_connectivity(self, endpoint_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_connectivity_summary(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_connectivity_monitoring_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_data_flow_monitoring_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_websocket_monitoring_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_http_endpoint(self, endpoint)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_websocket_endpoint(self, endpoint)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_sse_endpoint(self, endpoint)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_estimate_bandwidth(self, endpoint)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_maintain_websocket_connection(self, endpoint_id, endpoint)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_record_connectivity_event(self, endpoint_id, status, metrics)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_alert_conditions(self, endpoint_id, status, metrics)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_trigger_alerts(self, event)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_data_flow_metrics(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_tracking_id(self, data, endpoint_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_data_checksum(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_recent_events(self, hours, endpoint_id, severity)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_endpoint_performance_history(self, endpoint_id, hours)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "on_message(ws, message)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "on_error(ws, error)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "on_close(ws, close_status_code, close_msg)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "dashboard\\dashboard_core\\analytics_connectivity_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, history_window, correlation_threshold)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_correlator.py",
          "dashboard\\dashboard_core\\analytics_correlator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_metrics_sample(self, metrics)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_correlator.py",
          "dashboard\\dashboard_core\\analytics_correlator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "calculate_correlations(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_correlator.py",
          "dashboard\\dashboard_core\\analytics_correlator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "detect_anomalies(self, current_metrics)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_correlator.py",
          "dashboard\\dashboard_core\\analytics_correlator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "identify_metric_relationships(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_correlator.py",
          "dashboard\\dashboard_core\\analytics_correlator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "predict_metric_values(self, metric_name, horizon_minutes)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_correlator.py",
          "dashboard\\dashboard_core\\analytics_correlator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_correlation_insights(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_correlator.py",
          "dashboard\\dashboard_core\\analytics_correlator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_pearson_correlation(self, metric1, metric2)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_correlator.py",
          "dashboard\\dashboard_core\\analytics_correlator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_pattern_anomalies(self, metric_name, current_value)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_correlator.py",
          "dashboard\\dashboard_core\\analytics_correlator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_correlation_anomalies(self, current_metrics)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_correlator.py",
          "dashboard\\dashboard_core\\analytics_correlator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_anomaly_severity(self, z_score)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_correlator.py",
          "dashboard\\dashboard_core\\analytics_correlator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_classify_correlation_strength(self, correlation)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_correlator.py",
          "dashboard\\dashboard_core\\analytics_correlator.py",
          "testmaster\\analysis\\comprehensive_analysis\\statistical_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "clear_history(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_correlator.py",
          "core\\intelligence\\testing\\components\\execution_engine.py",
          "dashboard\\dashboard_core\\analytics_correlator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, validation_level, max_issues_per_batch)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "start_background_processing(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "stop_background_processing(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_validation_rule(self, rule)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "core\\security\\validation_security.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_field_sanitizer(self, field_path, sanitizer)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "sanitize_and_validate(self, data, source)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "queue_for_sanitization(self, data, source)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_sanitization_summary(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_default_sanitizers(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_threat_patterns(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_and_remove_threats(self, data, source)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_validate_and_convert_types(self, data, source)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_apply_field_sanitizers(self, data, source)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_validate_business_rules(self, data, source)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_data_consistency(self, data, source)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_final_data_cleanup(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_convert_and_validate_type(self, value, rule, source)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_field_value(self, data, field_path)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_set_field_value(self, data, field_path, value)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_field_matches_pattern(self, field_path, pattern)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_background_processing_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_validation_issues(self, severity, limit)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "html_sanitizer(value)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "sql_sanitizer(value)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "numeric_sanitizer(value)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "string_length_sanitizer(value, max_length)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "check_value(value, field_path)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "sanitize_dict(d, path)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "apply_sanitizers(obj, path)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "cleanup_dict(obj)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "dashboard\\dashboard_core\\analytics_data_sanitizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, db_path, max_entries, retention_days)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "dashboard\\dashboard_core\\analytics_dead_letter_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_entry(self, analytics_data, failure_reason, error_details, retry_count, endpoint, metadata)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "dashboard\\dashboard_core\\analytics_dead_letter_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_entry(self, entry_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "dashboard\\dashboard_core\\analytics_dead_letter_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "reprocess_entry(self, entry_id, processor_func)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "dashboard\\dashboard_core\\analytics_dead_letter_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "bulk_reprocess(self, processor_func, filter_func, max_entries)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "dashboard\\dashboard_core\\analytics_dead_letter_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_can_retry(self, reason, retry_count)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "dashboard\\dashboard_core\\analytics_dead_letter_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_attempt_recovery(self, entry)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "dashboard\\dashboard_core\\analytics_dead_letter_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_recover_validation(self, entry)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "dashboard\\dashboard_core\\analytics_dead_letter_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_recover_serialization(self, entry)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "dashboard\\dashboard_core\\analytics_dead_letter_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_recover_timeout(self, entry)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "dashboard\\dashboard_core\\analytics_dead_letter_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_recover_corrupt(self, entry)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "dashboard\\dashboard_core\\analytics_dead_letter_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_database(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "dashboard\\dashboard_core\\analytics_dead_letter_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_persist_entry(self, entry)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "dashboard\\dashboard_core\\analytics_dead_letter_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_load_from_database(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "dashboard\\dashboard_core\\analytics_dead_letter_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_remove_from_database(self, entry_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "dashboard\\dashboard_core\\analytics_dead_letter_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_cleanup_old_entries(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "dashboard\\dashboard_core\\analytics_dead_letter_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_batch_recovery_attempt(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "dashboard\\dashboard_core\\analytics_dead_letter_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "export_entries(self, format, filter_func)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "dashboard\\dashboard_core\\analytics_dead_letter_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, aggregator, db_path, similarity_threshold, processing_interval)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "process_analytics(self, analytics_id, analytics_data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_fingerprint(self, analytics_id, analytics_data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_semantic_elements(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_temporal_bucket(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_key_fields(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_duplicates(self, fingerprint)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_semantic_similarity(self, fp1, fp2)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_content_similarity(self, fp1, fp2)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_temporal_similarity(self, fp1, fp2)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_store_fingerprint(self, fingerprint)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_duplicate_record(self, original_id, duplicate_id, duplicate_type, similarity)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_duplicate_stats(self, duplicate_type)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_deduplication_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_process_duplicate(self, duplicate_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_handle_exact_duplicate(self, record, action)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_handle_near_duplicate(self, record, action)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_handle_content_duplicate(self, record, action)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_handle_semantic_duplicate(self, record, action)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_handle_temporal_duplicate(self, record, action)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_merge_analytics_data(self, original_id, duplicate_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_intelligent_merge(self, original_id, duplicate_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_temporal_merge(self, original_id, duplicate_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_save_fingerprint(self, fingerprint)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_save_duplicate_record(self, record)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_save_merged_analytics(self, merge_id, source_ids, merged_data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_cleanup_old_fingerprints(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_cleanup_old_duplicates(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_deduplication_statistics(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "force_deduplication(self, analytics_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_duplicate_details(self, duplicate_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "core\\intelligence\\analytics\\analytics_deduplication.py",
          "dashboard\\dashboard_core\\analytics_deduplication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, max_history_size, cleanup_interval, default_strategy)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "start_engine(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "stop_engine(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_deduplication_rule(self, rule)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "process_record(self, data, source)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "batch_deduplicate(self, records, source)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_duplicate_summary(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_fingerprint(self, data, source)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_duplicates(self, data, fingerprint)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_resolve_conflicts(self, data, duplicates_info, source)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_default_resolvers(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_semantic_fields(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_count_fields(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_structural_similarity(self, data, existing_fingerprint)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_semantic_similarity(self, data, existing_fingerprint)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_rule_matches(self, data, fingerprint, rule)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_records_match_rule(self, data, existing_fingerprint, rule)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_rule_similarity(self, data, existing_fingerprint, rule)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_records_are_duplicates(self, record1, record2, hash1, hash2)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_store_record_fingerprint(self, fingerprint, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_record_from_fingerprint(self, fingerprint)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_merge_records(self, current_data, existing_data, rule)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_identify_conflict_fields(self, current_data, duplicate_info)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_avg_processing_time(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_deduplication_ratio(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_memory_efficiency(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_recent_duplicates(self, hours, limit)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "numeric_average_resolver(current_data, existing_data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "list_merge_resolver(current_data, existing_data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "extract_keys(obj)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "extract_semantic(obj, prefix)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "count_recursive(obj)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "dashboard\\automated_frontend_simulator.py",
          "dashboard\\dashboard_core\\analytics_deduplication_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "default(self, obj)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_enhancer.py",
          "dashboard\\dashboard_core\\analytics_delivery_enhancer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, max_retries, retry_delay)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_enhancer.py",
          "dashboard\\dashboard_core\\analytics_delivery_enhancer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "start_delivery_service(self, num_workers)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_enhancer.py",
          "dashboard\\dashboard_core\\analytics_delivery_enhancer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "stop_delivery_service(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_enhancer.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\delivery_optimizer.py",
          "dashboard\\dashboard_core\\analytics_delivery_enhancer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "queue_delivery(self, data, target)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_enhancer.py",
          "dashboard\\dashboard_core\\analytics_delivery_enhancer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_process_data_for_delivery(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_enhancer.py",
          "dashboard\\dashboard_core\\analytics_delivery_enhancer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_serialize_json(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_enhancer.py",
          "dashboard\\dashboard_core\\analytics_delivery_enhancer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_convert_datetimes(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_enhancer.py",
          "dashboard\\dashboard_core\\analytics_delivery_enhancer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_convert_enums(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_enhancer.py",
          "dashboard\\dashboard_core\\analytics_delivery_enhancer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_sanitize_errors(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_enhancer.py",
          "dashboard\\dashboard_core\\analytics_delivery_enhancer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_delivery_worker(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_enhancer.py",
          "dashboard\\dashboard_core\\analytics_delivery_enhancer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_delivery_summary(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_enhancer.py",
          "dashboard\\dashboard_core\\analytics_delivery_enhancer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_recent_failures(self, hours)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_enhancer.py",
          "core\\intelligence\\reliability\\quantum_retry_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_delivery_enhancer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, aggregator, db_path, max_retries, retry_interval)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "dashboard\\dashboard_core\\analytics_delivery_guarantee.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_load_pending_deliveries(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "dashboard\\dashboard_core\\analytics_delivery_guarantee.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_row_to_record(self, row)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "dashboard\\dashboard_core\\analytics_delivery_guarantee.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "submit_analytics(self, analytics_data, priority)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "dashboard\\dashboard_core\\analytics_delivery_guarantee.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_delivery_id(self, analytics_data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "dashboard\\dashboard_core\\analytics_delivery_guarantee.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_save_record(self, record)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "dashboard\\dashboard_core\\analytics_delivery_guarantee.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_delivery_handler(self, handler)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "dashboard\\dashboard_core\\analytics_delivery_guarantee.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_verification_handler(self, handler)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "dashboard\\dashboard_core\\analytics_delivery_guarantee.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_verify_delivery(self, record)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "dashboard\\dashboard_core\\analytics_delivery_guarantee.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_guarantee_statistics(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "dashboard\\dashboard_core\\analytics_delivery_guarantee.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "force_delivery_retry(self, delivery_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "dashboard\\dashboard_core\\analytics_delivery_guarantee.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, aggregator, dashboard_url, verification_interval, max_pending_tests)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_verification_test(self, test_type, delivery_method, custom_payload)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "send_verification_test(self, test_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_send_direct_test(self, test)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_send_batch_test(self, test)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_send_heartbeat_test(self, test)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_send_fallback_test(self, test)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_send_emergency_test(self, test)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "check_delivery_confirmation(self, test_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_analytics_endpoint(self, test)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_monitoring_endpoint(self, test)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_flow_endpoint(self, test)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_heartbeat_endpoint(self, test)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_contains_test_token(self, data, test)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_test_payload(self, pattern)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_verification_token(self, test_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_periodic_tests(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_pending_tests(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_handle_timeouts_and_retries(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_fallback_delivery_method(self, current_method)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_failure_patterns(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_trigger_alert(self, alert_type, message, severity)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_verification_status(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "force_verification_test(self, test_type, delivery_method)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "dashboard\\dashboard_core\\analytics_delivery_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, max_error_history, recovery_timeout, health_check_interval)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "start_error_recovery(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "stop_error_recovery(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "handle_error(self, error, component, context, severity)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "register_fallback_function(self, component, function_name, fallback, degraded_version)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "register_backup_system(self, component, backup_system, priority)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_component_health(self, component)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "core\\security\\adaptive_security_resilience.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "force_degradation(self, component, level, reason)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "restore_component(self, component)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_error_recovery_summary(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_error_record(self, error, component, context, severity)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_component_health(self, component, error_record)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_determine_recovery_strategy(self, error_record, pattern)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_attempt_recovery(self, error_record, strategy)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_retry_with_backoff(self, error_record, attempt)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_fallback_to_cache(self, error_record, attempt)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_apply_graceful_degradation(self, error_record, attempt)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_failover_to_backup(self, error_record, attempt)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_enable_partial_functionality(self, error_record, attempt)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_activate_safe_mode(self, error_record, attempt)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_apply_degradation(self, component, level, reason)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_circuit_breaker(self, component, failed)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_and_apply_degradation(self, component, error_record)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_error_monitoring_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_component_health_score(self, component_name, health)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_automatic_recovery(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_default_error_patterns(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_default_recovery_handlers(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_recent_errors(self, hours, component, severity)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "detect_pattern(self, error_record, error_history)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "default_retry_handler(error_record, attempt)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "default_fallback_handler(error_record, attempt)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "dashboard\\dashboard_core\\analytics_error_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, db_path, max_retries, batch_size, delivery_timeout)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "dashboard\\dashboard_core\\analytics_event_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_load_pending_events(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "dashboard\\dashboard_core\\analytics_event_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "enqueue(self, event_type, data, priority, metadata)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "dashboard\\dashboard_core\\analytics_event_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_persist_event(self, event)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "dashboard\\dashboard_core\\analytics_event_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "start_processing(self, num_workers)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "dashboard\\dashboard_core\\analytics_event_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_processing_worker(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "dashboard\\dashboard_core\\analytics_event_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_next_event(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "dashboard\\dashboard_core\\analytics_event_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_process_event(self, event)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "core\\intelligence\\integration\\components\\event_processor.py",
          "dashboard\\dashboard_core\\analytics_event_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_deliver_with_timeout(self, handler, event)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "dashboard\\dashboard_core\\analytics_event_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_default_delivery_handler(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "dashboard\\dashboard_core\\analytics_event_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_handle_delivery_failure(self, event)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "dashboard\\dashboard_core\\analytics_event_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_requeue_event(self, event)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "dashboard\\dashboard_core\\analytics_event_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_cleanup_worker(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "dashboard\\dashboard_core\\analytics_event_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_delivery_stats(self, delivery_time)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "dashboard\\dashboard_core\\analytics_event_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_total_queue_size(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "dashboard\\dashboard_core\\analytics_event_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_failed_events(self, limit)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "dashboard\\dashboard_core\\analytics_event_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "retry_failed_event(self, event_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "dashboard\\dashboard_core\\analytics_event_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, export_dir)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "export_analytics(self, data, format, destination, filename, filters)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_process_export(self, job, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_apply_filters(self, data, filters)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_count_rows(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_export_json(self, data, output_path)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_export_csv(self, data, output_path)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_flatten_for_csv(self, data, parent_key, sep)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_flatten_dict(self, d, parent_key, sep)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_export_html(self, data, output_path)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_html_report(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_html_template(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_export_excel(self, data, output_path)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_export_xml(self, data, output_path)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_dict_to_xml(self, data, root_name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_export_parquet(self, data, output_path)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_export_pickle(self, data, output_path)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_archive(self, job_ids, archive_name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "schedule_export(self, data_source, format, interval_minutes, filters)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "stop_scheduler(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_scheduler_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py",
          "testmaster\\monitoring\\test_scheduler.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_export_status(self, job_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "cleanup_old_exports(self, days)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "process_item(key, value, indent)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "dashboard\\dashboard_core\\analytics_export_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, cache_size, local_storage_path, degraded_mode_threshold)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "process_analytics(self, analytics_func, analytics_data, context)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_handle_success(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_handle_failure(self, error, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_execute_fallback(self, data, error)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_fallback_to_cache(self, data, error)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_fallback_to_secondary(self, data, error)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_fallback_to_degraded(self, data, error)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_fallback_to_local(self, data, error)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_fallback_to_emergency(self, data, error)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_degraded_response(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_escalate_fallback(self, new_level, reason, error)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_escalate_to_next_level(self, error)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_attempt_recovery(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_local_storage(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "core\\security\\adaptive_fallback_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_store_locally(self, data, status)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_preserve_data(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_cache(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_cache_key(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_estimate_recovery_time(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_recovery_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_sync_local_storage(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_recover_exponential(self, attempts)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_recover_linear(self, attempts)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_recover_immediate(self, attempts)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "register_alternative_endpoint(self, endpoint, priority)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_fallback_status(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "force_recovery(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "dashboard\\dashboard_core\\analytics_fallback_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, log_to_file, log_file_path, max_transactions)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_flow_monitor.py",
          "dashboard\\dashboard_core\\analytics_flow_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_file_logger(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_flow_monitor.py",
          "dashboard\\dashboard_core\\analytics_flow_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "start_transaction(self, transaction_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_flow_monitor.py",
          "dashboard\\dashboard_core\\analytics_flow_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "record_stage(self, transaction_id, stage, status, data, message, metadata, error)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_flow_monitor.py",
          "dashboard\\dashboard_core\\analytics_flow_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "complete_transaction(self, transaction_id, status)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_flow_monitor.py",
          "dashboard\\dashboard_core\\analytics_flow_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_data_size(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_flow_monitor.py",
          "dashboard\\dashboard_core\\analytics_flow_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_statistics(self, stage, status, duration_ms, data_size)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_flow_monitor.py",
          "dashboard\\dashboard_core\\analytics_flow_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_log_event(self, message)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_flow_monitor.py",
          "dashboard\\dashboard_core\\analytics_flow_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_log_stage_event(self, transaction_id, event)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_flow_monitor.py",
          "dashboard\\dashboard_core\\analytics_flow_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_thresholds(self, transaction, event)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_flow_monitor.py",
          "dashboard\\dashboard_core\\analytics_flow_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_error_rates(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_flow_monitor.py",
          "dashboard\\dashboard_core\\analytics_flow_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_flow_summary(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_flow_monitor.py",
          "dashboard\\dashboard_core\\analytics_flow_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_transaction_details(self, transaction_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_flow_monitor.py",
          "dashboard\\dashboard_core\\analytics_flow_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "export_flow_logs(self, format)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_flow_monitor.py",
          "dashboard\\dashboard_core\\analytics_flow_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, name, check_func, interval, timeout, critical)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_execute_with_timeout(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, name, action_func, conditions)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "should_execute(self, health_result)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "execute(self, context)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "register_component(self, component_type, component_instance)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_health_check(self, component_type, check)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_recovery_action(self, component_type, action)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "run_health_check(self, component_type)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_health_status(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "archive\\oversized_modules_20250821_042018\\api\\enterprise_integration_layer.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_component_health(self, component_type)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "force_recovery(self, component_type, action_name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_default_checks(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_default_recovery_actions(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_trigger_recovery(self, component_type, health_result)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_overall_health(self, component_results)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_system_resources(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_send_alerts(self, health_summary)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_monitoring_stats(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "core\\security\\security_monitoring_system.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "timeout_handler(signum, frame)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "check_aggregator()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "check_performance_monitor()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "check_system_resources()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "cleanup_memory(context)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "reset_cache(context)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "restart_component(context)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, heartbeat_interval, timeout, max_failures)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "register_endpoint(self, name, url, check_type, critical)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "send_analytics(self, analytics_data, endpoint, strategy, priority)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_send_heartbeat(self, endpoint_name, endpoint_info)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_http(self, url)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_ping(self, url)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_websocket(self, url)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_process_delivery(self, delivery)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_deliver_direct(self, delivery)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_deliver_batched(self, delivery)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_deliver_compressed(self, delivery)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_deliver_chunked(self, delivery)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_mark_delivery_failed(self, delivery, error)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_handle_connection_change(self, endpoint, new_status)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_init_connection_pool(self, name, url)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_response_time_average(self, response_time)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "register_callback(self, event, callback)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_connection_status(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_overall_health(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, aggregator, db_path, verification_interval)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
          "dashboard\\dashboard_core\\analytics_integrity_guardian.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "register_analytics(self, analytics_id, analytics_data, algorithm)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
          "dashboard\\dashboard_core\\analytics_integrity_guardian.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "verify_analytics(self, analytics_id, current_data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
          "dashboard\\dashboard_core\\analytics_integrity_guardian.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_checksum(self, data, algorithm)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
          "dashboard\\dashboard_core\\analytics_integrity_guardian.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_tampering(self, analytics_id, current_data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
          "dashboard\\dashboard_core\\analytics_integrity_guardian.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_timestamp_tampering(self, original, current)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
          "dashboard\\dashboard_core\\analytics_integrity_guardian.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_attempt_recovery(self, analytics_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
          "dashboard\\dashboard_core\\analytics_integrity_guardian.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_save_integrity_record(self, record, backup_data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
          "dashboard\\dashboard_core\\analytics_integrity_guardian.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_integrity_status(self, analytics_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
          "dashboard\\dashboard_core\\analytics_integrity_guardian.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "force_verification(self, analytics_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
          "dashboard\\dashboard_core\\analytics_integrity_guardian.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, integrity_level, secret_key, audit_db_path)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "start_verification(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "stop_verification(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_integrity_record(self, data, source, user_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "verify_data_integrity(self, data, record_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "verify_chain_integrity(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_audit_database(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_verification_algorithms(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_record_id(self, data, source)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_data_hash(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_chain_hash(self, data_hash)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_chain_hash_for_record(self, record, previous_hash)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_signature(self, data, data_hash)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_additional_checksums(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_verify_additional_checksums(self, data, integrity_record)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_timestamp_anomalies(self, integrity_record)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_audit_entry(self, action, record_id, source, user_id, changes)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_store_audit_entry(self, entry)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_cache_hit_rate(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py",
          "testmaster\\intelligence\\integration\\features\\feature_flags.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_avg_verification_time(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_recent_violations(self, hours, severity)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_audit_trail(self, hours, record_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "resolve_violation(self, violation_id, remediation_action)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "dashboard\\dashboard_core\\analytics_integrity_verifier.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, collector, name, labels)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__enter__(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "core\\observability\\unified_monitor_enhanced.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__exit__(self, exc_type, exc_val, exc_tb)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "core\\observability\\unified_monitor_enhanced.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, collection_interval)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py",
          "testmaster\\streaming\\live_feedback.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "increment_counter(self, name, value, labels, description, unit)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "set_gauge(self, name, value, labels, description, unit)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "record_histogram(self, name, value, labels, description, unit, buckets)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "record_timer(self, name, duration, labels, description)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "timer(self, name, labels)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "collect_system_metrics(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "collect_analytics_component_metrics(self, component_name, component_stats)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_metrics(self, name_filter, label_filter, max_age_seconds)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_current_values(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "export_prometheus(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "export_json(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_metric_key(self, name, labels)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_labels_from_key(self, key)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_record_metric(self, name, metric_type, value, labels, description, unit)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_labels_index(self, name, labels)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_metric_callback(self, callback)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "dashboard\\dashboard_core\\analytics_metrics_collector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "register_schema(self, schema_name, fields)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "dashboard\\dashboard_core\\analytics_normalizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_field_mapping(self, source_field, target_field, transformation)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "dashboard\\dashboard_core\\analytics_normalizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_custom_validator(self, field_name, validator)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "dashboard\\dashboard_core\\analytics_normalizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "normalize(self, data, schema_name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "dashboard\\dashboard_core\\analytics_normalizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "validate(self, data, schema_name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "dashboard\\dashboard_core\\analytics_normalizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_normalization_stats(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "dashboard\\dashboard_core\\analytics_normalizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_default_schemas(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "dashboard\\dashboard_core\\analytics_normalizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_default_field_mappings(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "dashboard\\dashboard_core\\analytics_normalizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_apply_field_mappings(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "dashboard\\dashboard_core\\analytics_normalizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_normalize_data_types(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "dashboard\\dashboard_core\\analytics_normalizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_normalize_numeric_ranges(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "dashboard\\dashboard_core\\analytics_normalizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_apply_schema(self, data, schema_name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "dashboard\\dashboard_core\\analytics_normalizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_normalize_field_value(self, value, field_schema)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "dashboard\\dashboard_core\\analytics_normalizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_validate_field(self, value, field_schema)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "dashboard\\dashboard_core\\analytics_normalizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "normalize_timestamp_value(value)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "dashboard\\dashboard_core\\analytics_normalizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, compression_threshold, cache_size)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_optimizer.py",
          "dashboard\\dashboard_core\\analytics_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "compress_analytics_data(self, data, compression_type)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_optimizer.py",
          "dashboard\\dashboard_core\\analytics_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "decompress_analytics_data(self, compressed_package)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_optimizer.py",
          "dashboard\\dashboard_core\\analytics_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "optimize_data_retrieval(self, query_params)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_optimizer.py",
          "dashboard\\dashboard_core\\analytics_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "cache_data(self, query_params, data, ttl_seconds)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_optimizer.py",
          "dashboard\\dashboard_core\\analytics_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "aggregate_time_series_data(self, data_points, aggregation_window)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_optimizer.py",
          "dashboard\\dashboard_core\\analytics_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "optimize_query_indexes(self, query_patterns)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_optimizer.py",
          "dashboard\\dashboard_core\\analytics_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_optimization_stats(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_optimizer.py",
          "core\\security\\secure_performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_cache_key(self, query_params)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_optimizer.py",
          "dashboard\\dashboard_core\\analytics_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_index_key(self, pattern)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_optimizer.py",
          "dashboard\\dashboard_core\\analytics_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_is_cache_valid(self, cache_entry)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_optimizer.py",
          "dashboard\\dashboard_core\\analytics_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_evict_lru_cache_entry(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_optimizer.py",
          "dashboard\\dashboard_core\\analytics_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_parse_time_window(self, window)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_optimizer.py",
          "dashboard\\dashboard_core\\analytics_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_window_start(self, timestamp, window_seconds)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_optimizer.py",
          "dashboard\\dashboard_core\\analytics_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_aggregate_data_points(self, points, window_start)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_optimizer.py",
          "dashboard\\dashboard_core\\analytics_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "performance_optimized(operation_name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get(self, key, loader)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "schedule_preload(self, key, loader)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_preload_worker(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_evict_lru(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "submit(self, key, func)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "gather(self, keys, timeout)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "optimize_operation(self, operation_name, func)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_optimize_comprehensive_analytics(self, func)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_optimize_component_data(self, func)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_optimize_system_metrics(self, func)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_optimize_health_checks(self, func)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_apply_generic_optimizations(self, operation_name, func)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_component_data_fast(self, component_name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_build_comprehensive_data(self, component_results)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_record_metrics(self, operation_name, start_time, end_time, duration_ms, cache_hit, parallel_execution, optimization_applied)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_optimization_worker(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_preload_frequent_data(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "dashboard\\dashboard_core\\analytics_performance_booster.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, monitor_interval, history_size)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_monitor.py",
          "dashboard\\dashboard_core\\analytics_performance_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "record_operation(self, operation_name, duration, success, metadata)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_monitor.py",
          "dashboard\\dashboard_core\\analytics_performance_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_operation_trends(self, operation_name, hours)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_monitor.py",
          "dashboard\\dashboard_core\\analytics_performance_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "optimize_performance(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_monitor.py",
          "dashboard\\dashboard_core\\analytics_performance_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_current_resource_usage(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_monitor.py",
          "dashboard\\dashboard_core\\analytics_performance_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_performance_thresholds(self, operation_name, duration)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_monitor.py",
          "dashboard\\dashboard_core\\analytics_performance_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_active_alerts(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_monitor.py",
          "dashboard\\dashboard_core\\analytics_performance_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_optimization_score(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_monitor.py",
          "dashboard\\dashboard_core\\analytics_performance_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, optimization_level, monitoring_interval)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "register_analytics_component(self, component_name, component_instance)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_optimization_rule(self, rule)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py",
          "integration\\resource_optimization_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "record_performance_metric(self, metric)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "optimize_component(self, component_name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_performance_recommendations(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_collect_current_metrics(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_can_apply_rule(self, rule)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_apply_optimization_rule(self, rule)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_improvement(self, before, after, optimization_type)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_performance_baseline(self, metric)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_optimization_summary(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "core\\intelligence\\testing\\advanced\\ml_test_optimizer.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_optimization_history(self, hours)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "memory_pressure_condition()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "memory_cleanup_action()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "cpu_pressure_condition()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "cpu_optimization_action()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "cache_miss_condition()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "cache_optimization_action()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "io_pressure_condition()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "io_optimization_action()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "dashboard\\dashboard_core\\analytics_performance_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, db_path, retention_days)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "dashboard\\dashboard_core\\analytics_persistence.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_connection(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "core\\security\\flow_persistence_security.py",
          "dashboard\\dashboard_core\\analytics_persistence.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "store_analytics_snapshot(self, snapshot_type, analytics_data, metadata)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "dashboard\\dashboard_core\\analytics_persistence.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "store_time_series_metric(self, metric_name, value, metric_type, source_component, tags)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "dashboard\\dashboard_core\\analytics_persistence.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "store_analytics_event(self, event_type, message, severity, component, event_data, correlation_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "dashboard\\dashboard_core\\analytics_persistence.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_historical_snapshots(self, snapshot_type, hours, limit)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "dashboard\\dashboard_core\\analytics_persistence.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_time_series_data(self, metric_name, hours)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "dashboard\\dashboard_core\\analytics_persistence.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "calculate_trend_analysis(self, metric_name, hours)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "dashboard\\dashboard_core\\analytics_persistence.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_performance_baseline(self, metric_name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "dashboard\\dashboard_core\\analytics_persistence.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_anomaly_candidates(self, hours)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "dashboard\\dashboard_core\\analytics_persistence.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_persistence_stats(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "dashboard\\dashboard_core\\analytics_persistence.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_performance_baseline(self, metric_name, value)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "dashboard\\dashboard_core\\analytics_persistence.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_store_trend_analysis(self, trend_analysis)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "dashboard\\dashboard_core\\analytics_persistence.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_predictions(self, values, slope, num_predictions)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "dashboard\\dashboard_core\\analytics_persistence.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_maintenance_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "dashboard\\dashboard_core\\analytics_persistence.py",
          "dashboard\\dashboard_core\\emergency_backup_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_optimize_database(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "dashboard\\dashboard_core\\analytics_persistence.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "transform(self, data, context)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_enrich_system_metrics(self, system_metrics)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_enrich_test_metrics(self, test_metrics)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_enrich_workflow_metrics(self, workflow_metrics)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_add_cross_correlations(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_performance_grade(self, system_load)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_quality_tier(self, health_score)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_test_recommendation(self, pass_rate, coverage, total_tests)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_workflow_efficiency(self, success_rate, avg_duration, active_count)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_performance_rating(self, efficiency_score)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_correlation_strength(self, value1, value2)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_standardize_fields(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, name, aggregation_rules)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_data_source(self, source_name, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_aggregate_numeric_metrics(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_resolve_categorical_conflicts(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_nested_value(self, data, path)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_set_nested_value(self, data, path, value)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_default_pipeline(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_transformer(self, transformer)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "remove_transformer(self, transformer_name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "process(self, analytics_data, context)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "process_async(self, analytics_data, context)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_pipeline_stats(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "standardize_booleans(obj)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "dashboard\\dashboard_core\\analytics_pipeline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_health_monitor()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, db_path, websocket_port, check_interval, alert_retention_hours)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_register_default_health_checks(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "core\\intelligence\\visualization\\observability_systems.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "register_component(self, component, health_check_fn)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "record_metric(self, component, metric_name, value, unit, custom_thresholds)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_metric_alerts(self, metric)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_broadcast_metric_update(self, metric)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_broadcast_alert(self, alert)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_monitor_health(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_cleanup_old_alerts(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py",
          "testmaster\\ui\\alert_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_aggregator_health(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_pipeline_health(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_streaming_health(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_cache_health(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_integrity_health(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_backup_health(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_retry_health(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_overall_status(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "force_health_check(self, component)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_priority_queue()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, db_path, max_queue_size, processing_workers)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_processing_lanes(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "core\\intelligence\\ml\\advanced\\batch_processor.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_metrics(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py",
          "dashboard\\dashboard_core\\system_observability_metrics.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "enqueue_analytics(self, analytics_id, data, priority, metadata, expiration_minutes, processing_estimate_ms)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_determine_queue_type(self, priority, data_size)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_queue_capacity(self, queue_type)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_rate_limit(self, queue_type)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_save_queued_item_to_db(self, item)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_worker_loop(self, queue_type, worker_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_process_analytics_item(self, item, worker_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_simulate_analytics_processing(self, item)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_record_processing_result(self, item, worker_id, wait_time_ms, processing_time_ms, status, error_message)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_save_processing_result_to_db(self, result)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_metrics_monitor(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_queue_metrics(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_save_metrics_to_db(self, metrics)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py",
          "dashboard\\dashboard_core\\predictive_flow_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_cleanup_expired_items(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "dashboard\\dashboard_core\\analytics_priority_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "assess_data_quality(self, data, data_source)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_completeness(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_accuracy(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_consistency(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_timeliness(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_validity(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_uniqueness(self, data, data_source)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_perform_integrity_checks(self, data, data_source)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_fingerprint(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_track_fingerprint(self, fingerprint, data_source)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_is_reasonable_numeric_value(self, field_name, value)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_is_valid_type(self, field_name, value)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_recommendations(self, quality_scores, integrity_checks)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_quality_alerts(self, assessment)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_perform_periodic_analysis(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_quality_summary(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_recent_alerts(self, hours)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "core\\intelligence\\dashboard\\intelligence_backend.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "count_fields(obj, path)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "validate_recursive(obj, path)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "collect_numeric_values(obj, path)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "validate_recursive(obj)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "dashboard\\dashboard_core\\analytics_quality_assurance.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, aggregator, delivery_guarantee, integrity_guardian, db_path, quantum_processing_interval)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "submit_for_quantum_retry(self, analytics_id, analytics_data, priority, strategy, max_attempts)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_quantum_processing_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "core\\security\\quantum_retry_engine.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_process_quantum_retry(self, analytics_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_quantum_delay(self, context)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "core\\security\\quantum_retry_engine.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_attempt_quantum_delivery(self, context, attempt)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_try_aggregator_delivery(self, analytics_data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_try_guarantee_delivery(self, analytics_data, priority)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_try_integrity_recovery(self, analytics_id, analytics_data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_patterns(self, failures)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_select_optimal_strategy(self, context)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_retry_handler(self, handler)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_quantum_statistics(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "core\\security\\quantum_retry_engine.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_save_retry_context(self, context)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_save_retry_attempt(self, attempt)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_save_detected_pattern(self, pattern_type, confidence, failures)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_recommend_strategy_for_pattern(self, pattern_type)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_success_patterns(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_success_predictions(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_optimize_strategies(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_strategy_performance(self, strategy, success, attempts, processing_time)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_failure(self, context, attempt)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_learn_from_success(self, context)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_save_final_failure(self, context)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_retry_status(self, analytics_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "core\\intelligence\\reliability\\quantum_retry_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "force_quantum_retry(self, analytics_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "dashboard\\dashboard_core\\analytics_quantum_retry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, max_queue_size, monitoring_interval, adaptive_adjustment_factor)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "start_rate_limiting(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "stop_rate_limiting(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_rate_limit_rule(self, rule)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "process_request(self, data, source, data_type, priority)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_rate_limiter_summary(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_limiter(self, rule)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_find_applicable_rules(self, source, data_type)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_rate_limit(self, rule, source, data, priority)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_token_bucket(self, limiter, rule, current_time)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_sliding_window(self, limiter, rule, current_time)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_fixed_window(self, limiter, rule, current_time)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_adaptive_aimd(self, limiter, rule, current_time, source)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_exponential_backoff(self, limiter, rule, current_time)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_backpressure(self, source, data, priority)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_handle_backpressure(self, action, data, source, priority)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_queue_request(self, data, source, priority)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_process_queued_request(self, request_item)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_traffic_metrics(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_adjust_adaptive_rates(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_congestion_recovery(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_current_rate(self, limiter, rule)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_congestion(self, source)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_congestion_resolved(self, source)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_matches_pattern(self, text, pattern)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_backpressure_events(self, hours)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "dashboard\\dashboard_core\\analytics_rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_receipt_tracker()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, db_path, secret_key, confirmation_timeout, max_retry_attempts)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_secret_key(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "initiate_delivery(self, analytics_id, destination, analytics_data, priority, expiration_minutes, metadata)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_signature(self, delivery_id, analytics_id, checksum)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_verify_signature(self, delivery_id, analytics_id, checksum, signature)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_save_delivery_to_db(self, delivery)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_process_delivery(self, delivery_id, analytics_data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_simulate_delivery(self, destination, analytics_data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_delivery_attempt(self, delivery_id, attempt_number)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_handle_delivery_failure(self, delivery, attempt, error_message)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_schedule_retry(self, delivery_id, delay_seconds)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_automatic_receipt(self, delivery_id, processing_time_ms)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_receipt_signature(self, delivery_id, analytics_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "confirm_delivery(self, delivery_id, receipt_type, confirmation_data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_schedule_confirmation_timeout(self, delivery_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_save_attempt_to_db(self, attempt)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_save_receipt_to_db(self, receipt)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_log_audit_trail(self, delivery_id, action, details, user_id, ip_address)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_tracking_summary(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\realtime_analytics_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_monitor_deliveries(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_expired_deliveries(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_cleanup_old_deliveries(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "dashboard\\dashboard_core\\analytics_receipt_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "register_component(self, name, component, health_check, dependencies)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "check_component_health(self, name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "initiate_recovery(self, component)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_recovery_plan(self, component)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_execute_recovery_plan(self, plan)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "core\\security\\resilience_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_restart_component(self, name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_reset_component(self, name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_repair_component(self, name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_failover_component(self, name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_isolate_component(self, name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_monitor_component(self, name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_health_result(self, result)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_failure_patterns(self, component, health_check)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_preemptive_recovery(self, component)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_cascade_risk(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_prevent_cascade(self, at_risk_components)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_clean_predictions(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_recover_event_queue(self, plan)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_recover_batch_processor(self, plan)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_recover_heartbeat(self, plan)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_recover_flow_monitor(self, plan)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_recover_fallback(self, plan)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_recover_dead_letter(self, plan)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_recover_compressor(self, plan)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_recover_retry_manager(self, plan)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_orchestrator_status(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, failover_mode, backup_directory)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "register_node(self, node_id, processor_function, priority, backup_data_path)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "start_redundancy(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "stop_redundancy(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "process_analytics_data(self, data, source)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_process_with_redundancy(self, data, source)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_process_with_node(self, node_id, data, source)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_aggregate_results(self, results)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_activate_node(self, node_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_deactivate_node(self, node_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_record_node_failure(self, node_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_trigger_failover(self, failed_node_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_attempt_data_recovery(self, data, source)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_queue_data_for_backup(self, data, source)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_failover_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_attempt_node_recovery(self, node_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_backup_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\emergency_backup_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_backup(self, backup_items)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_cleanup_old_backups(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_failover_callback(self, callback)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_data_loss_callback(self, callback)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_redundancy_status(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "dashboard\\dashboard_core\\analytics_redundancy.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "with_retry(operation_name, max_retries, initial_delay)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
          "dashboard\\dashboard_core\\analytics_retry_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, failure_threshold, recovery_timeout, success_threshold)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
          "dashboard\\dashboard_core\\analytics_retry_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "call(self, func)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
          "dashboard\\dashboard_core\\analytics_retry_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_on_success(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
          "dashboard\\dashboard_core\\analytics_retry_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_on_failure(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
          "dashboard\\dashboard_core\\analytics_retry_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "configure_operation(self, operation_name, config, circuit_breaker)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
          "dashboard\\dashboard_core\\analytics_retry_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "retry_operation(self, operation_name, func)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
          "dashboard\\dashboard_core\\analytics_retry_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_delay(self, attempt_num, config)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
          "dashboard\\dashboard_core\\analytics_retry_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_fibonacci(self, n)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
          "dashboard\\dashboard_core\\analytics_retry_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_adaptive_delay(self, attempt_num, config)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
          "dashboard\\dashboard_core\\analytics_retry_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_learn_from_attempts(self, operation_name, attempts)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
          "dashboard\\dashboard_core\\analytics_retry_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_retry_statistics(self, operation_name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
          "dashboard\\dashboard_core\\analytics_retry_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "reset_circuit_breaker(self, operation_name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
          "dashboard\\dashboard_core\\analytics_retry_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "decorator(self, operation_name, config)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
          "dashboard\\dashboard_core\\analytics_retry_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "decorator_wrapper(func)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
          "dashboard\\dashboard_core\\analytics_retry_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_sla_tracker()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, db_path, default_sla_level, monitoring_interval)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_default_sla_configs(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\sla_ml_optimizer.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_default_escalation_rules(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "track_analytics_delivery(self, analytics_id, component, stage, sla_level)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "record_delivery_success(self, tracking_id, latency_ms, additional_metrics)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "record_delivery_failure(self, tracking_id, error_message, latency_ms)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_delivery_timeout(self, tracking_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_sla_violations(self, metric, sla_config)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_process_violation(self, violation)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_save_violation_to_db(self, violation)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_escalation(self, violation)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_should_escalate(self, violation, rule)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_escalate_violation(self, violation, rule)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_send_escalation_notifications(self, violation, rule)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_send_email(self, to_email, subject, body)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_execute_auto_actions(self, violation, rule)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_restart_slow_components(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_increase_resources(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_activate_failover(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_scale_up_instances(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_emergency_backup_activation(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_monitor_sla(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_sla_performance(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_ongoing_violations(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_is_violation_resolved(self, violation)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_performance_reports(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_sla_summary(self, sla_level)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "force_sla_check(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "dashboard\\dashboard_core\\analytics_sla_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, max_memory_size, max_compressed_size, cache_policy, compression_threshold, prediction_enabled)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "put(self, key, data, ttl)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "core\\intelligence\\ml\\advanced\\smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "prefetch(self, keys, data_loader)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_cache_efficiency(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "start_prediction_engine(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "stop_prediction_engine(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_put_l1(self, key, entry)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "core\\intelligence\\ml\\advanced\\smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_put_l2(self, key, entry)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "core\\intelligence\\ml\\advanced\\smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_evict_l1(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "core\\intelligence\\ml\\advanced\\smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_evict_l2(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "core\\intelligence\\ml\\advanced\\smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_promote_to_l1(self, key, data, l2_entry)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "core\\intelligence\\ml\\advanced\\smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_select_adaptive_eviction_candidate(self, cache)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_record_access(self, key, access_time)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "core\\intelligence\\ml\\advanced\\smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_prediction_scores(self, key, was_hit)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_trigger_prefetch_analysis(self, key)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_find_related_keys(self, key)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_prediction_opportunities(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_adaptive_cache_sizing(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_decompress_data(self, compressed_data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "core\\intelligence\\ml\\advanced\\smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_size(self, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "core\\intelligence\\ml\\advanced\\smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_performance_grade(self, efficiency_score)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_identify_cache_bottlenecks(self, stats)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "dashboard\\dashboard_core\\analytics_smart_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "compress_analytics_for_streaming(data, metric_type)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "dashboard\\dashboard_core\\analytics_streaming.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_streaming_metadata(data, metric_type)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "dashboard\\dashboard_core\\analytics_streaming.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, analytics_aggregator, stream_interval)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "core\\intelligence\\analytics\\realtime\\streaming_analytics.py",
          "dashboard\\dashboard_core\\analytics_streaming.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "start_streaming(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "core\\intelligence\\analytics\\realtime\\streaming_analytics.py",
          "dashboard\\dashboard_core\\analytics_streaming.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "stop_streaming(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "core\\intelligence\\analytics\\realtime\\streaming_analytics.py",
          "dashboard\\dashboard_core\\analytics_streaming.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_client(self, client_id, websocket, subscriptions)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "core\\intelligence\\analytics\\realtime\\streaming_analytics.py",
          "dashboard\\dashboard_core\\analytics_streaming.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "remove_client(self, client_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "core\\intelligence\\analytics\\realtime\\streaming_analytics.py",
          "dashboard\\dashboard_core\\analytics_streaming.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "subscribe_client(self, client_id, metric_types)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "dashboard\\dashboard_core\\analytics_streaming.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "stream_analytics_update(self, analytics_data, metric_type)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "dashboard\\dashboard_core\\analytics_streaming.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_data_transformer(self, transformer)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "dashboard\\dashboard_core\\analytics_streaming.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_stream_filter(self, filter_func)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "dashboard\\dashboard_core\\analytics_streaming.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_stream_stats(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "core\\intelligence\\analytics\\realtime\\streaming_analytics.py",
          "dashboard\\dashboard_core\\analytics_streaming.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_streaming_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "core\\intelligence\\analytics\\realtime\\streaming_analytics.py",
          "dashboard\\dashboard_core\\analytics_streaming.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_streaming_analytics(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "dashboard\\dashboard_core\\analytics_streaming.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_transform_data(self, data, metric_type)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "core\\intelligence\\analytics\\realtime\\streaming_analytics.py",
          "dashboard\\dashboard_core\\analytics_streaming.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_broadcast_message(self, message)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "core\\intelligence\\analytics\\realtime\\streaming_analytics.py",
          "dashboard\\dashboard_core\\analytics_streaming.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_client_subscribed_to_message(self, client_id, message)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "core\\intelligence\\analytics\\realtime\\streaming_analytics.py",
          "dashboard\\dashboard_core\\analytics_streaming.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_send_to_client(self, client_id, message, message_str)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "core\\intelligence\\analytics\\realtime\\streaming_analytics.py",
          "dashboard\\dashboard_core\\analytics_streaming.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, analytics_aggregator, stream_manager)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "dashboard\\dashboard_core\\analytics_streaming.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_streaming_hooks(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "dashboard\\dashboard_core\\analytics_streaming.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_hook_method(self, method_name, metric_type)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "dashboard\\dashboard_core\\analytics_streaming.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "traced_operation(operation_name, component)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, service_name, export_interval, max_events, enable_tracing, enable_metrics)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "record_event(self, level, component, operation, message, duration_ms, attributes, metrics, error)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "start_span(self, operation_name, component, parent_span_id, attributes)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "end_span(self, span_id, status, attributes)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "record_metric(self, name, value, labels, unit, metric_type)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_span_link(self, span_id, linked_trace_id, linked_span_id, attributes)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_current_trace_id(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_current_span_id(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_event_exporter(self, exporter)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_span_exporter(self, exporter)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_metric_exporter(self, exporter)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_should_sample(self, level)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_export_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_export_telemetry_data(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_default_exporters(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_telemetry_summary(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_recent_events(self, limit, level)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_trace_spans(self, trace_id)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_metric_values(self, metric_name, hours)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "json_event_exporter(events)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "json_span_exporter(spans)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "prometheus_metric_exporter(metrics)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "dashboard\\dashboard_core\\analytics_telemetry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, history_window)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_validator.py",
          "dashboard\\dashboard_core\\analytics_validator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "validate_performance_metrics(self, metrics)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_validator.py",
          "dashboard\\dashboard_core\\analytics_validator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "validate_test_metrics(self, metrics)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_validator.py",
          "dashboard\\dashboard_core\\analytics_validator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "validate_system_metrics(self, metrics)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_validator.py",
          "dashboard\\dashboard_core\\analytics_validator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_performance_anomalies(self, current_metrics)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_validator.py",
          "dashboard\\dashboard_core\\analytics_validator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "validate_comprehensive_analytics(self, analytics)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_validator.py",
          "dashboard\\dashboard_core\\analytics_validator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_data_quality_report(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_validator.py",
          "dashboard\\dashboard_core\\analytics_validator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "reset_validation_stats(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_validator.py",
          "dashboard\\dashboard_core\\analytics_validator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, check_interval, max_restart_attempts)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "register_component(self, component_name, component_instance, check_function, failure_threshold, restart_action, is_critical)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "register_process(self, process_name, process_id, command_line, working_directory)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "check_component_health(self, component_name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "restart_component(self, component_name, force)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_process_monitoring_loop(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_process_health(self, process_name, process_info)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_restart_process(self, process_name, command_line, working_directory)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_handle_component_failure(self, component_name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_execute_restart_action(self, component_name, action)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_graceful_shutdown_component(self, component_name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_cascade_failures(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_handle_cascade_failure(self, failed_components)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_default_health_checks(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_default_health_check(self, component_instance)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_collect_component_metrics(self, component_name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_restart_callback(self, callback)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_custom_recovery_action(self, component_name, action)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_watchdog_status(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "memory_health_check()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "cpu_health_check()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "default_check()",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "dashboard\\dashboard_core\\analytics_watchdog.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "ingest_data(self, data_type, data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "core\\intelligence\\analytics\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "train_model(self, model_name, data_type)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "core\\intelligence\\analytics\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "predict(self, model_name, input_data)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "core\\intelligence\\analytics\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_model_performance(self, model_name)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "core\\intelligence\\analytics\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_predictions_history(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_model_metrics(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "detect_patterns(self, data_type)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_analytics_metrics(self)",
        "files": [
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_uncovered_lines(self)",
        "files": [
          "archive\\legacy_scripts\\achieve_100_percent.py",
          "archive\\original_backup\\scripts\\achieve_100_percent.py",
          "scripts\\achieve_100_percent.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_targeted_test(self, module_path, missing_lines)",
        "files": [
          "archive\\legacy_scripts\\achieve_100_percent.py",
          "archive\\original_backup\\scripts\\achieve_100_percent.py",
          "scripts\\achieve_100_percent.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "achieve_100_percent(self, max_iterations)",
        "files": [
          "archive\\legacy_scripts\\achieve_100_percent.py",
          "archive\\original_backup\\scripts\\achieve_100_percent.py",
          "scripts\\achieve_100_percent.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_test_plans(self, coverage_data)",
        "files": [
          "archive\\legacy_scripts\\achieve_100_percent_coverage.py",
          "archive\\original_backup\\scripts\\achieve_100_percent_coverage.py",
          "scripts\\achieve_100_percent_coverage.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "extract_code(self, response)",
        "files": [
          "archive\\legacy_scripts\\achieve_100_percent_coverage.py",
          "archive\\original_backup\\scripts\\achieve_100_percent_coverage.py",
          "scripts\\achieve_100_percent_coverage.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_fallback_test(self, plan)",
        "files": [
          "archive\\legacy_scripts\\achieve_100_percent_coverage.py",
          "archive\\original_backup\\scripts\\achieve_100_percent_coverage.py",
          "scripts\\achieve_100_percent_coverage.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "measure_final_coverage(self)",
        "files": [
          "archive\\legacy_scripts\\achieve_100_percent_coverage.py",
          "archive\\original_backup\\scripts\\achieve_100_percent_coverage.py",
          "scripts\\achieve_100_percent_coverage.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_ai_analysis(self, content, module_name)",
        "files": [
          "archive\\legacy_scripts\\ai_test_generator.py",
          "archive\\original_backup\\scripts\\ai_test_generator.py",
          "scripts\\ai_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_class_tests(self, cls_info, module_name)",
        "files": [
          "archive\\legacy_scripts\\ai_test_generator.py",
          "archive\\original_backup\\scripts\\ai_test_generator.py",
          "scripts\\ai_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_function_test(self, func_info, is_async)",
        "files": [
          "archive\\legacy_scripts\\ai_test_generator.py",
          "archive\\original_backup\\scripts\\ai_test_generator.py",
          "scripts\\ai_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_error_handler_tests(self, handlers)",
        "files": [
          "archive\\legacy_scripts\\ai_test_generator.py",
          "archive\\original_backup\\scripts\\ai_test_generator.py",
          "scripts\\ai_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_branch_tests(self, branches)",
        "files": [
          "archive\\legacy_scripts\\ai_test_generator.py",
          "archive\\original_backup\\scripts\\ai_test_generator.py",
          "scripts\\ai_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_edge_case_tests(self, analysis)",
        "files": [
          "archive\\legacy_scripts\\ai_test_generator.py",
          "archive\\original_backup\\scripts\\ai_test_generator.py",
          "scripts\\ai_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_tests_for_uncovered_files(self, source_dir)",
        "files": [
          "archive\\legacy_scripts\\ai_test_generator.py",
          "archive\\original_backup\\scripts\\ai_test_generator.py",
          "scripts\\ai_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "measure_coverage_improvement(self, test_dir)",
        "files": [
          "archive\\legacy_scripts\\ai_test_generator.py",
          "archive\\original_backup\\scripts\\ai_test_generator.py",
          "scripts\\ai_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, src_dir)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_type_generators(self)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_comprehensive_tests(self, module_path)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_module_structure(self, module_path)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_function_detailed(self, node, source)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_class_detailed(self, node, source)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_basic_test(self, func_info, module_name)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_edge_case_test(self, func_info, module_name)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_error_test(self, func_info, module_name)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_mock_test(self, func_info, module_name)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_property_test(self, func_info, module_name)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_async_test(self, func_info, module_name)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_class_init_test(self, class_info, module_name)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_method_tests(self, method_info, class_name, module_name)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_test_value(self, param)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_setup_for_function(self, func_info)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_side_effects(self, node)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_exceptions(self, node)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detects_external_calls(self, node)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detects_state_modification(self, node)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detects_io_operations(self, node)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_infer_parameter_type(self, arg, node)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_is_abstract_class(self, node)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_import_info(self, node)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_constants(self, node)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_test_scenarios(self, func_info)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_estimate_test_coverage(self, test_cases, module_analysis)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_setup_code(self, module_analysis)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_teardown_code(self, module_analysis)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "export_test_suite(self, test_suite, output_path)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_all_test_suites(self, output_dir)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_should_generate_tests(self, file_path)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_summary_report(self)",
        "files": [
          "archive\\legacy_scripts\\automated_test_generation.py",
          "archive\\original_backup\\src\\automated_test_generation.py",
          "src\\automated_test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "process_batch(generator, files, batch_num)",
        "files": [
          "archive\\legacy_scripts\\batch_gemini_generator.py",
          "archive\\original_backup\\scripts\\batch_gemini_generator.py",
          "scripts\\batch_gemini_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_file_branches(self, file_path)",
        "files": [
          "archive\\legacy_scripts\\branch_coverage_analyzer.py",
          "archive\\original_backup\\scripts\\branch_coverage_analyzer.py",
          "scripts\\branch_coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_coverage_data(self)",
        "files": [
          "archive\\legacy_scripts\\branch_coverage_analyzer.py",
          "archive\\original_backup\\scripts\\branch_coverage_analyzer.py",
          "scripts\\branch_coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "identify_uncovered_branches(self)",
        "files": [
          "archive\\legacy_scripts\\branch_coverage_analyzer.py",
          "archive\\original_backup\\scripts\\branch_coverage_analyzer.py",
          "scripts\\branch_coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "suggest_test_for_branch(self, branch)",
        "files": [
          "archive\\legacy_scripts\\branch_coverage_analyzer.py",
          "archive\\original_backup\\scripts\\branch_coverage_analyzer.py",
          "scripts\\branch_coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_branch_test(self, uncovered_branch)",
        "files": [
          "archive\\legacy_scripts\\branch_coverage_analyzer.py",
          "archive\\original_backup\\scripts\\branch_coverage_analyzer.py",
          "scripts\\branch_coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_branch_coverage_tests(self)",
        "files": [
          "archive\\legacy_scripts\\branch_coverage_analyzer.py",
          "archive\\original_backup\\scripts\\branch_coverage_analyzer.py",
          "scripts\\branch_coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "measure_branch_coverage(self)",
        "files": [
          "archive\\legacy_scripts\\branch_coverage_analyzer.py",
          "archive\\original_backup\\scripts\\branch_coverage_analyzer.py",
          "scripts\\branch_coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "visit_FunctionDef(self, node)",
        "files": [
          "archive\\legacy_scripts\\branch_coverage_analyzer.py",
          "archive\\original_backup\\scripts\\branch_coverage_analyzer.py",
          "scripts\\branch_coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "visit_AsyncFunctionDef(self, node)",
        "files": [
          "archive\\legacy_scripts\\branch_coverage_analyzer.py",
          "archive\\original_backup\\scripts\\branch_coverage_analyzer.py",
          "scripts\\branch_coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "calculate_complexity(self, node)",
        "files": [
          "archive\\legacy_scripts\\branch_coverage_analyzer.py",
          "archive\\original_backup\\scripts\\branch_coverage_analyzer.py",
          "scripts\\branch_coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "check_modules()",
        "files": [
          "archive\\legacy_scripts\\check_what_needs_tests.py",
          "archive\\original_backup\\scripts\\check_what_needs_tests.py",
          "scripts\\check_what_needs_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, src_dir, target_coverage)",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_codebase_for_testing(self)",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_module_for_testing(self, file_path)",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_function(self, node, source)",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_has_side_effects(self, node)",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_raises_exceptions(self, node)",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_needs_testing(self, func_info)",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_unit_tests(self, module_path)",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_test_file_header(self, module_name)",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_test_inputs(self, parameters)",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_edge_case_tests(self, func_info)",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_exception_tests(self, func_info)",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_performance_tests(self, func_info)",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_mock_tests(self, func_info)",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_method_tests(self, method_info, class_name)",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "run_coverage_analysis(self)",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_coverage_report(self, cov, file_path, module_name)",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_all_tests(self)",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "write_test_files(self, output_dir)",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "measure_test_coverage(self)",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_coverage_report_html(self, output_path)",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_comprehensive_report(self)",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_recommendations(self, overall_coverage, coverage_gaps)",
        "files": [
          "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "src\\comprehensive_test_framework.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, src_dir, test_dir)",
        "files": [
          "archive\\legacy_scripts\\coverage_analysis.py",
          "archive\\original_backup\\src\\coverage_analysis.py",
          "src\\coverage_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "run_comprehensive_coverage(self)",
        "files": [
          "archive\\legacy_scripts\\coverage_analysis.py",
          "archive\\original_backup\\src\\coverage_analysis.py",
          "src\\coverage_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_single_function_coverage(self, node, executed, missing, source)",
        "files": [
          "archive\\legacy_scripts\\coverage_analysis.py",
          "archive\\original_backup\\src\\coverage_analysis.py",
          "src\\coverage_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_branch_coverage(self, cov)",
        "files": [
          "archive\\legacy_scripts\\coverage_analysis.py",
          "archive\\original_backup\\src\\coverage_analysis.py",
          "src\\coverage_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_module_branch_coverage(self, cov, file_path)",
        "files": [
          "archive\\legacy_scripts\\coverage_analysis.py",
          "archive\\original_backup\\src\\coverage_analysis.py",
          "src\\coverage_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_module_has_tests(self, file_path)",
        "files": [
          "archive\\legacy_scripts\\coverage_analysis.py",
          "archive\\original_backup\\src\\coverage_analysis.py",
          "src\\coverage_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_coverage_gaps_report(self)",
        "files": [
          "archive\\legacy_scripts\\coverage_analysis.py",
          "archive\\original_backup\\src\\coverage_analysis.py",
          "src\\coverage_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_priority(self, module)",
        "files": [
          "archive\\legacy_scripts\\coverage_analysis.py",
          "archive\\original_backup\\src\\coverage_analysis.py",
          "src\\coverage_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_module_recommendations(self, module)",
        "files": [
          "archive\\legacy_scripts\\coverage_analysis.py",
          "archive\\original_backup\\src\\coverage_analysis.py",
          "src\\coverage_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_coverage_dashboard_data(self)",
        "files": [
          "archive\\legacy_scripts\\coverage_analysis.py",
          "archive\\original_backup\\src\\coverage_analysis.py",
          "src\\coverage_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_coverage_distribution(self)",
        "files": [
          "archive\\legacy_scripts\\coverage_analysis.py",
          "archive\\original_backup\\src\\coverage_analysis.py",
          "src\\coverage_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_complexity_coverage(self)",
        "files": [
          "archive\\legacy_scripts\\coverage_analysis.py",
          "archive\\original_backup\\src\\coverage_analysis.py",
          "src\\coverage_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_visual_reports(self, output_dir)",
        "files": [
          "archive\\legacy_scripts\\coverage_analysis.py",
          "archive\\original_backup\\src\\coverage_analysis.py",
          "src\\coverage_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_module_coverage_chart(self, output_dir)",
        "files": [
          "archive\\legacy_scripts\\coverage_analysis.py",
          "archive\\original_backup\\src\\coverage_analysis.py",
          "src\\coverage_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_coverage_distribution_chart(self, output_dir)",
        "files": [
          "archive\\legacy_scripts\\coverage_analysis.py",
          "archive\\original_backup\\src\\coverage_analysis.py",
          "src\\coverage_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_complexity_coverage_chart(self, output_dir)",
        "files": [
          "archive\\legacy_scripts\\coverage_analysis.py",
          "archive\\original_backup\\src\\coverage_analysis.py",
          "src\\coverage_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "run_coverage(self)",
        "files": [
          "archive\\legacy_scripts\\coverage_baseline.py",
          "archive\\original_backup\\scripts\\coverage_baseline.py",
          "scripts\\coverage_baseline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_uncovered(self, coverage_data)",
        "files": [
          "archive\\legacy_scripts\\coverage_baseline.py",
          "archive\\original_backup\\scripts\\coverage_baseline.py",
          "scripts\\coverage_baseline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "categorize_failures(self)",
        "files": [
          "archive\\legacy_scripts\\coverage_baseline.py",
          "archive\\original_backup\\scripts\\coverage_baseline.py",
          "scripts\\coverage_baseline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_priority_matrix(self, uncovered, failures)",
        "files": [
          "archive\\legacy_scripts\\coverage_baseline.py",
          "archive\\original_backup\\scripts\\coverage_baseline.py",
          "scripts\\coverage_baseline.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_current_coverage(self)",
        "files": [
          "archive\\legacy_scripts\\coverage_improver.py",
          "archive\\original_backup\\scripts\\coverage_improver.py",
          "scripts\\coverage_improver.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "identify_missing_tests(self)",
        "files": [
          "archive\\legacy_scripts\\coverage_improver.py",
          "archive\\original_backup\\scripts\\coverage_improver.py",
          "scripts\\coverage_improver.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_missing_tests(self)",
        "files": [
          "archive\\legacy_scripts\\coverage_improver.py",
          "archive\\original_backup\\scripts\\coverage_improver.py",
          "scripts\\coverage_improver.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_test_file(self, source_file, missing_items)",
        "files": [
          "archive\\legacy_scripts\\coverage_improver.py",
          "archive\\original_backup\\scripts\\coverage_improver.py",
          "scripts\\coverage_improver.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_function_coverage_test(self, func_info)",
        "files": [
          "archive\\legacy_scripts\\coverage_improver.py",
          "archive\\original_backup\\scripts\\coverage_improver.py",
          "scripts\\coverage_improver.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_error_handler_test(self, handler_info)",
        "files": [
          "archive\\legacy_scripts\\coverage_improver.py",
          "archive\\original_backup\\scripts\\coverage_improver.py",
          "scripts\\coverage_improver.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_branch_test(self, branch_info)",
        "files": [
          "archive\\legacy_scripts\\coverage_improver.py",
          "archive\\original_backup\\scripts\\coverage_improver.py",
          "scripts\\coverage_improver.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_edge_case_tests(self)",
        "files": [
          "archive\\legacy_scripts\\coverage_improver.py",
          "archive\\original_backup\\scripts\\coverage_improver.py",
          "scripts\\coverage_improver.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_edge_cases_for_file(self, source_file)",
        "files": [
          "archive\\legacy_scripts\\coverage_improver.py",
          "archive\\original_backup\\scripts\\coverage_improver.py",
          "scripts\\coverage_improver.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_edge_case_test(self, func_node)",
        "files": [
          "archive\\legacy_scripts\\coverage_improver.py",
          "archive\\original_backup\\scripts\\coverage_improver.py",
          "scripts\\coverage_improver.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "write_generated_tests(self, tests)",
        "files": [
          "archive\\legacy_scripts\\coverage_improver.py",
          "archive\\original_backup\\scripts\\coverage_improver.py",
          "scripts\\coverage_improver.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "run_improved_coverage(self)",
        "files": [
          "archive\\legacy_scripts\\coverage_improver.py",
          "archive\\original_backup\\scripts\\coverage_improver.py",
          "scripts\\coverage_improver.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_complete_generation_flow(self)",
        "files": [
          "archive\\legacy_scripts\\data_flow_tests.py",
          "archive\\original_backup\\src\\data_flow_tests.py",
          "src\\data_flow_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_concurrent_generation_flow(self)",
        "files": [
          "archive\\legacy_scripts\\data_flow_tests.py",
          "archive\\original_backup\\src\\data_flow_tests.py",
          "src\\data_flow_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_pipeline_data_flow(self)",
        "files": [
          "archive\\legacy_scripts\\data_flow_tests.py",
          "archive\\original_backup\\src\\data_flow_tests.py",
          "src\\data_flow_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_resource_cleanup_flow(self)",
        "files": [
          "archive\\legacy_scripts\\data_flow_tests.py",
          "archive\\original_backup\\src\\data_flow_tests.py",
          "src\\data_flow_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_error_recovery_flow(self)",
        "files": [
          "archive\\legacy_scripts\\data_flow_tests.py",
          "archive\\original_backup\\src\\data_flow_tests.py",
          "src\\data_flow_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_high_throughput_flow(self)",
        "files": [
          "archive\\legacy_scripts\\data_flow_tests.py",
          "archive\\original_backup\\src\\data_flow_tests.py",
          "src\\data_flow_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_export_data_flow(self)",
        "files": [
          "archive\\legacy_scripts\\data_flow_tests.py",
          "archive\\original_backup\\src\\data_flow_tests.py",
          "src\\data_flow_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_test_dataset(self)",
        "files": [
          "archive\\legacy_scripts\\data_flow_tests.py",
          "archive\\original_backup\\src\\data_flow_tests.py",
          "src\\data_flow_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "run_all_data_flow_tests(self)",
        "files": [
          "archive\\legacy_scripts\\data_flow_tests.py",
          "archive\\original_backup\\src\\data_flow_tests.py",
          "src\\data_flow_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_data_flow_report(self)",
        "files": [
          "archive\\legacy_scripts\\data_flow_tests.py",
          "archive\\original_backup\\src\\data_flow_tests.py",
          "src\\data_flow_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "export_data_flow_report(self, output_path)",
        "files": [
          "archive\\legacy_scripts\\data_flow_tests.py",
          "archive\\original_backup\\src\\data_flow_tests.py",
          "src\\data_flow_tests.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "diagnose_module(module_name, module_path)",
        "files": [
          "archive\\legacy_scripts\\diagnose_final_five.py",
          "archive\\original_backup\\scripts\\diagnose_final_five.py",
          "scripts\\diagnose_final_five.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_test_for_module(module_path, client)",
        "files": [
          "archive\\legacy_scripts\\fast_converter.py",
          "archive\\original_backup\\scripts\\fast_converter.py",
          "scripts\\fast_converter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_test_for_module(module_name, module_path)",
        "files": [
          "archive\\legacy_scripts\\final_five_converter.py",
          "archive\\original_backup\\scripts\\final_five_converter.py",
          "scripts\\final_five_converter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "find_truly_missing()",
        "files": [
          "archive\\legacy_scripts\\find_truly_missing.py",
          "archive\\original_backup\\scripts\\find_truly_missing.py",
          "scripts\\find_truly_missing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "fix_test_imports(test_file)",
        "files": [
          "archive\\legacy_scripts\\fix_all_imports.py",
          "archive\\original_backup\\scripts\\fix_all_imports.py",
          "scripts\\fix_all_imports.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "fix_async_await_issues(self)",
        "files": [
          "archive\\legacy_scripts\\fix_remaining_issues.py",
          "archive\\original_backup\\scripts\\fix_remaining_issues.py",
          "scripts\\fix_remaining_issues.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "fix_missing_imports(self)",
        "files": [
          "archive\\legacy_scripts\\fix_remaining_issues.py",
          "archive\\original_backup\\scripts\\fix_remaining_issues.py",
          "scripts\\fix_remaining_issues.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "fix_pattern_metadata_issue(self)",
        "files": [
          "archive\\legacy_scripts\\fix_remaining_issues.py",
          "archive\\original_backup\\scripts\\fix_remaining_issues.py",
          "scripts\\fix_remaining_issues.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "fix_container_string_issue(self)",
        "files": [
          "archive\\legacy_scripts\\fix_remaining_issues.py",
          "archive\\original_backup\\scripts\\fix_remaining_issues.py",
          "scripts\\fix_remaining_issues.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "fix_missing_class_imports(self)",
        "files": [
          "archive\\legacy_scripts\\fix_remaining_issues.py",
          "archive\\original_backup\\scripts\\fix_remaining_issues.py",
          "scripts\\fix_remaining_issues.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "fix_response_data_structure(self)",
        "files": [
          "archive\\legacy_scripts\\fix_remaining_issues.py",
          "archive\\original_backup\\scripts\\fix_remaining_issues.py",
          "scripts\\fix_remaining_issues.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "fix_domain_imports(self)",
        "files": [
          "archive\\legacy_scripts\\fix_remaining_issues.py",
          "archive\\original_backup\\scripts\\fix_remaining_issues.py",
          "scripts\\fix_remaining_issues.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "fix_container_decorators(self)",
        "files": [
          "archive\\legacy_scripts\\fix_remaining_issues.py",
          "archive\\original_backup\\scripts\\fix_remaining_issues.py",
          "scripts\\fix_remaining_issues.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "fix_all_imports(self)",
        "files": [
          "archive\\legacy_scripts\\fix_test_infrastructure.py",
          "archive\\original_backup\\scripts\\fix_test_infrastructure.py",
          "scripts\\fix_test_infrastructure.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_api_mismatches(self)",
        "files": [
          "archive\\legacy_scripts\\fix_test_infrastructure.py",
          "archive\\original_backup\\scripts\\fix_test_infrastructure.py",
          "scripts\\fix_test_infrastructure.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "fix_api_mismatches(self)",
        "files": [
          "archive\\legacy_scripts\\fix_test_infrastructure.py",
          "archive\\original_backup\\scripts\\fix_test_infrastructure.py",
          "scripts\\fix_test_infrastructure.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "fix_async_issues(self)",
        "files": [
          "archive\\legacy_scripts\\fix_test_infrastructure.py",
          "archive\\original_backup\\scripts\\fix_test_infrastructure.py",
          "scripts\\fix_test_infrastructure.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "fix_mock_issues(self)",
        "files": [
          "archive\\legacy_scripts\\fix_test_infrastructure.py",
          "archive\\original_backup\\scripts\\fix_test_infrastructure.py",
          "scripts\\fix_test_infrastructure.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_code_file(self, file_path)",
        "files": [
          "archive\\legacy_scripts\\gemini_powered_test_generator.py",
          "archive\\original_backup\\scripts\\gemini_powered_test_generator.py",
          "scripts\\gemini_powered_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_uncovered_lines(self, file_path)",
        "files": [
          "archive\\legacy_scripts\\gemini_powered_test_generator.py",
          "archive\\original_backup\\scripts\\gemini_powered_test_generator.py",
          "scripts\\gemini_powered_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "extract_code_from_response(self, response_text)",
        "files": [
          "archive\\legacy_scripts\\gemini_powered_test_generator.py",
          "archive\\original_backup\\scripts\\gemini_powered_test_generator.py",
          "scripts\\gemini_powered_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "validate_generated_tests(self)",
        "files": [
          "archive\\legacy_scripts\\gemini_powered_test_generator.py",
          "archive\\original_backup\\scripts\\gemini_powered_test_generator.py",
          "scripts\\gemini_powered_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_ast_analyze(self, module_path, content)",
        "files": [
          "archive\\legacy_scripts\\gemini_test_generator.py",
          "archive\\original_backup\\scripts\\gemini_test_generator.py",
          "scripts\\gemini_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_template_test(self, module_name, import_path, analysis)",
        "files": [
          "archive\\legacy_scripts\\gemini_test_generator.py",
          "archive\\original_backup\\scripts\\gemini_test_generator.py",
          "scripts\\gemini_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_tests_for_directory(self, source_dir, limit)",
        "files": [
          "archive\\legacy_scripts\\gemini_test_generator.py",
          "archive\\original_backup\\scripts\\gemini_test_generator.py",
          "scripts\\gemini_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_test_for_module(self, src_file)",
        "files": [
          "archive\\legacy_scripts\\generate_coverage_sequential.py",
          "archive\\original_backup\\scripts\\generate_coverage_sequential.py",
          "scripts\\generate_coverage_sequential.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "run(self, limit)",
        "files": [
          "archive\\legacy_scripts\\generate_coverage_sequential.py",
          "archive\\original_backup\\scripts\\generate_coverage_sequential.py",
          "scripts\\generate_coverage_sequential.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_test_matrix(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_provider_tests(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_test_provider_factory_creation(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_test_provider_to_generator(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_test_providers_cost_tracking(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_pattern_processing_tests(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_test_generator_to_evaluator(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_test_evaluator_to_optimizer(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_test_patterns_deduplication(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_test_pattern_validation(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_analysis_tests(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_test_performance_analysis(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_test_quality_analysis(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_pipeline_tests(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_test_full_pipeline(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_test_pipeline_orchestrator(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_utility_tests(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_test_cache_integration(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_test_configuration_integration(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_test_logger_integration(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_cross_module_tests(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_test_complete_flow(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_data_flow_tests(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_test_data_consistency(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_error_propagation_tests(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_test_error_propagation(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_performance_integration_tests(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_test_concurrent_operations(self)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "run_single_test(self, test_id)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "export_report(self, output_path)",
        "files": [
          "archive\\legacy_scripts\\integration_test_matrix.py",
          "archive\\original_backup\\src\\integration_test_matrix.py",
          "src\\integration_test_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "process_module(self, module_path)",
        "files": [
          "archive\\legacy_scripts\\intelligent_converter.py",
          "archive\\original_backup\\scripts\\intelligent_converter.py",
          "scripts\\intelligent_converter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "convert_batch(self, modules)",
        "files": [
          "archive\\legacy_scripts\\intelligent_converter.py",
          "archive\\original_backup\\scripts\\intelligent_converter.py",
          "scripts\\intelligent_converter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "run_to_100_percent(self)",
        "files": [
          "archive\\legacy_scripts\\intelligent_converter.py",
          "archive\\original_backup\\scripts\\intelligent_converter.py",
          "scripts\\intelligent_converter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "count_test_files()",
        "files": [
          "archive\\legacy_scripts\\measure_final_coverage.py",
          "archive\\original_backup\\scripts\\measure_final_coverage.py",
          "scripts\\measure_final_coverage.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "count_source_modules()",
        "files": [
          "archive\\legacy_scripts\\measure_final_coverage.py",
          "archive\\original_backup\\scripts\\measure_final_coverage.py",
          "scripts\\measure_final_coverage.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "scan_untested_modules(self)",
        "files": [
          "archive\\legacy_scripts\\quick_coverage_boost.py",
          "archive\\original_backup\\scripts\\quick_coverage_boost.py",
          "scripts\\quick_coverage_boost.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_comprehensive_test(self, module_path)",
        "files": [
          "archive\\legacy_scripts\\quick_coverage_boost.py",
          "archive\\original_backup\\scripts\\quick_coverage_boost.py",
          "scripts\\quick_coverage_boost.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "boost_coverage(self)",
        "files": [
          "archive\\legacy_scripts\\quick_coverage_boost.py",
          "archive\\original_backup\\scripts\\quick_coverage_boost.py",
          "scripts\\quick_coverage_boost.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_mega_import_test(self)",
        "files": [
          "archive\\legacy_scripts\\quick_coverage_boost.py",
          "archive\\original_backup\\scripts\\quick_coverage_boost.py",
          "scripts\\quick_coverage_boost.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_test_with_healing(module_path, max_iterations)",
        "files": [
          "archive\\legacy_scripts\\self_healing_converter.py",
          "archive\\original_backup\\scripts\\self_healing_converter.py",
          "scripts\\self_healing_converter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "process_modules_with_healing(modules, max_workers)",
        "files": [
          "archive\\legacy_scripts\\self_healing_converter.py",
          "archive\\original_backup\\scripts\\self_healing_converter.py",
          "scripts\\self_healing_converter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_all_modules()",
        "files": [
          "archive\\legacy_scripts\\simple_100_percent.py",
          "archive\\original_backup\\scripts\\simple_100_percent.py",
          "scripts\\simple_100_percent.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "info(self)",
        "files": [
          "archive\\legacy_scripts\\simple_100_percent.py",
          "archive\\original_backup\\scripts\\simple_100_percent.py",
          "scripts\\simple_100_percent.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "error(self)",
        "files": [
          "archive\\legacy_scripts\\simple_100_percent.py",
          "archive\\original_backup\\scripts\\simple_100_percent.py",
          "scripts\\simple_100_percent.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_modules_to_test()",
        "files": [
          "archive\\legacy_scripts\\simple_test_generator.py",
          "archive\\original_backup\\scripts\\simple_test_generator.py",
          "scripts\\simple_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_class(self, node)",
        "files": [
          "archive\\legacy_scripts\\smart_test_generator.py",
          "archive\\original_backup\\scripts\\smart_test_generator.py",
          "scripts\\smart_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_function(self, node)",
        "files": [
          "archive\\legacy_scripts\\smart_test_generator.py",
          "archive\\original_backup\\scripts\\smart_test_generator.py",
          "scripts\\smart_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_name(self, node)",
        "files": [
          "archive\\legacy_scripts\\smart_test_generator.py",
          "archive\\original_backup\\scripts\\smart_test_generator.py",
          "scripts\\smart_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_test_for_class(self, class_name, class_info)",
        "files": [
          "archive\\legacy_scripts\\smart_test_generator.py",
          "archive\\original_backup\\scripts\\smart_test_generator.py",
          "scripts\\smart_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_test_for_function(self, func_name, func_info)",
        "files": [
          "archive\\legacy_scripts\\smart_test_generator.py",
          "archive\\original_backup\\scripts\\smart_test_generator.py",
          "scripts\\smart_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_edge_case_tests(self, analysis)",
        "files": [
          "archive\\legacy_scripts\\smart_test_generator.py",
          "archive\\original_backup\\scripts\\smart_test_generator.py",
          "scripts\\smart_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_integration_test(self, module_name, analysis)",
        "files": [
          "archive\\legacy_scripts\\smart_test_generator.py",
          "archive\\original_backup\\scripts\\smart_test_generator.py",
          "scripts\\smart_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_all_tests(self, limit)",
        "files": [
          "archive\\legacy_scripts\\smart_test_generator.py",
          "archive\\original_backup\\scripts\\smart_test_generator.py",
          "scripts\\smart_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_module_structure(self, module_path)",
        "files": [
          "archive\\legacy_scripts\\systematic_coverage.py",
          "archive\\original_backup\\scripts\\systematic_coverage.py",
          "scripts\\systematic_coverage.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "prioritize_modules(self, coverage_data)",
        "files": [
          "archive\\legacy_scripts\\systematic_coverage.py",
          "archive\\original_backup\\scripts\\systematic_coverage.py",
          "scripts\\systematic_coverage.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_test_template(self, module_name, coverage)",
        "files": [
          "archive\\legacy_scripts\\systematic_coverage.py",
          "archive\\original_backup\\scripts\\systematic_coverage.py",
          "scripts\\systematic_coverage.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_group_lines_into_ranges(self, lines)",
        "files": [
          "archive\\legacy_scripts\\systematic_coverage.py",
          "archive\\original_backup\\scripts\\systematic_coverage.py",
          "scripts\\systematic_coverage.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_module_tests(self)",
        "files": [
          "archive\\legacy_scripts\\systematic_coverage.py",
          "archive\\original_backup\\scripts\\systematic_coverage.py",
          "scripts\\systematic_coverage.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "run_and_measure_improvement(self)",
        "files": [
          "archive\\legacy_scripts\\systematic_coverage.py",
          "archive\\original_backup\\scripts\\systematic_coverage.py",
          "scripts\\systematic_coverage.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_single_generation()",
        "files": [
          "archive\\legacy_scripts\\test_single_api_call.py",
          "archive\\original_backup\\scripts\\test_single_api_call.py",
          "scripts\\test_single_api_call.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_with_correct_imports()",
        "files": [
          "archive\\legacy_scripts\\test_updated_prompt.py",
          "archive\\original_backup\\scripts\\test_updated_prompt.py",
          "scripts\\test_updated_prompt.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_first_module()",
        "files": [
          "archive\\legacy_scripts\\working_test_generator.py",
          "archive\\original_backup\\scripts\\working_test_generator.py",
          "scripts\\working_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_single_test()",
        "files": [
          "archive\\legacy_scripts\\working_test_generator.py",
          "archive\\original_backup\\scripts\\working_test_generator.py",
          "scripts\\working_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_coverage(self, test_results, statistical_analysis, confidence_level)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\__init__.py",
          "core\\intelligence\\testing\\components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_coverage_report(self, analysis, include_ml_insights)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\__init__.py",
          "core\\intelligence\\testing\\components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "optimize_test_suite(self, test_results, optimization_strategy)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\__init__.py",
          "core\\intelligence\\testing\\components\\ml_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "predict_test_failures(self, test_identifiers, historical_data)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\__init__.py",
          "core\\intelligence\\testing\\components\\ml_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_integration_tests(self, system_components, api_endpoints, complexity_level)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\__init__.py",
          "core\\intelligence\\testing\\components\\integration_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "validate_integration_coverage(self, test_results, required_integrations)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\__init__.py",
          "core\\intelligence\\testing\\components\\integration_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "execute_unified_test_analysis(self, test_results, analysis_type)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_testing_intelligence(self)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_line_coverage(self, test_results)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_branch_coverage(self, test_results)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_function_coverage(self, test_results)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_class_coverage(self, test_results)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_file_coverage(self, test_results)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_confidence_interval(self, values, confidence_level)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_statistical_power(self, values)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_assess_sample_adequacy(self, values)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_identify_coverage_gaps(self, test_results)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_find_untested_components(self, test_results)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_build_dependency_graph(self, test_results)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_find_critical_paths(self)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_ml_optimizer(self)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\ml_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_failure_predictor(self)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\ml_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_test_features(self, test_results)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\ml_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_test_priorities(self, features, test_results)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\ml_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_redundant_tests(self, features, test_results)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\ml_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_recommend_performance_optimizations(self, test_results)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\ml_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_assess_optimization_risks(self, test_results, redundant_groups)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\ml_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_time_savings(self, test_results, redundant_groups)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\ml_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_train_failure_predictor(self, historical_data)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\ml_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_test_features_for_prediction(self, test_id, data_source)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\ml_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_cross_system_tests(self, system_components, complexity_level)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\integration_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_api_integration_tests(self, api_endpoints, complexity_level)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\integration_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_dependency_chain_tests(self, system_components)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\integration_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_performance_integration_tests(self, system_components)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\integration_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_integration_quality_score(self, covering_tests, integration)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\integration_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_integration_recommendations(self, coverage_analysis)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\integration_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_graph_metrics(self, graph)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\components\\coverage_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_unified_confidence(self, coverage_analysis, optimization_analysis, integration_analysis)",
        "files": [
          "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "core\\intelligence\\testing\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_agent_qa(enable_monitoring)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "configure_agent_qa(similarity_threshold, enable_benchmarking, enable_monitoring, alert_threshold)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "inspect_agent_quality(agent_id, test_cases, include_benchmarks)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "validate_agent_output(agent_id, output, expected, validation_rules)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "score_agent_quality(agent_id, quality_metrics, custom_weights)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "benchmark_agent_performance(agent_id, benchmark_types, iterations)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_quality_status()",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "shutdown_agent_qa()",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_issue(self, issue)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\validation_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_grade(self)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\scoring_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, enable_monitoring)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_log(self, message)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_default_weights(self)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\scoring_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_performance_thresholds(self)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_quality_standards(self)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_all_agents(self)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\quality_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_agent_quality(self, agent_id)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\quality_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_threshold_breach(self, value, threshold)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\quality_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_trend_anomaly(self, values, threshold)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\quality_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_alert(self, agent_id, threshold, current_value)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\quality_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_trend_alert(self, agent_id, threshold, values)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\quality_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_raise_alert(self, alert)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\quality_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "record_metric(self, agent_id, metric_name, value)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\quality_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "inspect_agent(self, agent_id, test_cases, include_benchmarks)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\quality_inspector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_syntax_quality(self, agent_id, test_cases)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\quality_inspector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_semantic_quality(self, agent_id, test_cases)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\quality_inspector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_performance_quality(self, agent_id)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\quality_inspector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_security_quality(self, agent_id)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\quality_inspector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_reliability_quality(self, agent_id)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\quality_inspector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_inspection_score(self, metrics)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_determine_quality_status(self, overall_score)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\quality_inspector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "validate_output(self, agent_id, output, expected, validation_rules)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\validation_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_validation_score(self, result)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\validation_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_similarity(self, output, expected)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\validation_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_syntax(self, output)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\validation_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_indentation(self, output)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\validation_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_json_format(self, output)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\validation_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_naming_consistency(self, output)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\validation_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_not_empty(self, output)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\validation_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_content_relevance(self, output)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\validation_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_response_time(self, output)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\validation_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_suggestion(self, rule_name)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\validation_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "calculate_score(self, agent_id, quality_metrics, custom_weights)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\scoring_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_category_score(self, metrics, category)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\scoring_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_filter_metrics_by_category(self, metrics, category)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\scoring_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_metric_weight(self, metric_name, category)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\scoring_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_category_details(self, metrics, category)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\scoring_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_apply_custom_weights(self, custom_weights)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\scoring_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_determine_score_status(self, overall_score)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\scoring_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_percentile(self, agent_id, current_score)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\scoring_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "run_benchmarks(self, agent_id, benchmark_types, iterations)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\benchmarking_suite.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_run_single_benchmark(self, agent_id, benchmark_type, iterations)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\benchmarking_suite.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_execute_benchmark(self, agent_id, benchmark_type)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\benchmarking_suite.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_benchmark_response_time(self, agent_id)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\benchmarking_suite.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_benchmark_throughput(self, agent_id)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\benchmarking_suite.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_benchmark_memory_usage(self, agent_id)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\benchmarking_suite.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_benchmark_cpu_utilization(self, agent_id)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\benchmarking_suite.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_benchmark_accuracy(self, agent_id)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\benchmarking_suite.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_benchmark_scalability(self, agent_id)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\benchmarking_suite.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_benchmark_reliability(self, agent_id)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\benchmarking_suite.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_metric_unit(self, benchmark_type)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\benchmarking_suite.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_baseline(self, agent_id, metric_name)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\benchmarking_suite.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_overall_benchmark_score(self, metrics)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\benchmarking_suite.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_benchmark_metric_weight(self, metric_name)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_determine_benchmark_status(self, overall_score)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\benchmarking_suite.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_custom_validation_rule(self, category, rule)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "set_baseline(self, agent_id, metric_name, value)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\benchmarking_suite.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "set_benchmark(self, benchmark_name, score)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\scoring_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_alerts(self, agent_id, severity, since)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\quality_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "clear_old_alerts(self, days)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\quality_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_inspection_history(self, agent_id)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\quality_inspector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_validation_history(self, agent_id)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\validation_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_scoring_history(self, agent_id)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\scoring_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_benchmark_history(self, agent_id)",
        "files": [
          "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "testmaster\\agent_qa\\benchmarking_suite.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_infrastructure_debt(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_categorize_debt(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_debt_trends(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_assess_team_capacity_impact(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_assess_debt_risks(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_prioritization_matrix(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_assess_duplication_severity(self, dup)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_dead_code(self, tree, file_path)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_coupling(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_architectural_violations(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_design_pattern_issues(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_test_coverage_gaps(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_test_quality(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
          "dashboard\\dashboard_core\\test_collector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_flaky_tests(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_has_adequate_readme(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_outdated_dependencies(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_assess_dependency_severity(self, dep)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_deprecated_dependencies(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_scan_security_vulnerabilities(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_hardcoded_secrets(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_algorithmic_complexity(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\performance_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_database_performance(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\performance_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_suggest_automation(self, issue_type)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_debt_patterns(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_debt_ratio(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_current_coverage(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_average_complexity(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_estimate_morale_impact(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_delivery_impact(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_assess_innovation_impact(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_assess_operational_impact(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_recommended_action(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_summarize_by_severity(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_summarize_by_type(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_summarize_by_risk(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_assess_quality_risk(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_assess_security_exposure(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_assess_talent_risk(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_quick_wins(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_simple_roi(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_payback_period(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_recommend_investment(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_recommend_next_steps(self)",
        "files": [
          "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_assess_semantic_quality(self)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_class_intent(self, node, file_path)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_intent_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_determine_class_intent(self, node)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_intent_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_function_signature(self, node)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_intent_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_class_signature(self, node)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_intent_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_module_signature(self, tree, file_path)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_intent_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_pattern_presence(self, tree, indicators)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_pattern_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_pattern_confidence(self, tree, pattern_info)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_pattern_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_anti_patterns(self, tree)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_pattern_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_dependencies(self, node)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_relationship_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_determine_file_purpose(self, file_path)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_intent_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_identify_naming_convention(self, name)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_relationship_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_function_name_coherence(self, node)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_relationship_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_suggest_better_name(self, node)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_relationship_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_has_state_machine_pattern(self, tree)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_pattern_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_has_event_pattern(self, tree)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_pattern_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_has_pipeline_pattern(self, tree)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_pattern_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_classify_domain_element(self, node)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_pattern_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_class_properties(self, node)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_pattern_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_semantic_features(self, node)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_pattern_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_simple_cluster(self, elements)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_pattern_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_base_name(self, name)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_intent_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_function_structure(self, node)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_intent_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_are_structures_consistent(self, functions)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_intent_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_assess_code_clarity(self, tree)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_relationship_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_assess_code_consistency(self, tree)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_relationship_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_assess_code_expressiveness(self, tree)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_relationship_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_dominant_intent(self)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_analyzer_modular.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_semantic_complexity(self)",
        "files": [
          "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "core\\intelligence\\analysis\\semantic_analyzer.py",
          "core\\intelligence\\analysis\\semantic_analyzer_modular.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_cache()",
        "files": [
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "cache\\intelligent_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "cached(ttl)",
        "files": [
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "cache\\intelligent_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "touch(self)",
        "files": [
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "cache\\intelligent_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, cache_dir, max_size_mb, default_ttl, strategy, enable_compression, enable_persistence)",
        "files": [
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "cache\\intelligent_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_load_from_disk(self)",
        "files": [
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "cache\\intelligent_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_save_to_disk(self, entry)",
        "files": [
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "cache\\intelligent_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_remove_from_disk(self, key)",
        "files": [
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "cache\\intelligent_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_key(self)",
        "files": [
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "cache\\intelligent_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "set(self, key, value, ttl, metadata)",
        "files": [
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "cache\\intelligent_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_evict_one(self)",
        "files": [
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "cache\\intelligent_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_evict(self, key)",
        "files": [
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "cache\\intelligent_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "warm_cache(self, keys_and_values)",
        "files": [
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "cache\\intelligent_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "cleanup_expired(self)",
        "files": [
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "cache\\intelligent_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "export_cache(self, file_path)",
        "files": [
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "cache\\intelligent_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, cache, ttl)",
        "files": [
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "cache\\intelligent_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "expensive_function(x)",
        "files": [
          "archive\\original_backup\\cache\\intelligent_cache.py",
          "cache\\intelligent_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_environment(self)",
        "files": [
          "archive\\original_backup\\config\\testmaster_config.py",
          "config\\testmaster_config.py",
          "core\\intelligence\\config\\enterprise_config_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_load_all_configs(self)",
        "files": [
          "archive\\original_backup\\config\\testmaster_config.py",
          "config\\testmaster_config.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_load_defaults(self)",
        "files": [
          "archive\\original_backup\\config\\testmaster_config.py",
          "config\\testmaster_config.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_save_defaults(self)",
        "files": [
          "archive\\original_backup\\config\\testmaster_config.py",
          "config\\testmaster_config.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_load_config_file(self, file_path)",
        "files": [
          "archive\\original_backup\\config\\testmaster_config.py",
          "config\\testmaster_config.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_load_env_vars(self)",
        "files": [
          "archive\\original_backup\\config\\testmaster_config.py",
          "config\\testmaster_config.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_validate_config(self)",
        "files": [
          "archive\\original_backup\\config\\testmaster_config.py",
          "config\\testmaster_config.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_config_hash(self)",
        "files": [
          "archive\\original_backup\\config\\testmaster_config.py",
          "config\\testmaster_config.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "reload(self)",
        "files": [
          "archive\\original_backup\\config\\testmaster_config.py",
          "config\\testmaster_config.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "has_changed(self)",
        "files": [
          "archive\\original_backup\\config\\testmaster_config.py",
          "config\\testmaster_config.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get(self, path, default)",
        "files": [
          "archive\\original_backup\\config\\testmaster_config.py",
          "config\\testmaster_config.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "set(self, path, value)",
        "files": [
          "archive\\original_backup\\config\\testmaster_config.py",
          "config\\testmaster_config.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "save(self, file_path)",
        "files": [
          "archive\\original_backup\\config\\testmaster_config.py",
          "config\\testmaster_config.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "validate_api_keys(self)",
        "files": [
          "archive\\original_backup\\config\\testmaster_config.py",
          "config\\testmaster_config.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_active_model(self)",
        "files": [
          "archive\\original_backup\\config\\testmaster_config.py",
          "config\\testmaster_config.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "print_summary(self)",
        "files": [
          "archive\\original_backup\\config\\testmaster_config.py",
          "config\\testmaster_config.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "collect_metrics(self, test_dir, source_dir)",
        "files": [
          "archive\\original_backup\\dashboard\\quality_dashboard.py",
          "dashboard\\quality_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_collect_test_metrics(self, test_dir)",
        "files": [
          "archive\\original_backup\\dashboard\\quality_dashboard.py",
          "dashboard\\quality_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_collect_module_metrics(self, source_dir, test_metrics)",
        "files": [
          "archive\\original_backup\\dashboard\\quality_dashboard.py",
          "dashboard\\quality_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_trends(self, test_metrics, module_metrics)",
        "files": [
          "archive\\original_backup\\dashboard\\quality_dashboard.py",
          "dashboard\\quality_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_weekly_stats(self, test_metrics)",
        "files": [
          "archive\\original_backup\\dashboard\\quality_dashboard.py",
          "dashboard\\quality_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_top_failures(self, test_metrics)",
        "files": [
          "archive\\original_backup\\dashboard\\quality_dashboard.py",
          "dashboard\\quality_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_slowest_tests(self, test_metrics)",
        "files": [
          "archive\\original_backup\\dashboard\\quality_dashboard.py",
          "dashboard\\quality_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_recommendations(self, test_metrics, module_metrics)",
        "files": [
          "archive\\original_backup\\dashboard\\quality_dashboard.py",
          "dashboard\\quality_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_heatmap_data(self, module_metrics)",
        "files": [
          "archive\\original_backup\\dashboard\\quality_dashboard.py",
          "dashboard\\quality_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_heatmap_color(self, coverage)",
        "files": [
          "archive\\original_backup\\dashboard\\quality_dashboard.py",
          "dashboard\\quality_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_html_dashboard(self, data)",
        "files": [
          "archive\\original_backup\\dashboard\\quality_dashboard.py",
          "dashboard\\quality_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_json_report(self, data)",
        "files": [
          "archive\\original_backup\\dashboard\\quality_dashboard.py",
          "dashboard\\quality_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "convert_dates(obj)",
        "files": [
          "archive\\original_backup\\dashboard\\quality_dashboard.py",
          "dashboard\\quality_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_signature_hash(self)",
        "files": [
          "archive\\original_backup\\deduplication\\test_deduplicator.py",
          "deduplication\\test_deduplicator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_body_hash(self)",
        "files": [
          "archive\\original_backup\\deduplication\\test_deduplicator.py",
          "deduplication\\test_deduplicator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, similarity_threshold)",
        "files": [
          "archive\\original_backup\\deduplication\\test_deduplicator.py",
          "deduplication\\test_deduplicator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_test_case(self, node, file_path, class_name)",
        "files": [
          "archive\\original_backup\\deduplication\\test_deduplicator.py",
          "deduplication\\test_deduplicator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "find_duplicates(self, test_files)",
        "files": [
          "archive\\original_backup\\deduplication\\test_deduplicator.py",
          "deduplication\\test_deduplicator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_cluster_similar_tests(self, test_cases)",
        "files": [
          "archive\\original_backup\\deduplication\\test_deduplicator.py",
          "deduplication\\test_deduplicator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_similarity(self, test1, test2)",
        "files": [
          "archive\\original_backup\\deduplication\\test_deduplicator.py",
          "deduplication\\test_deduplicator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "merge_duplicates(self, duplicates)",
        "files": [
          "archive\\original_backup\\deduplication\\test_deduplicator.py",
          "deduplication\\test_deduplicator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "identify_coverage_gaps(self, test_cases, source_files)",
        "files": [
          "archive\\original_backup\\deduplication\\test_deduplicator.py",
          "deduplication\\test_deduplicator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_source_functions(self, source_files)",
        "files": [
          "archive\\original_backup\\deduplication\\test_deduplicator.py",
          "deduplication\\test_deduplicator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_deduplication_report(self)",
        "files": [
          "archive\\original_backup\\deduplication\\test_deduplicator.py",
          "deduplication\\test_deduplicator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_recommend_action(self, duplicates)",
        "files": [
          "archive\\original_backup\\deduplication\\test_deduplicator.py",
          "deduplication\\test_deduplicator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "apply_deduplication(self, output_dir, dry_run)",
        "files": [
          "archive\\original_backup\\deduplication\\test_deduplicator.py",
          "deduplication\\test_deduplicator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "has_changed(self, new_hash)",
        "files": [
          "archive\\original_backup\\incremental\\dependency_tracker.py",
          "incremental\\dependency_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_module(self, module_info)",
        "files": [
          "archive\\original_backup\\incremental\\dependency_tracker.py",
          "incremental\\dependency_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_impact_radius(self, changed_module)",
        "files": [
          "archive\\original_backup\\incremental\\dependency_tracker.py",
          "incremental\\dependency_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_test_impact(self, changed_modules)",
        "files": [
          "archive\\original_backup\\incremental\\dependency_tracker.py",
          "incremental\\dependency_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "visualize(self)",
        "files": [
          "archive\\original_backup\\incremental\\dependency_tracker.py",
          "incremental\\dependency_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_find_test_files(self, module_path)",
        "files": [
          "archive\\original_backup\\incremental\\dependency_tracker.py",
          "incremental\\dependency_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "scan_codebase(self, source_dir)",
        "files": [
          "archive\\original_backup\\incremental\\dependency_tracker.py",
          "incremental\\dependency_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "detect_changes(self, source_dir)",
        "files": [
          "archive\\original_backup\\incremental\\dependency_tracker.py",
          "incremental\\dependency_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_incremental_tests(self, changes)",
        "files": [
          "archive\\original_backup\\incremental\\dependency_tracker.py",
          "incremental\\dependency_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_new_test(self, module_info)",
        "files": [
          "archive\\original_backup\\incremental\\dependency_tracker.py",
          "incremental\\dependency_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_existing_test(self, module_info)",
        "files": [
          "archive\\original_backup\\incremental\\dependency_tracker.py",
          "incremental\\dependency_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "select_tests_for_ci(self, changed_files)",
        "files": [
          "archive\\original_backup\\incremental\\dependency_tracker.py",
          "incremental\\dependency_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_prioritize_tests(self, test_files)",
        "files": [
          "archive\\original_backup\\incremental\\dependency_tracker.py",
          "incremental\\dependency_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_impact_report(self, changes)",
        "files": [
          "archive\\original_backup\\incremental\\dependency_tracker.py",
          "incremental\\dependency_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "save_state(self)",
        "files": [
          "archive\\original_backup\\incremental\\dependency_tracker.py",
          "incremental\\dependency_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "load_state(self)",
        "files": [
          "archive\\original_backup\\incremental\\dependency_tracker.py",
          "incremental\\dependency_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "find_integration_points(self)",
        "files": [
          "archive\\original_backup\\integration\\cross_module_tester.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "integration\\cross_module_tester.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_module_interaction(self, source, target)",
        "files": [
          "archive\\original_backup\\integration\\cross_module_tester.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "integration\\cross_module_tester.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_call_target(self, node)",
        "files": [
          "archive\\original_backup\\integration\\cross_module_tester.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "integration\\cross_module_tester.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, test_output_dir)",
        "files": [
          "archive\\original_backup\\integration\\cross_module_tester.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "integration\\cross_module_tester.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_codebase(self, source_dir)",
        "files": [
          "archive\\original_backup\\integration\\cross_module_tester.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "integration\\cross_module_tester.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_integration_tests(self)",
        "files": [
          "archive\\original_backup\\integration\\cross_module_tester.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "integration\\cross_module_tester.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_module_integration_test(self, target_module, points)",
        "files": [
          "archive\\original_backup\\integration\\cross_module_tester.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "integration\\cross_module_tester.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_function_call_test(self, point, interface)",
        "files": [
          "archive\\original_backup\\integration\\cross_module_tester.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "integration\\cross_module_tester.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_inheritance_test(self, point, interface)",
        "files": [
          "archive\\original_backup\\integration\\cross_module_tester.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "integration\\cross_module_tester.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_data_exchange_test(self, point, interface)",
        "files": [
          "archive\\original_backup\\integration\\cross_module_tester.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "integration\\cross_module_tester.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_module_integration_tests(self, interface)",
        "files": [
          "archive\\original_backup\\integration\\cross_module_tester.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "integration\\cross_module_tester.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_boundary_tests(self)",
        "files": [
          "archive\\original_backup\\integration\\cross_module_tester.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "integration\\cross_module_tester.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_contract_tests(self)",
        "files": [
          "archive\\original_backup\\integration\\cross_module_tester.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "integration\\cross_module_tester.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_single_contract_test(self, contract)",
        "files": [
          "archive\\original_backup\\integration\\cross_module_tester.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "integration\\cross_module_tester.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_contract(self, contract)",
        "files": [
          "archive\\original_backup\\integration\\cross_module_tester.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "integration\\cross_module_tester.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_dependency_graph(self)",
        "files": [
          "archive\\original_backup\\integration\\cross_module_tester.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "integration\\cross_module_tester.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "total_time(self)",
        "files": [
          "archive\\original_backup\\optimization\\execution_optimizer.py",
          "optimization\\execution_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "can_run_test(self, test)",
        "files": [
          "archive\\original_backup\\optimization\\execution_optimizer.py",
          "optimization\\execution_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_optimal_concurrency(self)",
        "files": [
          "archive\\original_backup\\optimization\\execution_optimizer.py",
          "integration\\resource_optimization_engine.py",
          "optimization\\execution_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "schedule_tests(self, tests)",
        "files": [
          "archive\\original_backup\\optimization\\execution_optimizer.py",
          "optimization\\execution_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_schedule_parallel(self, tests, mode)",
        "files": [
          "archive\\original_backup\\optimization\\execution_optimizer.py",
          "optimization\\execution_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_schedule_adaptive(self, tests)",
        "files": [
          "archive\\original_backup\\optimization\\execution_optimizer.py",
          "optimization\\execution_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_optimal_batch_size(self, tests)",
        "files": [
          "archive\\original_backup\\optimization\\execution_optimizer.py",
          "optimization\\execution_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, strategy, fail_fast, timeout)",
        "files": [
          "archive\\original_backup\\optimization\\execution_optimizer.py",
          "optimization\\execution_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "execute_tests(self, tests)",
        "files": [
          "archive\\original_backup\\optimization\\execution_optimizer.py",
          "optimization\\execution_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_estimate_test_durations(self, tests)",
        "files": [
          "archive\\original_backup\\optimization\\execution_optimizer.py",
          "optimization\\execution_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_historical_duration(self, test_name)",
        "files": [
          "archive\\original_backup\\optimization\\execution_optimizer.py",
          "optimization\\execution_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_execute_single_test(self, test)",
        "files": [
          "archive\\original_backup\\optimization\\execution_optimizer.py",
          "optimization\\execution_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_execute_parallel_batch(self, batch)",
        "files": [
          "archive\\original_backup\\optimization\\execution_optimizer.py",
          "optimization\\execution_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_performance_metrics(self, results)",
        "files": [
          "archive\\original_backup\\optimization\\execution_optimizer.py",
          "optimization\\execution_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "optimize_future_executions(self)",
        "files": [
          "archive\\original_backup\\optimization\\execution_optimizer.py",
          "optimization\\execution_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_execution_report(self)",
        "files": [
          "archive\\original_backup\\optimization\\execution_optimizer.py",
          "optimization\\execution_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, endpoint)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\api\\enterprise_integration_layer.py",
          "archive\\oversized_modules_20250821_042018\\api\\enterprise_integration_layer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_default_endpoints(self)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\api\\enterprise_integration_layer.py",
          "core\\intelligence\\api\\unified_api_gateway.py",
          "core\\intelligence\\enterprise\\api\\endpoint_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_processing_metrics(self, processing_time_ms, success)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\api\\enterprise_integration_layer.py",
          "core\\intelligence\\enterprise\\api_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_endpoint_documentation(self)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\api\\enterprise_integration_layer.py",
          "core\\intelligence\\api\\unified_api_gateway.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "post(self)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "archive\\oversized_modules_20250821_042018\\api\\ml_api.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_message_processing_loop(self)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\coordination\\agent_coordination_protocols.py",
          "core\\intelligence\\coordination\\cross_agent_bridge.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_start_orchestration_threads(self)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\coordination\\unified_workflow_orchestrator.py",
          "archive\\oversized_modules_20250821_042018\\ml\\enterprise\\ml_infrastructure_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "execute_workflow(self, workflow_id)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\coordination\\unified_workflow_orchestrator.py",
          "core\\intelligence\\coordination\\cross_agent_bridge.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_success_rate(self)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\coordination\\unified_workflow_orchestrator.py",
          "core\\intelligence\\enterprise\\api_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "stop_orchestration(self)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\coordination\\unified_workflow_orchestrator.py",
          "archive\\oversized_modules_20250821_042018\\ml\\enterprise\\ml_infrastructure_orchestrator.py",
          "core\\testing\\unified_test_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_data_complexity(self, data)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\delivery_optimizer.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\integrity_ml_guardian.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_optimization_effectiveness(self)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\delivery_optimizer.py",
          "core\\intelligence\\testing\\advanced\\ml_test_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_ml_training_loop(self)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\integrity_ml_guardian.py",
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\performance_optimizer.py",
          "core\\intelligence\\ml\\advanced\\performance_ml_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_ml_prediction_loop(self)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\ml\\advanced\\sla_ml_optimizer.py",
          "core\\intelligence\\ml\\advanced\\performance_ml_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_metric(self, name)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\monitoring\\performance_optimization_engine.py",
          "core\\observability\\unified_monitor_enhanced.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_all_metrics(self)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\monitoring\\performance_optimization_engine.py",
          "core\\observability\\unified_monitor_enhanced.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_gdpr_rules(self)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\validation\\system_validation_framework.py",
          "core\\intelligence\\security\\enterprise\\compliance_automation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_validation_summary(self)",
        "files": [
          "archive\\oversized_modules_20250821_042018\\validation\\system_validation_framework.py",
          "core\\security\\validation_security.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_async_state_manager()",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "core\\async_state_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "async_context(parent_id, scope, metadata)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "core\\async_state_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, cleanup_interval)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "core\\async_state_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_start_cleanup(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "core\\async_state_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_context(self, parent_id, scope, metadata)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "core\\async_state_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "sync_context(self, parent_id, scope, metadata)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "core\\async_state_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "set_state(self, key, value, scope, context_id, expiry, metadata)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "core\\async_state_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_state(self, key, scope, context_id, default)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "core\\async_state_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_state_from_scope(self, key, scope, context_id)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "core\\async_state_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_is_expired(self, entry)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "core\\async_state_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "delete_state(self, key, scope, context_id)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "core\\async_state_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_delete_from_scope(self, key, scope, context_id)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "core\\async_state_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_cleanup_callback(self, context_id, callback)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "core\\async_state_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_run_context_cleanup(self, context_id)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "core\\async_state_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "deactivate_context(self, context_id)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "core\\async_state_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_context_info(self, context_id)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "core\\async_state_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_active_contexts(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "core\\async_state_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_state_summary(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "core\\async_state_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_cleanup_expired_contexts(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "core\\async_state_manager.py",
          "core\\intelligence\\reliability\\quantum_retry_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_cleanup_expired_states(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "core\\async_state_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_send_state_telemetry(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "core\\async_state_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_shared_state()",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "core\\shared_state.py",
          "testmaster\\core\\shared_state.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "state_get(key, default)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "core\\shared_state.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "state_set(key, value, ttl)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "core\\shared_state.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "state_increment(key, amount)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "core\\shared_state.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "state_append(key, value)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "core\\shared_state.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "state_exists(key)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "core\\shared_state.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "cache_llm_response(prompt, response, model)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "core\\shared_state.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_cached_llm_response(prompt, model)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "core\\shared_state.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "cache_test_result(module_path, test_code, score)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "core\\shared_state.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_cached_test_result(module_path)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "core\\shared_state.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "increment(self, key, amount)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "core\\shared_state.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "append(self, key, value)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "core\\shared_state.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "update_dict(self, key, updates)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "core\\shared_state.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "exists(self, key)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "core\\shared_state.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "keys(self, pattern)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "core\\shared_state.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "clear(self, pattern)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "core\\shared_state.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_load_from_file(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "core\\shared_state.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_save_to_file(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "core\\shared_state.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_init_redis(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "core\\shared_state.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_redis_set(self, key, value, ttl)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "core\\shared_state.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_redis_get(self, key)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "core\\shared_state.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_redis_delete(self, key)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "core\\shared_state.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_redis_keys(self, pattern)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "core\\shared_state.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_unified_observability()",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_value(self, value)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_utilization_percentage(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "needs_scaling_up(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "needs_scaling_down(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "can_trigger(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "calculate_effectiveness(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_default_metrics(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_scaling_metric(self, metric)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_scaling_rule(self, rule)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_scaling_status(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_scaling_metrics_summary(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_recent_scaling_decisions(self, hours)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_scaling_effectiveness(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_error_occurrence(self, error)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "integration\\comprehensive_error_recovery.py",
          "integration\\comprehensive_error_recovery_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_recommended_strategy(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "integration\\comprehensive_error_recovery.py",
          "integration\\comprehensive_error_recovery_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_circuit_breaker_status(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "integration\\comprehensive_error_recovery.py",
          "integration\\comprehensive_error_recovery_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_error_patterns(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "integration\\comprehensive_error_recovery.py",
          "integration\\comprehensive_error_recovery_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_access_pattern_score(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "calculate_size(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "hit_rate(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "miss_rate(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "put(self, key, value, ttl_seconds, system, tags)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "remove(self, key)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_size_limits(self, entry)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_ensure_capacity(self, new_entry_size)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_evict_entries(self, count)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_adaptive_eviction_selection(self, count)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_access_tracking(self, key)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_remove_entry(self, key)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_record_event(self, event_type, key, size_bytes, metadata)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_performance_stats(self, response_time_ms, size_bytes)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_cache_levels(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_record_access_pattern(self, key, system)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_are_access_patterns_similar(self, key1, key2)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_cache_status(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_cache_performance(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_access_patterns(self, key)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer.py",
          "integration\\intelligent_caching_layer_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_value(self, value, timestamp)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "is_threshold_breached(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "acknowledge(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "resolve(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "escalate(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_duration(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "calculate_health_score(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_system_metrics(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_find_existing_alert(self, metric_id, severity, alert_type)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_collection_latency(self, latency_ms)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_custom_metric(self, metric)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "register_alert_handler(self, severity, handler)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_system_health_summary(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_active_alerts(self, system)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_metric_details(self, metric_id)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_performance_dashboard_data(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_predictive_insights_summary(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring.py",
          "integration\\realtime_performance_monitoring_robust.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "to_workflow_step(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_map_node_type_to_step_type(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_node(self, node)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "core\\intelligence\\knowledge_graph\\instant_graph_engine.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_connection(self, connection)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "remove_node(self, node_id)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "validate_design(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_validate_node(self, node)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_has_invalid_cycles(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "to_workflow_definition(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_node_templates(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_load_system_operations(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_design_session(self, workflow_name)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_design_session(self, session_id)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_node_to_session(self, session_id, template_name, position)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "connect_nodes(self, session_id, source_node_id, target_node_id, connection_type)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "update_node_properties(self, session_id, node_id, properties)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "validate_session(self, session_id)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_workflow_yaml(self, session_id)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "save_workflow_design(self, session_id, file_path)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "load_workflow_design(self, file_path)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_session_from_workflow(self, workflow_def)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_map_step_type_to_node_type(self, step_type)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_auto_layout(self, steps)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_node_templates(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_system_operations(self, system_type)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_designer_statistics(self)",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "integration\\visual_workflow_designer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "update_data(self, new_data)",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_age_seconds(self)",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "ui_ux\\agent_verse_ui.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_point(self, value, series_name, timestamp)",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_chart_data(self)",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "update_metric(self, name, value, unit)",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_metric_status(self, name)",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_control(self, name, control_type, config, callback)",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "trigger_control(self, control_id, value)",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_control_state(self, control_id)",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_default_widgets(self)",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_widget(self, widget)",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "remove_widget(self, widget_id)",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "update_widget_position(self, widget_id, position)",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "update_widget_size(self, widget_id, size)",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_data_source(self, name, source)",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_alert(self, level, message, source)",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "set_theme(self, theme)",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "export_layout(self)",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "import_layout(self, layout_data)",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_widget_data(self, widget_id)",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_dashboard_status(self)",
        "files": [
          "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "ui_ux\\interactive_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_enhancement_info(self)",
        "files": [
          "config\\yaml_config_enhancer.py",
          "orchestration\\swarm_router_enhancement.py",
          "ui\\nocode_enhancement.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "to_ast(self)",
        "files": [
          "core\\ast_abstraction.py",
          "core\\ast_abstraction.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "feature_enabled(layer, enhancement)",
        "files": [
          "core\\feature_flags.py",
          "testmaster\\core\\feature_flags.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "is_shared_state_enabled()",
        "files": [
          "core\\feature_flags.py",
          "testmaster\\core\\feature_flags.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "is_performance_monitoring_enabled()",
        "files": [
          "core\\feature_flags.py",
          "testmaster\\core\\feature_flags.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "is_graph_workflows_enabled()",
        "files": [
          "core\\feature_flags.py",
          "testmaster\\core\\feature_flags.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "is_async_processing_enabled()",
        "files": [
          "core\\feature_flags.py",
          "testmaster\\core\\feature_flags.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "is_dashboard_enabled()",
        "files": [
          "core\\feature_flags.py",
          "testmaster\\core\\feature_flags.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "is_telemetry_enabled()",
        "files": [
          "core\\feature_flags.py",
          "testmaster\\core\\feature_flags.py",
          "testmaster\\telemetry\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "initialize(cls, config_path)",
        "files": [
          "core\\feature_flags.py",
          "testmaster\\core\\feature_flags.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_load_config(cls)",
        "files": [
          "core\\feature_flags.py",
          "testmaster\\core\\feature_flags.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_default_config(cls)",
        "files": [
          "core\\feature_flags.py",
          "testmaster\\core\\feature_flags.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_config(cls, layer, enhancement)",
        "files": [
          "core\\feature_flags.py",
          "testmaster\\core\\feature_flags.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "enable(cls, layer, enhancement)",
        "files": [
          "core\\feature_flags.py",
          "testmaster\\core\\feature_flags.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "disable(cls, layer, enhancement)",
        "files": [
          "core\\feature_flags.py",
          "testmaster\\core\\feature_flags.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "set_feature(cls, layer, enhancement, enabled)",
        "files": [
          "core\\feature_flags.py",
          "testmaster\\core\\feature_flags.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_all_features(cls)",
        "files": [
          "core\\feature_flags.py",
          "testmaster\\core\\feature_flags.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "show_status(cls)",
        "files": [
          "core\\feature_flags.py",
          "testmaster\\core\\feature_flags.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "save_config(cls, path)",
        "files": [
          "core\\feature_flags.py",
          "testmaster\\core\\feature_flags.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "reload_config(cls)",
        "files": [
          "core\\feature_flags.py",
          "testmaster\\core\\feature_flags.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_clear_cache(cls)",
        "files": [
          "core\\feature_flags.py",
          "testmaster\\core\\feature_flags.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "enable_layer_enhancements(cls, layer)",
        "files": [
          "core\\feature_flags.py",
          "testmaster\\core\\feature_flags.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "disable_layer_enhancements(cls, layer)",
        "files": [
          "core\\feature_flags.py",
          "testmaster\\core\\feature_flags.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "detect(self, code_path)",
        "files": [
          "core\\framework_abstraction.py",
          "core\\framework_abstraction.stub_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_framework_config(self, framework)",
        "files": [
          "core\\framework_abstraction.py",
          "core\\framework_abstraction.stub_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_setup(self, setup_code)",
        "files": [
          "core\\framework_abstraction.py",
          "core\\framework_abstraction.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_teardown(self, teardown_code)",
        "files": [
          "core\\framework_abstraction.py",
          "core\\framework_abstraction.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_test(self, test)",
        "files": [
          "core\\framework_abstraction.py",
          "core\\framework_abstraction.stub_backup.py",
          "testmaster\\core\\framework_abstraction\\universal_test.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "evaluate(self)",
        "files": [
          "core\\framework_abstraction.py",
          "core\\framework_abstraction.stub_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "detect(self, code)",
        "files": [
          "core\\language_detection.py",
          "core\\language_detection.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_tracking_manager()",
        "files": [
          "core\\tracking_manager.py",
          "testmaster\\core\\tracking_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analytics(self)",
        "files": [
          "core\\intelligence\\__init__.py",
          "core\\intelligence\\compatibility\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "testing(self)",
        "files": [
          "core\\intelligence\\__init__.py",
          "core\\intelligence\\compatibility\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "integration(self)",
        "files": [
          "core\\intelligence\\__init__.py",
          "core\\intelligence\\compatibility\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_hub_status(self)",
        "files": [
          "core\\intelligence\\__init__.py",
          "core\\intelligence\\analytics\\analytics_hub.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_should_exclude(self, file_path)",
        "files": [
          "core\\intelligence\\analysis\\business_analyzer_modular.py",
          "core\\intelligence\\analysis\\debt_analyzer_modular.py",
          "core\\intelligence\\analysis\\semantic_analyzer_modular.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "export_report(self, format)",
        "files": [
          "core\\intelligence\\analysis\\business_analyzer_modular.py",
          "core\\intelligence\\analysis\\debt_analyzer_modular.py",
          "core\\intelligence\\analysis\\semantic_analyzer_modular.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_format_as_markdown(self, results)",
        "files": [
          "core\\intelligence\\analysis\\business_analyzer_modular.py",
          "core\\intelligence\\analysis\\semantic_analyzer_modular.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_is_test_file(self, file_path)",
        "files": [
          "core\\intelligence\\analysis\\debt_test_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\testing_analysis.py",
          "testmaster\\monitoring\\file_watcher.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_project(self, project_path)",
        "files": [
          "core\\intelligence\\analysis\\ml_code_analyzer.py",
          "core\\intelligence\\analysis\\technical_debt_analyzer.py",
          "core\\intelligence\\documentation\\metrics_reporter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_performance_metrics(self)",
        "files": [
          "core\\intelligence\\analysis\\ml_code_analyzer.py",
          "testmaster\\analysis\\comprehensive_analysis\\performance_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_count_by_severity(self)",
        "files": [
          "core\\intelligence\\analysis\\ml_code_analyzer.py",
          "core\\intelligence\\security\\vulnerability_scanner.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_count_by_type(self)",
        "files": [
          "core\\intelligence\\analysis\\ml_code_analyzer.py",
          "core\\intelligence\\security\\vulnerability_scanner.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_pattern_summary(self)",
        "files": [
          "core\\intelligence\\analysis\\semantic_pattern_detector.py",
          "core\\intelligence\\ml\\pattern_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "run_statistical_analysis(data, analysis_type)",
        "files": [
          "core\\intelligence\\analytics\\statistical_engine.py",
          "core\\intelligence\\ml\\statistical_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_recommendations(self, analysis)",
        "files": [
          "core\\intelligence\\analytics\\__init__.py",
          "core\\testing\\test_intelligence_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_memory_usage(self)",
        "files": [
          "core\\intelligence\\analytics\\__init__.py",
          "core\\intelligence\\ml\\advanced\\performance_ml_engine.py",
          "testmaster\\telemetry\\performance_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "start_analysis(self)",
        "files": [
          "core\\intelligence\\analytics\\advanced\\correlation_engine.py",
          "testmaster\\reporting\\metrics_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analysis_loop(self)",
        "files": [
          "core\\intelligence\\analytics\\advanced\\correlation_engine.py",
          "core\\intelligence\\correlation\\cross_system_analytics.py",
          "core\\intelligence\\security\\advanced_security_intelligence.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_coverage()",
        "files": [
          "core\\intelligence\\api\\endpoints.py",
          "core\\intelligence\\api\\unified_intelligence_api.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_app()",
        "files": [
          "core\\intelligence\\api\\intelligence_api.py",
          "dashboard\\server.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_status()",
        "files": [
          "core\\intelligence\\api\\intelligence_endpoints.py",
          "dashboard\\api\\knowledge_graph.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_capabilities()",
        "files": [
          "core\\intelligence\\api\\intelligence_endpoints.py",
          "core\\intelligence\\testing\\testing_api.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "method_not_allowed(error)",
        "files": [
          "core\\intelligence\\api\\intelligence_endpoints.py",
          "core\\intelligence\\testing\\testing_api.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_technical_debt()",
        "files": [
          "core\\intelligence\\api\\unified_intelligence_api.py",
          "dashboard\\api\\intelligence_integration.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_ml_code()",
        "files": [
          "core\\intelligence\\api\\unified_intelligence_api.py",
          "dashboard\\api\\intelligence_integration.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "comprehensive_analysis()",
        "files": [
          "core\\intelligence\\api\\unified_intelligence_api.py",
          "dashboard\\api\\intelligence_integration.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_task_status(task_id)",
        "files": [
          "core\\intelligence\\api\\unified_intelligence_api.py",
          "dashboard\\api\\intelligence_integration.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_real_time_metrics()",
        "files": [
          "core\\intelligence\\api\\unified_intelligence_api.py",
          "core\\intelligence\\testing\\testing_api.py",
          "dashboard\\dashboard_core\\real_time_analytics.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "handle_connect()",
        "files": [
          "core\\intelligence\\api\\unified_intelligence_api.py",
          "core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
          "dashboard\\api\\websocket_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "handle_disconnect()",
        "files": [
          "core\\intelligence\\api\\unified_intelligence_api.py",
          "core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
          "dashboard\\api\\websocket_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_cleanup_expired_entries(self)",
        "files": [
          "core\\intelligence\\caching\\distributed_smart_cache.py",
          "core\\intelligence\\ml\\advanced\\smart_cache.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_cache_statistics(self)",
        "files": [
          "core\\intelligence\\caching\\distributed_smart_cache.py",
          "integration\\intelligent_caching_layer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, compatibility_layer)",
        "files": [
          "core\\intelligence\\compatibility\\__init__.py",
          "core\\intelligence\\compatibility\\__init__.py",
          "core\\intelligence\\compatibility\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_route_message(self, message)",
        "files": [
          "core\\intelligence\\coordination\\cross_agent_bridge.py",
          "testmaster\\intelligence\\bridges\\protocol_communication_bridge.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_performance_monitoring_loop(self)",
        "files": [
          "core\\intelligence\\coordination\\cross_agent_bridge.py",
          "core\\security\\resilience_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_collect_performance_metrics(self)",
        "files": [
          "core\\intelligence\\coordination\\cross_agent_bridge.py",
          "dashboard\\dashboard_core\\system_monitor.py",
          "dashboard\\dashboard_core\\system_observability_metrics.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_health_check_url(self)",
        "files": [
          "core\\intelligence\\coordination\\service_discovery_registry.py",
          "core\\intelligence\\orchestration\\integration_hub.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_success_rate(self)",
        "files": [
          "core\\intelligence\\coordination\\service_discovery_registry.py",
          "core\\intelligence\\reliability\\quantum_retry_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "deregister_service(self, service_id)",
        "files": [
          "core\\intelligence\\coordination\\service_discovery_registry.py",
          "deployment\\service_registry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_registry_status(self)",
        "files": [
          "core\\intelligence\\coordination\\service_discovery_registry.py",
          "deployment\\service_registry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_service_topology(self)",
        "files": [
          "core\\intelligence\\coordination\\service_discovery_registry.py",
          "integration\\service_mesh_integration.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_metric_summary(self, name, hours)",
        "files": [
          "core\\intelligence\\dashboard\\intelligence_backend.py",
          "core\\intelligence\\visualization\\observability_systems.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_metrics_loop(self)",
        "files": [
          "core\\intelligence\\data_pipeline\\advanced_data_pipeline.py",
          "core\\intelligence\\queuing\\express_priority_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, docs_path)",
        "files": [
          "core\\intelligence\\documentation\\agency_swarm_analyzer.py",
          "core\\intelligence\\documentation\\docs_testing_framework.py",
          "core\\intelligence\\documentation\\example_docs_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_readability(self, content)",
        "files": [
          "core\\intelligence\\documentation\\agency_swarm_analyzer.py",
          "core\\intelligence\\documentation\\quality_assessment_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_security_schemes(self)",
        "files": [
          "core\\intelligence\\documentation\\api_validation_framework.py",
          "core\\intelligence\\documentation\\enterprise_api_docs.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, base_url, timeout)",
        "files": [
          "core\\intelligence\\documentation\\api_validation_framework.py",
          "core\\intelligence\\testing\\security\\api_security_tester.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_determine_access_level(self, name)",
        "files": [
          "core\\intelligence\\documentation\\auto_api_docs_generator.py",
          "testmaster\\overview\\structure_mapper.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_load_templates(self)",
        "files": [
          "core\\intelligence\\documentation\\auto_api_docs_generator.py",
          "testmaster\\intelligence\\documentation\\core\\llm_integration.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, docs_root)",
        "files": [
          "core\\intelligence\\documentation\\bilingual_docs_processor.py",
          "core\\intelligence\\documentation\\design_first_docs.py",
          "core\\intelligence\\documentation\\hierarchical_docs_organizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_load_language_configs(self)",
        "files": [
          "core\\intelligence\\documentation\\bilingual_docs_processor.py",
          "testmaster\\orchestration\\output_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_complexity_score(self, request)",
        "files": [
          "core\\intelligence\\documentation\\comprehensive_visualization_engine.py",
          "core\\intelligence\\documentation\\master_documentation_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_performance_stats(self)",
        "files": [
          "core\\intelligence\\documentation\\comprehensive_visualization_engine.py",
          "core\\intelligence\\documentation\\master_documentation_orchestrator.py",
          "core\\intelligence\\testing\\ai_generation\\universal_ai_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "render(self)",
        "files": [
          "core\\intelligence\\documentation\\comprehensive_visualization_engine.py",
          "core\\intelligence\\documentation\\comprehensive_visualization_engine.py",
          "core\\intelligence\\documentation\\comprehensive_visualization_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate(self)",
        "files": [
          "core\\intelligence\\documentation\\comprehensive_visualization_engine.py",
          "testmaster\\intelligence\\hierarchical_planning\\unified_integration.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_load_style_patterns(self)",
        "files": [
          "core\\intelligence\\documentation\\docstring_analyzer.py",
          "testmaster\\intelligence\\documentation\\core\\quality_assessor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, app)",
        "files": [
          "core\\intelligence\\documentation\\docs_api.py",
          "core\\intelligence\\security\\security_api.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_register_routes(self)",
        "files": [
          "core\\intelligence\\documentation\\docs_api.py",
          "core\\intelligence\\security\\security_api.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "run(self, host, port, debug)",
        "files": [
          "core\\intelligence\\documentation\\docs_api.py",
          "core\\intelligence\\security\\security_api.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_app(self)",
        "files": [
          "core\\intelligence\\documentation\\docs_api.py",
          "core\\intelligence\\security\\security_api.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_load_default_config(self)",
        "files": [
          "core\\intelligence\\documentation\\docs_testing_framework.py",
          "testmaster\\core\\config.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_markdown_report(self)",
        "files": [
          "core\\intelligence\\documentation\\docs_testing_framework.py",
          "core\\intelligence\\documentation\\metrics_reporter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_json_report(self)",
        "files": [
          "core\\intelligence\\documentation\\docs_testing_framework.py",
          "core\\intelligence\\documentation\\metrics_reporter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_quality_grade(self, score)",
        "files": [
          "core\\intelligence\\documentation\\doc_orchestrator.py",
          "testmaster\\analysis\\comprehensive_analysis\\quality_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_endpoint(self, endpoint)",
        "files": [
          "core\\intelligence\\documentation\\enterprise_api_docs.py",
          "core\\intelligence\\testing\\security\\api_security_tester.py",
          "core\\testing\\testmaster_api_gateway.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_to_anchor(self, text)",
        "files": [
          "core\\intelligence\\documentation\\example_docs_system.py",
          "core\\intelligence\\documentation\\multi_agent_pattern_docs.py",
          "core\\intelligence\\documentation\\recipe_based_learning.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_average_response_time(self)",
        "files": [
          "core\\intelligence\\documentation\\interactive_docs.py",
          "core\\intelligence\\enterprise\\api\\service_registry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_process_openapi_spec(self, data)",
        "files": [
          "core\\intelligence\\documentation\\json_docs_processor.py",
          "core\\intelligence\\documentation\\yaml_config_processor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, archive_root)",
        "files": [
          "core\\intelligence\\documentation\\legacy_integration_framework.py",
          "core\\intelligence\\documentation\\legacy_integration_framework.py",
          "core\\testing\\archive_intelligence_mining.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_system_metrics(self)",
        "files": [
          "core\\intelligence\\documentation\\live_architecture.py",
          "testmaster\\intelligence\\integration\\layers\\layer_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_language_configs(self)",
        "files": [
          "core\\intelligence\\documentation\\multilingual_docs.py",
          "core\\testing\\multi_modal_test_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_load_deployment_templates(self)",
        "files": [
          "core\\intelligence\\documentation\\production_ready_docs.py",
          "core\\intelligence\\documentation\\service_oriented_arch_docs.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_health_report(self)",
        "files": [
          "core\\intelligence\\documentation\\swarms_self_healing_docs.py",
          "dashboard\\automated_frontend_tester.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_infer_document_type(self, document_path, content)",
        "files": [
          "core\\intelligence\\documentation\\enterprise\\documentation_intelligence.py",
          "core\\intelligence\\documentation\\intelligence\\project_coordinator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_metrics_to_dict(self, metrics)",
        "files": [
          "core\\intelligence\\documentation\\enterprise\\documentation_intelligence.py",
          "core\\intelligence\\documentation\\intelligence\\project_coordinator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_insight_to_dict(self, insight)",
        "files": [
          "core\\intelligence\\documentation\\enterprise\\documentation_intelligence.py",
          "core\\intelligence\\documentation\\intelligence\\project_coordinator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_recommendation_to_dict(self, recommendation)",
        "files": [
          "core\\intelligence\\documentation\\enterprise\\documentation_intelligence.py",
          "core\\intelligence\\documentation\\intelligence\\project_coordinator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_error_project_report(self, project_path, error)",
        "files": [
          "core\\intelligence\\documentation\\enterprise\\documentation_intelligence.py",
          "core\\intelligence\\documentation\\intelligence\\project_coordinator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_validation_metrics(self)",
        "files": [
          "core\\intelligence\\documentation\\enterprise\\documentation_validator.py",
          "core\\intelligence\\enterprise\\integration_validator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_imports(self, tree)",
        "files": [
          "core\\intelligence\\documentation\\revolutionary\\ai_documentation_synthesizer.py",
          "testmaster\\mapping\\test_mapper.py",
          "testmaster\\overview\\structure_mapper.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_ai_models(self)",
        "files": [
          "core\\intelligence\\documentation\\revolutionary\\ai_documentation_synthesizer.py",
          "core\\intelligence\\security\\security_compliance_validator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_ai_engine(self)",
        "files": [
          "core\\intelligence\\documentation\\revolutionary\\interactive_chat_interface.py",
          "core\\intelligence\\documentation\\revolutionary\\living_documentation_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "on_created(self, event)",
        "files": [
          "core\\intelligence\\documentation\\revolutionary\\living_documentation_engine.py",
          "core\\intelligence\\testing\\automation\\continuous_testing_engine.py",
          "testmaster\\monitoring\\file_watcher.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "on_deleted(self, event)",
        "files": [
          "core\\intelligence\\documentation\\revolutionary\\living_documentation_engine.py",
          "testmaster\\monitoring\\file_watcher.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "discover_services(self, service_type, status_filter)",
        "files": [
          "core\\intelligence\\enterprise\\api_orchestrator.py",
          "core\\intelligence\\enterprise\\api\\service_registry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_orchestration_metrics(self)",
        "files": [
          "core\\intelligence\\enterprise\\api_orchestrator.py",
          "core\\intelligence\\orchestration\\cross_system_orchestrator.py",
          "core\\orchestration\\enhanced_agent_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_endpoint(self, endpoint_id)",
        "files": [
          "core\\intelligence\\enterprise\\api\\endpoint_manager.py",
          "core\\intelligence\\integration\\components\\endpoint_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_routing_statistics(self)",
        "files": [
          "core\\intelligence\\enterprise\\api\\request_router.py",
          "testmaster\\flow_optimizer\\execution_router.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_service(self, service_id)",
        "files": [
          "core\\intelligence\\enterprise\\api\\service_registry.py",
          "deployment\\service_registry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "disconnect_from_system(self, endpoint_id)",
        "files": [
          "core\\intelligence\\integration\\__init__.py",
          "core\\intelligence\\integration\\components\\endpoint_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_endpoint_health(self, endpoint_id)",
        "files": [
          "core\\intelligence\\integration\\__init__.py",
          "core\\intelligence\\integration\\components\\endpoint_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "unsubscribe_from_events(self, subscription_id)",
        "files": [
          "core\\intelligence\\integration\\__init__.py",
          "core\\intelligence\\integration\\components\\event_processor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_create_error_analysis(self, error)",
        "files": [
          "core\\intelligence\\integration\\__init__.py",
          "core\\intelligence\\testing\\__init__.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, knowledge_graph)",
        "files": [
          "core\\intelligence\\knowledge_graph\\ai_code_explorer.py",
          "core\\intelligence\\knowledge_graph\\visual_relationship_mapper.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_active_sessions(self)",
        "files": [
          "core\\intelligence\\knowledge_graph\\ai_code_explorer.py",
          "testmaster\\streaming\\live_feedback.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_trend(self, history)",
        "files": [
          "core\\intelligence\\knowledge_graph\\predictive_code_intelligence.py",
          "dashboard\\dashboard_core\\metrics_feed.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "fit(self, X, y)",
        "files": [
          "core\\intelligence\\ml\\advanced_models.py",
          "core\\intelligence\\ml\\advanced\\ensemble_meta_learner.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, window_size)",
        "files": [
          "core\\intelligence\\ml\\anomaly_algorithms.py",
          "core\\intelligence\\ml\\correlation_engine.py",
          "core\\intelligence\\ml\\pattern_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, model)",
        "files": [
          "core\\intelligence\\ml\\explainability.py",
          "core\\testing\\task_guardrails_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, window_sizes)",
        "files": [
          "core\\intelligence\\ml\\feature_engineering.py",
          "core\\intelligence\\ml\\online_learning.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "partial_fit(self, X, y)",
        "files": [
          "core\\intelligence\\ml\\online_learning.py",
          "core\\intelligence\\ml\\online_learning.py",
          "core\\intelligence\\ml\\online_learning.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_spike(self, data)",
        "files": [
          "core\\intelligence\\ml\\pattern_detector.py",
          "core\\intelligence\\monitoring\\pattern_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_trend(self, data)",
        "files": [
          "core\\intelligence\\ml\\pattern_detector.py",
          "core\\intelligence\\monitoring\\pattern_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_scheduler_status(self)",
        "files": [
          "core\\intelligence\\ml\\advanced\\intelligent_resource_scheduler.py",
          "core\\intelligence\\orchestration\\workflow_orchestration_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_start_background_tasks(self)",
        "files": [
          "core\\intelligence\\ml\\advanced\\performance_execution_manager.py",
          "testmaster\\intelligence\\bridges\\context_variables_bridge.py",
          "testmaster\\intelligence\\bridges\\session_tracking_bridge.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_performance_score(self, metrics)",
        "files": [
          "core\\intelligence\\ml\\advanced\\performance_ml_engine.py",
          "dashboard\\comprehensive_frontend_validator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "train_model(self, training_data)",
        "files": [
          "core\\intelligence\\ml\\advanced\\smart_cache.py",
          "core\\intelligence\\testing\\test_quality_scorer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "reset_metrics(self)",
        "files": [
          "core\\intelligence\\monitoring\\agent_qa_modular.py",
          "testmaster\\core\\monitoring_decorators.py",
          "testmaster\\intelligence\\llm_providers\\universal_llm_provider.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_format_duration(self, seconds)",
        "files": [
          "core\\intelligence\\monitoring\\enterprise_performance_monitor.py",
          "dashboard\\api\\enhanced_analytics.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_similarity(self, seq1, seq2)",
        "files": [
          "core\\intelligence\\monitoring\\pattern_detector.py",
          "testmaster\\analysis\\comprehensive_analysis\\base_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_template_statistics(self)",
        "files": [
          "core\\intelligence\\monitoring\\pattern_detector.py",
          "testmaster\\intelligence\\documentation\\templates\\template_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_default_thresholds(self)",
        "files": [
          "core\\intelligence\\monitoring\\qa_monitor.py",
          "testmaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_weights(self)",
        "files": [
          "core\\intelligence\\monitoring\\qa_scorer.py",
          "core\\intelligence\\testing\\test_quality_scorer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "unregister_agent(self, agent_id)",
        "files": [
          "core\\intelligence\\orchestration\\agent_coordinator.py",
          "testmaster\\intelligence\\consensus\\agent_coordination.py",
          "testmaster\\intelligence\\integration\\coordination\\analysis_coordinator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "subscribe(self, event_type, handler)",
        "files": [
          "core\\intelligence\\orchestration\\integration_hub.py",
          "core\\testing\\test_integration_hub.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "unsubscribe(self, event_type, handler)",
        "files": [
          "core\\intelligence\\orchestration\\integration_hub.py",
          "core\\testing\\test_integration_hub.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "subscribe_to_events(self, event_type, handler)",
        "files": [
          "core\\intelligence\\orchestration\\integration_hub.py",
          "core\\intelligence\\orchestration\\workflow_orchestration_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, max_concurrent_workflows)",
        "files": [
          "core\\intelligence\\orchestration\\workflow_orchestration_engine.py",
          "core\\intelligence\\orchestration\\workflow_orchestration_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_register_default_handlers(self)",
        "files": [
          "core\\intelligence\\orchestration\\workflow_orchestration_engine.py",
          "core\\security\\error_recovery_framework.py",
          "core\\state\\enhanced_state_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_orchestration_loop(self)",
        "files": [
          "core\\intelligence\\reliability\\quantum_retry_orchestrator.py",
          "core\\orchestration\\enhanced_agent_orchestrator.py",
          "core\\testing\\unified_test_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_security_status(self)",
        "files": [
          "core\\intelligence\\security\\advanced_security_intelligence.py",
          "core\\security\\flow_persistence_security.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, log_file)",
        "files": [
          "core\\intelligence\\security\\audit_logger.py",
          "core\\intelligence\\security\\audit\\audit_storage.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "query_events(self, start_time, end_time, event_type, actor, severity)",
        "files": [
          "core\\intelligence\\security\\audit_logger.py",
          "core\\intelligence\\security\\audit\\audit_storage.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_compliance_report(self, standard, start_time, end_time)",
        "files": [
          "core\\intelligence\\security\\audit_logger.py",
          "core\\intelligence\\security\\audit\\audit_reporter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_security_report(self, start_time, end_time)",
        "files": [
          "core\\intelligence\\security\\audit_logger.py",
          "core\\intelligence\\security\\audit\\audit_reporter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "verify_integrity(self)",
        "files": [
          "core\\intelligence\\security\\audit_logger.py",
          "core\\intelligence\\security\\audit\\audit_storage.py",
          "core\\security\\enterprise_audit_logging.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_recent_events(self, count, severity_filter)",
        "files": [
          "core\\intelligence\\security\\audit_logger.py",
          "core\\intelligence\\security\\audit\\audit_interface.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_security_summary(self, hours)",
        "files": [
          "core\\intelligence\\security\\audit_logger.py",
          "core\\intelligence\\security\\audit\\audit_interface.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_compliance_status(self, standard)",
        "files": [
          "core\\intelligence\\security\\audit_logger.py",
          "core\\intelligence\\security\\audit\\audit_interface.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "search_events(self, query_params, max_results)",
        "files": [
          "core\\intelligence\\security\\audit_logger.py",
          "core\\intelligence\\security\\audit\\audit_interface.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_check_insecure_random(self, tree, file_path)",
        "files": [
          "core\\intelligence\\security\\crypto_analyzer.py",
          "core\\intelligence\\security\\vulnerability_scanner.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_parse_package_json(self, file_path)",
        "files": [
          "core\\intelligence\\security\\dependency_scanner.py",
          "testmaster\\core\\language_detection\\universal_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "start_monitoring()",
        "files": [
          "core\\intelligence\\security\\security_api.py",
          "dashboard\\api\\backend_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_metrics_history(self, hours)",
        "files": [
          "core\\intelligence\\security\\security_dashboard.py",
          "testmaster\\telemetry\\system_profiler.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "scan_file(self, file_path)",
        "files": [
          "core\\intelligence\\security\\vulnerability_scanner.py",
          "core\\security\\license_compliance_framework.py",
          "testmaster\\communication\\tag_reader.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "store_event(self, event)",
        "files": [
          "core\\intelligence\\security\\audit\\audit_storage.py",
          "core\\security\\enterprise_audit_logging.py",
          "testmaster\\intelligence\\bridges\\event_monitoring_bridge.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "list_active_incidents(self, severity_filter)",
        "files": [
          "core\\intelligence\\security\\enterprise\\security_intelligence.py",
          "core\\intelligence\\security\\enterprise\\intelligence\\incident_responder.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "matches_event(self, event)",
        "files": [
          "core\\intelligence\\streaming\\event_streaming_engine.py",
          "core\\security\\enterprise_audit_logging.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "process_event(self, event)",
        "files": [
          "core\\intelligence\\streaming\\event_streaming_engine.py",
          "observability\\core\\event_monitoring.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_scan_file(self, file_path)",
        "files": [
          "core\\intelligence\\testing\\automation_engine.py",
          "testmaster\\security\\universal_scanner.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_process_tasks(self)",
        "files": [
          "core\\intelligence\\testing\\automation_engine.py",
          "orchestration\\unified_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, max_history)",
        "files": [
          "core\\intelligence\\testing\\quality_dashboard.py",
          "core\\intelligence\\visualization\\agent_interface_systems.py",
          "testmaster\\breaking\\failure_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_real_time_metrics(self)",
        "files": [
          "core\\intelligence\\testing\\quality_dashboard.py",
          "integration\\realtime_performance_monitoring.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_remediation(self, vuln_type)",
        "files": [
          "core\\intelligence\\testing\\security_fuzzer.py",
          "testmaster\\intelligence\\security\\security_intelligence_agent.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_dashboard_data()",
        "files": [
          "core\\intelligence\\testing\\testing_api.py",
          "dashboard\\api\\enhanced_analytics.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "decorated_function()",
        "files": [
          "core\\intelligence\\testing\\testing_api.py",
          "core\\intelligence\\testing\\testing_api.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "cancel_execution(self, execution_id)",
        "files": [
          "core\\intelligence\\testing\\test_orchestrator.py",
          "testmaster\\core\\workflow_graph.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "execute_test(self, test, timeout)",
        "files": [
          "core\\intelligence\\testing\\__init__.py",
          "core\\intelligence\\testing\\components\\execution_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_evaluate_model_performance(self)",
        "files": [
          "core\\intelligence\\testing\\advanced\\ml_test_optimizer.py",
          "core\\intelligence\\testing\\enterprise\\predictive_test_failure.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, api_key, require_api_key)",
        "files": [
          "core\\intelligence\\testing\\ai_generation\\claude_test_generator.py",
          "core\\intelligence\\testing\\ai_generation\\gemini_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_fallback_test(self, prompt)",
        "files": [
          "core\\intelligence\\testing\\ai_generation\\claude_test_generator.py",
          "core\\intelligence\\testing\\ai_generation\\gemini_test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_generation_stats(self)",
        "files": [
          "core\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
          "testmaster\\intelligence\\documentation\\core\\doc_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_module_name(self, file_path)",
        "files": [
          "core\\intelligence\\testing\\automation\\continuous_testing_engine.py",
          "testmaster\\mapping\\dependency_tracker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_default_configuration(self)",
        "files": [
          "core\\intelligence\\testing\\automation\\enterprise_test_orchestrator.py",
          "testmaster\\core\\config.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_execution_history(self, limit)",
        "files": [
          "core\\intelligence\\testing\\automation\\enterprise_test_orchestrator.py",
          "core\\intelligence\\testing\\components\\execution_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_execution_statistics(self)",
        "files": [
          "core\\intelligence\\testing\\components\\execution_engine.py",
          "testmaster\\flow_optimizer\\parallel_executor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_tests(self, code_analysis, config)",
        "files": [
          "core\\intelligence\\testing\\components\\integration_generator.py",
          "core\\intelligence\\testing\\components\\integration_generator.py",
          "core\\intelligence\\testing\\components\\integration_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "send_message(self, message)",
        "files": [
          "core\\intelligence\\visualization\\agent_interface_systems.py",
          "core\\intelligence\\visualization\\agent_interface_systems.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "receive_message(self)",
        "files": [
          "core\\intelligence\\visualization\\agent_interface_systems.py",
          "core\\intelligence\\visualization\\agent_interface_systems.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_history(self, limit)",
        "files": [
          "core\\intelligence\\visualization\\agent_interface_systems.py",
          "core\\intelligence\\visualization\\agent_interface_systems.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "remove_connection(self, connection_id)",
        "files": [
          "core\\intelligence\\visualization\\agent_interface_systems.py",
          "core\\intelligence\\visualization\\realtime_ui_components.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_bar_chart(self, series, config)",
        "files": [
          "core\\intelligence\\visualization\\data_visualization_engines.py",
          "core\\intelligence\\visualization\\data_visualization_engines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_line_chart(self, series, config)",
        "files": [
          "core\\intelligence\\visualization\\data_visualization_engines.py",
          "core\\intelligence\\visualization\\data_visualization_engines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_scatter_plot(self, x_data, y_data, config)",
        "files": [
          "core\\intelligence\\visualization\\data_visualization_engines.py",
          "core\\intelligence\\visualization\\data_visualization_engines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_pie_chart(self, data, labels, config)",
        "files": [
          "core\\intelligence\\visualization\\data_visualization_engines.py",
          "core\\intelligence\\visualization\\data_visualization_engines.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "render_bar_chart(self, data, output_path)",
        "files": [
          "core\\intelligence\\visualization\\interactive_visualizations.py",
          "core\\intelligence\\visualization\\interactive_visualizations.py",
          "core\\intelligence\\visualization\\interactive_visualizations.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "render_line_chart(self, data, output_path)",
        "files": [
          "core\\intelligence\\visualization\\interactive_visualizations.py",
          "core\\intelligence\\visualization\\interactive_visualizations.py",
          "core\\intelligence\\visualization\\interactive_visualizations.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "render_pie_chart(self, data, output_path)",
        "files": [
          "core\\intelligence\\visualization\\interactive_visualizations.py",
          "core\\intelligence\\visualization\\interactive_visualizations.py",
          "core\\intelligence\\visualization\\interactive_visualizations.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_health_check_loop(self)",
        "files": [
          "core\\intelligence\\visualization\\observability_systems.py",
          "core\\security\\health_monitoring_nexus.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "send_update(self, update)",
        "files": [
          "core\\intelligence\\visualization\\realtime_ui_components.py",
          "core\\intelligence\\visualization\\realtime_ui_components.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "subscribe(self, component_id, callback)",
        "files": [
          "core\\intelligence\\visualization\\realtime_ui_components.py",
          "core\\intelligence\\visualization\\realtime_ui_components.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "unsubscribe(self, component_id, callback)",
        "files": [
          "core\\intelligence\\visualization\\realtime_ui_components.py",
          "core\\intelligence\\visualization\\realtime_ui_components.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "track_agent_action(self, session_id, agent_name, action_type, parameters, parent_action_id)",
        "files": [
          "core\\observability\\agent_ops_separate.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_classify_session_type(self, session)",
        "files": [
          "core\\observability\\agent_ops_separate.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_identify_bottlenecks(self, session)",
        "files": [
          "core\\observability\\agent_ops_separate.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_optimization_suggestions(self, session)",
        "files": [
          "core\\observability\\agent_ops_separate.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_emit_event(self, event_type, data)",
        "files": [
          "core\\observability\\agent_ops_separate.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "start_monitoring(self, component)",
        "files": [
          "core\\observability\\unified_monitor_enhanced.py",
          "integration\\realtime_performance_monitoring.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "record_event(self, event_type, data)",
        "files": [
          "core\\observability\\unified_monitor_enhanced.py",
          "dashboard\\api\\enhanced_analytics.py",
          "dashboard\\api\\enhanced_telemetry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_default_agents(self)",
        "files": [
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py",
          "testmaster\\streaming\\collaborative_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "process_user_query(self, query, context)",
        "files": [
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_query_intent(self, query)",
        "files": [
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_response(self, intent, query, context)",
        "files": [
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_performance_summary(self)",
        "files": [
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\monitoring_agents.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_security_summary(self)",
        "files": [
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\monitoring_agents.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze(self, data, data_type, context)",
        "files": [
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_logs(self, logs, context)",
        "files": [
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_metrics(self, metrics, context)",
        "files": [
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_code(self, code, context)",
        "files": [
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_config(self, config, context)",
        "files": [
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_test_results(self, test_results, context)",
        "files": [
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_code_complexity(self, code)",
        "files": [
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_find_quality_issues(self, code)",
        "files": [
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "process_query(self, query, context)",
        "files": [
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "analyze_data(self, data, data_type, context)",
        "files": [
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_alert(self, level, message, source, data)",
        "files": [
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_start_proactive_monitoring(self)",
        "files": [
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_on_session_started(self, event_type, data)",
        "files": [
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_on_action_completed(self, event_type, data)",
        "files": [
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_on_llm_call(self, event_type, data)",
        "files": [
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_emit_event(self, event)",
        "files": [
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_performance_metrics(self)",
        "files": [
          "core\\orchestration\\enhanced_agent_orchestrator.py",
          "testmaster\\intelligence\\integration\\agents\\documentation_agent.py",
          "testmaster\\intelligence\\integration\\coordination\\analysis_coordinator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_init_backup_structure(self)",
        "files": [
          "core\\reliability\\emergency_backup_recovery.py",
          "dashboard\\dashboard_core\\emergency_backup_recovery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_comprehensive_status(self)",
        "files": [
          "core\\security\\adaptive_fallback_orchestrator.py",
          "core\\security\\circuit_breaker_matrix.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "validate_message(self, message)",
        "files": [
          "core\\security\\agent_communication_security.py",
          "core\\security\\secure_message_delivery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_communication_stats(self)",
        "files": [
          "core\\security\\agent_communication_security.py",
          "core\\security\\distributed_communication_security.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, secret_key, algorithm)",
        "files": [
          "core\\security\\authentication_system.py",
          "core\\security\\enterprise_auth_gateway.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "verify_token(self, token)",
        "files": [
          "core\\security\\authentication_system.py",
          "core\\security\\enterprise_auth_gateway.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_record_failed_attempt(self, username)",
        "files": [
          "core\\security\\authentication_system.py",
          "core\\security\\enterprise_authentication.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "effective_weight(self)",
        "files": [
          "core\\security\\byzantine_consensus_security.py",
          "core\\security\\multi_agent_evaluation_security.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_consensus_stats(self)",
        "files": [
          "core\\security\\byzantine_consensus_security.py",
          "testmaster\\intelligence\\consensus\\consensus_engine.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_processing_step(self, step, details)",
        "files": [
          "core\\security\\cloud_event_security.py",
          "core\\security\\message_context_security.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, signing_key)",
        "files": [
          "core\\security\\cloud_event_security.py",
          "core\\security\\cloud_event_security.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "is_critical(self)",
        "files": [
          "core\\security\\code_generation_security.py",
          "core\\security\\container_security_validator.py",
          "core\\security\\guardrail_security_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_security_statistics(self)",
        "files": [
          "core\\security\\code_generation_security.py",
          "core\\security\\container_security_validator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_save_assessment(self, assessment)",
        "files": [
          "core\\security\\compliance_framework.py",
          "core\\security\\threat_intelligence_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "validate_all(self)",
        "files": [
          "core\\security\\configuration_security.py",
          "testmaster\\core\\config.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_security_summary(self)",
        "files": [
          "core\\security\\configuration_security.py",
          "core\\security\\exception_monitoring.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_overall_security_score(self)",
        "files": [
          "core\\security\\deployment_pipeline_security.py",
          "core\\security\\service_mesh_security.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "is_healthy(self)",
        "files": [
          "core\\security\\distributed_agent_registry.py",
          "core\\security\\distributed_communication_security.py",
          "deployment\\service_registry.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "endpoint(self)",
        "files": [
          "core\\security\\distributed_agent_registry.py",
          "core\\security\\distributed_communication_security.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_registry_stats(self)",
        "files": [
          "core\\security\\distributed_agent_registry.py",
          "core\\security\\identity_validation_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "size(self)",
        "files": [
          "core\\security\\distributed_communication_security.py",
          "core\\testing\\react_agent_testing.py",
          "core\\testing\\session_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "send_secure_message(self, message)",
        "files": [
          "core\\security\\distributed_communication_security.py",
          "core\\security\\secure_message_delivery.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "is_trusted(self)",
        "files": [
          "core\\security\\distributed_coordination_security.py",
          "core\\security\\multi_agent_access_control.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "is_active(self)",
        "files": [
          "core\\security\\distributed_key_management_security.py",
          "core\\security\\enterprise_authentication.py",
          "core\\security\\multi_agent_access_control.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_recommendations(self, report)",
        "files": [
          "core\\security\\document_classification_security.py",
          "core\\security\\license_compliance_framework.py",
          "testmaster\\overview\\coverage_intelligence.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_classification_statistics(self)",
        "files": [
          "core\\security\\document_classification_security.py",
          "testmaster\\orchestrator\\file_tagger.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "is_secure(self)",
        "files": [
          "core\\security\\enum_security.py",
          "core\\security\\network_security_controls.py",
          "core\\security\\service_mesh_security.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_cascade_detection_loop(self)",
        "files": [
          "core\\security\\error_isolation_system.py",
          "core\\security\\self_healing_coordinator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "age_seconds(self)",
        "files": [
          "core\\security\\error_recovery_framework.py",
          "core\\security\\message_context_security.py",
          "core\\security\\thread_safety_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_add_to_history(self, result)",
        "files": [
          "core\\security\\error_recovery_framework.py",
          "core\\security\\guardrail_security_system.py",
          "core\\security\\retry_mechanism_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "list_flows(self, limit, offset)",
        "files": [
          "core\\security\\flow_persistence_security.py",
          "core\\security\\flow_persistence_security.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "close(self)",
        "files": [
          "core\\security\\flow_persistence_security.py",
          "core\\security\\flow_persistence_security.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "validate(self, data, context)",
        "files": [
          "core\\security\\guardrail_security_system.py",
          "core\\security\\guardrail_security_system.py",
          "core\\security\\guardrail_security_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "is_valid(self)",
        "files": [
          "core\\security\\identity_validation_system.py",
          "core\\security\\secure_performance_optimizer.py",
          "core\\security\\service_mesh_security.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_default_policies(self)",
        "files": [
          "core\\security\\multi_agent_access_control.py",
          "core\\security\\service_mesh_security.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_system_metrics(self)",
        "files": [
          "core\\security\\operational_security.py",
          "core\\security\\security_monitoring_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "check_rate_limit(self, client_id, rule)",
        "files": [
          "core\\security\\rate_limiter.py",
          "core\\security\\rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, redis_client)",
        "files": [
          "core\\security\\rate_limiter.py",
          "core\\security\\rate_limiter.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "update_threat_level(self, threat_level, reason)",
        "files": [
          "core\\security\\secure_performance_optimizer.py",
          "core\\security\\secure_performance_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "correlate_threats(self)",
        "files": [
          "core\\security\\threat_intelligence_system.py",
          "core\\security\\threat_intelligence_system.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_team_state(self, team_id)",
        "files": [
          "core\\state\\enhanced_state_manager.py",
          "state\\unified_state_manager.py",
          "state\\unified_state_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "success_rate(self)",
        "files": [
          "core\\testing\\adaptive_testing_framework.py",
          "dashboard\\api\\backend_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_capture_environment(self)",
        "files": [
          "core\\testing\\adaptive_testing_framework.py",
          "testmaster\\breaking\\failure_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, model_name)",
        "files": [
          "core\\testing\\agent_reasoning_testing.py",
          "core\\testing\\hallucination_guardrail_testing.py",
          "core\\testing\\tracing_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "mock_call(messages)",
        "files": [
          "core\\testing\\agent_reasoning_testing.py",
          "core\\testing\\agent_reasoning_testing.py",
          "core\\testing\\agent_reasoning_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_test_summary(self)",
        "files": [
          "core\\testing\\async_sync_testing.py",
          "core\\testing\\graph_operations_testing.py",
          "core\\testing\\user_input_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, agents)",
        "files": [
          "core\\testing\\communication_testing.py",
          "core\\testing\\pipeline_testing.py",
          "core\\testing\\pipeline_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "kickoff(self, inputs)",
        "files": [
          "core\\testing\\crew_thread_safety_testing.py",
          "core\\testing\\flow_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, raw, results)",
        "files": [
          "core\\testing\\crew_thread_safety_testing.py",
          "core\\testing\\multimodal_validation_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "capture_context(output)",
        "files": [
          "core\\testing\\crew_thread_safety_testing.py",
          "core\\testing\\crew_thread_safety_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, coordinator_port)",
        "files": [
          "core\\testing\\distributed_test_coordinator.py",
          "core\\testing\\distributed_test_coordinator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "stop_server(self)",
        "files": [
          "core\\testing\\distributed_test_coordinator.py",
          "testmaster\\overview\\performance_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_events(self)",
        "files": [
          "core\\testing\\flow_testing.py",
          "core\\testing\\task_guardrails_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, triggers)",
        "files": [
          "core\\testing\\flow_testing.py",
          "core\\testing\\flow_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "step_1(self)",
        "files": [
          "core\\testing\\flow_testing.py",
          "core\\testing\\flow_testing.py",
          "core\\testing\\flow_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "step_2(self)",
        "files": [
          "core\\testing\\flow_testing.py",
          "core\\testing\\flow_testing.py",
          "core\\testing\\flow_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "step_a(self)",
        "files": [
          "core\\testing\\flow_testing.py",
          "core\\testing\\flow_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "step_b(self)",
        "files": [
          "core\\testing\\flow_testing.py",
          "core\\testing\\flow_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "step_c(self)",
        "files": [
          "core\\testing\\flow_testing.py",
          "core\\testing\\flow_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "step_3(self)",
        "files": [
          "core\\testing\\flow_testing.py",
          "core\\testing\\flow_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_node_vector_index(self, label, property, dim, similarity_function)",
        "files": [
          "core\\testing\\graph_index_testing.py",
          "core\\testing\\graph_vector_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "create_edge_vector_index(self, relation, property, dim, similarity_function)",
        "files": [
          "core\\testing\\graph_index_testing.py",
          "core\\testing\\graph_vector_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "drop_node_vector_index(self, label, property)",
        "files": [
          "core\\testing\\graph_index_testing.py",
          "core\\testing\\graph_vector_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "drop_edge_vector_index(self, relation, property)",
        "files": [
          "core\\testing\\graph_index_testing.py",
          "core\\testing\\graph_vector_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "delete(self)",
        "files": [
          "core\\testing\\graph_index_testing.py",
          "core\\testing\\graph_operations_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "to_string(self)",
        "files": [
          "core\\testing\\graph_operations_testing.py",
          "core\\testing\\graph_operations_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "normalize(self)",
        "files": [
          "core\\testing\\graph_vector_testing.py",
          "testmaster\\intelligence\\optimization\\multi_objective_optimization_agent.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "set_response(self, key, response)",
        "files": [
          "core\\testing\\hallucination_guardrail_testing.py",
          "core\\testing\\multimodal_validation_testing.py",
          "core\\testing\\task_guardrails_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, raw, description, expected_output, agent)",
        "files": [
          "core\\testing\\hallucination_guardrail_testing.py",
          "core\\testing\\task_guardrails_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__call__(self, task_output)",
        "files": [
          "core\\testing\\hallucination_guardrail_testing.py",
          "core\\testing\\task_guardrails_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "run_comprehensive_guardrail_tests(self)",
        "files": [
          "core\\testing\\hallucination_guardrail_testing.py",
          "core\\testing\\task_guardrails_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "guardrail_framework(self)",
        "files": [
          "core\\testing\\hallucination_guardrail_testing.py",
          "core\\testing\\task_guardrails_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "hook_validator()",
        "files": [
          "core\\testing\\hook_testing.py",
          "core\\testing\\react_agent_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, text, block_type)",
        "files": [
          "core\\testing\\hook_testing.py",
          "core\\testing\\tracing_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "register_instance_hook(self, hook_type, hook_name, hook_function)",
        "files": [
          "core\\testing\\hook_testing.py",
          "core\\testing\\react_agent_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_performance_under_load(self)",
        "files": [
          "core\\testing\\integration_test_framework.py",
          "dashboard\\ultimate_frontend_validator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "invoke(self, state, config)",
        "files": [
          "core\\testing\\langgraph_supervisor_testing.py",
          "core\\testing\\langgraph_supervisor_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_execution_stats(self)",
        "files": [
          "core\\testing\\langgraph_supervisor_testing.py",
          "core\\testing\\tool_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_tools(self)",
        "files": [
          "core\\testing\\mcp_testing.py",
          "core\\testing\\mcp_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "kickoff(self)",
        "files": [
          "core\\testing\\multimodal_validation_testing.py",
          "core\\testing\\task_guardrails_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, role, content, name, metadata)",
        "files": [
          "core\\testing\\pipeline_testing.py",
          "core\\testing\\user_input_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "validator(result)",
        "files": [
          "core\\testing\\pipeline_testing.py",
          "core\\testing\\pipeline_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, content)",
        "files": [
          "core\\testing\\react_agent_testing.py",
          "core\\testing\\tracing_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, validator_func, max_attempts)",
        "files": [
          "core\\testing\\response_validation_testing.py",
          "core\\testing\\response_validation_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "mock_thread(self)",
        "files": [
          "core\\testing\\response_validation_testing.py",
          "core\\testing\\thread_retry_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "guardrail(result)",
        "files": [
          "core\\testing\\task_guardrails_testing.py",
          "core\\testing\\task_guardrails_testing.py",
          "core\\testing\\task_guardrails_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, host, port)",
        "files": [
          "core\\testing\\testmaster_api_gateway.py",
          "dashboard\\server.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_register_core_endpoints(self)",
        "files": [
          "core\\testing\\testmaster_api_gateway.py",
          "dashboard\\api\\backend_health_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, repo_path)",
        "files": [
          "core\\testing\\test_evolution_analyzer.py",
          "core\\testing\\test_evolution_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, config_dir)",
        "files": [
          "core\\testing\\test_integration_hub.py",
          "integration\\multi_environment_support.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "initialize(self)",
        "files": [
          "core\\testing\\test_integration_hub.py",
          "testmaster\\streaming\\collaborative_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_strategies(self)",
        "files": [
          "core\\testing\\test_intelligence_orchestrator.py",
          "testmaster\\core\\framework_abstraction\\test_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_responsive_design(self)",
        "files": [
          "core\\testing\\test_ui_interface_superiority.py",
          "dashboard\\test_frontend_automated.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_available_tools(self)",
        "files": [
          "core\\testing\\tool_factory_testing.py",
          "core\\tools\\type_safe_tools.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_validate(self)",
        "files": [
          "core\\testing\\user_input_testing.py",
          "core\\testing\\user_input_testing.py",
          "core\\testing\\user_input_testing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "simulate_dashboard_load(self)",
        "files": [
          "dashboard\\automated_frontend_simulator.py",
          "dashboard\\ultimate_frontend_validator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_count_data_points(self, data)",
        "files": [
          "dashboard\\automated_frontend_simulator.py",
          "dashboard\\ultimate_frontend_validator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_error_handling(self)",
        "files": [
          "dashboard\\automated_frontend_tester.py",
          "dashboard\\test_frontend_integration.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "validate_realtime_features(self)",
        "files": [
          "dashboard\\comprehensive_frontend_validator.py",
          "dashboard\\ultimate_frontend_validator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "initialize_systems(self)",
        "files": [
          "dashboard\\test_final_enhancements.py",
          "dashboard\\test_ultra_reliability.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_test_analytics(self, count)",
        "files": [
          "dashboard\\test_final_enhancements.py",
          "dashboard\\test_ultra_reliability.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_integrated_system(self)",
        "files": [
          "dashboard\\test_final_enhancements.py",
          "dashboard\\test_ultra_reliability.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "run_comprehensive_test(self)",
        "files": [
          "dashboard\\test_final_enhancements.py",
          "dashboard\\test_ultra_reliability.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_final_report(self)",
        "files": [
          "dashboard\\test_final_enhancements.py",
          "dashboard\\test_ultra_reliability.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "cleanup_systems(self)",
        "files": [
          "dashboard\\test_final_enhancements.py",
          "dashboard\\test_ultra_reliability.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "test_endpoint(url, description)",
        "files": [
          "dashboard\\test_new_robustness_features.py",
          "dashboard\\test_robustness_verification.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_impact_to_number(self, impact)",
        "files": [
          "dashboard\\api\\coverage.py",
          "dashboard\\api\\flow_optimization.py",
          "dashboard\\api\\security.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_effort_to_number(self, effort)",
        "files": [
          "dashboard\\api\\flow_optimization.py",
          "dashboard\\api\\security.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, aggregator)",
        "files": [
          "dashboard\\api\\health.py",
          "dashboard\\api\\monitoring.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "end_session(self, session_id, status)",
        "files": [
          "dashboard\\api\\observability.py",
          "observability\\core\\session_tracking.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_performance_summary()",
        "files": [
          "dashboard\\api\\performance.py",
          "testmaster\\core\\monitoring_decorators.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_quality_trends(self)",
        "files": [
          "dashboard\\api\\quality_assurance.py",
          "dashboard\\api\\test_generation.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "scan_directory(self, directory_path)",
        "files": [
          "dashboard\\api\\real_codebase_scanner.py",
          "testmaster\\security\\universal_scanner.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_complexity_score(self, analysis)",
        "files": [
          "dashboard\\api\\real_codebase_scanner.py",
          "testmaster\\orchestrator\\file_tagger.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_health_data(self)",
        "files": [
          "dashboard\\api\\websocket_dashboard.py",
          "testmaster\\overview\\performance_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_workflow_dag()",
        "files": [
          "dashboard\\api\\workflow.py",
          "dashboard\\api\\workflow.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_queue_statistics(self)",
        "files": [
          "integration\\distributed_task_queue.py",
          "testmaster\\communication\\message_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "check_health()",
        "files": [
          "integration\\load_balancing_system.py",
          "integration\\service_mesh_integration.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_current_config(self)",
        "files": [
          "integration\\multi_environment_support.py",
          "integration\\multi_environment_support.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, orchestrator)",
        "files": [
          "orchestration\\swarm_router_enhancement.py",
          "ui\\unified_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "register_routing_strategy(self, strategy_name, strategy_func)",
        "files": [
          "orchestration\\swarm_router_enhancement.py",
          "orchestration\\unified_orchestrator.py",
          "orchestration\\unified_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_routing_analytics(self)",
        "files": [
          "orchestration\\swarm_router_enhancement.py",
          "orchestration\\unified_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "register_node_handler(self, node_type, handler)",
        "files": [
          "orchestration\\unified_orchestrator.py",
          "orchestration\\unified_orchestrator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_function(self, node)",
        "files": [
          "scripts\\analyze_components.py",
          "tools\\migration\\analyze_legacy_code.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "generate_report(self, output_file)",
        "files": [
          "scripts\\analyze_components.py",
          "scripts\\api_documenter.py",
          "scripts\\dependency_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_deployment_state(self, deployment_id)",
        "files": [
          "state\\unified_state_manager.py",
          "state\\unified_state_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_execution_state(self, execution_id)",
        "files": [
          "state\\unified_state_manager.py",
          "state\\unified_state_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_is_source_file(self, file_path)",
        "files": [
          "testmaster\\layer2_integration.py",
          "testmaster\\core\\language_detection\\universal_detector.py",
          "testmaster\\monitoring\\file_watcher.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_dashboard_url(self)",
        "files": [
          "testmaster\\layer2_integration.py",
          "testmaster\\ui\\dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_rate_limiting(self, tree, content)",
        "files": [
          "testmaster\\analysis\\comprehensive_analysis\\api_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\resource_io_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_is_validation_check(self, if_node)",
        "files": [
          "testmaster\\analysis\\comprehensive_analysis\\clone_detection.py",
          "testmaster\\analysis\\comprehensive_analysis\\error_handling_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\quality_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_function_name(self, call_node)",
        "files": [
          "testmaster\\analysis\\comprehensive_analysis\\clone_detection.py",
          "testmaster\\analysis\\comprehensive_analysis\\graph_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_is_recursive_function(self, func_node)",
        "files": [
          "testmaster\\analysis\\comprehensive_analysis\\complexity_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\memory_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_circuit_breakers(self, tree, content)",
        "files": [
          "testmaster\\analysis\\comprehensive_analysis\\error_handling_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\resource_io_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_analyze_memory_allocations(self)",
        "files": [
          "testmaster\\analysis\\comprehensive_analysis\\memory_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\resource_io_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_memory_allocations(self, tree)",
        "files": [
          "testmaster\\analysis\\comprehensive_analysis\\performance_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\resource_io_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_is_pure_function(self, func_node)",
        "files": [
          "testmaster\\analysis\\comprehensive_analysis\\performance_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\testing_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_max_nesting_depth(self, node, current_depth)",
        "files": [
          "testmaster\\analysis\\comprehensive_analysis\\quality_analysis.py",
          "testmaster\\analysis\\comprehensive_analysis\\statistical_analysis.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_get_vulnerability_recommendation(self, vuln_type)",
        "files": [
          "testmaster\\analysis\\comprehensive_analysis\\security_analysis.py",
          "testmaster\\security\\universal_scanner.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "cancel_task(self, task_id)",
        "files": [
          "testmaster\\async_processing\\async_executor.py",
          "testmaster\\async_processing\\concurrent_scheduler.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "loop_worker()",
        "files": [
          "testmaster\\async_processing\\async_executor.py",
          "testmaster\\async_processing\\concurrent_scheduler.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_task_info(self, task_id)",
        "files": [
          "testmaster\\async_processing\\async_monitor.py",
          "testmaster\\async_processing\\concurrent_scheduler.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_component_stats(self, component)",
        "files": [
          "testmaster\\async_processing\\async_monitor.py",
          "testmaster\\telemetry\\performance_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_cleanup_old_tasks(self)",
        "files": [
          "testmaster\\async_processing\\async_monitor.py",
          "testmaster\\intelligence\\integration\\coordination\\analysis_coordinator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "monitor_worker()",
        "files": [
          "testmaster\\async_processing\\async_monitor.py",
          "testmaster\\async_processing\\thread_pool_manager.py",
          "testmaster\\telemetry\\system_profiler.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_cleanup_completed_tasks(self)",
        "files": [
          "testmaster\\async_processing\\concurrent_scheduler.py",
          "testmaster\\async_processing\\thread_pool_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_default_pools(self)",
        "files": [
          "testmaster\\async_processing\\thread_pool_manager.py",
          "testmaster\\flow_optimizer\\resource_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_message_to_dict(self, message)",
        "files": [
          "testmaster\\communication\\claude_messenger.py",
          "testmaster\\communication\\message_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_generate_message_id(self)",
        "files": [
          "testmaster\\communication\\claude_messenger.py",
          "testmaster\\communication\\message_queue.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_handoff_statistics(self)",
        "files": [
          "testmaster\\communication\\dynamic_handoff.py",
          "testmaster\\orchestrator\\handoff_manager.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "update_stats(self, result)",
        "files": [
          "testmaster\\converters\\base.py",
          "testmaster\\verification\\base.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "print_stats(self)",
        "files": [
          "testmaster\\converters\\base.py",
          "testmaster\\generators\\base.py",
          "testmaster\\verification\\base.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_init_template_mode(self)",
        "files": [
          "testmaster\\converters\\intelligent.py",
          "testmaster\\generators\\intelligent.py",
          "testmaster\\verification\\self_healing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, config_file)",
        "files": [
          "testmaster\\core\\config.py",
          "testmaster\\core\\config.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_load_env_overrides(self)",
        "files": [
          "testmaster\\core\\config.py",
          "testmaster\\core\\config.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "cache_llm_response(key, response)",
        "files": [
          "testmaster\\core\\shared_state.py",
          "testmaster\\core\\shared_state.py",
          "testmaster\\intelligence\\hierarchical_planning\\llm_integration.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_cached_llm_response(key)",
        "files": [
          "testmaster\\core\\shared_state.py",
          "testmaster\\core\\shared_state.py",
          "testmaster\\intelligence\\hierarchical_planning\\llm_integration.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_convert_python_ast(self, file_path, tree, content)",
        "files": [
          "testmaster\\core\\ast_abstraction\\language_parsers.py",
          "testmaster\\core\\ast_abstraction\\universal_ast.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_fallback_parse(self, file_path, content)",
        "files": [
          "testmaster\\core\\ast_abstraction\\language_parsers.py",
          "testmaster\\core\\ast_abstraction\\universal_ast.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_detect_file_language(self, file_path)",
        "files": [
          "testmaster\\core\\ast_abstraction\\universal_ast.py",
          "testmaster\\core\\language_detection\\universal_detector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_convert_test_case(self, test_case)",
        "files": [
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_convert_test(self, test)",
        "files": [
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "testmaster\\core\\framework_abstraction\\framework_adapters.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_all_tests(self)",
        "files": [
          "testmaster\\core\\framework_abstraction\\universal_test.py",
          "testmaster\\core\\framework_abstraction\\universal_test.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "count_tests(self)",
        "files": [
          "testmaster\\core\\framework_abstraction\\universal_test.py",
          "testmaster\\core\\framework_abstraction\\universal_test.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_flow_analyzer()",
        "files": [
          "testmaster\\flow_optimizer\\flow_analyzer.py",
          "testmaster\\telemetry\\flow_analyzer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_bridge_integrations(self)",
        "files": [
          "testmaster\\intelligence\\bridges\\context_variables_bridge.py",
          "testmaster\\intelligence\\bridges\\sop_workflow_bridge.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "background_worker()",
        "files": [
          "testmaster\\intelligence\\bridges\\context_variables_bridge.py",
          "testmaster\\intelligence\\bridges\\session_tracking_bridge.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_process_events(self)",
        "files": [
          "testmaster\\intelligence\\bridges\\event_monitoring_bridge.py",
          "testmaster\\monitoring\\file_watcher.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, coordinator)",
        "files": [
          "testmaster\\intelligence\\bridges\\event_monitoring_bridge.py",
          "testmaster\\intelligence\\monitoring\\bottleneck_detection_resolution_agent.py",
          "testmaster\\intelligence\\security\\security_intelligence_agent.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "subscribe(self, topic, callback)",
        "files": [
          "testmaster\\intelligence\\bridges\\protocol_communication_bridge.py",
          "testmaster\\intelligence\\bridges\\protocol_communication_bridge.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_session(self, session_id)",
        "files": [
          "testmaster\\intelligence\\bridges\\session_tracking_bridge.py",
          "ui_ux\\studio_interface.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_find_python_files(self, project_path)",
        "files": [
          "testmaster\\intelligence\\documentation\\core\\context_builder.py",
          "testmaster\\intelligence\\documentation\\quality\\completeness_checker.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, llm_integration, context_builder, quality_assessor)",
        "files": [
          "testmaster\\intelligence\\documentation\\generators\\api_doc_generator.py",
          "testmaster\\intelligence\\documentation\\generators\\docstring_generator.py",
          "testmaster\\intelligence\\documentation\\generators\\readme_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "validate_docstring_style(self, docstring, style)",
        "files": [
          "testmaster\\intelligence\\documentation\\generators\\docstring_generator.py",
          "testmaster\\intelligence\\documentation\\templates\\docstring_templates.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_builtin_templates(self)",
        "files": [
          "testmaster\\intelligence\\documentation\\templates\\docstring_templates.py",
          "testmaster\\intelligence\\documentation\\templates\\readme_templates.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_templates(self)",
        "files": [
          "testmaster\\intelligence\\documentation\\templates\\api\\grpc_templates.py",
          "testmaster\\intelligence\\documentation\\templates\\api\\rest_templates.py",
          "testmaster\\intelligence\\documentation\\templates\\api\\websocket_templates.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_template(self, name)",
        "files": [
          "testmaster\\intelligence\\documentation\\templates\\api\\grpc_templates.py",
          "testmaster\\intelligence\\documentation\\templates\\api\\rest_templates.py",
          "testmaster\\intelligence\\documentation\\templates\\api\\websocket_templates.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_child(self, child)",
        "files": [
          "testmaster\\intelligence\\hierarchical_planning\\htp_reasoning.py",
          "testmaster\\intelligence\\tree_of_thought\\tot_reasoning.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_path(self)",
        "files": [
          "testmaster\\intelligence\\hierarchical_planning\\htp_reasoning.py",
          "testmaster\\intelligence\\tree_of_thought\\tot_reasoning.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_node(self, parent_id, node)",
        "files": [
          "testmaster\\intelligence\\hierarchical_planning\\htp_reasoning.py",
          "testmaster\\intelligence\\tree_of_thought\\tot_reasoning.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_leaf_nodes(self)",
        "files": [
          "testmaster\\intelligence\\hierarchical_planning\\htp_reasoning.py",
          "testmaster\\intelligence\\tree_of_thought\\tot_reasoning.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_avg_branching(self)",
        "files": [
          "testmaster\\intelligence\\hierarchical_planning\\htp_reasoning.py",
          "testmaster\\intelligence\\tree_of_thought\\tot_reasoning.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_criterion(self, criterion)",
        "files": [
          "testmaster\\intelligence\\hierarchical_planning\\htp_reasoning.py",
          "testmaster\\intelligence\\tree_of_thought\\tot_reasoning.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_breadth_first_search(self, tree, context)",
        "files": [
          "testmaster\\intelligence\\hierarchical_planning\\htp_reasoning.py",
          "testmaster\\intelligence\\tree_of_thought\\tot_reasoning.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_best_first_search(self, tree, context)",
        "files": [
          "testmaster\\intelligence\\hierarchical_planning\\htp_reasoning.py",
          "testmaster\\intelligence\\tree_of_thought\\tot_reasoning.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_beam_search(self, tree, context)",
        "files": [
          "testmaster\\intelligence\\hierarchical_planning\\htp_reasoning.py",
          "testmaster\\intelligence\\tree_of_thought\\tot_reasoning.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_expand_node(self, node, tree, context)",
        "files": [
          "testmaster\\intelligence\\hierarchical_planning\\htp_reasoning.py",
          "testmaster\\intelligence\\tree_of_thought\\tot_reasoning.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_json(self, text)",
        "files": [
          "testmaster\\intelligence\\hierarchical_planning\\llm_integration.py",
          "testmaster\\intelligence\\hierarchical_planning\\llm_integration.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_evaluate_feasibility(self, plan)",
        "files": [
          "testmaster\\intelligence\\hierarchical_planning\\test_plan_generator.py",
          "testmaster\\intelligence\\security\\security_intelligence_agent.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_agent_status(self)",
        "files": [
          "testmaster\\intelligence\\integration\\agents\\documentation_agent.py",
          "testmaster\\intelligence\\monitoring\\bottleneck_detection_resolution_agent.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "evaluate(self, context)",
        "files": [
          "testmaster\\intelligence\\integration\\features\\feature_flags.py",
          "testmaster\\intelligence\\integration\\features\\feature_flags.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_cost(self, usage)",
        "files": [
          "testmaster\\intelligence\\llm_providers\\provider_implementations.py",
          "testmaster\\intelligence\\llm_providers\\provider_implementations.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, coordinator, config)",
        "files": [
          "testmaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
          "testmaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "optimize(self, initial_solutions, context)",
        "files": [
          "testmaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
          "testmaster\\intelligence\\optimization\\multi_objective_optimization_agent.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_tournament_selection(self, population)",
        "files": [
          "testmaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
          "testmaster\\intelligence\\optimization\\multi_objective_optimizer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_initialize_population(self)",
        "files": [
          "testmaster\\intelligence\\optimization\\multi_objective_optimizer.py",
          "testmaster\\intelligence\\optimization\\optimization_algorithms.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_crossover(self, parents)",
        "files": [
          "testmaster\\intelligence\\optimization\\multi_objective_optimizer.py",
          "testmaster\\intelligence\\optimization\\optimization_algorithms.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_mutation(self, offspring)",
        "files": [
          "testmaster\\intelligence\\optimization\\multi_objective_optimizer.py",
          "testmaster\\intelligence\\optimization\\optimization_algorithms.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_environmental_selection(self, combined)",
        "files": [
          "testmaster\\intelligence\\optimization\\multi_objective_optimizer.py",
          "testmaster\\intelligence\\optimization\\optimization_algorithms.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, universal_ast)",
        "files": [
          "testmaster\\intelligence\\optimization\\test_optimization_objectives.py",
          "testmaster\\intelligence\\tree_of_thought\\test_thought_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_calculate_quality_score(self, content)",
        "files": [
          "testmaster\\intelligence\\tree_of_thought\\test_thought_generator.py",
          "testmaster\\streaming\\incremental_enhancer.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_setup_enhanced_features(self)",
        "files": [
          "testmaster\\monitoring\\file_watcher.py",
          "testmaster\\monitoring\\test_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_extract_function_calls(self, node)",
        "files": [
          "testmaster\\overview\\coverage_intelligence.py",
          "testmaster\\overview\\structure_mapper.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_update_component_stats(self, metric)",
        "files": [
          "testmaster\\overview\\performance_dashboard.py",
          "testmaster\\telemetry\\performance_monitor.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_dashboard_statistics(self)",
        "files": [
          "testmaster\\overview\\performance_dashboard.py",
          "testmaster\\telemetry\\telemetry_dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_collect_async_data(self)",
        "files": [
          "testmaster\\reporting\\data_collector.py",
          "testmaster\\reporting\\report_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_collect_streaming_data(self)",
        "files": [
          "testmaster\\reporting\\data_collector.py",
          "testmaster\\reporting\\report_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_collect_system_data(self)",
        "files": [
          "testmaster\\reporting\\data_collector.py",
          "testmaster\\reporting\\report_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_generator_statistics(self)",
        "files": [
          "testmaster\\reporting\\report_generator.py",
          "testmaster\\streaming\\stream_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "configure(self)",
        "files": [
          "testmaster\\reporting\\report_generator.py",
          "testmaster\\streaming\\stream_generator.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "collection_worker()",
        "files": [
          "testmaster\\streaming\\live_feedback.py",
          "testmaster\\telemetry\\telemetry_collector.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "clear_metrics(self)",
        "files": [
          "testmaster\\telemetry\\performance_monitor.py",
          "testmaster\\telemetry\\system_profiler.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "update_system_status(self, status)",
        "files": [
          "testmaster\\ui\\dashboard.py",
          "testmaster\\ui\\dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "add_test_result(self, result)",
        "files": [
          "testmaster\\ui\\dashboard.py",
          "testmaster\\ui\\dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "update_coverage_data(self, coverage)",
        "files": [
          "testmaster\\ui\\dashboard.py",
          "testmaster\\ui\\dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "update_idle_modules(self, modules)",
        "files": [
          "testmaster\\ui\\dashboard.py",
          "testmaster\\ui\\dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "update_breaking_tests(self, tests)",
        "files": [
          "testmaster\\ui\\dashboard.py",
          "testmaster\\ui\\dashboard.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "__init__(self, metrics_display)",
        "files": [
          "testmaster\\ui\\metrics_display.py",
          "testmaster\\ui\\metrics_display.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "get_widget_html(self)",
        "files": [
          "testmaster\\ui\\metrics_display.py",
          "testmaster\\ui\\metrics_display.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "verify_test(self, test_file, module_file)",
        "files": [
          "testmaster\\verification\\base.py",
          "testmaster\\verification\\quality.py",
          "testmaster\\verification\\self_healing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "function",
        "name": "_heal_with_ai(self, test_code, error_message)",
        "files": [
          "testmaster\\verification\\base.py",
          "testmaster\\verification\\self_healing.py"
        ],
        "severity": "medium"
      },
      {
        "type": "class",
        "name": "ConversationalMonitor",
        "files": [
          "restored_asyncio_4.py",
          "restored_json_4.py",
          "restored_logging_4.py",
          "restored_time_4.py",
          "restored_uuid_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\enhanced_monitor.py",
          "archive\\phase4_archive\\replaced_code\\enhanced_monitor_20250819_195132.py",
          "archive\\phase7_archive\\replaced_code\\enhanced_monitor_20250819_202006.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py",
          "observability\\core\\conversational_interface.py"
        ],
        "similarity": 0.7935064935064933,
        "severity": "medium"
      },
      {
        "type": "class",
        "name": "MultiModalAnalyzer",
        "files": [
          "restored_asyncio_4.py",
          "restored_json_4.py",
          "restored_logging_4.py",
          "restored_time_4.py",
          "restored_uuid_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\enhanced_monitor.py",
          "archive\\phase4_archive\\replaced_code\\enhanced_monitor_20250819_195132.py",
          "archive\\phase7_archive\\replaced_code\\enhanced_monitor_20250819_202006.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "monitoring\\enhanced_monitor_separate.py",
          "observability\\core\\multimodal_analyzer.py"
        ],
        "similarity": 0.7381818181818185,
        "severity": "medium"
      },
      {
        "type": "class",
        "name": "TestSession",
        "files": [
          "restored_threading_4.py",
          "archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
          "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
          "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py",
          "core\\observability\\agent_ops_separate.py",
          "core\\observability\\unified_monitor.py",
          "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "core\\testing\\test_intelligence_orchestrator.py",
          "observability\\core\\session_tracking.py"
        ],
        "similarity": 0.8,
        "severity": "medium"
      },
      {
        "type": "class",
        "name": "Task",
        "files": [
          "testmaster_orchestrator.py",
          "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "archive\\original_backup\\testmaster_orchestrator.py",
          "integration\\distributed_task_queue.py",
          "testmaster\\core\\orchestrator.py"
        ],
        "similarity": 0.8,
        "severity": "medium"
      },
      {
        "type": "class",
        "name": "ModelPerformance",
        "files": [
          "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "core\\intelligence\\analytics\\predictive_analytics_engine.py",
          "core\\intelligence\\ml\\advanced\\ensemble_meta_learner.py",
          "integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine_robust.py"
        ],
        "similarity": 0.7777777777777778,
        "severity": "medium"
      },
      {
        "type": "class",
        "name": "PredictiveModel",
        "files": [
          "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "core\\intelligence\\analytics\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine_robust.py"
        ],
        "similarity": 0.75,
        "severity": "medium"
      },
      {
        "type": "class",
        "name": "PredictiveAnalyticsEngine",
        "files": [
          "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "core\\intelligence\\analytics\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine.py",
          "integration\\predictive_analytics_engine_robust.py"
        ],
        "similarity": 0.7302459445316588,
        "severity": "medium"
      },
      {
        "type": "class",
        "name": "ResourceMonitor",
        "files": [
          "archive\\original_backup\\optimization\\execution_optimizer.py",
          "integration\\resource_optimization_engine.py",
          "optimization\\execution_optimizer.py"
        ],
        "similarity": 0.7037037037037037,
        "severity": "medium"
      },
      {
        "type": "class",
        "name": "AutomaticScalingSystem",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system.py",
          "integration\\automatic_scaling_system_robust.py"
        ],
        "similarity": 0.7333333333333334,
        "severity": "medium"
      },
      {
        "type": "class",
        "name": "WorkflowDefinition",
        "files": [
          "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "core\\intelligence\\orchestration\\workflow_orchestration_engine.py",
          "integration\\workflow_framework.py"
        ],
        "similarity": 0.8,
        "severity": "medium"
      },
      {
        "type": "class",
        "name": "SecureMessage",
        "files": [
          "core\\security\\agent_communication_security.py",
          "core\\security\\secure_message_delivery.py"
        ],
        "similarity": 0.75,
        "severity": "medium"
      }
    ],
    "total_candidates": 3412
  },
  "architecture_analysis": {
    "test": {
      "file_count": 815,
      "total_lines": 432562,
      "scattered_across": 141,
      "directories": [
        "testmaster\\intelligence\\llm_providers",
        "testmaster\\core",
        "ui_ux",
        "core\\intelligence\\security\\audit",
        "testmaster\\async_processing",
        "prioritization",
        "core\\state",
        "observability",
        "archive\\phase1c_consolidation_20250820_150000\\integration",
        "testmaster\\streaming",
        "dashboard\\dashboard_core",
        "core\\intelligence\\visualization",
        "testmaster\\overview",
        "core\\intelligence\\documentation",
        "analysis\\comprehensive_analysis\\ml_analysis",
        "core",
        "tests",
        "testmaster\\intelligence\\documentation\\integrations",
        "archive\\oversized_modules_20250821_042018\\monitoring",
        "core\\intelligence\\testing\\automation",
        "core\\intelligence\\testing",
        "core\\intelligence\\testing\\security",
        "archive\\original_backup\\optimization",
        "orchestration",
        "agents\\roles",
        "archive\\original_backup\\scripts",
        "dashboard\\api",
        "core\\intelligence\\documentation\\enterprise",
        "optimization",
        "archive\\original_backup\\cache",
        "core\\intelligence\\validation\\integration_test_suite_modules",
        "core\\intelligence\\testing\\ai_generation",
        "scripts",
        "core\\security",
        "cache",
        "archive",
        "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components",
        "testmaster\\mapping",
        "config",
        "testmaster",
        ".",
        "testmaster\\intelligence\\monitoring",
        "core\\observability",
        "core\\intelligence\\streaming",
        "testmaster\\core\\ast_abstraction",
        "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components",
        "core\\intelligence\\validation",
        "testmaster\\analysis\\coverage",
        "testmaster\\analysis\\comprehensive_analysis",
        "agents\\team",
        "integration",
        "deployment",
        "testmaster\\orchestration",
        "testmaster\\orchestrator",
        "api",
        "archive\\original_backup\\analytics",
        "core\\intelligence\\security",
        "testmaster\\telemetry",
        "analytics",
        "core\\intelligence\\knowledge_graph",
        "archive\\phase5_archive\\replaced_code",
        "core\\tools",
        "testmaster\\breaking",
        "archive\\original_backup\\config",
        "archive\\oversized_modules_20250821_042018\\validation",
        "core\\intelligence\\testing\\advanced",
        "archive\\modularization_20250820_222253",
        "monitoring",
        "testmaster\\intelligence\\integration\\agents",
        "tools\\migration",
        "testmaster\\integration",
        "archive\\phase6_archive\\replaced_code",
        "testmaster\\intelligence\\tree_of_thought",
        "dashboard",
        "archive\\legacy_scripts",
        "archive\\oversized_modules_20250821_042018\\ml\\advanced",
        "archive\\original_backup\\integration",
        "archive\\original_backup\\incremental",
        "archive\\placeholder_backups_20250820_011817\\integration",
        "incremental",
        "consolidation",
        "core\\intelligence\\ml\\advanced",
        "testmaster\\reporting",
        "testmaster\\intelligence\\consensus",
        "core\\intelligence\\testing\\components",
        "testmaster\\intelligence\\documentation\\templates",
        "core\\intelligence\\testing\\enterprise",
        "core\\orchestration",
        "testmaster\\ui",
        "src",
        "core\\intelligence\\security\\enterprise",
        "testmaster\\monitoring",
        "archive\\20250818",
        "core\\intelligence\\analytics\\realtime",
        "archive\\phase4_archive\\replaced_code",
        "testmaster\\intelligence\\hierarchical_planning",
        "testmaster\\intelligence\\security",
        "testmaster\\verification",
        "testmaster\\generators",
        "testmaster\\intelligence\\documentation\\generators",
        "archive\\original_backup",
        "core\\intelligence\\prediction",
        "core\\intelligence\\security\\enterprise\\validation",
        "core\\intelligence\\ml",
        "core\\intelligence\\ml\\enterprise",
        "testmaster\\core\\language_detection",
        "core\\intelligence\\api",
        "archive\\oversized_modules_20250821_042018\\analysis",
        "core\\intelligence\\base",
        "testmaster\\core\\framework_abstraction",
        "core\\intelligence\\analytics",
        "tests\\integration",
        "state",
        "archive\\original_backup\\dashboard",
        "testmaster\\refactoring",
        "archive\\oversized_modules_20250821_042018\\coordination",
        "core\\intelligence\\orchestration",
        "core\\intelligence\\analysis",
        "validation",
        "archive\\modularization_integration",
        "analysis\\comprehensive_analysis\\data_security",
        "core\\intelligence\\enterprise",
        "testmaster\\converters",
        "archive\\COMPLETE_REFACTOR_20250818_112844",
        "testmaster\\security",
        "core\\intelligence\\coordination",
        "archive\\modularization_20250821",
        "core\\intelligence\\monitoring",
        "testmaster\\intelligence\\optimization",
        "testmaster\\intelligence\\bridges",
        "archive\\original_backup\\src",
        "testmaster\\agent_qa",
        "core\\testing",
        "archive\\original_backup\\deduplication",
        "deduplication",
        "archive\\oversized_modules_20250821_042018\\documentation\\revolutionary",
        "testmaster\\flow_optimizer",
        "analysis\\comprehensive_analysis\\domain_modeling",
        "archive\\phase1c_consolidation_20250820_150000",
        "testmaster\\communication",
        "archive\\placeholder_backups_20250820_011745\\integration"
      ],
      "consolidation_opportunity": true,
      "files": [
        {
          "file": "accelerated_converter.py",
          "line_count": 256,
          "size_category": "medium"
        },
        {
          "file": "achieve_100_percent.py",
          "line_count": 133,
          "size_category": "small"
        },
        {
          "file": "agent_d_comprehensive_test_executor.py",
          "line_count": 911,
          "size_category": "huge"
        },
        {
          "file": "architecture_centralization_analysis.py",
          "line_count": 509,
          "size_category": "huge"
        },
        {
          "file": "batch_convert_broken_tests.py",
          "line_count": 191,
          "size_category": "medium"
        },
        {
          "file": "comprehensive_codebase_analysis.py",
          "line_count": 332,
          "size_category": "large"
        },
        {
          "file": "convert_batch_small.py",
          "line_count": 150,
          "size_category": "medium"
        },
        {
          "file": "convert_with_genai_sdk.py",
          "line_count": 182,
          "size_category": "medium"
        },
        {
          "file": "convert_with_generativeai.py",
          "line_count": 161,
          "size_category": "medium"
        },
        {
          "file": "create_real_implementations.py",
          "line_count": 873,
          "size_category": "huge"
        },
        {
          "file": "debug_integration_tests.py",
          "line_count": 175,
          "size_category": "medium"
        },
        {
          "file": "DEMONSTRATION_OF_SUPERIORITY.py",
          "line_count": 287,
          "size_category": "medium"
        },
        {
          "file": "documentation_cli.py",
          "line_count": 706,
          "size_category": "huge"
        },
        {
          "file": "enable_deep_integration.py",
          "line_count": 240,
          "size_category": "medium"
        },
        {
          "file": "enable_features.py",
          "line_count": 77,
          "size_category": "small"
        },
        {
          "file": "enhanced_context_aware_test_generator.py",
          "line_count": 428,
          "size_category": "large"
        },
        {
          "file": "enhanced_incremental_ast_engine.py",
          "line_count": 826,
          "size_category": "huge"
        },
        {
          "file": "enhanced_intelligent_test_builder.py",
          "line_count": 614,
          "size_category": "huge"
        },
        {
          "file": "enhanced_realtime_security_monitor.py",
          "line_count": 1108,
          "size_category": "huge"
        },
        {
          "file": "enhanced_security_dashboard_api.py",
          "line_count": 701,
          "size_category": "huge"
        },
        {
          "file": "enhanced_security_intelligence_agent.py",
          "line_count": 1091,
          "size_category": "huge"
        },
        {
          "file": "enhanced_self_healing_verifier.py",
          "line_count": 512,
          "size_category": "huge"
        },
        {
          "file": "enhance_analytics.py",
          "line_count": 466,
          "size_category": "large"
        },
        {
          "file": "enhance_auto_generated_tests.py",
          "line_count": 349,
          "size_category": "large"
        },
        {
          "file": "finalize_module_splits.py",
          "line_count": 236,
          "size_category": "medium"
        },
        {
          "file": "final_100_percent_fix.py",
          "line_count": 225,
          "size_category": "medium"
        },
        {
          "file": "final_integration_fix.py",
          "line_count": 289,
          "size_category": "medium"
        },
        {
          "file": "find_all_stubs.py",
          "line_count": 274,
          "size_category": "medium"
        },
        {
          "file": "fix_all_integration_systems.py",
          "line_count": 246,
          "size_category": "medium"
        },
        {
          "file": "fix_backend_issues.py",
          "line_count": 323,
          "size_category": "large"
        },
        {
          "file": "fix_dashboard_imports.py",
          "line_count": 91,
          "size_category": "small"
        },
        {
          "file": "fix_enhanced_test_imports.py",
          "line_count": 230,
          "size_category": "medium"
        },
        {
          "file": "fix_failing_tests.py",
          "line_count": 225,
          "size_category": "medium"
        },
        {
          "file": "fix_final_issues.py",
          "line_count": 168,
          "size_category": "medium"
        },
        {
          "file": "fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "fix_integration_issues_final.py",
          "line_count": 259,
          "size_category": "medium"
        },
        {
          "file": "fix_integration_tests.py",
          "line_count": 249,
          "size_category": "medium"
        },
        {
          "file": "fix_integration_tests_simple.py",
          "line_count": 129,
          "size_category": "small"
        },
        {
          "file": "fix_tests_for_real_modules.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "fix_to_100_percent.py",
          "line_count": 508,
          "size_category": "huge"
        },
        {
          "file": "fix_week2_test_imports.py",
          "line_count": 125,
          "size_category": "small"
        },
        {
          "file": "IMPLEMENTATION_STATUS_CHECK.py",
          "line_count": 254,
          "size_category": "medium"
        },
        {
          "file": "implement_test_stubs.py",
          "line_count": 507,
          "size_category": "huge"
        },
        {
          "file": "independent_test_verifier.py",
          "line_count": 215,
          "size_category": "medium"
        },
        {
          "file": "integration_test_generator.py",
          "line_count": 572,
          "size_category": "huge"
        },
        {
          "file": "intelligent_test_builder.py",
          "line_count": 359,
          "size_category": "large"
        },
        {
          "file": "intelligent_test_builder_offline.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "intelligent_test_builder_v2.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "layer3_integration_example.py",
          "line_count": 522,
          "size_category": "huge"
        },
        {
          "file": "live_code_quality_monitor.py",
          "line_count": 1045,
          "size_category": "huge"
        },
        {
          "file": "llm_analysis_monitor.py",
          "line_count": 729,
          "size_category": "huge"
        },
        {
          "file": "modularize_coverage_analyzer.py",
          "line_count": 257,
          "size_category": "medium"
        },
        {
          "file": "parallel_converter.py",
          "line_count": 311,
          "size_category": "large"
        },
        {
          "file": "parallel_converter_fixed.py",
          "line_count": 352,
          "size_category": "large"
        },
        {
          "file": "performance_profiler.py",
          "line_count": 634,
          "size_category": "huge"
        },
        {
          "file": "quick_test_summary.py",
          "line_count": 60,
          "size_category": "small"
        },
        {
          "file": "realtime_metrics_collector.py",
          "line_count": 614,
          "size_category": "huge"
        },
        {
          "file": "refine_misc_tests.py",
          "line_count": 189,
          "size_category": "medium"
        },
        {
          "file": "replace_stubs_with_archive_implementations.py",
          "line_count": 292,
          "size_category": "medium"
        },
        {
          "file": "restored_asyncio_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_asyncio_6.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "restored_json_5.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "restored_json_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_logging_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_logging_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_os_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_random_6.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "restored_sys_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_threading_4.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "restored_threading_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_threading_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_time_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_time_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_uuid_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_uuid_6.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "restore_archive_robust.py",
          "line_count": 1537,
          "size_category": "huge"
        },
        {
          "file": "restore_missing_methods.py",
          "line_count": 535,
          "size_category": "huge"
        },
        {
          "file": "risk_based_test_targeter.py",
          "line_count": 884,
          "size_category": "huge"
        },
        {
          "file": "run_integration_test.py",
          "line_count": 185,
          "size_category": "medium"
        },
        {
          "file": "run_intelligent_tests.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "simple_integration_test.py",
          "line_count": 100,
          "size_category": "small"
        },
        {
          "file": "simple_test.py",
          "line_count": 126,
          "size_category": "small"
        },
        {
          "file": "simple_test_runner.py",
          "line_count": 86,
          "size_category": "small"
        },
        {
          "file": "simple_web_monitor.py",
          "line_count": 191,
          "size_category": "medium"
        },
        {
          "file": "specialized_test_generators.py",
          "line_count": 816,
          "size_category": "huge"
        },
        {
          "file": "split_massive_test_file.py",
          "line_count": 225,
          "size_category": "medium"
        },
        {
          "file": "split_oversized_modules.py",
          "line_count": 278,
          "size_category": "medium"
        },
        {
          "file": "start_monitoring.py",
          "line_count": 264,
          "size_category": "medium"
        },
        {
          "file": "testmaster_orchestrator.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "test_100_percent_integration.py",
          "line_count": 227,
          "size_category": "medium"
        },
        {
          "file": "test_advanced_telemetry_system.py",
          "line_count": 506,
          "size_category": "huge"
        },
        {
          "file": "test_after_refactor.py",
          "line_count": 255,
          "size_category": "medium"
        },
        {
          "file": "test_agent_b_integrations.py",
          "line_count": 312,
          "size_category": "large"
        },
        {
          "file": "test_agent_qa_integration.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "test_agent_qa_system.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "test_analyzer_tab.py",
          "line_count": 50,
          "size_category": "small"
        },
        {
          "file": "test_api_functionality.py",
          "line_count": 223,
          "size_category": "medium"
        },
        {
          "file": "test_async_processing.py",
          "line_count": 407,
          "size_category": "large"
        },
        {
          "file": "test_backend_health.py",
          "line_count": 419,
          "size_category": "large"
        },
        {
          "file": "test_before_refactor.py",
          "line_count": 331,
          "size_category": "large"
        },
        {
          "file": "test_classical_analysis.py",
          "line_count": 292,
          "size_category": "medium"
        },
        {
          "file": "test_complexity_prioritizer.py",
          "line_count": 690,
          "size_category": "huge"
        },
        {
          "file": "test_comprehensive_analysis.py",
          "line_count": 190,
          "size_category": "medium"
        },
        {
          "file": "test_config_intelligence.py",
          "line_count": 133,
          "size_category": "small"
        },
        {
          "file": "test_dependency_orderer.py",
          "line_count": 687,
          "size_category": "huge"
        },
        {
          "file": "test_dynamic_handoff_integration.py",
          "line_count": 254,
          "size_category": "medium"
        },
        {
          "file": "test_enhanced_analysis.py",
          "line_count": 117,
          "size_category": "small"
        },
        {
          "file": "test_enhanced_core_integration.py",
          "line_count": 324,
          "size_category": "large"
        },
        {
          "file": "test_enhanced_server.py",
          "line_count": 76,
          "size_category": "small"
        },
        {
          "file": "test_enhancements.py",
          "line_count": 397,
          "size_category": "large"
        },
        {
          "file": "test_exhaustive_features.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "test_final_integration.py",
          "line_count": 204,
          "size_category": "medium"
        },
        {
          "file": "test_flow_optimizer_system.py",
          "line_count": 609,
          "size_category": "huge"
        },
        {
          "file": "test_graph_workflow_integration.py",
          "line_count": 400,
          "size_category": "large"
        },
        {
          "file": "test_hierarchical_planning_complete.py",
          "line_count": 200,
          "size_category": "medium"
        },
        {
          "file": "test_integration_restoration.py",
          "line_count": 291,
          "size_category": "medium"
        },
        {
          "file": "test_integration_systems.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "test_intelligence_integration.py",
          "line_count": 462,
          "size_category": "large"
        },
        {
          "file": "test_llm_intelligence.py",
          "line_count": 42,
          "size_category": "tiny"
        },
        {
          "file": "test_multi_objective_optimization.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "test_our_implementations.py",
          "line_count": 184,
          "size_category": "medium"
        },
        {
          "file": "test_performance_dashboard_integration.py",
          "line_count": 309,
          "size_category": "large"
        },
        {
          "file": "test_phase1_integration.py",
          "line_count": 274,
          "size_category": "medium"
        },
        {
          "file": "test_phase1_simple.py",
          "line_count": 103,
          "size_category": "small"
        },
        {
          "file": "test_phase2_exhaustive_validation.py",
          "line_count": 249,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_final_validation.py",
          "line_count": 271,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_integration.py",
          "line_count": 255,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_quick_validation.py",
          "line_count": 222,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_simple.py",
          "line_count": 99,
          "size_category": "small"
        },
        {
          "file": "test_phase2_simple_validation.py",
          "line_count": 172,
          "size_category": "medium"
        },
        {
          "file": "test_phase3_complete.py",
          "line_count": 347,
          "size_category": "large"
        },
        {
          "file": "test_phase3_deployment.py",
          "line_count": 191,
          "size_category": "medium"
        },
        {
          "file": "test_phase3_ui.py",
          "line_count": 190,
          "size_category": "medium"
        },
        {
          "file": "test_reporting_system.py",
          "line_count": 423,
          "size_category": "large"
        },
        {
          "file": "test_routes.py",
          "line_count": 30,
          "size_category": "tiny"
        },
        {
          "file": "test_security_api_server.py",
          "line_count": 46,
          "size_category": "tiny"
        },
        {
          "file": "test_security_full_integration.py",
          "line_count": 530,
          "size_category": "huge"
        },
        {
          "file": "test_security_integration_validation.py",
          "line_count": 329,
          "size_category": "large"
        },
        {
          "file": "test_streaming_generation.py",
          "line_count": 432,
          "size_category": "large"
        },
        {
          "file": "test_streaming_simple.py",
          "line_count": 164,
          "size_category": "medium"
        },
        {
          "file": "test_tot_integration.py",
          "line_count": 165,
          "size_category": "medium"
        },
        {
          "file": "test_tracking_manager_integration.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "test_unified_integration.py",
          "line_count": 249,
          "size_category": "medium"
        },
        {
          "file": "test_universal_ast_system.py",
          "line_count": 579,
          "size_category": "huge"
        },
        {
          "file": "test_universal_language_detector.py",
          "line_count": 693,
          "size_category": "huge"
        },
        {
          "file": "turbo_converter.py",
          "line_count": 264,
          "size_category": "medium"
        },
        {
          "file": "unified_orchestration_example.py",
          "line_count": 407,
          "size_category": "large"
        },
        {
          "file": "unified_security_scanner.py",
          "line_count": 1124,
          "size_category": "huge"
        },
        {
          "file": "validate_api_endpoints.py",
          "line_count": 787,
          "size_category": "huge"
        },
        {
          "file": "validate_dashboard_core.py",
          "line_count": 156,
          "size_category": "medium"
        },
        {
          "file": "verify_classical_modules.py",
          "line_count": 96,
          "size_category": "small"
        },
        {
          "file": "web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "week_5_8_batch_converter.py",
          "line_count": 331,
          "size_category": "large"
        },
        {
          "file": "week_7_8_converter.py",
          "line_count": 350,
          "size_category": "large"
        },
        {
          "file": "write_real_tests.py",
          "line_count": 248,
          "size_category": "medium"
        },
        {
          "file": "agents\\roles\\base_role.py",
          "line_count": 373,
          "size_category": "large"
        },
        {
          "file": "agents\\roles\\test_architect.py",
          "line_count": 945,
          "size_category": "huge"
        },
        {
          "file": "agents\\roles\\test_coordinator.py",
          "line_count": 36,
          "size_category": "tiny"
        },
        {
          "file": "agents\\roles\\test_engineer.py",
          "line_count": 917,
          "size_category": "huge"
        },
        {
          "file": "agents\\roles\\test_executor.py",
          "line_count": 36,
          "size_category": "tiny"
        },
        {
          "file": "agents\\roles\\__init__.py",
          "line_count": 28,
          "size_category": "tiny"
        },
        {
          "file": "agents\\team\\testing_team.py",
          "line_count": 429,
          "size_category": "large"
        },
        {
          "file": "analysis\\comprehensive_analysis\\data_security\\data_leakage_detector.py",
          "line_count": 795,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\domain_modeling\\domain_model_analyzer.py",
          "line_count": 921,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_core_analyzer.py",
          "line_count": 397,
          "size_category": "large"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_data_analyzer.py",
          "line_count": 513,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\_shared_utils.py",
          "line_count": 296,
          "size_category": "medium"
        },
        {
          "file": "analytics\\failure_analyzer.py",
          "line_count": 661,
          "size_category": "huge"
        },
        {
          "file": "api\\orchestration_api.py",
          "line_count": 447,
          "size_category": "large"
        },
        {
          "file": "api\\orchestration_flask.py",
          "line_count": 475,
          "size_category": "large"
        },
        {
          "file": "api\\phase2_api.py",
          "line_count": 531,
          "size_category": "huge"
        },
        {
          "file": "api\\phase3_api.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "archive\\advanced_testing_intelligence.py",
          "line_count": 770,
          "size_category": "huge"
        },
        {
          "file": "archive\\coverage_analyzer_original_2697_lines.py",
          "line_count": 2698,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_ml_code_analysis_original.py",
          "line_count": 1249,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_technical_debt_analysis_original.py",
          "line_count": 1301,
          "size_category": "huge"
        },
        {
          "file": "archive\\integration_hub_original_20250820_220939.py",
          "line_count": 1877,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_ml_code_analysis.py",
          "line_count": 1249,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_technical_debt_analysis.py",
          "line_count": 1301,
          "size_category": "huge"
        },
        {
          "file": "archive\\20250818\\web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "line_count": 789,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_aggregator.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "line_count": 1290,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "line_count": 775,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "line_count": 725,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "line_count": 656,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "line_count": 555,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "line_count": 899,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "line_count": 766,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "line_count": 850,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "line_count": 694,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "line_count": 448,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "line_count": 680,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_validator.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "line_count": 1142,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "line_count": 2698,
          "size_category": "huge"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_enhanced_test_imports.py",
          "line_count": 230,
          "size_category": "medium"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_failing_tests.py",
          "line_count": 225,
          "size_category": "medium"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_tests_for_real_modules.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_week2_test_imports.py",
          "line_count": 125,
          "size_category": "small"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\accelerated_converter.py",
          "line_count": 256,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\achieve_100_percent.py",
          "line_count": 262,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\achieve_100_percent_coverage.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\ai_test_generator.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\automated_test_generation.py",
          "line_count": 949,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\batch_convert_broken_tests.py",
          "line_count": 191,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\batch_gemini_generator.py",
          "line_count": 148,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\branch_coverage_analyzer.py",
          "line_count": 462,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\check_what_needs_tests.py",
          "line_count": 58,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "line_count": 697,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\convert_batch_small.py",
          "line_count": 150,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\convert_with_genai_sdk.py",
          "line_count": 182,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\convert_with_generativeai.py",
          "line_count": 161,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\coverage_analysis.py",
          "line_count": 669,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\coverage_improver.py",
          "line_count": 484,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\data_flow_tests.py",
          "line_count": 797,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\diagnose_final_five.py",
          "line_count": 201,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
          "line_count": 428,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\enhanced_self_healing_verifier.py",
          "line_count": 512,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\enhance_auto_generated_tests.py",
          "line_count": 349,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\fast_converter.py",
          "line_count": 136,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\final_five_converter.py",
          "line_count": 154,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\find_truly_missing.py",
          "line_count": 74,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\fix_all_imports.py",
          "line_count": 91,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\fix_enhanced_test_imports.py",
          "line_count": 230,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\fix_failing_tests.py",
          "line_count": 225,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\fix_remaining_issues.py",
          "line_count": 398,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\fix_tests_for_real_modules.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\fix_test_infrastructure.py",
          "line_count": 338,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\fix_week2_test_imports.py",
          "line_count": 125,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\gemini_powered_test_generator.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\gemini_test_generator.py",
          "line_count": 490,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\generate_coverage_sequential.py",
          "line_count": 268,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\implement_test_stubs.py",
          "line_count": 507,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\independent_test_verifier.py",
          "line_count": 215,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\integration_test_generator.py",
          "line_count": 572,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\integration_test_matrix.py",
          "line_count": 1159,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\intelligent_converter.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\intelligent_test_builder.py",
          "line_count": 359,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\intelligent_test_builder_offline.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\intelligent_test_builder_v2.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\measure_final_coverage.py",
          "line_count": 124,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\parallel_converter.py",
          "line_count": 311,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\parallel_converter_fixed.py",
          "line_count": 352,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\parallel_converter_working.py",
          "line_count": 297,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\parallel_coverage_converter.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\parallel_coverage_converter_fixed.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\quick_coverage_boost.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\quick_test_generator.py",
          "line_count": 112,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\quick_test_summary.py",
          "line_count": 60,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\run_intelligent_tests.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\run_limited_coverage.py",
          "line_count": 49,
          "size_category": "tiny"
        },
        {
          "file": "archive\\legacy_scripts\\self_healing_converter.py",
          "line_count": 384,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\simple_100_percent.py",
          "line_count": 146,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\simple_test_generator.py",
          "line_count": 182,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\simple_test_runner.py",
          "line_count": 86,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\smart_test_generator.py",
          "line_count": 452,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\specialized_test_generators.py",
          "line_count": 816,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\systematic_coverage.py",
          "line_count": 387,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\test_gemini_api.py",
          "line_count": 88,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\test_gemini_config.py",
          "line_count": 148,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\test_gemini_correct.py",
          "line_count": 115,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\test_single_api_call.py",
          "line_count": 174,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\test_single_generation.py",
          "line_count": 134,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\test_updated_prompt.py",
          "line_count": 174,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\turbo_converter.py",
          "line_count": 264,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\week_5_8_batch_converter.py",
          "line_count": 331,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\week_7_8_converter.py",
          "line_count": 350,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\working_test_generator.py",
          "line_count": 136,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\write_real_tests.py",
          "line_count": 248,
          "size_category": "medium"
        },
        {
          "file": "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "line_count": 1376,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "line_count": 1750,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "line_count": 1547,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "line_count": 1877,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\accelerated_converter.py",
          "line_count": 256,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\batch_convert_broken_tests.py",
          "line_count": 191,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\convert_batch_small.py",
          "line_count": 150,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\convert_with_genai_sdk.py",
          "line_count": 182,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\convert_with_generativeai.py",
          "line_count": 161,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\enhanced_context_aware_test_generator.py",
          "line_count": 428,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\enhanced_self_healing_verifier.py",
          "line_count": 512,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\enhance_auto_generated_tests.py",
          "line_count": 349,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\fix_enhanced_test_imports.py",
          "line_count": 230,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\fix_failing_tests.py",
          "line_count": 225,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\fix_tests_for_real_modules.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\fix_week2_test_imports.py",
          "line_count": 125,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\implement_test_stubs.py",
          "line_count": 507,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\independent_test_verifier.py",
          "line_count": 215,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\integration_test_generator.py",
          "line_count": 572,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\intelligent_test_builder.py",
          "line_count": 359,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\intelligent_test_builder_offline.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\intelligent_test_builder_v2.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\parallel_converter.py",
          "line_count": 311,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\parallel_converter_fixed.py",
          "line_count": 352,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\quick_test_summary.py",
          "line_count": 60,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\run_intelligent_tests.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\simple_test_runner.py",
          "line_count": 86,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\specialized_test_generators.py",
          "line_count": 816,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\testmaster_orchestrator.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\turbo_converter.py",
          "line_count": 264,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\week_5_8_batch_converter.py",
          "line_count": 331,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\week_7_8_converter.py",
          "line_count": 350,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\write_real_tests.py",
          "line_count": 248,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\analytics\\failure_analyzer.py",
          "line_count": 661,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\cache\\intelligent_cache.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\config\\testmaster_config.py",
          "line_count": 560,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\dashboard\\quality_dashboard.py",
          "line_count": 603,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\deduplication\\test_deduplicator.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\incremental\\dependency_tracker.py",
          "line_count": 642,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\integration\\cross_module_tester.py",
          "line_count": 859,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\optimization\\execution_optimizer.py",
          "line_count": 648,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\scripts\\achieve_100_percent.py",
          "line_count": 262,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\achieve_100_percent_coverage.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\ai_test_generator.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\scripts\\batch_gemini_generator.py",
          "line_count": 148,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\branch_coverage_analyzer.py",
          "line_count": 462,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\check_what_needs_tests.py",
          "line_count": 58,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\coverage_improver.py",
          "line_count": 484,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\diagnose_final_five.py",
          "line_count": 201,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\fast_converter.py",
          "line_count": 136,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\final_five_converter.py",
          "line_count": 154,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\find_truly_missing.py",
          "line_count": 74,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\fix_all_imports.py",
          "line_count": 91,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\fix_remaining_issues.py",
          "line_count": 398,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\fix_test_infrastructure.py",
          "line_count": 338,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\gemini_powered_test_generator.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\gemini_test_generator.py",
          "line_count": 490,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\generate_coverage_sequential.py",
          "line_count": 268,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\intelligent_converter.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\measure_final_coverage.py",
          "line_count": 124,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\parallel_converter_working.py",
          "line_count": 297,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\parallel_coverage_converter.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\parallel_coverage_converter_fixed.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\quick_coverage_boost.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\quick_test_generator.py",
          "line_count": 112,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\run_limited_coverage.py",
          "line_count": 49,
          "size_category": "tiny"
        },
        {
          "file": "archive\\original_backup\\scripts\\self_healing_converter.py",
          "line_count": 384,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\simple_100_percent.py",
          "line_count": 146,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\simple_test_generator.py",
          "line_count": 182,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\smart_test_generator.py",
          "line_count": 452,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\systematic_coverage.py",
          "line_count": 387,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\test_gemini_api.py",
          "line_count": 88,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\test_gemini_config.py",
          "line_count": 148,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\test_gemini_correct.py",
          "line_count": 115,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\test_single_api_call.py",
          "line_count": 174,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\test_single_generation.py",
          "line_count": 134,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\test_updated_prompt.py",
          "line_count": 174,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\working_test_generator.py",
          "line_count": 136,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\src\\automated_test_generation.py",
          "line_count": 949,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "line_count": 697,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\src\\coverage_analysis.py",
          "line_count": 669,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\src\\data_flow_tests.py",
          "line_count": 797,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\src\\integration_test_matrix.py",
          "line_count": 1159,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
          "line_count": 1547,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\coordination\\agent_coordination_protocols.py",
          "line_count": 1311,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\coordination\\unified_workflow_orchestrator.py",
          "line_count": 1355,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\documentation\\revolutionary\\neo4j_dominator.py",
          "line_count": 1158,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "line_count": 1294,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\performance_optimizer.py",
          "line_count": 1144,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\sla_ml_optimizer.py",
          "line_count": 1627,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "line_count": 1750,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\monitoring\\performance_optimization_engine.py",
          "line_count": 1124,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\validation\\integration_test_suite.py",
          "line_count": 1062,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\validation\\system_validation_framework.py",
          "line_count": 1295,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "line_count": 715,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "line_count": 610,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "line_count": 757,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "line_count": 1051,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "line_count": 859,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "line_count": 1302,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase5_archive\\replaced_code\\agent_graph_20250819_195602.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "archive\\phase5_archive\\replaced_code\\enterprise_deployment_20250819_195602.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase5_archive\\replaced_code\\testing_team_20250819_195602.py",
          "line_count": 429,
          "size_category": "large"
        },
        {
          "file": "archive\\phase6_archive\\replaced_code\\agent_graph_20250819_200928.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "cache\\intelligent_cache.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "config\\testmaster_config.py",
          "line_count": 560,
          "size_category": "huge"
        },
        {
          "file": "config\\yaml_config_enhancer.py",
          "line_count": 633,
          "size_category": "huge"
        },
        {
          "file": "consolidation\\feature_discovery.py",
          "line_count": 364,
          "size_category": "large"
        },
        {
          "file": "core\\async_state_manager.py",
          "line_count": 746,
          "size_category": "huge"
        },
        {
          "file": "core\\feature_flags.py",
          "line_count": 438,
          "size_category": "large"
        },
        {
          "file": "core\\framework_abstraction.py",
          "line_count": 604,
          "size_category": "huge"
        },
        {
          "file": "core\\framework_abstraction.stub_backup.py",
          "line_count": 361,
          "size_category": "large"
        },
        {
          "file": "core\\shared_state.py",
          "line_count": 610,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\business_analyzer_modular.py",
          "line_count": 343,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_analyzer_modular.py",
          "line_count": 282,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_test_analyzer.py",
          "line_count": 306,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\ml_analyzer.py",
          "line_count": 777,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\ml_code_analyzer.py",
          "line_count": 573,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_analyzer_modular.py",
          "line_count": 259,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\technical_debt_analyzer.py",
          "line_count": 574,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\analytics_deduplication.py",
          "line_count": 940,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\predictive_analytics_engine.py",
          "line_count": 652,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\statistical_engine.py",
          "line_count": 318,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analytics\\__init__.py",
          "line_count": 799,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\realtime\\streaming_analytics.py",
          "line_count": 453,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\api\\endpoints.py",
          "line_count": 583,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\api\\serializers.py",
          "line_count": 300,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\api\\validators.py",
          "line_count": 373,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\base\\__init__.py",
          "line_count": 571,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\coordination\\cross_agent_bridge.py",
          "line_count": 907,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\api_validation_framework.py",
          "line_count": 750,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\docs_api.py",
          "line_count": 353,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\docs_testing_framework.py",
          "line_count": 639,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence_integration.py",
          "line_count": 653,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\interactive_docs.py",
          "line_count": 404,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\knowledge_management_framework.py",
          "line_count": 1022,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\swarms_auto_generation_adapter.py",
          "line_count": 384,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\swarms_self_healing_docs.py",
          "line_count": 517,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise\\documentation_intelligence.py",
          "line_count": 451,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise\\documentation_validator.py",
          "line_count": 249,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\enterprise\\integration_validator.py",
          "line_count": 234,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\predictive_code_intelligence.py",
          "line_count": 478,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\correlation_engine.py",
          "line_count": 340,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\online_learning.py",
          "line_count": 363,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\intelligent_resource_scheduler.py",
          "line_count": 743,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\predictive_engine.py",
          "line_count": 850,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\telemetry_export_manager.py",
          "line_count": 604,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
          "line_count": 756,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\monitoring\\agent_qa_modular.py",
          "line_count": 243,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\monitoring\\qa_scorer.py",
          "line_count": 255,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\orchestration\\cross_system_orchestrator.py",
          "line_count": 982,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\prediction\\forecaster.py",
          "line_count": 367,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\dependency_scanner.py",
          "line_count": 384,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\security_dashboard.py",
          "line_count": 412,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\unified_security_service.py",
          "line_count": 270,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\audit\\audit_storage.py",
          "line_count": 287,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\security_validator.py",
          "line_count": 443,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\validation\\penetration_tester.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\streaming\\event_streaming_engine.py",
          "line_count": 815,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\automation_engine.py",
          "line_count": 597,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\base.py",
          "line_count": 128,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\testing\\contract_tester.py",
          "line_count": 352,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\flaky_test_detector.py",
          "line_count": 492,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\mutation_engine.py",
          "line_count": 285,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\testing\\property_tester.py",
          "line_count": 307,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\quality_dashboard.py",
          "line_count": 387,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\regression_detector.py",
          "line_count": 417,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\security_fuzzer.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\testing_api.py",
          "line_count": 481,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\test_analytics.py",
          "line_count": 477,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\test_intelligence.py",
          "line_count": 548,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\test_orchestrator.py",
          "line_count": 391,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\test_quality_scorer.py",
          "line_count": 405,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\test_selector.py",
          "line_count": 388,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\__init__.py",
          "line_count": 457,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\advanced\\ml_test_optimizer.py",
          "line_count": 857,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\advanced\\__init__.py",
          "line_count": 43,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\claude_test_generator.py",
          "line_count": 459,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
          "line_count": 543,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\universal_ai_generator.py",
          "line_count": 472,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\__init__.py",
          "line_count": 56,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\testing\\automation\\continuous_testing_engine.py",
          "line_count": 547,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\automation\\enterprise_test_orchestrator.py",
          "line_count": 727,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\automation\\test_maintenance_system.py",
          "line_count": 551,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\automation\\__init__.py",
          "line_count": 72,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\testing\\components\\coverage_analyzer.py",
          "line_count": 1101,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\components\\execution_engine.py",
          "line_count": 382,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\components\\integration_generator.py",
          "line_count": 749,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\components\\ml_optimizer.py",
          "line_count": 751,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\enterprise\\predictive_test_failure.py",
          "line_count": 849,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\enterprise\\quality_analytics_engine.py",
          "line_count": 919,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\enterprise\\quality_gate_automation.py",
          "line_count": 742,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\enterprise\\__init__.py",
          "line_count": 72,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\testing\\security\\advanced_owasp_tester.py",
          "line_count": 913,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\security\\api_security_tester.py",
          "line_count": 532,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\security\\compliance_validator.py",
          "line_count": 663,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\validation\\integration_test_suite.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\validation\\integration_test_suite_modules\\__init__.py",
          "line_count": 12,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\visualization\\development_tools_ui.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "core\\observability\\agent_ops_separate.py",
          "line_count": 571,
          "size_category": "huge"
        },
        {
          "file": "core\\observability\\unified_monitor.py",
          "line_count": 757,
          "size_category": "huge"
        },
        {
          "file": "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "line_count": 1891,
          "size_category": "huge"
        },
        {
          "file": "core\\observability\\__init__.py",
          "line_count": 28,
          "size_category": "tiny"
        },
        {
          "file": "core\\orchestration\\agent_graph.py",
          "line_count": 501,
          "size_category": "huge"
        },
        {
          "file": "core\\orchestration\\enhanced_agent_orchestrator.py",
          "line_count": 755,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\data_integrity_guardian.py",
          "line_count": 710,
          "size_category": "huge"
        },
        {
          "file": "core\\state\\enhanced_state_manager.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\adaptive_testing_framework.py",
          "line_count": 1012,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\agent_reasoning_testing.py",
          "line_count": 564,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\archive_intelligence_mining.py",
          "line_count": 586,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\async_sync_testing.py",
          "line_count": 159,
          "size_category": "medium"
        },
        {
          "file": "core\\testing\\collaborative_testing_platform.py",
          "line_count": 1224,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\communication_testing.py",
          "line_count": 303,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\competitive_analysis_framework.py",
          "line_count": 455,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\crew_thread_safety_testing.py",
          "line_count": 599,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\distributed_test_coordinator.py",
          "line_count": 994,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\embedding_cache_testing.py",
          "line_count": 622,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\enterprise_test_framework.py",
          "line_count": 739,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\flow_testing.py",
          "line_count": 743,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\formatter_testing.py",
          "line_count": 526,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\graph_async_testing.py",
          "line_count": 473,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\graph_constraints_testing.py",
          "line_count": 398,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\graph_index_testing.py",
          "line_count": 1103,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\graph_operations_testing.py",
          "line_count": 1063,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\graph_performance_testing.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\graph_vector_testing.py",
          "line_count": 535,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\hallucination_guardrail_testing.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\hook_testing.py",
          "line_count": 951,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\integration_test_framework.py",
          "line_count": 489,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\intelligence_synthesis_framework.py",
          "line_count": 899,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\intelligent_test_generator.py",
          "line_count": 1119,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\langgraph_supervisor_testing.py",
          "line_count": 693,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\mcp_testing.py",
          "line_count": 428,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\multimodal_validation_testing.py",
          "line_count": 643,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\multi_modal_test_engine.py",
          "line_count": 1208,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\parallel_test_executor.py",
          "line_count": 526,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\pattern_consolidation_engine.py",
          "line_count": 799,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\performance_test_suite.py",
          "line_count": 462,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\pipeline_testing.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\react_agent_testing.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\repository_intelligence_aggregator.py",
          "line_count": 970,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\response_validation_testing.py",
          "line_count": 440,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\run_all_tests.py",
          "line_count": 389,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\session_testing.py",
          "line_count": 877,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\supercharged_test_generator.py",
          "line_count": 443,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\supercharged_test_generator.py_stub_backup_20250821_042438.py",
          "line_count": 557,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\task_guardrails_testing.py",
          "line_count": 768,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\testmaster_api_gateway.py",
          "line_count": 1318,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\test_ai_code_exploration.py",
          "line_count": 355,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\test_coverage_optimizer.py",
          "line_count": 282,
          "size_category": "medium"
        },
        {
          "file": "core\\testing\\test_evolution_analyzer.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\test_integration_hub.py",
          "line_count": 601,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\test_intelligence_orchestrator.py",
          "line_count": 328,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\test_knowledge_graph_engine.py",
          "line_count": 256,
          "size_category": "medium"
        },
        {
          "file": "core\\testing\\test_multi_language_superiority.py",
          "line_count": 363,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\test_quality_analyzer.py",
          "line_count": 245,
          "size_category": "medium"
        },
        {
          "file": "core\\testing\\test_ui_interface_superiority.py",
          "line_count": 492,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\test_zero_setup_domination.py",
          "line_count": 380,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\thread_retry_testing.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\tool_factory_testing.py",
          "line_count": 643,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\tool_testing.py",
          "line_count": 916,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\tracing_testing.py",
          "line_count": 1157,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\unified_test_orchestrator.py",
          "line_count": 489,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\user_input_testing.py",
          "line_count": 862,
          "size_category": "huge"
        },
        {
          "file": "core\\tools\\concrete_tools.py",
          "line_count": 472,
          "size_category": "large"
        },
        {
          "file": "core\\tools\\type_safe_tools.py",
          "line_count": 471,
          "size_category": "large"
        },
        {
          "file": "dashboard\\automated_frontend_simulator.py",
          "line_count": 376,
          "size_category": "large"
        },
        {
          "file": "dashboard\\automated_frontend_tester.py",
          "line_count": 651,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\comprehensive_frontend_test.py",
          "line_count": 285,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\comprehensive_frontend_validator.py",
          "line_count": 552,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\debug_blueprints.py",
          "line_count": 60,
          "size_category": "small"
        },
        {
          "file": "dashboard\\demo_automated_frontend_testing.py",
          "line_count": 298,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\discover_backend_features.py",
          "line_count": 215,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\quality_dashboard.py",
          "line_count": 603,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\quick_frontend_test.py",
          "line_count": 223,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\quick_integration_test.py",
          "line_count": 202,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\quick_validation.py",
          "line_count": 74,
          "size_category": "small"
        },
        {
          "file": "dashboard\\server.py",
          "line_count": 548,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\simple_robustness_test.py",
          "line_count": 145,
          "size_category": "small"
        },
        {
          "file": "dashboard\\test_all_features.py",
          "line_count": 300,
          "size_category": "large"
        },
        {
          "file": "dashboard\\test_analytics_import.py",
          "line_count": 71,
          "size_category": "small"
        },
        {
          "file": "dashboard\\test_api_endpoints.py",
          "line_count": 224,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\test_final_enhancements.py",
          "line_count": 863,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\test_frontend_automated.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "dashboard\\test_frontend_integration.py",
          "line_count": 772,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\test_frontend_without_browser.py",
          "line_count": 234,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\test_multi_agent_integration.py",
          "line_count": 961,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\test_new_robustness_features.py",
          "line_count": 396,
          "size_category": "large"
        },
        {
          "file": "dashboard\\test_new_visualization_apis.py",
          "line_count": 132,
          "size_category": "small"
        },
        {
          "file": "dashboard\\test_robustness_suite.py",
          "line_count": 373,
          "size_category": "large"
        },
        {
          "file": "dashboard\\test_robustness_verification.py",
          "line_count": 320,
          "size_category": "large"
        },
        {
          "file": "dashboard\\test_ultra_reliability.py",
          "line_count": 1049,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\ultimate_frontend_validator.py",
          "line_count": 845,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\validate_100_percent_real_data.py",
          "line_count": 176,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\validate_all_endpoints.py",
          "line_count": 226,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\api\\analytics.py",
          "line_count": 789,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\async_processing.py",
          "line_count": 606,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\comprehensive_monitoring.py",
          "line_count": 665,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\coverage.py",
          "line_count": 583,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\crew_orchestration.py",
          "line_count": 812,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\intelligence.py",
          "line_count": 533,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\llm.py",
          "line_count": 405,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\monitoring.py",
          "line_count": 366,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\orchestration_flask.py",
          "line_count": 475,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\phase2_api.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\production_deployment.py",
          "line_count": 499,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\quality_assurance.py",
          "line_count": 653,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\real_codebase_scanner.stub_backup.py",
          "line_count": 892,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\swarm_orchestration.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\telemetry.py",
          "line_count": 573,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\tests.py",
          "line_count": 101,
          "size_category": "small"
        },
        {
          "file": "dashboard\\api\\test_generation.py",
          "line_count": 481,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_aggregator.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_connectivity_monitor.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_deduplication.py",
          "line_count": 1290,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_deduplication_engine.py",
          "line_count": 775,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_delivery_verifier.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_health_monitor.py",
          "line_count": 725,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_normalizer.py",
          "line_count": 656,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_performance_booster.py",
          "line_count": 555,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_performance_optimizer.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_pipeline.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_priority_queue.py",
          "line_count": 899,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_quality_assurance.py",
          "line_count": 766,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_receipt_tracker.py",
          "line_count": 850,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_redundancy.py",
          "line_count": 694,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_sla_tracker.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_streaming.py",
          "line_count": 448,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_telemetry.py",
          "line_count": 680,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_validator.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\data_store.py",
          "line_count": 506,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\metrics_feed.py",
          "line_count": 360,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\predictive_flow_optimizer.py",
          "line_count": 1077,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\real_data_extractor.py",
          "line_count": 569,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\real_time_analytics.py",
          "line_count": 33,
          "size_category": "tiny"
        },
        {
          "file": "dashboard\\dashboard_core\\system_monitor.py",
          "line_count": 199,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\dashboard_core\\system_observability_metrics.py",
          "line_count": 840,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\test_collector.py",
          "line_count": 402,
          "size_category": "large"
        },
        {
          "file": "deduplication\\test_deduplicator.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "deployment\\enterprise_deployment.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "deployment\\swarm_orchestrator.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "incremental\\dependency_tracker.py",
          "line_count": 642,
          "size_category": "huge"
        },
        {
          "file": "integration\\automatic_scaling_system.py",
          "line_count": 1092,
          "size_category": "huge"
        },
        {
          "file": "integration\\automatic_scaling_system_robust.py",
          "line_count": 1051,
          "size_category": "huge"
        },
        {
          "file": "integration\\comprehensive_error_recovery.py",
          "line_count": 1280,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_module_tester.py",
          "line_count": 859,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_communication.py",
          "line_count": 327,
          "size_category": "large"
        },
        {
          "file": "integration\\distributed_task_queue.py",
          "line_count": 472,
          "size_category": "large"
        },
        {
          "file": "integration\\intelligent_caching_layer.py",
          "line_count": 1334,
          "size_category": "huge"
        },
        {
          "file": "integration\\predictive_analytics_engine.py",
          "line_count": 1142,
          "size_category": "huge"
        },
        {
          "file": "integration\\predictive_analytics_engine_robust.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "integration\\realtime_performance_monitoring.py",
          "line_count": 1427,
          "size_category": "huge"
        },
        {
          "file": "integration\\realtime_performance_monitoring_robust.py",
          "line_count": 1302,
          "size_category": "huge"
        },
        {
          "file": "monitoring\\enhanced_monitor_separate.py",
          "line_count": 573,
          "size_category": "huge"
        },
        {
          "file": "monitoring\\monitoring_agents.py",
          "line_count": 665,
          "size_category": "huge"
        },
        {
          "file": "observability\\unified_observability.py",
          "line_count": 455,
          "size_category": "large"
        },
        {
          "file": "optimization\\execution_optimizer.py",
          "line_count": 648,
          "size_category": "huge"
        },
        {
          "file": "orchestration\\unified_orchestrator.py",
          "line_count": 1279,
          "size_category": "huge"
        },
        {
          "file": "prioritization\\test_prioritizer.py",
          "line_count": 767,
          "size_category": "huge"
        },
        {
          "file": "scripts\\achieve_100_percent.py",
          "line_count": 262,
          "size_category": "medium"
        },
        {
          "file": "scripts\\achieve_100_percent_coverage.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "scripts\\ai_test_generator.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "scripts\\analyze_components.py",
          "line_count": 497,
          "size_category": "large"
        },
        {
          "file": "scripts\\batch_gemini_generator.py",
          "line_count": 148,
          "size_category": "small"
        },
        {
          "file": "scripts\\branch_coverage_analyzer.py",
          "line_count": 462,
          "size_category": "large"
        },
        {
          "file": "scripts\\check_what_needs_tests.py",
          "line_count": 58,
          "size_category": "small"
        },
        {
          "file": "scripts\\coverage_improver.py",
          "line_count": 484,
          "size_category": "large"
        },
        {
          "file": "scripts\\diagnose_final_five.py",
          "line_count": 201,
          "size_category": "medium"
        },
        {
          "file": "scripts\\fast_converter.py",
          "line_count": 136,
          "size_category": "small"
        },
        {
          "file": "scripts\\final_five_converter.py",
          "line_count": 154,
          "size_category": "medium"
        },
        {
          "file": "scripts\\find_truly_missing.py",
          "line_count": 74,
          "size_category": "small"
        },
        {
          "file": "scripts\\fix_all_imports.py",
          "line_count": 91,
          "size_category": "small"
        },
        {
          "file": "scripts\\fix_remaining_issues.py",
          "line_count": 398,
          "size_category": "large"
        },
        {
          "file": "scripts\\fix_test_infrastructure.py",
          "line_count": 338,
          "size_category": "large"
        },
        {
          "file": "scripts\\gemini_powered_test_generator.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "scripts\\gemini_test_generator.py",
          "line_count": 490,
          "size_category": "large"
        },
        {
          "file": "scripts\\generate_coverage_sequential.py",
          "line_count": 268,
          "size_category": "medium"
        },
        {
          "file": "scripts\\intelligent_converter.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "scripts\\measure_final_coverage.py",
          "line_count": 124,
          "size_category": "small"
        },
        {
          "file": "scripts\\parallel_converter_working.py",
          "line_count": 297,
          "size_category": "medium"
        },
        {
          "file": "scripts\\parallel_coverage_converter.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "scripts\\parallel_coverage_converter_fixed.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "scripts\\quick_coverage_boost.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "scripts\\quick_test_generator.py",
          "line_count": 112,
          "size_category": "small"
        },
        {
          "file": "scripts\\run_limited_coverage.py",
          "line_count": 49,
          "size_category": "tiny"
        },
        {
          "file": "scripts\\self_healing_converter.py",
          "line_count": 384,
          "size_category": "large"
        },
        {
          "file": "scripts\\simple_100_percent.py",
          "line_count": 146,
          "size_category": "small"
        },
        {
          "file": "scripts\\simple_test_generator.py",
          "line_count": 182,
          "size_category": "medium"
        },
        {
          "file": "scripts\\smart_test_generator.py",
          "line_count": 452,
          "size_category": "large"
        },
        {
          "file": "scripts\\systematic_coverage.py",
          "line_count": 387,
          "size_category": "large"
        },
        {
          "file": "scripts\\test_gemini_api.py",
          "line_count": 88,
          "size_category": "small"
        },
        {
          "file": "scripts\\test_gemini_config.py",
          "line_count": 148,
          "size_category": "small"
        },
        {
          "file": "scripts\\test_gemini_correct.py",
          "line_count": 115,
          "size_category": "small"
        },
        {
          "file": "scripts\\test_single_api_call.py",
          "line_count": 174,
          "size_category": "medium"
        },
        {
          "file": "scripts\\test_single_generation.py",
          "line_count": 134,
          "size_category": "small"
        },
        {
          "file": "scripts\\test_updated_prompt.py",
          "line_count": 174,
          "size_category": "medium"
        },
        {
          "file": "scripts\\working_test_generator.py",
          "line_count": 136,
          "size_category": "small"
        },
        {
          "file": "src\\automated_test_generation.py",
          "line_count": 949,
          "size_category": "huge"
        },
        {
          "file": "src\\comprehensive_test_framework.py",
          "line_count": 697,
          "size_category": "huge"
        },
        {
          "file": "src\\coverage_analysis.py",
          "line_count": 669,
          "size_category": "huge"
        },
        {
          "file": "src\\data_flow_tests.py",
          "line_count": 797,
          "size_category": "huge"
        },
        {
          "file": "src\\integration_test_matrix.py",
          "line_count": 1159,
          "size_category": "huge"
        },
        {
          "file": "state\\unified_state_manager.py",
          "line_count": 985,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\layer2_integration.py",
          "line_count": 519,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\main.py",
          "line_count": 377,
          "size_category": "large"
        },
        {
          "file": "testmaster\\agent_qa\\benchmarking_suite.py",
          "line_count": 366,
          "size_category": "large"
        },
        {
          "file": "testmaster\\agent_qa\\quality_inspector.py",
          "line_count": 318,
          "size_category": "large"
        },
        {
          "file": "testmaster\\agent_qa\\quality_monitor.py",
          "line_count": 353,
          "size_category": "large"
        },
        {
          "file": "testmaster\\agent_qa\\scoring_system.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "testmaster\\agent_qa\\validation_engine.py",
          "line_count": 371,
          "size_category": "large"
        },
        {
          "file": "testmaster\\agent_qa\\__init__.py",
          "line_count": 216,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\base_analyzer.py",
          "line_count": 108,
          "size_category": "small"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\concurrency_analysis.py",
          "line_count": 1397,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\quality_analysis.py",
          "line_count": 802,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\statistical_analysis.py",
          "line_count": 881,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\supply_chain_security.py",
          "line_count": 755,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\testing_analysis.py",
          "line_count": 1342,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\coverage\\base.py",
          "line_count": 52,
          "size_category": "small"
        },
        {
          "file": "testmaster\\async_processing\\async_executor.py",
          "line_count": 584,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\async_processing\\async_monitor.py",
          "line_count": 686,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\async_processing\\concurrent_scheduler.py",
          "line_count": 621,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\async_processing\\thread_pool_manager.py",
          "line_count": 637,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\breaking\\failure_detector.py",
          "line_count": 502,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\communication\\claude_messenger.py",
          "line_count": 692,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\communication\\dynamic_handoff.py",
          "line_count": 675,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\communication\\tag_reader.py",
          "line_count": 594,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\converters\\base.py",
          "line_count": 326,
          "size_category": "large"
        },
        {
          "file": "testmaster\\converters\\batch.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "testmaster\\converters\\intelligent.py",
          "line_count": 527,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\converters\\parallel.py",
          "line_count": 307,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\context_manager.py",
          "line_count": 555,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\feature_flags.py",
          "line_count": 406,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\layer_manager.py",
          "line_count": 663,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\monitoring_decorators.py",
          "line_count": 318,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\orchestrator.py",
          "line_count": 470,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\tracking_manager.py",
          "line_count": 737,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\workflow_graph.py",
          "line_count": 617,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\ast_abstraction\\universal_ast.py",
          "line_count": 1076,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "line_count": 864,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\framework_abstraction\\test_generator.py",
          "line_count": 571,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\framework_abstraction\\universal_test.py",
          "line_count": 425,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\framework_abstraction\\__init__.py",
          "line_count": 77,
          "size_category": "small"
        },
        {
          "file": "testmaster\\core\\language_detection\\universal_detector.py",
          "line_count": 830,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\flow_optimizer\\dependency_resolver.py",
          "line_count": 395,
          "size_category": "large"
        },
        {
          "file": "testmaster\\flow_optimizer\\execution_router.py",
          "line_count": 372,
          "size_category": "large"
        },
        {
          "file": "testmaster\\flow_optimizer\\flow_analyzer.py",
          "line_count": 373,
          "size_category": "large"
        },
        {
          "file": "testmaster\\generators\\base.py",
          "line_count": 706,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\generators\\intelligent.py",
          "line_count": 589,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\integration\\final_integration_test.py",
          "line_count": 1865,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\event_monitoring_bridge.py",
          "line_count": 1082,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\session_tracking_bridge.py",
          "line_count": 1111,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\sop_workflow_bridge.py",
          "line_count": 964,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\consensus\\agent_coordination.py",
          "line_count": 514,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\consensus\\consensus_engine.py",
          "line_count": 427,
          "size_category": "large"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\tutorial_generator.py",
          "line_count": 975,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\integrations\\git_integration.py",
          "line_count": 582,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\readme_templates.py",
          "line_count": 2251,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\hierarchical_planning\\htp_reasoning.py",
          "line_count": 383,
          "size_category": "large"
        },
        {
          "file": "testmaster\\intelligence\\hierarchical_planning\\llm_integration.py",
          "line_count": 554,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\hierarchical_planning\\test_plan_generator.py",
          "line_count": 558,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\hierarchical_planning\\unified_integration.py",
          "line_count": 524,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\hierarchical_planning\\__init__.py",
          "line_count": 128,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\integration\\agents\\documentation_agent.py",
          "line_count": 650,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\llm_providers\\provider_optimization.py",
          "line_count": 447,
          "size_category": "large"
        },
        {
          "file": "testmaster\\intelligence\\llm_providers\\universal_llm_provider.py",
          "line_count": 469,
          "size_category": "large"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
          "line_count": 1147,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\bottleneck_detection_resolution_agent.py",
          "line_count": 1102,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
          "line_count": 900,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
          "line_count": 1162,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\optimization\\test_optimization_objectives.py",
          "line_count": 422,
          "size_category": "large"
        },
        {
          "file": "testmaster\\intelligence\\optimization\\__init__.py",
          "line_count": 78,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\security\\security_intelligence_agent.py",
          "line_count": 935,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\tree_of_thought\\test_thought_generator.py",
          "line_count": 620,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\tree_of_thought\\universal_tot_integration.py",
          "line_count": 496,
          "size_category": "large"
        },
        {
          "file": "testmaster\\intelligence\\tree_of_thought\\__init__.py",
          "line_count": 59,
          "size_category": "small"
        },
        {
          "file": "testmaster\\mapping\\dependency_tracker.py",
          "line_count": 479,
          "size_category": "large"
        },
        {
          "file": "testmaster\\mapping\\test_mapper.py",
          "line_count": 558,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\mapping\\__init__.py",
          "line_count": 24,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\monitoring\\file_watcher.py",
          "line_count": 566,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\monitoring\\idle_detector.py",
          "line_count": 500,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\monitoring\\test_monitor.py",
          "line_count": 519,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\monitoring\\test_scheduler.py",
          "line_count": 595,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\monitoring\\__init__.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\orchestration\\framework_adapter.py",
          "line_count": 585,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestration\\output_system.py",
          "line_count": 826,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestration\\universal_orchestrator.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\file_tagger.py",
          "line_count": 1030,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\handoff_manager.py",
          "line_count": 1246,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\investigator.py",
          "line_count": 1123,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\work_distributor.py",
          "line_count": 796,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\coverage_intelligence.py",
          "line_count": 1071,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\performance_dashboard.py",
          "line_count": 686,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\regression_tracker.py",
          "line_count": 1375,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\structure_mapper.py",
          "line_count": 1112,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\refactoring\\hierarchical_analyzer.py",
          "line_count": 980,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\reporting\\report_generator.py",
          "line_count": 922,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\security\\security_test_generator.py",
          "line_count": 777,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\security\\__init__.py",
          "line_count": 53,
          "size_category": "small"
        },
        {
          "file": "testmaster\\streaming\\collaborative_generator.py",
          "line_count": 99,
          "size_category": "small"
        },
        {
          "file": "testmaster\\streaming\\incremental_enhancer.py",
          "line_count": 562,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\streaming\\live_feedback.py",
          "line_count": 504,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\streaming\\stream_generator.py",
          "line_count": 593,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\streaming\\stream_monitor.py",
          "line_count": 57,
          "size_category": "small"
        },
        {
          "file": "testmaster\\streaming\\__init__.py",
          "line_count": 137,
          "size_category": "small"
        },
        {
          "file": "testmaster\\telemetry\\flow_analyzer.py",
          "line_count": 640,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\telemetry\\performance_monitor.py",
          "line_count": 554,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\telemetry\\system_profiler.py",
          "line_count": 599,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\telemetry\\telemetry_collector.py",
          "line_count": 421,
          "size_category": "large"
        },
        {
          "file": "testmaster\\telemetry\\telemetry_dashboard.py",
          "line_count": 624,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\ui\\alert_system.py",
          "line_count": 800,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\ui\\dashboard.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\ui\\metrics_display.py",
          "line_count": 672,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\verification\\base.py",
          "line_count": 396,
          "size_category": "large"
        },
        {
          "file": "testmaster\\verification\\quality.py",
          "line_count": 438,
          "size_category": "large"
        },
        {
          "file": "testmaster\\verification\\self_healing.py",
          "line_count": 508,
          "size_category": "huge"
        },
        {
          "file": "tests\\test_intelligence_ml.py",
          "line_count": 422,
          "size_category": "large"
        },
        {
          "file": "tests\\test_phase2_core_validation.py",
          "line_count": 569,
          "size_category": "huge"
        },
        {
          "file": "tests\\test_phase2_e2e_validation.py",
          "line_count": 1091,
          "size_category": "huge"
        },
        {
          "file": "tests\\test_phase2_integration_validation.py",
          "line_count": 677,
          "size_category": "huge"
        },
        {
          "file": "tests\\integration\\test_knowledge_graph_integration.py",
          "line_count": 440,
          "size_category": "large"
        },
        {
          "file": "tests\\integration\\test_knowledge_graph_simple.py",
          "line_count": 183,
          "size_category": "medium"
        },
        {
          "file": "tools\\migration\\safety_checker.py",
          "line_count": 466,
          "size_category": "large"
        },
        {
          "file": "ui_ux\\studio_interface.py",
          "line_count": 634,
          "size_category": "huge"
        },
        {
          "file": "validation\\phase_validator.py",
          "line_count": 431,
          "size_category": "large"
        }
      ]
    },
    "config": {
      "file_count": 862,
      "total_lines": 517963,
      "scattered_across": 173,
      "directories": [
        "testmaster\\intelligence\\llm_providers",
        "testmaster\\core",
        "core\\intelligence\\documentation\\revolutionary",
        "testmaster\\intelligence\\documentation\\core",
        "ui_ux",
        "core\\intelligence\\integration",
        "core\\intelligence\\security\\audit",
        "testmaster\\async_processing",
        "prioritization",
        "core\\state",
        "observability",
        "archive\\phase1c_consolidation_20250820_150000\\integration",
        "testmaster\\streaming",
        "dashboard\\dashboard_core",
        "core\\intelligence\\visualization",
        "workflow",
        "testmaster\\intelligence\\integration\\coordination",
        "testmaster\\overview",
        "core\\intelligence\\documentation",
        "analysis\\comprehensive_analysis\\ml_analysis",
        "core",
        "tests",
        "testmaster\\intelligence\\integration",
        "testmaster\\intelligence\\documentation\\integrations",
        "analysis\\comprehensive_analysis\\energy_analysis",
        "archive\\oversized_modules_20250821_042018\\monitoring",
        "core\\intelligence\\testing\\automation",
        "testmaster\\intelligence\\documentation",
        "core\\intelligence\\testing",
        "core\\intelligence\\testing\\security",
        "archive\\original_backup\\optimization",
        "analysis\\comprehensive_analysis\\anomaly_detection",
        "orchestration",
        "agents\\roles",
        "archive\\original_backup\\scripts",
        "dashboard\\api",
        "core\\intelligence\\documentation\\enterprise",
        "optimization",
        "archive\\original_backup\\cache",
        "scripts",
        "core\\intelligence\\testing\\ai_generation",
        "core\\security",
        "cache",
        "archive",
        "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components",
        "core\\intelligence",
        "config",
        "testmaster\\intelligence\\integration\\events",
        "testmaster",
        ".",
        "testmaster\\intelligence\\monitoring",
        "core\\observability",
        "core\\intelligence\\streaming",
        "testmaster\\core\\ast_abstraction",
        "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components",
        "core\\intelligence\\enterprise\\api",
        "testmaster\\analysis\\comprehensive_analysis",
        "agents\\team",
        "integration",
        "archive\\phase7_archive\\replaced_code",
        "deployment",
        "testmaster\\orchestration",
        "testmaster\\orchestrator",
        "api",
        "archive\\original_backup\\analytics",
        "analysis\\comprehensive_analysis\\business_analysis",
        "core\\intelligence\\security",
        "testmaster\\telemetry",
        "analysis\\comprehensive_analysis\\security_monitoring",
        "analytics",
        "core\\intelligence\\knowledge_graph",
        "archive\\phase5_archive\\replaced_code",
        "core\\intelligence\\queuing",
        "testmaster\\intelligence\\integration\\layers",
        "core\\tools",
        "core\\intelligence\\documentation\\intelligence",
        "archive\\placeholder_backups_20250820_011745\\integration",
        "core\\intelligence\\caching",
        "archive\\original_backup\\config",
        "archive\\oversized_modules_20250821_042018\\validation",
        "archive\\modularization_20250820_222253",
        "monitoring",
        "analysis\\comprehensive_analysis\\pattern_mining",
        "testmaster\\intelligence\\integration\\features",
        "testmaster\\intelligence\\integration\\agents",
        "tools\\migration",
        "core\\intelligence\\integration\\components",
        "testmaster\\intelligence\\integration\\storage",
        "testmaster\\integration",
        "archive\\phase6_archive\\replaced_code",
        "testmaster\\intelligence\\documentation\\quality",
        "testmaster\\intelligence\\tree_of_thought",
        "dashboard",
        "archive\\legacy_scripts",
        "archive\\oversized_modules_20250821_042018\\ml\\advanced",
        "archive\\original_backup\\integration",
        "archive\\original_backup\\incremental",
        "archive\\placeholder_backups_20250820_011817\\integration",
        "incremental",
        "analysis\\comprehensive_analysis\\metaprog_analysis",
        "core\\intelligence\\ml\\advanced",
        "testmaster\\reporting",
        "testmaster\\intelligence\\consensus",
        "core\\intelligence\\testing\\components",
        "core\\intelligence\\config",
        "core\\intelligence\\compatibility",
        "testmaster\\intelligence\\documentation\\templates",
        "core\\intelligence\\testing\\enterprise",
        "core\\orchestration",
        "core\\intelligence\\correlation",
        "testmaster\\ui",
        "src",
        "core\\intelligence\\data_pipeline",
        "core\\intelligence\\analysis\\business_analyzer_modules",
        "core\\intelligence\\security\\enterprise",
        "testmaster\\monitoring",
        "archive\\20250818",
        "analysis\\comprehensive_analysis\\realtime_analysis",
        "archive\\phase4_archive\\replaced_code",
        "testmaster\\intelligence\\hierarchical_planning",
        "testmaster\\intelligence\\security",
        "analysis\\comprehensive_analysis\\debt_analysis",
        "testmaster\\verification",
        "ui",
        "testmaster\\generators",
        "archive\\oversized_modules_20250821_042018\\ml\\enterprise",
        "testmaster\\intelligence\\documentation\\generators",
        "archive\\original_backup",
        "core\\intelligence\\security\\enterprise\\validation",
        "core\\intelligence\\ml",
        "core\\reliability",
        "core\\intelligence\\ml\\enterprise",
        "testmaster\\core\\language_detection",
        "core\\intelligence\\api",
        "archive\\oversized_modules_20250821_042018\\analysis",
        "core\\intelligence\\base",
        "testmaster\\core\\framework_abstraction",
        "analysis\\comprehensive_analysis\\semantic_analysis",
        "core\\intelligence\\analytics",
        "tests\\integration",
        "state",
        "archive\\original_backup\\dashboard",
        "testmaster\\refactoring",
        "archive\\oversized_modules_20250821_042018\\coordination",
        "core\\intelligence\\orchestration",
        "analysis\\comprehensive_analysis\\cognitive_load",
        "core\\intelligence\\analysis",
        "archive\\modularization_integration",
        "core\\intelligence\\analytics\\advanced",
        "core\\intelligence\\security\\enterprise\\intelligence",
        "core\\intelligence\\enterprise",
        "testmaster\\converters",
        "archive\\COMPLETE_REFACTOR_20250818_112844",
        "testmaster\\security",
        "core\\intelligence\\coordination",
        "archive\\modularization_20250821",
        "core\\intelligence\\monitoring",
        "testmaster\\intelligence\\optimization",
        "testmaster\\intelligence",
        "testmaster\\intelligence\\bridges",
        "archive\\original_backup\\src",
        "testmaster\\agent_qa",
        "core\\testing",
        "archive\\original_backup\\deduplication",
        "agents",
        "deduplication",
        "archive\\oversized_modules_20250821_042018\\documentation\\revolutionary",
        "testmaster\\flow_optimizer",
        "archive\\phase1c_consolidation_20250820_150000",
        "core\\intelligence\\reliability",
        "core\\intelligence\\dashboard",
        "testmaster\\communication",
        "archive\\oversized_modules_20250821_042018\\api"
      ],
      "consolidation_opportunity": true,
      "files": [
        {
          "file": "accelerated_converter.py",
          "line_count": 256,
          "size_category": "medium"
        },
        {
          "file": "agent_d_comprehensive_test_executor.py",
          "line_count": 911,
          "size_category": "huge"
        },
        {
          "file": "architecture_centralization_analysis.py",
          "line_count": 509,
          "size_category": "huge"
        },
        {
          "file": "auto_readme_updater.py",
          "line_count": 619,
          "size_category": "huge"
        },
        {
          "file": "comprehensive_codebase_analysis.py",
          "line_count": 332,
          "size_category": "large"
        },
        {
          "file": "comprehensive_feature_audit.py",
          "line_count": 665,
          "size_category": "huge"
        },
        {
          "file": "convert_batch_small.py",
          "line_count": 150,
          "size_category": "medium"
        },
        {
          "file": "convert_with_genai_sdk.py",
          "line_count": 182,
          "size_category": "medium"
        },
        {
          "file": "convert_with_generativeai.py",
          "line_count": 161,
          "size_category": "medium"
        },
        {
          "file": "debug_feature_flags.py",
          "line_count": 18,
          "size_category": "tiny"
        },
        {
          "file": "documentation_cli.py",
          "line_count": 706,
          "size_category": "huge"
        },
        {
          "file": "enable_deep_integration.py",
          "line_count": 240,
          "size_category": "medium"
        },
        {
          "file": "enhanced_context_aware_test_generator.py",
          "line_count": 428,
          "size_category": "large"
        },
        {
          "file": "enhanced_incremental_ast_engine.py",
          "line_count": 826,
          "size_category": "huge"
        },
        {
          "file": "enhanced_intelligent_test_builder.py",
          "line_count": 614,
          "size_category": "huge"
        },
        {
          "file": "enhanced_realtime_security_monitor.py",
          "line_count": 1108,
          "size_category": "huge"
        },
        {
          "file": "enhanced_security_dashboard_api.py",
          "line_count": 701,
          "size_category": "huge"
        },
        {
          "file": "enhanced_security_intelligence_agent.py",
          "line_count": 1091,
          "size_category": "huge"
        },
        {
          "file": "enhanced_self_healing_verifier.py",
          "line_count": 512,
          "size_category": "huge"
        },
        {
          "file": "enhance_analytics.py",
          "line_count": 466,
          "size_category": "large"
        },
        {
          "file": "enhance_auto_generated_tests.py",
          "line_count": 349,
          "size_category": "large"
        },
        {
          "file": "enhance_missing_robust_systems.py",
          "line_count": 1247,
          "size_category": "huge"
        },
        {
          "file": "final_archive_sweep.py",
          "line_count": 295,
          "size_category": "medium"
        },
        {
          "file": "final_integration_fix.py",
          "line_count": 289,
          "size_category": "medium"
        },
        {
          "file": "fix_all_integration_systems.py",
          "line_count": 246,
          "size_category": "medium"
        },
        {
          "file": "fix_enhanced_test_imports.py",
          "line_count": 230,
          "size_category": "medium"
        },
        {
          "file": "fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "fix_integration_tests.py",
          "line_count": 249,
          "size_category": "medium"
        },
        {
          "file": "fix_tests_for_real_modules.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "independent_test_verifier.py",
          "line_count": 215,
          "size_category": "medium"
        },
        {
          "file": "integration_test_generator.py",
          "line_count": 572,
          "size_category": "huge"
        },
        {
          "file": "intelligent_test_builder_v2.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "layer3_integration_example.py",
          "line_count": 522,
          "size_category": "huge"
        },
        {
          "file": "live_code_quality_monitor.py",
          "line_count": 1045,
          "size_category": "huge"
        },
        {
          "file": "llm_analysis_monitor.py",
          "line_count": 729,
          "size_category": "huge"
        },
        {
          "file": "parallel_converter.py",
          "line_count": 311,
          "size_category": "large"
        },
        {
          "file": "parallel_converter_fixed.py",
          "line_count": 352,
          "size_category": "large"
        },
        {
          "file": "performance_profiler.py",
          "line_count": 634,
          "size_category": "huge"
        },
        {
          "file": "realtime_metrics_collector.py",
          "line_count": 614,
          "size_category": "huge"
        },
        {
          "file": "real_time_monitor.py",
          "line_count": 563,
          "size_category": "huge"
        },
        {
          "file": "replace_stubs_with_archive_implementations.py",
          "line_count": 292,
          "size_category": "medium"
        },
        {
          "file": "restored_asyncio_4.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "restored_asyncio_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_asyncio_6.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "restored_json_4.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "restored_json_5.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "restored_json_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_logging_4.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "restored_logging_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_logging_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_os_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_random_6.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "restored_sys_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_threading_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_threading_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_time_4.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "restored_time_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_time_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_uuid_4.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "restored_uuid_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_uuid_6.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "restore_archive_robust.py",
          "line_count": 1537,
          "size_category": "huge"
        },
        {
          "file": "restore_missing_methods.py",
          "line_count": 535,
          "size_category": "huge"
        },
        {
          "file": "restore_real_implementations.py",
          "line_count": 163,
          "size_category": "medium"
        },
        {
          "file": "risk_based_test_targeter.py",
          "line_count": 884,
          "size_category": "huge"
        },
        {
          "file": "simple_web_monitor.py",
          "line_count": 191,
          "size_category": "medium"
        },
        {
          "file": "specialized_test_generators.py",
          "line_count": 816,
          "size_category": "huge"
        },
        {
          "file": "start_monitoring.py",
          "line_count": 264,
          "size_category": "medium"
        },
        {
          "file": "testmaster_orchestrator.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "test_after_refactor.py",
          "line_count": 255,
          "size_category": "medium"
        },
        {
          "file": "test_agent_qa_integration.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "test_agent_qa_system.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "test_async_processing.py",
          "line_count": 407,
          "size_category": "large"
        },
        {
          "file": "test_backend_health.py",
          "line_count": 419,
          "size_category": "large"
        },
        {
          "file": "test_before_refactor.py",
          "line_count": 331,
          "size_category": "large"
        },
        {
          "file": "test_complexity_prioritizer.py",
          "line_count": 690,
          "size_category": "huge"
        },
        {
          "file": "test_config_intelligence.py",
          "line_count": 133,
          "size_category": "small"
        },
        {
          "file": "test_dependency_orderer.py",
          "line_count": 687,
          "size_category": "huge"
        },
        {
          "file": "test_enhanced_core_integration.py",
          "line_count": 324,
          "size_category": "large"
        },
        {
          "file": "test_enhancements.py",
          "line_count": 397,
          "size_category": "large"
        },
        {
          "file": "test_exhaustive_features.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "test_final_integration.py",
          "line_count": 204,
          "size_category": "medium"
        },
        {
          "file": "test_flow_optimizer_system.py",
          "line_count": 609,
          "size_category": "huge"
        },
        {
          "file": "test_hierarchical_planning_complete.py",
          "line_count": 200,
          "size_category": "medium"
        },
        {
          "file": "test_integration_systems.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "test_intelligence_integration.py",
          "line_count": 462,
          "size_category": "large"
        },
        {
          "file": "test_multi_objective_optimization.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "test_performance_dashboard_integration.py",
          "line_count": 309,
          "size_category": "large"
        },
        {
          "file": "test_phase1_integration.py",
          "line_count": 274,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_integration.py",
          "line_count": 255,
          "size_category": "medium"
        },
        {
          "file": "test_phase3_complete.py",
          "line_count": 347,
          "size_category": "large"
        },
        {
          "file": "test_phase3_deployment.py",
          "line_count": 191,
          "size_category": "medium"
        },
        {
          "file": "test_reporting_system.py",
          "line_count": 423,
          "size_category": "large"
        },
        {
          "file": "test_security_full_integration.py",
          "line_count": 530,
          "size_category": "huge"
        },
        {
          "file": "test_streaming_generation.py",
          "line_count": 432,
          "size_category": "large"
        },
        {
          "file": "test_streaming_simple.py",
          "line_count": 164,
          "size_category": "medium"
        },
        {
          "file": "test_tot_integration.py",
          "line_count": 165,
          "size_category": "medium"
        },
        {
          "file": "test_unified_integration.py",
          "line_count": 249,
          "size_category": "medium"
        },
        {
          "file": "test_universal_ast_system.py",
          "line_count": 579,
          "size_category": "huge"
        },
        {
          "file": "test_universal_language_detector.py",
          "line_count": 693,
          "size_category": "huge"
        },
        {
          "file": "turbo_converter.py",
          "line_count": 264,
          "size_category": "medium"
        },
        {
          "file": "unified_orchestration_example.py",
          "line_count": 407,
          "size_category": "large"
        },
        {
          "file": "unified_security_scanner.py",
          "line_count": 1124,
          "size_category": "huge"
        },
        {
          "file": "utility_analysis_report.py",
          "line_count": 405,
          "size_category": "large"
        },
        {
          "file": "validate_api_endpoints.py",
          "line_count": 787,
          "size_category": "huge"
        },
        {
          "file": "validate_phase_1_7.py",
          "line_count": 186,
          "size_category": "medium"
        },
        {
          "file": "web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "week_5_8_batch_converter.py",
          "line_count": 331,
          "size_category": "large"
        },
        {
          "file": "week_7_8_converter.py",
          "line_count": 350,
          "size_category": "large"
        },
        {
          "file": "write_real_tests.py",
          "line_count": 248,
          "size_category": "medium"
        },
        {
          "file": "agents\\__init__.py",
          "line_count": 48,
          "size_category": "tiny"
        },
        {
          "file": "agents\\roles\\test_architect.py",
          "line_count": 945,
          "size_category": "huge"
        },
        {
          "file": "agents\\roles\\test_engineer.py",
          "line_count": 917,
          "size_category": "huge"
        },
        {
          "file": "agents\\team\\testing_team.py",
          "line_count": 429,
          "size_category": "large"
        },
        {
          "file": "agents\\team\\__init__.py",
          "line_count": 25,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\anomaly_detection\\anomaly_detection_analyzer.py",
          "line_count": 882,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\business_analysis\\business_rule_analysis_wrapper.py",
          "line_count": 70,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\cognitive_load\\cognitive_load_analyzer.py",
          "line_count": 1113,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\debt_analysis\\technical_debt_analysis_wrapper.py",
          "line_count": 68,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\energy_analysis\\energy_consumption_analysis_wrapper.py",
          "line_count": 68,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprogramming_analysis_wrapper.py",
          "line_count": 68,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_code_analysis_wrapper.py",
          "line_count": 257,
          "size_category": "medium"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_core_analyzer.py",
          "line_count": 397,
          "size_category": "large"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_data_analyzer.py",
          "line_count": 513,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_tensor_analyzer.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "analysis\\comprehensive_analysis\\pattern_mining\\cross_repo_pattern_miner.py",
          "line_count": 1142,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\realtime_analysis\\realtime_ast_engine.py",
          "line_count": 974,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py",
          "line_count": 1038,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_analysis_wrapper.py",
          "line_count": 68,
          "size_category": "small"
        },
        {
          "file": "analytics\\failure_analyzer.py",
          "line_count": 661,
          "size_category": "huge"
        },
        {
          "file": "api\\orchestration_api.py",
          "line_count": 447,
          "size_category": "large"
        },
        {
          "file": "api\\orchestration_flask.py",
          "line_count": 475,
          "size_category": "large"
        },
        {
          "file": "api\\phase2_api.py",
          "line_count": 531,
          "size_category": "huge"
        },
        {
          "file": "api\\phase3_api.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "archive\\advanced_testing_intelligence.py",
          "line_count": 770,
          "size_category": "huge"
        },
        {
          "file": "archive\\coverage_analyzer_original_2697_lines.py",
          "line_count": 2698,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_business_rule_analysis_original.py",
          "line_count": 1213,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "line_count": 1188,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "line_count": 1206,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_ml_code_analysis_original.py",
          "line_count": 1249,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_semantic_analysis_original.py",
          "line_count": 1244,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_technical_debt_analysis_original.py",
          "line_count": 1301,
          "size_category": "huge"
        },
        {
          "file": "archive\\integration_hub_original_20250820_220939.py",
          "line_count": 1877,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_energy_consumption_analysis.py",
          "line_count": 1188,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_metaprogramming_analysis.py",
          "line_count": 1206,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_ml_code_analysis.py",
          "line_count": 1249,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_technical_debt_analysis.py",
          "line_count": 1301,
          "size_category": "huge"
        },
        {
          "file": "archive\\20250818\\web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_batch_processor.py",
          "line_count": 495,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "line_count": 577,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_compressor.py",
          "line_count": 471,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "line_count": 893,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "line_count": 1290,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "line_count": 661,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_flow_monitor.py",
          "line_count": 579,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "line_count": 703,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "line_count": 899,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "line_count": 1192,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "line_count": 835,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "line_count": 850,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "line_count": 694,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
          "line_count": 498,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "line_count": 723,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "line_count": 680,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "line_count": 674,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "line_count": 1142,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "line_count": 2698,
          "size_category": "huge"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_enhanced_test_imports.py",
          "line_count": 230,
          "size_category": "medium"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_tests_for_real_modules.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\accelerated_converter.py",
          "line_count": 256,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\achieve_100_percent.py",
          "line_count": 262,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\achieve_100_percent_coverage.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\convert_batch_small.py",
          "line_count": 150,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\convert_with_genai_sdk.py",
          "line_count": 182,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\convert_with_generativeai.py",
          "line_count": 161,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\data_flow_tests.py",
          "line_count": 797,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\diagnose_final_five.py",
          "line_count": 201,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
          "line_count": 428,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\enhanced_self_healing_verifier.py",
          "line_count": 512,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\enhance_auto_generated_tests.py",
          "line_count": 349,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\fast_converter.py",
          "line_count": 136,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\final_five_converter.py",
          "line_count": 154,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\fix_enhanced_test_imports.py",
          "line_count": 230,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\fix_remaining_issues.py",
          "line_count": 398,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\fix_tests_for_real_modules.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\fix_test_infrastructure.py",
          "line_count": 338,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\gemini_powered_test_generator.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\gemini_test_generator.py",
          "line_count": 490,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\generate_coverage_sequential.py",
          "line_count": 268,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\independent_test_verifier.py",
          "line_count": 215,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\integration_test_generator.py",
          "line_count": 572,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\integration_test_matrix.py",
          "line_count": 1159,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\intelligent_converter.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\intelligent_test_builder_v2.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\parallel_converter.py",
          "line_count": 311,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\parallel_converter_fixed.py",
          "line_count": 352,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\parallel_converter_working.py",
          "line_count": 297,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\parallel_coverage_converter.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\parallel_coverage_converter_fixed.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\quick_coverage_boost.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\run_limited_coverage.py",
          "line_count": 49,
          "size_category": "tiny"
        },
        {
          "file": "archive\\legacy_scripts\\self_healing_converter.py",
          "line_count": 384,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\simple_100_percent.py",
          "line_count": 146,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\simple_test_generator.py",
          "line_count": 182,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\specialized_test_generators.py",
          "line_count": 816,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\test_gemini_api.py",
          "line_count": 88,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\test_gemini_config.py",
          "line_count": 148,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\test_gemini_correct.py",
          "line_count": 115,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\test_single_api_call.py",
          "line_count": 174,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\test_single_generation.py",
          "line_count": 134,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\test_updated_prompt.py",
          "line_count": 174,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\turbo_converter.py",
          "line_count": 264,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\week_5_8_batch_converter.py",
          "line_count": 331,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\week_7_8_converter.py",
          "line_count": 350,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\working_test_generator.py",
          "line_count": 136,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\write_real_tests.py",
          "line_count": 248,
          "size_category": "medium"
        },
        {
          "file": "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "line_count": 1376,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "line_count": 1750,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\business_analyzer_original.py",
          "line_count": 1266,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "line_count": 1547,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "line_count": 953,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "line_count": 1877,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\accelerated_converter.py",
          "line_count": 256,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\convert_batch_small.py",
          "line_count": 150,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\convert_with_genai_sdk.py",
          "line_count": 182,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\convert_with_generativeai.py",
          "line_count": 161,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\enhanced_context_aware_test_generator.py",
          "line_count": 428,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\enhanced_self_healing_verifier.py",
          "line_count": 512,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\enhance_auto_generated_tests.py",
          "line_count": 349,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\fix_enhanced_test_imports.py",
          "line_count": 230,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\fix_tests_for_real_modules.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\independent_test_verifier.py",
          "line_count": 215,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\integration_test_generator.py",
          "line_count": 572,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\intelligent_test_builder_v2.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\parallel_converter.py",
          "line_count": 311,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\parallel_converter_fixed.py",
          "line_count": 352,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\specialized_test_generators.py",
          "line_count": 816,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\testmaster_orchestrator.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\turbo_converter.py",
          "line_count": 264,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\week_5_8_batch_converter.py",
          "line_count": 331,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\week_7_8_converter.py",
          "line_count": 350,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\write_real_tests.py",
          "line_count": 248,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\analytics\\failure_analyzer.py",
          "line_count": 661,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\cache\\intelligent_cache.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\config\\testmaster_config.py",
          "line_count": 560,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\dashboard\\quality_dashboard.py",
          "line_count": 603,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\deduplication\\test_deduplicator.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\incremental\\dependency_tracker.py",
          "line_count": 642,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\integration\\cross_module_tester.py",
          "line_count": 859,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\optimization\\execution_optimizer.py",
          "line_count": 648,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\scripts\\achieve_100_percent.py",
          "line_count": 262,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\achieve_100_percent_coverage.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\diagnose_final_five.py",
          "line_count": 201,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\fast_converter.py",
          "line_count": 136,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\final_five_converter.py",
          "line_count": 154,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\fix_remaining_issues.py",
          "line_count": 398,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\fix_test_infrastructure.py",
          "line_count": 338,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\gemini_powered_test_generator.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\gemini_test_generator.py",
          "line_count": 490,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\generate_coverage_sequential.py",
          "line_count": 268,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\intelligent_converter.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\parallel_converter_working.py",
          "line_count": 297,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\parallel_coverage_converter.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\parallel_coverage_converter_fixed.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\quick_coverage_boost.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\run_limited_coverage.py",
          "line_count": 49,
          "size_category": "tiny"
        },
        {
          "file": "archive\\original_backup\\scripts\\self_healing_converter.py",
          "line_count": 384,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\simple_100_percent.py",
          "line_count": 146,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\simple_test_generator.py",
          "line_count": 182,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\test_gemini_api.py",
          "line_count": 88,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\test_gemini_config.py",
          "line_count": 148,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\test_gemini_correct.py",
          "line_count": 115,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\test_single_api_call.py",
          "line_count": 174,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\test_single_generation.py",
          "line_count": 134,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\test_updated_prompt.py",
          "line_count": 174,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\working_test_generator.py",
          "line_count": 136,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\src\\data_flow_tests.py",
          "line_count": 797,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\src\\integration_test_matrix.py",
          "line_count": 1159,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "line_count": 1266,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
          "line_count": 1547,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\api\\enterprise_integration_layer.py",
          "line_count": 1160,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "line_count": 1151,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\coordination\\agent_coordination_protocols.py",
          "line_count": 1311,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\coordination\\resource_coordination_system.py",
          "line_count": 1030,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\coordination\\unified_workflow_orchestrator.py",
          "line_count": 1355,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\documentation\\revolutionary\\neo4j_dominator.py",
          "line_count": 1158,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "line_count": 1294,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\delivery_optimizer.py",
          "line_count": 1276,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\integrity_ml_guardian.py",
          "line_count": 1444,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\performance_optimizer.py",
          "line_count": 1144,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\sla_ml_optimizer.py",
          "line_count": 1627,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\enterprise\\ml_infrastructure_orchestrator.py",
          "line_count": 1117,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "line_count": 1750,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\monitoring\\performance_optimization_engine.py",
          "line_count": 1124,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\validation\\integration_test_suite.py",
          "line_count": 1062,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\validation\\system_validation_framework.py",
          "line_count": 1295,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "line_count": 618,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\enhanced_monitor.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "line_count": 610,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "line_count": 1051,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "line_count": 1201,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "line_count": 859,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "line_count": 618,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "line_count": 1287,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "line_count": 1302,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "line_count": 768,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
          "line_count": 991,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase4_archive\\replaced_code\\enhanced_monitor_20250819_195132.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase5_archive\\replaced_code\\agent_graph_20250819_195602.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "archive\\phase5_archive\\replaced_code\\enterprise_deployment_20250819_195602.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase5_archive\\replaced_code\\testing_team_20250819_195602.py",
          "line_count": 429,
          "size_category": "large"
        },
        {
          "file": "archive\\phase6_archive\\replaced_code\\agent_graph_20250819_200928.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase7_archive\\replaced_code\\enhanced_monitor_20250819_202006.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
          "line_count": 991,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
          "line_count": 991,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "cache\\intelligent_cache.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "config\\testmaster_config.py",
          "line_count": 560,
          "size_category": "huge"
        },
        {
          "file": "config\\yaml_config_enhancer.py",
          "line_count": 633,
          "size_category": "huge"
        },
        {
          "file": "core\\feature_flags.py",
          "line_count": 438,
          "size_category": "large"
        },
        {
          "file": "core\\framework_abstraction.py",
          "line_count": 604,
          "size_category": "huge"
        },
        {
          "file": "core\\framework_abstraction.stub_backup.py",
          "line_count": 361,
          "size_category": "large"
        },
        {
          "file": "core\\shared_state.py",
          "line_count": 610,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\__init__.py",
          "line_count": 541,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\business_analyzer_modular.py",
          "line_count": 343,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\business_base.py",
          "line_count": 251,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\business_constraint_analyzer.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\business_rule_extractor.py",
          "line_count": 360,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\business_workflow_analyzer.py",
          "line_count": 351,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_analyzer_modular.py",
          "line_count": 282,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_base.py",
          "line_count": 197,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_code_analyzer.py",
          "line_count": 248,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_quantifier.py",
          "line_count": 338,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_test_analyzer.py",
          "line_count": 306,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\ml_analyzer.py",
          "line_count": 777,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\ml_code_analyzer.py",
          "line_count": 573,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_analyzer.py",
          "line_count": 953,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_analyzer_modular.py",
          "line_count": 259,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_base.py",
          "line_count": 252,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_intent_analyzer.py",
          "line_count": 327,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_pattern_detector.py",
          "line_count": 307,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_relationship_analyzer.py",
          "line_count": 372,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\technical_debt_analyzer.py",
          "line_count": 574,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\__init__.py",
          "line_count": 496,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py",
          "line_count": 477,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analytics\\advanced_anomaly_detector.py",
          "line_count": 299,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analytics\\analytics_deduplication.py",
          "line_count": 940,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\analytics_hub.py",
          "line_count": 641,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\predictive_analytics_engine.py",
          "line_count": 652,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\__init__.py",
          "line_count": 799,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\advanced\\correlation_engine.py",
          "line_count": 589,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\api\\endpoints.py",
          "line_count": 583,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\api\\intelligence_api.py",
          "line_count": 100,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\api\\unified_api_gateway.py",
          "line_count": 926,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\api\\__init__.py",
          "line_count": 138,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\base\\__init__.py",
          "line_count": 571,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\caching\\distributed_smart_cache.py",
          "line_count": 743,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\compatibility\\__init__.py",
          "line_count": 600,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\config\\enterprise_config_manager.py",
          "line_count": 864,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\coordination\\cross_agent_bridge.py",
          "line_count": 907,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\coordination\\service_discovery_registry.py",
          "line_count": 702,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\correlation\\cross_system_analytics.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\dashboard\\intelligence_backend.py",
          "line_count": 412,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\data_pipeline\\advanced_data_pipeline.py",
          "line_count": 717,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\adaptive_template_system.py",
          "line_count": 613,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\agency_swarm_analyzer.py",
          "line_count": 181,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\documentation\\auto_api_docs_generator.py",
          "line_count": 708,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\bilingual_docs_processor.py",
          "line_count": 548,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\comprehensive_visualization_engine.py",
          "line_count": 828,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\cookbook_organization_manager.py",
          "line_count": 648,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\design_first_docs.py",
          "line_count": 739,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\docs_testing_framework.py",
          "line_count": 639,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise_api_docs.py",
          "line_count": 744,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\faq_system.py",
          "line_count": 522,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\hierarchical_docs_organizer.py",
          "line_count": 637,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\interactive_docs_system.py",
          "line_count": 739,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\json_docs_processor.py",
          "line_count": 977,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\knowledge_management_framework.py",
          "line_count": 1022,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\master_documentation_orchestrator.py",
          "line_count": 912,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\mdx_generator.py",
          "line_count": 217,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\documentation\\migration_guide_generator.py",
          "line_count": 516,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\multilingual_docs.py",
          "line_count": 468,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\multimodal_recipe_engine.py",
          "line_count": 701,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\multi_agent_pattern_docs.py",
          "line_count": 727,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\phase_1_7_integration.py",
          "line_count": 351,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\production_ready_docs.py",
          "line_count": 886,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\quality_assessment_engine.py",
          "line_count": 552,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\recipe_based_learning.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\service_oriented_arch_docs.py",
          "line_count": 768,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\swarms_auto_generation_adapter.py",
          "line_count": 384,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\swarms_doc_intelligence_extractor.py",
          "line_count": 258,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\documentation\\swarms_navigation_intelligence.py",
          "line_count": 453,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\swarms_self_healing_docs.py",
          "line_count": 517,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\tracking_integration_docs.py",
          "line_count": 591,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\tutorial_grid_system.py",
          "line_count": 729,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\tutorial_system.py",
          "line_count": 438,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\unified_doc_generator.py",
          "line_count": 568,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\ux_excellence_framework.py",
          "line_count": 1044,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\workflow_recipe_docs.py",
          "line_count": 796,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\yaml_config_processor.py",
          "line_count": 634,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise\\documentation_validator.py",
          "line_count": 249,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise\\enterprise_doc_orchestrator.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise\\workflow_automation.py",
          "line_count": 562,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\metrics.py",
          "line_count": 332,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\optimizer.py",
          "line_count": 619,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\ai_documentation_synthesizer.py",
          "line_count": 706,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\interactive_chat_interface.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\living_documentation_engine.py",
          "line_count": 664,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\api_orchestrator.py",
          "line_count": 577,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\integration_validator.py",
          "line_count": 234,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\enterprise\\reporting_engine.py",
          "line_count": 635,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\api\\endpoint_manager.py",
          "line_count": 652,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\api\\request_router.py",
          "line_count": 580,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\integration\\base.py",
          "line_count": 161,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\integration\\__init__.py",
          "line_count": 563,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\integration\\components\\cross_system_analyzer.py",
          "line_count": 576,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\integration\\components\\endpoint_manager.py",
          "line_count": 438,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\integration\\components\\event_processor.py",
          "line_count": 458,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\integration\\components\\performance_monitor.py",
          "line_count": 575,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\code_knowledge_graph_engine.py",
          "line_count": 369,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\instant_graph_engine.py",
          "line_count": 465,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\visual_relationship_mapper.py",
          "line_count": 440,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\gpu_accelerator.py",
          "line_count": 400,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\integration_analysis.py",
          "line_count": 474,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\ml_orchestrator.py",
          "line_count": 701,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\pattern_detector.py",
          "line_count": 188,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\adaptive_configuration_manager.py",
          "line_count": 693,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\adaptive_load_balancer.py",
          "line_count": 600,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\anomaly_detection.py",
          "line_count": 525,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\batch_processor.py",
          "line_count": 856,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\distributed_ml_coordinator.py",
          "line_count": 779,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\ensemble_meta_learner.py",
          "line_count": 340,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\intelligent_data_pipeline.py",
          "line_count": 791,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\intelligent_resource_scheduler.py",
          "line_count": 743,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\ml_network_optimizer.py",
          "line_count": 697,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\performance_execution_manager.py",
          "line_count": 415,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\performance_ml_engine.py",
          "line_count": 913,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\predictive_engine.py",
          "line_count": 850,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\predictive_maintenance_ai.py",
          "line_count": 810,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\smart_cache.py",
          "line_count": 593,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\telemetry_export_manager.py",
          "line_count": 604,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\telemetry_observability_engine.py",
          "line_count": 633,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\watchdog_ml_monitor.py",
          "line_count": 546,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\watchdog_process_manager.py",
          "line_count": 646,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\watchdog_recovery_system.py",
          "line_count": 642,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\__init__.py",
          "line_count": 21,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\ml\\enterprise\\ml_auto_scaling.py",
          "line_count": 876,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
          "line_count": 756,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\monitoring\\agent_qa_modular.py",
          "line_count": 243,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\monitoring\\enterprise_performance_monitor.py",
          "line_count": 817,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\monitoring\\qa_base.py",
          "line_count": 208,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\monitoring\\qa_monitor.py",
          "line_count": 257,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\monitoring\\qa_scorer.py",
          "line_count": 255,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\monitoring\\__init__.py",
          "line_count": 99,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\orchestration\\cross_system_orchestrator.py",
          "line_count": 982,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\orchestration\\integration_hub.py",
          "line_count": 711,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\queuing\\express_priority_queue.py",
          "line_count": 516,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\reliability\\enterprise_error_recovery.py",
          "line_count": 890,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\reliability\\quantum_retry_strategies.py",
          "line_count": 332,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\advanced_security_intelligence.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\audit_logger.py",
          "line_count": 266,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\code_vulnerability_scanner.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\compliance_checker.py",
          "line_count": 422,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\audit\\audit_events.py",
          "line_count": 255,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\audit\\audit_storage.py",
          "line_count": 287,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\compliance_automation.py",
          "line_count": 470,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\enterprise_security_monitor.py",
          "line_count": 400,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\governance_framework.py",
          "line_count": 548,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\security_intelligence.py",
          "line_count": 599,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\security_validator.py",
          "line_count": 443,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\intelligence\\threat_detector.py",
          "line_count": 806,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\validation\\compliance_validator.py",
          "line_count": 562,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\validation\\integration_validator.py",
          "line_count": 592,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\validation\\penetration_tester.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\streaming\\event_streaming_engine.py",
          "line_count": 815,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\automation_engine.py",
          "line_count": 597,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\chaos_engineer.py",
          "line_count": 400,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\contract_tester.py",
          "line_count": 352,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\flaky_test_detector.py",
          "line_count": 492,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\fuzzer.py",
          "line_count": 346,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\load_generator.py",
          "line_count": 454,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\mutation_engine.py",
          "line_count": 285,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\testing\\property_tester.py",
          "line_count": 307,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\regression_detector.py",
          "line_count": 417,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\security_fuzzer.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\testing_api.py",
          "line_count": 481,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\test_orchestrator.py",
          "line_count": 391,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\test_quality_scorer.py",
          "line_count": 405,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\test_selector.py",
          "line_count": 388,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\__init__.py",
          "line_count": 457,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
          "line_count": 543,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\universal_ai_generator.py",
          "line_count": 472,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\__init__.py",
          "line_count": 56,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\testing\\automation\\continuous_testing_engine.py",
          "line_count": 547,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\automation\\enterprise_test_orchestrator.py",
          "line_count": 727,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\components\\coverage_analyzer.py",
          "line_count": 1101,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\components\\execution_engine.py",
          "line_count": 382,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\components\\integration_generator.py",
          "line_count": 749,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\components\\ml_optimizer.py",
          "line_count": 751,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\enterprise\\quality_gate_automation.py",
          "line_count": 742,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\security\\advanced_owasp_tester.py",
          "line_count": 913,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\security\\api_security_tester.py",
          "line_count": 532,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\security\\compliance_validator.py",
          "line_count": 663,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\visualization\\agent_interface_systems.py",
          "line_count": 394,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\dashboard_systems.py",
          "line_count": 377,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\data_visualization_engines.py",
          "line_count": 437,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\development_tools_ui.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\observability_systems.py",
          "line_count": 427,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\user_experience_frameworks.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\__init__.py",
          "line_count": 222,
          "size_category": "medium"
        },
        {
          "file": "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "line_count": 1891,
          "size_category": "huge"
        },
        {
          "file": "core\\orchestration\\agent_graph.py",
          "line_count": 501,
          "size_category": "huge"
        },
        {
          "file": "core\\reliability\\emergency_backup_recovery.py",
          "line_count": 824,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\adaptive_fallback_orchestrator.py",
          "line_count": 677,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\adaptive_security_resilience.py",
          "line_count": 748,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\agent_communication_security.py",
          "line_count": 355,
          "size_category": "large"
        },
        {
          "file": "core\\security\\api_security_layer.py",
          "line_count": 380,
          "size_category": "large"
        },
        {
          "file": "core\\security\\byzantine_consensus_security.py",
          "line_count": 637,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\circuit_breaker_matrix.py",
          "line_count": 630,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\cloud_event_security.py",
          "line_count": 523,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\compliance_framework.py",
          "line_count": 1115,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\configuration_security.py",
          "line_count": 441,
          "size_category": "large"
        },
        {
          "file": "core\\security\\container_security_validator.py",
          "line_count": 628,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\data_integrity_guardian.py",
          "line_count": 710,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\deployment_pipeline_security.py",
          "line_count": 863,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\distributed_agent_registry.py",
          "line_count": 399,
          "size_category": "large"
        },
        {
          "file": "core\\security\\distributed_communication_security.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\distributed_key_management_security.py",
          "line_count": 678,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\document_classification_security.py",
          "line_count": 691,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\enterprise_audit_logging.py",
          "line_count": 516,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\enterprise_authentication.py",
          "line_count": 754,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\enterprise_auth_gateway.py",
          "line_count": 590,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\error_isolation_system.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\exception_monitoring.py",
          "line_count": 498,
          "size_category": "large"
        },
        {
          "file": "core\\security\\fault_tolerance_engine.py",
          "line_count": 705,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\flow_persistence_security.py",
          "line_count": 698,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\graceful_degradation_manager.py",
          "line_count": 699,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\health_monitoring_nexus.py",
          "line_count": 664,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\identity_validation_system.py",
          "line_count": 370,
          "size_category": "large"
        },
        {
          "file": "core\\security\\multi_agent_access_control.py",
          "line_count": 801,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\multi_agent_evaluation_security.py",
          "line_count": 677,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\network_security_controls.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\quantum_retry_engine.py",
          "line_count": 616,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\rate_limiter.py",
          "line_count": 333,
          "size_category": "large"
        },
        {
          "file": "core\\security\\resilience_orchestrator.py",
          "line_count": 681,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\retry_mechanism_system.py",
          "line_count": 655,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\secure_message_delivery.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\secure_performance_optimizer.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\security_monitoring_system.py",
          "line_count": 760,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\self_healing_coordinator.py",
          "line_count": 698,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\service_mesh_security.py",
          "line_count": 596,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\thread_safety_manager.py",
          "line_count": 411,
          "size_category": "large"
        },
        {
          "file": "core\\security\\threat_intelligence_system.py",
          "line_count": 881,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\vulnerability_detection_framework.py",
          "line_count": 716,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\__init__.py",
          "line_count": 596,
          "size_category": "huge"
        },
        {
          "file": "core\\state\\enhanced_state_manager.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\adaptive_testing_framework.py",
          "line_count": 1012,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\agent_reasoning_testing.py",
          "line_count": 564,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\collaborative_testing_platform.py",
          "line_count": 1224,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\competitive_analysis_framework.py",
          "line_count": 455,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\enterprise_test_framework.py",
          "line_count": 739,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\flow_testing.py",
          "line_count": 743,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\graph_index_testing.py",
          "line_count": 1103,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\graph_operations_testing.py",
          "line_count": 1063,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\hook_testing.py",
          "line_count": 951,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\integration_test_framework.py",
          "line_count": 489,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\langgraph_supervisor_testing.py",
          "line_count": 693,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\multimodal_validation_testing.py",
          "line_count": 643,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\multi_modal_test_engine.py",
          "line_count": 1208,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\parallel_test_executor.py",
          "line_count": 526,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\performance_test_suite.py",
          "line_count": 462,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\repository_intelligence_aggregator.py",
          "line_count": 970,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\response_validation_testing.py",
          "line_count": 440,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\run_all_tests.py",
          "line_count": 389,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\session_testing.py",
          "line_count": 877,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\supercharged_test_generator.py",
          "line_count": 443,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\supercharged_test_generator.py_stub_backup_20250821_042438.py",
          "line_count": 557,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\task_guardrails_testing.py",
          "line_count": 768,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\test_integration_hub.py",
          "line_count": 601,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\test_multi_language_superiority.py",
          "line_count": 363,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\test_zero_setup_domination.py",
          "line_count": 380,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\tool_factory_testing.py",
          "line_count": 643,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\tracing_testing.py",
          "line_count": 1157,
          "size_category": "huge"
        },
        {
          "file": "core\\tools\\concrete_tools.py",
          "line_count": 472,
          "size_category": "large"
        },
        {
          "file": "core\\tools\\type_safe_tools.py",
          "line_count": 471,
          "size_category": "large"
        },
        {
          "file": "dashboard\\automated_frontend_tester.py",
          "line_count": 651,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\comprehensive_frontend_test.py",
          "line_count": 285,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\gunicorn_config.py",
          "line_count": 49,
          "size_category": "tiny"
        },
        {
          "file": "dashboard\\quality_dashboard.py",
          "line_count": 603,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\server.py",
          "line_count": 548,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\test_api_endpoints.py",
          "line_count": 224,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\test_final_enhancements.py",
          "line_count": 863,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\test_frontend_automated.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "dashboard\\test_frontend_integration.py",
          "line_count": 772,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\test_multi_agent_integration.py",
          "line_count": 961,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\test_new_robustness_features.py",
          "line_count": 396,
          "size_category": "large"
        },
        {
          "file": "dashboard\\test_robustness_verification.py",
          "line_count": 320,
          "size_category": "large"
        },
        {
          "file": "dashboard\\test_ultra_reliability.py",
          "line_count": 1049,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\wsgi.py",
          "line_count": 89,
          "size_category": "small"
        },
        {
          "file": "dashboard\\api\\backend_health_monitor.py",
          "line_count": 659,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\comprehensive_monitoring.py",
          "line_count": 665,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\crew_orchestration.py",
          "line_count": 812,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\flow_optimization.py",
          "line_count": 662,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\health.py",
          "line_count": 760,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\intelligence.py",
          "line_count": 533,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\orchestration_flask.py",
          "line_count": 475,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\phase2_api.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\real_codebase_scanner.stub_backup.py",
          "line_count": 892,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\security.py",
          "line_count": 514,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\swarm_orchestration.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\websocket_dashboard.py",
          "line_count": 547,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_batch_processor.py",
          "line_count": 495,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_circuit_breaker.py",
          "line_count": 577,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_compressor.py",
          "line_count": 471,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_connectivity_monitor.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_data_sanitizer.py",
          "line_count": 893,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_deduplication.py",
          "line_count": 1290,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_delivery_guarantee.py",
          "line_count": 661,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_delivery_verifier.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_flow_monitor.py",
          "line_count": 579,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_integrity_guardian.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_performance_optimizer.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_persistence.py",
          "line_count": 703,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_priority_queue.py",
          "line_count": 899,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_quantum_retry.py",
          "line_count": 1192,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_rate_limiter.py",
          "line_count": 835,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_receipt_tracker.py",
          "line_count": 850,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_redundancy.py",
          "line_count": 694,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_retry_manager.py",
          "line_count": 498,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_sla_tracker.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_smart_cache.py",
          "line_count": 723,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_telemetry.py",
          "line_count": 680,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_watchdog.py",
          "line_count": 674,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\emergency_backup_recovery.py",
          "line_count": 1309,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\predictive_flow_optimizer.py",
          "line_count": 1077,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\real_data_extractor.py",
          "line_count": 569,
          "size_category": "huge"
        },
        {
          "file": "deduplication\\test_deduplicator.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "deployment\\enterprise_deployment.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "deployment\\service_registry.py",
          "line_count": 446,
          "size_category": "large"
        },
        {
          "file": "deployment\\swarm_orchestrator.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "deployment\\__init__.py",
          "line_count": 52,
          "size_category": "small"
        },
        {
          "file": "incremental\\dependency_tracker.py",
          "line_count": 642,
          "size_category": "huge"
        },
        {
          "file": "integration\\automatic_scaling_system.py",
          "line_count": 1092,
          "size_category": "huge"
        },
        {
          "file": "integration\\automatic_scaling_system_robust.py",
          "line_count": 1051,
          "size_category": "huge"
        },
        {
          "file": "integration\\comprehensive_error_recovery.py",
          "line_count": 1280,
          "size_category": "huge"
        },
        {
          "file": "integration\\comprehensive_error_recovery_robust.py",
          "line_count": 1201,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_module_tester.py",
          "line_count": 859,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_analytics.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_analytics_robust.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_apis.py",
          "line_count": 618,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_apis_robust.py",
          "line_count": 618,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_communication.py",
          "line_count": 327,
          "size_category": "large"
        },
        {
          "file": "integration\\distributed_task_queue.py",
          "line_count": 472,
          "size_category": "large"
        },
        {
          "file": "integration\\intelligent_caching_layer.py",
          "line_count": 1334,
          "size_category": "huge"
        },
        {
          "file": "integration\\intelligent_caching_layer_robust.py",
          "line_count": 1287,
          "size_category": "huge"
        },
        {
          "file": "integration\\load_balancing_system.py",
          "line_count": 543,
          "size_category": "huge"
        },
        {
          "file": "integration\\multi_environment_support.py",
          "line_count": 462,
          "size_category": "large"
        },
        {
          "file": "integration\\predictive_analytics_engine.py",
          "line_count": 1142,
          "size_category": "huge"
        },
        {
          "file": "integration\\predictive_analytics_engine_robust.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "integration\\realtime_performance_monitoring.py",
          "line_count": 1427,
          "size_category": "huge"
        },
        {
          "file": "integration\\realtime_performance_monitoring_robust.py",
          "line_count": 1302,
          "size_category": "huge"
        },
        {
          "file": "integration\\service_mesh_integration.py",
          "line_count": 625,
          "size_category": "huge"
        },
        {
          "file": "integration\\visual_workflow_designer.py",
          "line_count": 768,
          "size_category": "huge"
        },
        {
          "file": "integration\\workflow_execution_engine.py",
          "line_count": 991,
          "size_category": "huge"
        },
        {
          "file": "integration\\workflow_execution_engine_robust.py",
          "line_count": 991,
          "size_category": "huge"
        },
        {
          "file": "integration\\workflow_framework.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "monitoring\\enhanced_monitor_separate.py",
          "line_count": 573,
          "size_category": "huge"
        },
        {
          "file": "observability\\__init__.py",
          "line_count": 170,
          "size_category": "medium"
        },
        {
          "file": "optimization\\execution_optimizer.py",
          "line_count": 648,
          "size_category": "huge"
        },
        {
          "file": "orchestration\\unified_orchestrator.py",
          "line_count": 1279,
          "size_category": "huge"
        },
        {
          "file": "prioritization\\test_prioritizer.py",
          "line_count": 767,
          "size_category": "huge"
        },
        {
          "file": "scripts\\achieve_100_percent.py",
          "line_count": 262,
          "size_category": "medium"
        },
        {
          "file": "scripts\\achieve_100_percent_coverage.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "scripts\\api_documenter.py",
          "line_count": 585,
          "size_category": "huge"
        },
        {
          "file": "scripts\\dependency_analyzer.py",
          "line_count": 436,
          "size_category": "large"
        },
        {
          "file": "scripts\\diagnose_final_five.py",
          "line_count": 201,
          "size_category": "medium"
        },
        {
          "file": "scripts\\fast_converter.py",
          "line_count": 136,
          "size_category": "small"
        },
        {
          "file": "scripts\\final_five_converter.py",
          "line_count": 154,
          "size_category": "medium"
        },
        {
          "file": "scripts\\fix_remaining_issues.py",
          "line_count": 398,
          "size_category": "large"
        },
        {
          "file": "scripts\\fix_test_infrastructure.py",
          "line_count": 338,
          "size_category": "large"
        },
        {
          "file": "scripts\\gemini_powered_test_generator.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "scripts\\gemini_test_generator.py",
          "line_count": 490,
          "size_category": "large"
        },
        {
          "file": "scripts\\generate_coverage_sequential.py",
          "line_count": 268,
          "size_category": "medium"
        },
        {
          "file": "scripts\\intelligent_converter.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "scripts\\parallel_converter_working.py",
          "line_count": 297,
          "size_category": "medium"
        },
        {
          "file": "scripts\\parallel_coverage_converter.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "scripts\\parallel_coverage_converter_fixed.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "scripts\\quick_coverage_boost.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "scripts\\run_limited_coverage.py",
          "line_count": 49,
          "size_category": "tiny"
        },
        {
          "file": "scripts\\self_healing_converter.py",
          "line_count": 384,
          "size_category": "large"
        },
        {
          "file": "scripts\\simple_100_percent.py",
          "line_count": 146,
          "size_category": "small"
        },
        {
          "file": "scripts\\simple_test_generator.py",
          "line_count": 182,
          "size_category": "medium"
        },
        {
          "file": "scripts\\test_gemini_api.py",
          "line_count": 88,
          "size_category": "small"
        },
        {
          "file": "scripts\\test_gemini_config.py",
          "line_count": 148,
          "size_category": "small"
        },
        {
          "file": "scripts\\test_gemini_correct.py",
          "line_count": 115,
          "size_category": "small"
        },
        {
          "file": "scripts\\test_single_api_call.py",
          "line_count": 174,
          "size_category": "medium"
        },
        {
          "file": "scripts\\test_single_generation.py",
          "line_count": 134,
          "size_category": "small"
        },
        {
          "file": "scripts\\test_updated_prompt.py",
          "line_count": 174,
          "size_category": "medium"
        },
        {
          "file": "scripts\\working_test_generator.py",
          "line_count": 136,
          "size_category": "small"
        },
        {
          "file": "src\\data_flow_tests.py",
          "line_count": 797,
          "size_category": "huge"
        },
        {
          "file": "src\\integration_test_matrix.py",
          "line_count": 1159,
          "size_category": "huge"
        },
        {
          "file": "state\\unified_state_manager.py",
          "line_count": 985,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\layer2_integration.py",
          "line_count": 519,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\main.py",
          "line_count": 377,
          "size_category": "large"
        },
        {
          "file": "testmaster\\__init__.py",
          "line_count": 68,
          "size_category": "small"
        },
        {
          "file": "testmaster\\agent_qa\\scoring_system.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "testmaster\\agent_qa\\__init__.py",
          "line_count": 216,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\crypto_analysis.py",
          "line_count": 808,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\database_analysis.py",
          "line_count": 1246,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\error_handling_analysis.py",
          "line_count": 1279,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
          "line_count": 911,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\resource_io_analysis.py",
          "line_count": 1350,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\security_analysis.py",
          "line_count": 911,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\supply_chain_security.py",
          "line_count": 755,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\async_processing\\concurrent_scheduler.py",
          "line_count": 621,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\async_processing\\thread_pool_manager.py",
          "line_count": 637,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\async_processing\\__init__.py",
          "line_count": 136,
          "size_category": "small"
        },
        {
          "file": "testmaster\\communication\\dynamic_handoff.py",
          "line_count": 675,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\converters\\base.py",
          "line_count": 326,
          "size_category": "large"
        },
        {
          "file": "testmaster\\converters\\batch.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "testmaster\\converters\\intelligent.py",
          "line_count": 527,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\converters\\parallel.py",
          "line_count": 307,
          "size_category": "large"
        },
        {
          "file": "testmaster\\converters\\__init__.py",
          "line_count": 65,
          "size_category": "small"
        },
        {
          "file": "testmaster\\core\\config.py",
          "line_count": 606,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\context_manager.py",
          "line_count": 555,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\exceptions.py",
          "line_count": 26,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\core\\feature_flags.py",
          "line_count": 406,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\layer_manager.py",
          "line_count": 663,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\monitoring_decorators.py",
          "line_count": 318,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\orchestrator.py",
          "line_count": 470,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\tracking_manager.py",
          "line_count": 737,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\workflow_graph.py",
          "line_count": 617,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\ast_abstraction\\language_parsers.py",
          "line_count": 1114,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\ast_abstraction\\universal_ast.py",
          "line_count": 1076,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "line_count": 864,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\framework_abstraction\\test_generator.py",
          "line_count": 571,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\framework_abstraction\\universal_test.py",
          "line_count": 425,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\framework_abstraction\\__init__.py",
          "line_count": 77,
          "size_category": "small"
        },
        {
          "file": "testmaster\\core\\language_detection\\universal_detector.py",
          "line_count": 830,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\flow_optimizer\\execution_router.py",
          "line_count": 372,
          "size_category": "large"
        },
        {
          "file": "testmaster\\flow_optimizer\\parallel_executor.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "testmaster\\flow_optimizer\\__init__.py",
          "line_count": 251,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\generators\\base.py",
          "line_count": 706,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\generators\\intelligent.py",
          "line_count": 589,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\generators\\__init__.py",
          "line_count": 58,
          "size_category": "small"
        },
        {
          "file": "testmaster\\integration\\final_integration_test.py",
          "line_count": 1865,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\__init__.py",
          "line_count": 73,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\event_monitoring_bridge.py",
          "line_count": 1082,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\protocol_communication_bridge.py",
          "line_count": 822,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\session_tracking_bridge.py",
          "line_count": 1111,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\consensus\\agent_coordination.py",
          "line_count": 514,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\consensus\\__init__.py",
          "line_count": 29,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\__init__.py",
          "line_count": 119,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\context_builder.py",
          "line_count": 711,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\doc_generator.py",
          "line_count": 557,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\llm_integration.py",
          "line_count": 630,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\api_doc_generator.py",
          "line_count": 632,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\architecture_doc_generator.py",
          "line_count": 813,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\readme_generator.py",
          "line_count": 657,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\tutorial_generator.py",
          "line_count": 975,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\integrations\\ci_cd_integration.py",
          "line_count": 522,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\integrations\\git_integration.py",
          "line_count": 582,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\integrations\\__init__.py",
          "line_count": 21,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\quality\\style_checker.py",
          "line_count": 1424,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\readme_templates.py",
          "line_count": 2251,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\hierarchical_planning\\llm_integration.py",
          "line_count": 554,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\hierarchical_planning\\unified_integration.py",
          "line_count": 524,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\hierarchical_planning\\__init__.py",
          "line_count": 128,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\integration\\__init__.py",
          "line_count": 106,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\integration\\agents\\documentation_agent.py",
          "line_count": 650,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\coordination\\analysis_coordinator.py",
          "line_count": 740,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\events\\event_system.py",
          "line_count": 249,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\intelligence\\integration\\features\\feature_flags.py",
          "line_count": 730,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\features\\__init__.py",
          "line_count": 13,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\integration\\layers\\layer_manager.py",
          "line_count": 663,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\layers\\__init__.py",
          "line_count": 14,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\integration\\storage\\unified_storage.py",
          "line_count": 738,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\storage\\__init__.py",
          "line_count": 14,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\llm_providers\\provider_implementations.py",
          "line_count": 592,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\llm_providers\\universal_llm_provider.py",
          "line_count": 469,
          "size_category": "large"
        },
        {
          "file": "testmaster\\intelligence\\llm_providers\\__init__.py",
          "line_count": 59,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\adaptive_resource_bridge.py",
          "line_count": 581,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
          "line_count": 1147,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\bottleneck_detection_resolution_agent.py",
          "line_count": 1102,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
          "line_count": 900,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\__init__.py",
          "line_count": 79,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
          "line_count": 1162,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\optimization\\multi_objective_optimizer.py",
          "line_count": 686,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\optimization\\optimization_algorithms.py",
          "line_count": 484,
          "size_category": "large"
        },
        {
          "file": "testmaster\\intelligence\\optimization\\__init__.py",
          "line_count": 78,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\security\\security_intelligence_agent.py",
          "line_count": 935,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\security\\__init__.py",
          "line_count": 29,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\tree_of_thought\\universal_tot_integration.py",
          "line_count": 496,
          "size_category": "large"
        },
        {
          "file": "testmaster\\intelligence\\tree_of_thought\\__init__.py",
          "line_count": 59,
          "size_category": "small"
        },
        {
          "file": "testmaster\\monitoring\\file_watcher.py",
          "line_count": 566,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\monitoring\\test_monitor.py",
          "line_count": 519,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\monitoring\\test_scheduler.py",
          "line_count": 595,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestration\\framework_adapter.py",
          "line_count": 585,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestration\\output_system.py",
          "line_count": 826,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestration\\universal_orchestrator.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestration\\__init__.py",
          "line_count": 54,
          "size_category": "small"
        },
        {
          "file": "testmaster\\orchestrator\\file_tagger.py",
          "line_count": 1030,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\handoff_manager.py",
          "line_count": 1246,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\work_distributor.py",
          "line_count": 796,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\__init__.py",
          "line_count": 35,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\overview\\performance_dashboard.py",
          "line_count": 686,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\regression_tracker.py",
          "line_count": 1375,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\structure_mapper.py",
          "line_count": 1112,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\refactoring\\hierarchical_analyzer.py",
          "line_count": 980,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\reporting\\dashboard_builder.py",
          "line_count": 86,
          "size_category": "small"
        },
        {
          "file": "testmaster\\reporting\\report_generator.py",
          "line_count": 922,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\reporting\\report_scheduler.py",
          "line_count": 85,
          "size_category": "small"
        },
        {
          "file": "testmaster\\reporting\\__init__.py",
          "line_count": 140,
          "size_category": "small"
        },
        {
          "file": "testmaster\\security\\security_test_generator.py",
          "line_count": 777,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\security\\universal_scanner.py",
          "line_count": 823,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\security\\__init__.py",
          "line_count": 53,
          "size_category": "small"
        },
        {
          "file": "testmaster\\streaming\\incremental_enhancer.py",
          "line_count": 562,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\streaming\\stream_generator.py",
          "line_count": 593,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\streaming\\__init__.py",
          "line_count": 137,
          "size_category": "small"
        },
        {
          "file": "testmaster\\telemetry\\telemetry_dashboard.py",
          "line_count": 624,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\ui\\alert_system.py",
          "line_count": 800,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\ui\\dashboard.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\ui\\metrics_display.py",
          "line_count": 672,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\ui\\__init__.py",
          "line_count": 29,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\verification\\base.py",
          "line_count": 396,
          "size_category": "large"
        },
        {
          "file": "testmaster\\verification\\quality.py",
          "line_count": 438,
          "size_category": "large"
        },
        {
          "file": "testmaster\\verification\\self_healing.py",
          "line_count": 508,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\verification\\__init__.py",
          "line_count": 43,
          "size_category": "tiny"
        },
        {
          "file": "tests\\test_phase2_core_validation.py",
          "line_count": 569,
          "size_category": "huge"
        },
        {
          "file": "tests\\test_phase2_e2e_validation.py",
          "line_count": 1091,
          "size_category": "huge"
        },
        {
          "file": "tests\\test_phase2_integration_validation.py",
          "line_count": 677,
          "size_category": "huge"
        },
        {
          "file": "tests\\integration\\test_knowledge_graph_integration.py",
          "line_count": 440,
          "size_category": "large"
        },
        {
          "file": "tools\\migration\\safety_checker.py",
          "line_count": 466,
          "size_category": "large"
        },
        {
          "file": "ui\\nocode_enhancement.py",
          "line_count": 879,
          "size_category": "huge"
        },
        {
          "file": "ui\\unified_dashboard.py",
          "line_count": 1131,
          "size_category": "huge"
        },
        {
          "file": "ui_ux\\agent_verse_ui.py",
          "line_count": 614,
          "size_category": "huge"
        },
        {
          "file": "ui_ux\\interactive_dashboard.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "ui_ux\\studio_interface.py",
          "line_count": 634,
          "size_category": "huge"
        },
        {
          "file": "workflow\\consolidation_workflow.py",
          "line_count": 421,
          "size_category": "large"
        }
      ]
    },
    "analysis": {
      "file_count": 928,
      "total_lines": 512328,
      "scattered_across": 177,
      "directories": [
        "testmaster\\core",
        "core\\intelligence\\documentation\\revolutionary",
        "testmaster\\intelligence\\documentation\\core",
        "ui_ux",
        "core\\intelligence\\integration",
        "core\\intelligence\\security\\audit",
        "testmaster\\async_processing",
        "prioritization",
        "core\\state",
        "core\\intelligence\\documentation\\intelligence\\optimization",
        "observability",
        "archive\\phase1c_consolidation_20250820_150000\\integration",
        "testmaster\\streaming",
        "dashboard\\dashboard_core",
        "core\\intelligence\\visualization",
        "testmaster\\intelligence\\integration\\coordination",
        "testmaster\\overview",
        "core\\intelligence\\documentation",
        "analysis\\comprehensive_analysis\\ml_analysis",
        "core",
        "tests",
        "analysis\\comprehensive_analysis\\pattern_recognition",
        "testmaster\\intelligence\\integration",
        "testmaster\\intelligence\\documentation\\integrations",
        "analysis\\comprehensive_analysis\\energy_analysis",
        "archive\\oversized_modules_20250821_042018\\monitoring",
        "core\\intelligence\\testing\\automation",
        "testmaster\\intelligence\\documentation",
        "core\\intelligence\\testing",
        "core\\intelligence\\testing\\security",
        "archive\\original_backup\\optimization",
        "analysis\\comprehensive_analysis\\anomaly_detection",
        "analysis\\comprehensive_analysis\\workflow_analysis",
        "orchestration",
        "agents\\roles",
        "archive\\original_backup\\scripts",
        "dashboard\\api",
        "core\\intelligence\\documentation\\enterprise",
        "optimization",
        "scripts",
        "core\\intelligence\\testing\\ai_generation",
        "core\\security",
        "archive",
        "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components",
        "core\\intelligence",
        "testmaster\\mapping",
        "observability\\core",
        "config",
        "testmaster\\intelligence\\integration\\events",
        "testmaster",
        ".",
        "testmaster\\intelligence\\monitoring",
        "core\\observability",
        "testmaster\\core\\ast_abstraction",
        "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components",
        "core\\intelligence\\enterprise\\api",
        "testmaster\\analysis\\coverage",
        "testmaster\\analysis\\comprehensive_analysis",
        "agents\\team",
        "integration",
        "archive\\phase7_archive\\replaced_code",
        "deployment",
        "testmaster\\orchestration",
        "testmaster\\orchestrator",
        "api",
        "archive\\original_backup\\analytics",
        "documentation",
        "analysis\\comprehensive_analysis\\business_analysis",
        "core\\intelligence\\security",
        "testmaster\\analysis",
        "analysis\\comprehensive_analysis\\security_monitoring",
        "analytics",
        "core\\intelligence\\knowledge_graph",
        "testmaster\\telemetry",
        "archive\\phase5_archive\\replaced_code",
        "core\\tools",
        "core\\intelligence\\documentation\\intelligence",
        "archive\\placeholder_backups_20250820_011745\\integration",
        "testmaster\\breaking",
        "archive\\original_backup\\config",
        "core\\intelligence\\testing\\advanced",
        "archive\\modularization_20250820_222253",
        "monitoring",
        "analysis\\comprehensive_analysis\\pattern_mining",
        "testmaster\\intelligence\\integration\\features",
        "testmaster\\intelligence\\integration\\agents",
        "tools\\migration",
        "core\\intelligence\\integration\\components",
        "testmaster\\intelligence\\integration\\storage",
        "testmaster\\integration",
        "archive\\phase6_archive\\replaced_code",
        "testmaster\\intelligence\\documentation\\quality",
        "testmaster\\intelligence\\tree_of_thought",
        "dashboard",
        "archive\\legacy_scripts",
        "archive\\oversized_modules_20250821_042018\\ml\\advanced",
        "archive\\original_backup\\integration",
        "analysis\\comprehensive_analysis",
        "archive\\original_backup\\incremental",
        "archive\\placeholder_backups_20250820_011817\\integration",
        "incremental",
        "analysis\\comprehensive_analysis\\metaprog_analysis",
        "consolidation",
        "core\\intelligence\\ml\\advanced",
        "testmaster\\reporting",
        "core\\intelligence\\testing\\components",
        "core\\intelligence\\compatibility",
        "testmaster\\intelligence\\documentation\\templates",
        "core\\intelligence\\testing\\enterprise",
        "core\\orchestration",
        "core\\intelligence\\correlation",
        "testmaster\\ui",
        "src",
        "core\\intelligence\\analysis\\business_analyzer_modules",
        "core\\intelligence\\security\\enterprise",
        "testmaster\\monitoring",
        "archive\\20250818",
        "analysis\\comprehensive_analysis\\realtime_analysis",
        "archive\\phase4_archive\\replaced_code",
        "testmaster\\intelligence\\hierarchical_planning",
        "testmaster\\intelligence\\security",
        "analysis\\comprehensive_analysis\\debt_analysis",
        "testmaster\\verification",
        "ui",
        "testmaster\\generators",
        "archive\\oversized_modules_20250821_042018\\ml\\enterprise",
        "testmaster\\intelligence\\documentation\\generators",
        "archive\\original_backup",
        "core\\intelligence\\prediction",
        "core\\intelligence\\security\\enterprise\\validation",
        "core\\intelligence\\ml",
        "core\\intelligence\\ml\\enterprise",
        "testmaster\\core\\language_detection",
        "core\\intelligence\\api",
        "archive\\oversized_modules_20250821_042018\\analysis",
        "core\\intelligence\\base",
        "testmaster\\core\\framework_abstraction",
        "analysis\\comprehensive_analysis\\semantic_analysis",
        "core\\intelligence\\analytics",
        "tests\\integration",
        "state",
        "archive\\original_backup\\dashboard",
        "testmaster\\refactoring",
        "archive\\oversized_modules_20250821_042018\\coordination",
        "core\\intelligence\\orchestration",
        "analysis\\comprehensive_analysis\\cognitive_load",
        "analysis\\comprehensive_analysis\\data_pipeline",
        "core\\intelligence\\analysis",
        "archive\\modularization_integration",
        "core\\intelligence\\analytics\\advanced",
        "analysis\\comprehensive_analysis\\data_security",
        "core\\intelligence\\security\\enterprise\\intelligence",
        "core\\intelligence\\enterprise",
        "testmaster\\converters",
        "archive\\COMPLETE_REFACTOR_20250818_112844",
        "core\\intelligence\\analysis\\debt_analyzer_modules",
        "testmaster\\security",
        "core\\intelligence\\coordination",
        "archive\\modularization_20250821",
        "core\\intelligence\\monitoring",
        "testmaster\\intelligence\\optimization",
        "testmaster\\intelligence\\bridges",
        "archive\\original_backup\\src",
        "testmaster\\agent_qa",
        "core\\testing",
        "archive\\original_backup\\deduplication",
        "agents\\supervisor",
        "deduplication",
        "archive\\oversized_modules_20250821_042018\\documentation\\revolutionary",
        "testmaster\\flow_optimizer",
        "analysis\\comprehensive_analysis\\domain_modeling",
        "archive\\phase1c_consolidation_20250820_150000",
        "core\\intelligence\\monitoring\\performance_optimization_engine_modules",
        "core\\intelligence\\reliability",
        "core\\intelligence\\dashboard",
        "testmaster\\communication",
        "archive\\oversized_modules_20250821_042018\\api"
      ],
      "consolidation_opportunity": true,
      "files": [
        {
          "file": "accelerated_converter.py",
          "line_count": 256,
          "size_category": "medium"
        },
        {
          "file": "achieve_100_percent.py",
          "line_count": 133,
          "size_category": "small"
        },
        {
          "file": "agent_d_comprehensive_test_executor.py",
          "line_count": 911,
          "size_category": "huge"
        },
        {
          "file": "architecture_centralization_analysis.py",
          "line_count": 509,
          "size_category": "huge"
        },
        {
          "file": "ARCHIVE_PROTECTION_SYSTEM.py",
          "line_count": 400,
          "size_category": "large"
        },
        {
          "file": "auto_readme_updater.py",
          "line_count": 619,
          "size_category": "huge"
        },
        {
          "file": "batch_convert_broken_tests.py",
          "line_count": 191,
          "size_category": "medium"
        },
        {
          "file": "comprehensive_classical_analysis_methods.py",
          "line_count": 736,
          "size_category": "huge"
        },
        {
          "file": "comprehensive_codebase_analysis.py",
          "line_count": 332,
          "size_category": "large"
        },
        {
          "file": "comprehensive_feature_audit.py",
          "line_count": 665,
          "size_category": "huge"
        },
        {
          "file": "convert_batch_small.py",
          "line_count": 150,
          "size_category": "medium"
        },
        {
          "file": "convert_with_genai_sdk.py",
          "line_count": 182,
          "size_category": "medium"
        },
        {
          "file": "convert_with_generativeai.py",
          "line_count": 161,
          "size_category": "medium"
        },
        {
          "file": "DEMONSTRATION_OF_SUPERIORITY.py",
          "line_count": 287,
          "size_category": "medium"
        },
        {
          "file": "documentation_cli.py",
          "line_count": 706,
          "size_category": "huge"
        },
        {
          "file": "enable_deep_integration.py",
          "line_count": 240,
          "size_category": "medium"
        },
        {
          "file": "enhanced_context_aware_test_generator.py",
          "line_count": 428,
          "size_category": "large"
        },
        {
          "file": "enhanced_incremental_ast_engine.py",
          "line_count": 826,
          "size_category": "huge"
        },
        {
          "file": "enhanced_intelligent_test_builder.py",
          "line_count": 614,
          "size_category": "huge"
        },
        {
          "file": "enhanced_realtime_security_monitor.py",
          "line_count": 1108,
          "size_category": "huge"
        },
        {
          "file": "enhanced_security_dashboard_api.py",
          "line_count": 701,
          "size_category": "huge"
        },
        {
          "file": "enhanced_security_intelligence_agent.py",
          "line_count": 1091,
          "size_category": "huge"
        },
        {
          "file": "enhanced_self_healing_verifier.py",
          "line_count": 512,
          "size_category": "huge"
        },
        {
          "file": "enhance_analytics.py",
          "line_count": 466,
          "size_category": "large"
        },
        {
          "file": "enhance_auto_generated_tests.py",
          "line_count": 349,
          "size_category": "large"
        },
        {
          "file": "exhaustive_stub_analysis.py",
          "line_count": 385,
          "size_category": "large"
        },
        {
          "file": "finalize_module_splits.py",
          "line_count": 236,
          "size_category": "medium"
        },
        {
          "file": "final_100_percent_fix.py",
          "line_count": 225,
          "size_category": "medium"
        },
        {
          "file": "find_all_stubs.py",
          "line_count": 274,
          "size_category": "medium"
        },
        {
          "file": "find_critical_stubs.py",
          "line_count": 141,
          "size_category": "small"
        },
        {
          "file": "fix_all_integration_systems.py",
          "line_count": 246,
          "size_category": "medium"
        },
        {
          "file": "fix_enhanced_test_imports.py",
          "line_count": 230,
          "size_category": "medium"
        },
        {
          "file": "fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "fix_tests_for_real_modules.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "fix_week2_test_imports.py",
          "line_count": 125,
          "size_category": "small"
        },
        {
          "file": "IMPLEMENTATION_STATUS_CHECK.py",
          "line_count": 254,
          "size_category": "medium"
        },
        {
          "file": "implement_test_stubs.py",
          "line_count": 507,
          "size_category": "huge"
        },
        {
          "file": "independent_test_verifier.py",
          "line_count": 215,
          "size_category": "medium"
        },
        {
          "file": "integration_test_generator.py",
          "line_count": 572,
          "size_category": "huge"
        },
        {
          "file": "intelligent_test_builder.py",
          "line_count": 359,
          "size_category": "large"
        },
        {
          "file": "intelligent_test_builder_offline.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "intelligent_test_builder_v2.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "layer3_integration_example.py",
          "line_count": 522,
          "size_category": "huge"
        },
        {
          "file": "live_code_quality_monitor.py",
          "line_count": 1045,
          "size_category": "huge"
        },
        {
          "file": "llm_analysis_monitor.py",
          "line_count": 729,
          "size_category": "huge"
        },
        {
          "file": "modularize_coverage_analyzer.py",
          "line_count": 257,
          "size_category": "medium"
        },
        {
          "file": "parallel_converter.py",
          "line_count": 311,
          "size_category": "large"
        },
        {
          "file": "parallel_converter_fixed.py",
          "line_count": 352,
          "size_category": "large"
        },
        {
          "file": "performance_profiler.py",
          "line_count": 634,
          "size_category": "huge"
        },
        {
          "file": "realtime_metrics_collector.py",
          "line_count": 614,
          "size_category": "huge"
        },
        {
          "file": "real_time_monitor.py",
          "line_count": 563,
          "size_category": "huge"
        },
        {
          "file": "refine_misc_tests.py",
          "line_count": 189,
          "size_category": "medium"
        },
        {
          "file": "replace_stubs_with_archive_implementations.py",
          "line_count": 292,
          "size_category": "medium"
        },
        {
          "file": "restored_asyncio_4.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "restored_asyncio_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_asyncio_6.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "restored_json_4.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "restored_json_5.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "restored_json_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_logging_4.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "restored_logging_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_logging_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_os_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_random_6.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "restored_sys_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_threading_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_threading_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_time_4.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "restored_time_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_time_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_uuid_4.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "restored_uuid_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_uuid_6.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "restore_archive_robust.py",
          "line_count": 1537,
          "size_category": "huge"
        },
        {
          "file": "restore_missing_methods.py",
          "line_count": 535,
          "size_category": "huge"
        },
        {
          "file": "restore_robust_implementations.py",
          "line_count": 175,
          "size_category": "medium"
        },
        {
          "file": "risk_based_test_targeter.py",
          "line_count": 884,
          "size_category": "huge"
        },
        {
          "file": "run_debt_analysis.py",
          "line_count": 96,
          "size_category": "small"
        },
        {
          "file": "run_security_scan.py",
          "line_count": 95,
          "size_category": "small"
        },
        {
          "file": "simple_test.py",
          "line_count": 126,
          "size_category": "small"
        },
        {
          "file": "simple_web_monitor.py",
          "line_count": 191,
          "size_category": "medium"
        },
        {
          "file": "specialized_test_generators.py",
          "line_count": 816,
          "size_category": "huge"
        },
        {
          "file": "split_massive_test_file.py",
          "line_count": 225,
          "size_category": "medium"
        },
        {
          "file": "split_oversized_modules.py",
          "line_count": 278,
          "size_category": "medium"
        },
        {
          "file": "testmaster_orchestrator.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "test_100_percent_integration.py",
          "line_count": 227,
          "size_category": "medium"
        },
        {
          "file": "test_advanced_telemetry_system.py",
          "line_count": 506,
          "size_category": "huge"
        },
        {
          "file": "test_agent_b_integrations.py",
          "line_count": 312,
          "size_category": "large"
        },
        {
          "file": "test_agent_qa_integration.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "test_agent_qa_system.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "test_analyzer_tab.py",
          "line_count": 50,
          "size_category": "small"
        },
        {
          "file": "test_classical_analysis.py",
          "line_count": 292,
          "size_category": "medium"
        },
        {
          "file": "test_complexity_prioritizer.py",
          "line_count": 690,
          "size_category": "huge"
        },
        {
          "file": "test_comprehensive_analysis.py",
          "line_count": 190,
          "size_category": "medium"
        },
        {
          "file": "test_dependency_orderer.py",
          "line_count": 687,
          "size_category": "huge"
        },
        {
          "file": "test_dynamic_handoff_integration.py",
          "line_count": 254,
          "size_category": "medium"
        },
        {
          "file": "test_enhanced_analysis.py",
          "line_count": 117,
          "size_category": "small"
        },
        {
          "file": "test_enhanced_core_integration.py",
          "line_count": 324,
          "size_category": "large"
        },
        {
          "file": "test_enhanced_server.py",
          "line_count": 76,
          "size_category": "small"
        },
        {
          "file": "test_enhancements.py",
          "line_count": 397,
          "size_category": "large"
        },
        {
          "file": "test_exhaustive_features.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "test_flow_optimizer_system.py",
          "line_count": 609,
          "size_category": "huge"
        },
        {
          "file": "test_integration_restoration.py",
          "line_count": 291,
          "size_category": "medium"
        },
        {
          "file": "test_integration_systems.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "test_intelligence_integration.py",
          "line_count": 462,
          "size_category": "large"
        },
        {
          "file": "test_llm_intelligence.py",
          "line_count": 42,
          "size_category": "tiny"
        },
        {
          "file": "test_multi_objective_optimization.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "test_our_implementations.py",
          "line_count": 184,
          "size_category": "medium"
        },
        {
          "file": "test_performance_dashboard_integration.py",
          "line_count": 309,
          "size_category": "large"
        },
        {
          "file": "test_phase1_integration.py",
          "line_count": 274,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_exhaustive_validation.py",
          "line_count": 249,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_final_validation.py",
          "line_count": 271,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_integration.py",
          "line_count": 255,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_quick_validation.py",
          "line_count": 222,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_simple_validation.py",
          "line_count": 172,
          "size_category": "medium"
        },
        {
          "file": "test_phase3_complete.py",
          "line_count": 347,
          "size_category": "large"
        },
        {
          "file": "test_phase3_deployment.py",
          "line_count": 191,
          "size_category": "medium"
        },
        {
          "file": "test_phase3_ui.py",
          "line_count": 190,
          "size_category": "medium"
        },
        {
          "file": "test_reporting_system.py",
          "line_count": 423,
          "size_category": "large"
        },
        {
          "file": "test_security_full_integration.py",
          "line_count": 530,
          "size_category": "huge"
        },
        {
          "file": "test_security_integration_validation.py",
          "line_count": 329,
          "size_category": "large"
        },
        {
          "file": "test_tracking_manager_integration.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "test_universal_ast_system.py",
          "line_count": 579,
          "size_category": "huge"
        },
        {
          "file": "test_universal_language_detector.py",
          "line_count": 693,
          "size_category": "huge"
        },
        {
          "file": "turbo_converter.py",
          "line_count": 264,
          "size_category": "medium"
        },
        {
          "file": "unified_orchestration_example.py",
          "line_count": 407,
          "size_category": "large"
        },
        {
          "file": "unified_security_scanner.py",
          "line_count": 1124,
          "size_category": "huge"
        },
        {
          "file": "utility_analysis_report.py",
          "line_count": 405,
          "size_category": "large"
        },
        {
          "file": "validate_api_endpoints.py",
          "line_count": 787,
          "size_category": "huge"
        },
        {
          "file": "validate_newton_destroyer.py",
          "line_count": 112,
          "size_category": "small"
        },
        {
          "file": "validate_phase_1_7.py",
          "line_count": 186,
          "size_category": "medium"
        },
        {
          "file": "verify_classical_modules.py",
          "line_count": 96,
          "size_category": "small"
        },
        {
          "file": "web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "week_5_8_batch_converter.py",
          "line_count": 331,
          "size_category": "large"
        },
        {
          "file": "week_7_8_converter.py",
          "line_count": 350,
          "size_category": "large"
        },
        {
          "file": "write_real_tests.py",
          "line_count": 248,
          "size_category": "medium"
        },
        {
          "file": "agents\\roles\\base_role.py",
          "line_count": 373,
          "size_category": "large"
        },
        {
          "file": "agents\\roles\\quality_assurance.py",
          "line_count": 40,
          "size_category": "tiny"
        },
        {
          "file": "agents\\roles\\test_architect.py",
          "line_count": 945,
          "size_category": "huge"
        },
        {
          "file": "agents\\roles\\test_engineer.py",
          "line_count": 917,
          "size_category": "huge"
        },
        {
          "file": "agents\\supervisor\\testing_supervisor.py",
          "line_count": 492,
          "size_category": "large"
        },
        {
          "file": "agents\\team\\testing_team.py",
          "line_count": 429,
          "size_category": "large"
        },
        {
          "file": "analysis\\comprehensive_analysis\\__init__.py",
          "line_count": 64,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\anomaly_detection\\anomaly_detection_analyzer.py",
          "line_count": 882,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\anomaly_detection\\__init__.py",
          "line_count": 9,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\business_analysis\\business_core_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\business_analysis\\business_domain_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\business_analysis\\business_rule_analysis_wrapper.py",
          "line_count": 70,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\business_analysis\\business_validation_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\business_analysis\\business_workflow_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\business_analysis\\_shared_utils.py",
          "line_count": 42,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\business_analysis\\__init__.py",
          "line_count": 17,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\cognitive_load\\cognitive_load_analyzer.py",
          "line_count": 1113,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\cognitive_load\\__init__.py",
          "line_count": 9,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\data_pipeline\\data_pipeline_analyzer.py",
          "line_count": 964,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\data_pipeline\\__init__.py",
          "line_count": 9,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\data_security\\data_leakage_detector.py",
          "line_count": 795,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\data_security\\__init__.py",
          "line_count": 9,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\debt_analysis\\debt_category_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\debt_analysis\\debt_core_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\debt_analysis\\debt_financial_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\debt_analysis\\technical_debt_analysis_wrapper.py",
          "line_count": 68,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\debt_analysis\\_shared_utils.py",
          "line_count": 42,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\debt_analysis\\__init__.py",
          "line_count": 15,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\domain_modeling\\domain_model_analyzer.py",
          "line_count": 921,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\domain_modeling\\__init__.py",
          "line_count": 9,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\energy_analysis\\energy_algorithm_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\energy_analysis\\energy_carbon_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\energy_analysis\\energy_consumption_analysis_wrapper.py",
          "line_count": 68,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\energy_analysis\\energy_core_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\energy_analysis\\_shared_utils.py",
          "line_count": 42,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\energy_analysis\\__init__.py",
          "line_count": 15,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprogramming_analysis_wrapper.py",
          "line_count": 68,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_core_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_reflection_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_security_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\metaprog_analysis\\_shared_utils.py",
          "line_count": 42,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\metaprog_analysis\\__init__.py",
          "line_count": 15,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_code_analysis_wrapper.py",
          "line_count": 257,
          "size_category": "medium"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_core_analyzer.py",
          "line_count": 397,
          "size_category": "large"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_data_analyzer.py",
          "line_count": 513,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_model_analyzer.py",
          "line_count": 550,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_tensor_analyzer.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\_shared_utils.py",
          "line_count": 296,
          "size_category": "medium"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\__init__.py",
          "line_count": 17,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\pattern_mining\\cross_repo_pattern_miner.py",
          "line_count": 1142,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\pattern_mining\\__init__.py",
          "line_count": 9,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\pattern_recognition\\ml_pattern_recognition.py",
          "line_count": 951,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\pattern_recognition\\__init__.py",
          "line_count": 9,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\realtime_analysis\\realtime_ast_engine.py",
          "line_count": 974,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\realtime_analysis\\__init__.py",
          "line_count": 9,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py",
          "line_count": 1038,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_analysis_wrapper.py",
          "line_count": 68,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_context_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_core_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_pattern_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\semantic_analysis\\_shared_utils.py",
          "line_count": 42,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\semantic_analysis\\__init__.py",
          "line_count": 15,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\workflow_analysis\\workflow_pattern_detector.py",
          "line_count": 1118,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\workflow_analysis\\__init__.py",
          "line_count": 9,
          "size_category": "tiny"
        },
        {
          "file": "analytics\\failure_analyzer.py",
          "line_count": 661,
          "size_category": "huge"
        },
        {
          "file": "api\\phase2_api.py",
          "line_count": 531,
          "size_category": "huge"
        },
        {
          "file": "archive\\advanced_testing_intelligence.py",
          "line_count": 770,
          "size_category": "huge"
        },
        {
          "file": "archive\\coverage_analyzer_original_2697_lines.py",
          "line_count": 2698,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_business_rule_analysis_original.py",
          "line_count": 1213,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "line_count": 1188,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "line_count": 1206,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_ml_code_analysis_original.py",
          "line_count": 1249,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_semantic_analysis_original.py",
          "line_count": 1244,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_technical_debt_analysis_original.py",
          "line_count": 1301,
          "size_category": "huge"
        },
        {
          "file": "archive\\integration_hub_original_20250820_220939.py",
          "line_count": 1877,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_energy_consumption_analysis.py",
          "line_count": 1188,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_metaprogramming_analysis.py",
          "line_count": 1206,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_ml_code_analysis.py",
          "line_count": 1249,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_technical_debt_analysis.py",
          "line_count": 1301,
          "size_category": "huge"
        },
        {
          "file": "archive\\20250818\\web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "line_count": 789,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_aggregator.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "line_count": 622,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_compressor.py",
          "line_count": 471,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_correlator.py",
          "line_count": 440,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "line_count": 893,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "line_count": 667,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "line_count": 626,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_monitor.py",
          "line_count": 495,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "line_count": 703,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "line_count": 766,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "line_count": 1192,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "line_count": 749,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "line_count": 723,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "line_count": 1142,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "line_count": 2698,
          "size_category": "huge"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_enhanced_test_imports.py",
          "line_count": 230,
          "size_category": "medium"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_tests_for_real_modules.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_week2_test_imports.py",
          "line_count": 125,
          "size_category": "small"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\accelerated_converter.py",
          "line_count": 256,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\achieve_100_percent_coverage.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\ai_test_generator.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\automated_test_generation.py",
          "line_count": 949,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\batch_convert_broken_tests.py",
          "line_count": 191,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\batch_gemini_generator.py",
          "line_count": 148,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\branch_coverage_analyzer.py",
          "line_count": 462,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "line_count": 697,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\convert_batch_small.py",
          "line_count": 150,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\convert_with_genai_sdk.py",
          "line_count": 182,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\convert_with_generativeai.py",
          "line_count": 161,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\coverage_analysis.py",
          "line_count": 669,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\coverage_baseline.py",
          "line_count": 244,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\coverage_improver.py",
          "line_count": 484,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\diagnose_final_five.py",
          "line_count": 201,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
          "line_count": 428,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\enhanced_self_healing_verifier.py",
          "line_count": 512,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\enhance_auto_generated_tests.py",
          "line_count": 349,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\fix_enhanced_test_imports.py",
          "line_count": 230,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\fix_tests_for_real_modules.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\fix_test_infrastructure.py",
          "line_count": 338,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\fix_week2_test_imports.py",
          "line_count": 125,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\gemini_powered_test_generator.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\gemini_test_generator.py",
          "line_count": 490,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\implement_test_stubs.py",
          "line_count": 507,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\independent_test_verifier.py",
          "line_count": 215,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\integration_test_generator.py",
          "line_count": 572,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\integration_test_matrix.py",
          "line_count": 1159,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\intelligent_converter.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\intelligent_test_builder.py",
          "line_count": 359,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\intelligent_test_builder_offline.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\intelligent_test_builder_v2.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\parallel_converter.py",
          "line_count": 311,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\parallel_converter_fixed.py",
          "line_count": 352,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\parallel_converter_working.py",
          "line_count": 297,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\parallel_coverage_converter.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\parallel_coverage_converter_fixed.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\quick_coverage_boost.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\quick_test_generator.py",
          "line_count": 112,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\simple_100_percent.py",
          "line_count": 146,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\smart_test_generator.py",
          "line_count": 452,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\specialized_test_generators.py",
          "line_count": 816,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\systematic_coverage.py",
          "line_count": 387,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\test_gemini_api.py",
          "line_count": 88,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\test_gemini_correct.py",
          "line_count": 115,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\turbo_converter.py",
          "line_count": 264,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\week_5_8_batch_converter.py",
          "line_count": 331,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\week_7_8_converter.py",
          "line_count": 350,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\write_real_tests.py",
          "line_count": 248,
          "size_category": "medium"
        },
        {
          "file": "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "line_count": 1376,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "line_count": 1750,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\business_analyzer_original.py",
          "line_count": 1266,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "line_count": 1547,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "line_count": 953,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "line_count": 1877,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\accelerated_converter.py",
          "line_count": 256,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\batch_convert_broken_tests.py",
          "line_count": 191,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\convert_batch_small.py",
          "line_count": 150,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\convert_with_genai_sdk.py",
          "line_count": 182,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\convert_with_generativeai.py",
          "line_count": 161,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\enhanced_context_aware_test_generator.py",
          "line_count": 428,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\enhanced_self_healing_verifier.py",
          "line_count": 512,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\enhance_auto_generated_tests.py",
          "line_count": 349,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\fix_enhanced_test_imports.py",
          "line_count": 230,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\fix_tests_for_real_modules.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\fix_week2_test_imports.py",
          "line_count": 125,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\implement_test_stubs.py",
          "line_count": 507,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\independent_test_verifier.py",
          "line_count": 215,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\integration_test_generator.py",
          "line_count": 572,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\intelligent_test_builder.py",
          "line_count": 359,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\intelligent_test_builder_offline.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\intelligent_test_builder_v2.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\parallel_converter.py",
          "line_count": 311,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\parallel_converter_fixed.py",
          "line_count": 352,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\specialized_test_generators.py",
          "line_count": 816,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\testmaster_orchestrator.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\turbo_converter.py",
          "line_count": 264,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\week_5_8_batch_converter.py",
          "line_count": 331,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\week_7_8_converter.py",
          "line_count": 350,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\write_real_tests.py",
          "line_count": 248,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\analytics\\failure_analyzer.py",
          "line_count": 661,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\config\\testmaster_config.py",
          "line_count": 560,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\dashboard\\quality_dashboard.py",
          "line_count": 603,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\deduplication\\test_deduplicator.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\incremental\\dependency_tracker.py",
          "line_count": 642,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\integration\\cross_module_tester.py",
          "line_count": 859,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\optimization\\execution_optimizer.py",
          "line_count": 648,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\scripts\\achieve_100_percent_coverage.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\ai_test_generator.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\scripts\\batch_gemini_generator.py",
          "line_count": 148,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\branch_coverage_analyzer.py",
          "line_count": 462,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\coverage_baseline.py",
          "line_count": 244,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\coverage_improver.py",
          "line_count": 484,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\diagnose_final_five.py",
          "line_count": 201,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\fix_test_infrastructure.py",
          "line_count": 338,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\gemini_powered_test_generator.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\gemini_test_generator.py",
          "line_count": 490,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\intelligent_converter.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\parallel_converter_working.py",
          "line_count": 297,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\parallel_coverage_converter.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\parallel_coverage_converter_fixed.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\quick_coverage_boost.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\quick_test_generator.py",
          "line_count": 112,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\simple_100_percent.py",
          "line_count": 146,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\smart_test_generator.py",
          "line_count": 452,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\systematic_coverage.py",
          "line_count": 387,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\test_gemini_api.py",
          "line_count": 88,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\test_gemini_correct.py",
          "line_count": 115,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\src\\automated_test_generation.py",
          "line_count": 949,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "line_count": 697,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\src\\coverage_analysis.py",
          "line_count": 669,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\src\\integration_test_matrix.py",
          "line_count": 1159,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "line_count": 1266,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
          "line_count": 1547,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "line_count": 1151,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\coordination\\agent_coordination_protocols.py",
          "line_count": 1311,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\coordination\\unified_workflow_orchestrator.py",
          "line_count": 1355,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\documentation\\revolutionary\\neo4j_dominator.py",
          "line_count": 1158,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "line_count": 1294,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\delivery_optimizer.py",
          "line_count": 1276,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\integrity_ml_guardian.py",
          "line_count": 1444,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\performance_optimizer.py",
          "line_count": 1144,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\sla_ml_optimizer.py",
          "line_count": 1627,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\enterprise\\ml_infrastructure_orchestrator.py",
          "line_count": 1117,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "line_count": 1750,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\monitoring\\performance_optimization_engine.py",
          "line_count": 1124,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\enhanced_monitor.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "line_count": 1051,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "line_count": 1201,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "line_count": 859,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "line_count": 1287,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "line_count": 1302,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase4_archive\\replaced_code\\enhanced_monitor_20250819_195132.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase5_archive\\replaced_code\\agent_graph_20250819_195602.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "archive\\phase5_archive\\replaced_code\\enterprise_deployment_20250819_195602.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase5_archive\\replaced_code\\testing_team_20250819_195602.py",
          "line_count": 429,
          "size_category": "large"
        },
        {
          "file": "archive\\phase6_archive\\replaced_code\\agent_graph_20250819_200928.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase7_archive\\replaced_code\\enhanced_monitor_20250819_202006.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "config\\testmaster_config.py",
          "line_count": 560,
          "size_category": "huge"
        },
        {
          "file": "config\\yaml_config_enhancer.py",
          "line_count": 633,
          "size_category": "huge"
        },
        {
          "file": "consolidation\\feature_discovery.py",
          "line_count": 364,
          "size_category": "large"
        },
        {
          "file": "core\\ast_abstraction.py",
          "line_count": 105,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\orchestrator.py",
          "line_count": 390,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\__init__.py",
          "line_count": 541,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\business_analyzer.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\analysis\\business_analyzer_modular.py",
          "line_count": 343,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\business_base.py",
          "line_count": 251,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\business_constraint_analyzer.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\business_rule_extractor.py",
          "line_count": 360,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\business_workflow_analyzer.py",
          "line_count": 351,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_analyzer.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_analyzer_modular.py",
          "line_count": 282,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_base.py",
          "line_count": 197,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_code_analyzer.py",
          "line_count": 248,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_quantifier.py",
          "line_count": 338,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_test_analyzer.py",
          "line_count": 306,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\ml_analyzer.py",
          "line_count": 777,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\ml_code_analyzer.py",
          "line_count": 573,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_analyzer.py",
          "line_count": 953,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_analyzer_modular.py",
          "line_count": 259,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_base.py",
          "line_count": 252,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_intent_analyzer.py",
          "line_count": 327,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_pattern_detector.py",
          "line_count": 307,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_relationship_analyzer.py",
          "line_count": 372,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\technical_debt_analyzer.py",
          "line_count": 574,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\__init__.py",
          "line_count": 496,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py",
          "line_count": 477,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\business_analyzer_modules\\__init__.py",
          "line_count": 12,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_analyzer_modules\\__init__.py",
          "line_count": 12,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\analytics\\advanced_anomaly_detector.py",
          "line_count": 299,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analytics\\analytics_anomaly_detector.py",
          "line_count": 578,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\analytics_hub.py",
          "line_count": 641,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\predictive_analytics_engine.py",
          "line_count": 652,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\statistical_engine.py",
          "line_count": 318,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analytics\\__init__.py",
          "line_count": 799,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\advanced\\correlation_engine.py",
          "line_count": 589,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\api\\endpoints.py",
          "line_count": 583,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\api\\intelligence_endpoints.py",
          "line_count": 393,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\api\\serializers.py",
          "line_count": 300,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\api\\unified_intelligence_api.py",
          "line_count": 453,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\api\\validators.py",
          "line_count": 373,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\api\\__init__.py",
          "line_count": 138,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\base\\__init__.py",
          "line_count": 571,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\compatibility\\__init__.py",
          "line_count": 600,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\coordination\\cross_agent_bridge.py",
          "line_count": 907,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\correlation\\cross_system_analytics.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\dashboard\\intelligence_backend.py",
          "line_count": 412,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\adaptive_template_system.py",
          "line_count": 613,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\agency_swarm_analyzer.py",
          "line_count": 181,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\documentation\\api_spec_builder.py",
          "line_count": 316,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\api_validation_framework.py",
          "line_count": 750,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\auto_api_docs_generator.py",
          "line_count": 708,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\auto_generator.py",
          "line_count": 290,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\documentation\\bilingual_docs_processor.py",
          "line_count": 548,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\cookbook_organization_manager.py",
          "line_count": 648,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\cross_framework_integration.py",
          "line_count": 602,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\design_first_docs.py",
          "line_count": 739,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\diagram_creator.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\docstring_analyzer.py",
          "line_count": 332,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\docs_api.py",
          "line_count": 353,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\doc_orchestrator.py",
          "line_count": 341,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\hierarchical_docs_organizer.py",
          "line_count": 637,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence_integration.py",
          "line_count": 653,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligent_content_orchestrator.py",
          "line_count": 659,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\json_docs_processor.py",
          "line_count": 977,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\legacy_integration_framework.py",
          "line_count": 875,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\live_architecture.py",
          "line_count": 446,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\master_documentation_orchestrator.py",
          "line_count": 912,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\metrics_reporter.py",
          "line_count": 351,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\migration_guide_generator.py",
          "line_count": 516,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\multimodal_recipe_engine.py",
          "line_count": 701,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\multi_agent_pattern_docs.py",
          "line_count": 727,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\phase_1_7_integration.py",
          "line_count": 351,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\quality_assessment_engine.py",
          "line_count": 552,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\recipe_based_learning.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\roadmap_generator.py",
          "line_count": 535,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\swarms_auto_generation_adapter.py",
          "line_count": 384,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\swarms_doc_intelligence_extractor.py",
          "line_count": 258,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\documentation\\swarms_navigation_intelligence.py",
          "line_count": 453,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\tutorial_grid_system.py",
          "line_count": 729,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\unified_doc_generator.py",
          "line_count": 568,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\ux_excellence_framework.py",
          "line_count": 1044,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\yaml_config_processor.py",
          "line_count": 634,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise\\documentation_intelligence.py",
          "line_count": 451,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise\\enterprise_doc_orchestrator.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\analyzer.py",
          "line_count": 438,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\metrics.py",
          "line_count": 332,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\optimizer.py",
          "line_count": 619,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\project_coordinator.py",
          "line_count": 587,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\__init__.py",
          "line_count": 26,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\optimization\\content_enhancer.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\optimization\\strategy_engine.py",
          "line_count": 286,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\ai_documentation_synthesizer.py",
          "line_count": 706,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\codesee_annihilator.py",
          "line_count": 767,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\falkordb_obliterator.py",
          "line_count": 596,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\interactive_chat_interface.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\living_documentation_engine.py",
          "line_count": 664,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\newton_graph_destroyer.py",
          "line_count": 561,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\api_orchestrator.py",
          "line_count": 577,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\reporting_engine.py",
          "line_count": 635,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\api\\endpoint_manager.py",
          "line_count": 652,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\integration\\base.py",
          "line_count": 161,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\integration\\__init__.py",
          "line_count": 563,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\integration\\components\\cross_system_analyzer.py",
          "line_count": 576,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\integration\\components\\performance_monitor.py",
          "line_count": 575,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\ai_code_explorer.py",
          "line_count": 430,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\code_knowledge_graph_engine.py",
          "line_count": 369,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\instant_graph_engine.py",
          "line_count": 465,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\multi_language_analyzer.py",
          "line_count": 415,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\predictive_code_intelligence.py",
          "line_count": 478,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\visual_relationship_mapper.py",
          "line_count": 440,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\__init__.py",
          "line_count": 94,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\ml\\correlation_engine.py",
          "line_count": 340,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\integration_analysis.py",
          "line_count": 474,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\ml_orchestrator.py",
          "line_count": 701,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\statistical_engine.py",
          "line_count": 141,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\adaptive_configuration_manager.py",
          "line_count": 693,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\adaptive_load_balancer.py",
          "line_count": 600,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\anomaly_detection.py",
          "line_count": 525,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\distributed_ml_coordinator.py",
          "line_count": 779,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\intelligent_data_pipeline.py",
          "line_count": 791,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\intelligent_resource_scheduler.py",
          "line_count": 743,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\ml_network_optimizer.py",
          "line_count": 697,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\performance_execution_manager.py",
          "line_count": 415,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\performance_ml_engine.py",
          "line_count": 913,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\predictive_engine.py",
          "line_count": 850,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\predictive_maintenance_ai.py",
          "line_count": 810,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\telemetry_export_manager.py",
          "line_count": 604,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\telemetry_ml_collector.py",
          "line_count": 539,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\telemetry_observability_engine.py",
          "line_count": 633,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\watchdog_ml_monitor.py",
          "line_count": 546,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\watchdog_process_manager.py",
          "line_count": 646,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\watchdog_recovery_system.py",
          "line_count": 642,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\enterprise\\ml_auto_scaling.py",
          "line_count": 876,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
          "line_count": 756,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\monitoring\\enterprise_performance_monitor.py",
          "line_count": 817,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\monitoring\\qa_monitor.py",
          "line_count": 257,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\monitoring\\__init__.py",
          "line_count": 99,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\monitoring\\performance_optimization_engine_modules\\__init__.py",
          "line_count": 12,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\orchestration\\cross_system_orchestrator.py",
          "line_count": 982,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\prediction\\forecaster.py",
          "line_count": 367,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\reliability\\enterprise_error_recovery.py",
          "line_count": 890,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\reliability\\quantum_retry_orchestrator.py",
          "line_count": 472,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\reliability\\quantum_retry_strategies.py",
          "line_count": 332,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\advanced_security_intelligence.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\ai_security_integration.py",
          "line_count": 178,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\code_vulnerability_scanner.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\crypto_analyzer.py",
          "line_count": 354,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\knowledge_graph_integration.py",
          "line_count": 203,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\security_analytics.py",
          "line_count": 432,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\security_api.py",
          "line_count": 445,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\security_compliance_validator.py",
          "line_count": 704,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\security_dashboard.py",
          "line_count": 412,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\threat_intelligence_engine.py",
          "line_count": 550,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\threat_modeler.py",
          "line_count": 424,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\ultimate_security_orchestrator.py",
          "line_count": 529,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\unified_security_service.py",
          "line_count": 270,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\vulnerability_scanner.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\audit\\audit_reporter.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\enterprise_security_monitor.py",
          "line_count": 400,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\security_intelligence.py",
          "line_count": 599,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\security_validator.py",
          "line_count": 443,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\intelligence\\incident_responder.py",
          "line_count": 648,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\intelligence\\threat_detector.py",
          "line_count": 806,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\validation\\compliance_validator.py",
          "line_count": 562,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\validation\\integration_validator.py",
          "line_count": 592,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\validation\\penetration_tester.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\base.py",
          "line_count": 128,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\testing\\chaos_engineer.py",
          "line_count": 400,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\flaky_test_detector.py",
          "line_count": 492,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\load_generator.py",
          "line_count": 454,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\quality_dashboard.py",
          "line_count": 387,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\regression_detector.py",
          "line_count": 417,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\security_fuzzer.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\testing_api.py",
          "line_count": 481,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\test_analytics.py",
          "line_count": 477,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\test_intelligence.py",
          "line_count": 548,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\test_orchestrator.py",
          "line_count": 391,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\test_quality_scorer.py",
          "line_count": 405,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\test_selector.py",
          "line_count": 388,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\__init__.py",
          "line_count": 457,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\advanced\\ml_test_optimizer.py",
          "line_count": 857,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\advanced\\statistical_coverage_analyzer.py",
          "line_count": 799,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\advanced\\__init__.py",
          "line_count": 43,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\claude_test_generator.py",
          "line_count": 459,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
          "line_count": 543,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\universal_ai_generator.py",
          "line_count": 472,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\__init__.py",
          "line_count": 56,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\testing\\automation\\test_maintenance_system.py",
          "line_count": 551,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\components\\coverage_analyzer.py",
          "line_count": 1101,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\components\\execution_engine.py",
          "line_count": 382,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\components\\integration_generator.py",
          "line_count": 749,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\components\\ml_optimizer.py",
          "line_count": 751,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\enterprise\\predictive_test_failure.py",
          "line_count": 849,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\enterprise\\quality_analytics_engine.py",
          "line_count": 919,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\security\\advanced_owasp_tester.py",
          "line_count": 913,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\security\\api_security_tester.py",
          "line_count": 532,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\visualization\\data_visualization_engines.py",
          "line_count": 437,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\interactive_visualizations.py",
          "line_count": 395,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\__init__.py",
          "line_count": 222,
          "size_category": "medium"
        },
        {
          "file": "core\\observability\\agent_ops_separate.py",
          "line_count": 571,
          "size_category": "huge"
        },
        {
          "file": "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "line_count": 1891,
          "size_category": "huge"
        },
        {
          "file": "core\\orchestration\\agent_graph.py",
          "line_count": 501,
          "size_category": "huge"
        },
        {
          "file": "core\\orchestration\\enhanced_agent_orchestrator.py",
          "line_count": 755,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\adaptive_fallback_orchestrator.py",
          "line_count": 677,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\adaptive_security_resilience.py",
          "line_count": 748,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\byzantine_consensus_security.py",
          "line_count": 637,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\circuit_breaker_matrix.py",
          "line_count": 630,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\code_generation_security.py",
          "line_count": 741,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\compliance_framework.py",
          "line_count": 1115,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\container_security_validator.py",
          "line_count": 628,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\data_integrity_guardian.py",
          "line_count": 710,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\document_classification_security.py",
          "line_count": 691,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\enterprise_audit_logging.py",
          "line_count": 516,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\error_isolation_system.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\exception_monitoring.py",
          "line_count": 498,
          "size_category": "large"
        },
        {
          "file": "core\\security\\fault_tolerance_engine.py",
          "line_count": 705,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\flow_persistence_security.py",
          "line_count": 698,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\guardrail_security_system.py",
          "line_count": 542,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\health_monitoring_nexus.py",
          "line_count": 664,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\license_compliance_framework.py",
          "line_count": 516,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\multi_agent_access_control.py",
          "line_count": 801,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\multi_agent_evaluation_security.py",
          "line_count": 677,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\operational_security.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\quantum_retry_engine.py",
          "line_count": 616,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\resilience_orchestrator.py",
          "line_count": 681,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\retry_mechanism_system.py",
          "line_count": 655,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\secure_performance_optimizer.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\security_monitoring_system.py",
          "line_count": 760,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\self_healing_coordinator.py",
          "line_count": 698,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\threat_intelligence_system.py",
          "line_count": 881,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\vulnerability_detection_framework.py",
          "line_count": 716,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\__init__.py",
          "line_count": 596,
          "size_category": "huge"
        },
        {
          "file": "core\\state\\enhanced_state_manager.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\adaptive_testing_framework.py",
          "line_count": 1012,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\archive_intelligence_mining.py",
          "line_count": 586,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\collaborative_testing_platform.py",
          "line_count": 1224,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\competitive_analysis_framework.py",
          "line_count": 455,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\distributed_test_coordinator.py",
          "line_count": 994,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\enterprise_test_framework.py",
          "line_count": 739,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\graph_performance_testing.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\integration_test_framework.py",
          "line_count": 489,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\intelligence_synthesis_framework.py",
          "line_count": 899,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\intelligent_test_generator.py",
          "line_count": 1119,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\multimodal_validation_testing.py",
          "line_count": 643,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\multi_modal_test_engine.py",
          "line_count": 1208,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\pattern_consolidation_engine.py",
          "line_count": 799,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\performance_test_suite.py",
          "line_count": 462,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\repository_intelligence_aggregator.py",
          "line_count": 970,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\run_all_tests.py",
          "line_count": 389,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\supercharged_test_generator.py",
          "line_count": 443,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\supercharged_test_generator.py_stub_backup_20250821_042438.py",
          "line_count": 557,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\testmaster_api_gateway.py",
          "line_count": 1318,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\test_ai_code_exploration.py",
          "line_count": 355,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\test_coverage_optimizer.py",
          "line_count": 282,
          "size_category": "medium"
        },
        {
          "file": "core\\testing\\test_evolution_analyzer.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\test_integration_hub.py",
          "line_count": 601,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\test_intelligence_orchestrator.py",
          "line_count": 328,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\test_knowledge_graph_engine.py",
          "line_count": 256,
          "size_category": "medium"
        },
        {
          "file": "core\\testing\\test_multi_language_superiority.py",
          "line_count": 363,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\test_quality_analyzer.py",
          "line_count": 245,
          "size_category": "medium"
        },
        {
          "file": "core\\testing\\test_ui_interface_superiority.py",
          "line_count": 492,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\unified_test_orchestrator.py",
          "line_count": 489,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\user_input_testing.py",
          "line_count": 862,
          "size_category": "huge"
        },
        {
          "file": "core\\tools\\concrete_tools.py",
          "line_count": 472,
          "size_category": "large"
        },
        {
          "file": "core\\tools\\type_safe_tools.py",
          "line_count": 471,
          "size_category": "large"
        },
        {
          "file": "core\\tools\\__init__.py",
          "line_count": 40,
          "size_category": "tiny"
        },
        {
          "file": "dashboard\\automated_frontend_simulator.py",
          "line_count": 376,
          "size_category": "large"
        },
        {
          "file": "dashboard\\automated_frontend_tester.py",
          "line_count": 651,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\comprehensive_frontend_test.py",
          "line_count": 285,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\comprehensive_frontend_validator.py",
          "line_count": 552,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\demo_automated_frontend_testing.py",
          "line_count": 298,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\frontend_display_validator.py",
          "line_count": 773,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\integration_gap_analysis.py",
          "line_count": 307,
          "size_category": "large"
        },
        {
          "file": "dashboard\\quality_dashboard.py",
          "line_count": 603,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\quick_integration_test.py",
          "line_count": 202,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\quick_validation.py",
          "line_count": 74,
          "size_category": "small"
        },
        {
          "file": "dashboard\\test_all_features.py",
          "line_count": 300,
          "size_category": "large"
        },
        {
          "file": "dashboard\\test_api_endpoints.py",
          "line_count": 224,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\test_frontend_automated.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "dashboard\\test_multi_agent_integration.py",
          "line_count": 961,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\test_new_robustness_features.py",
          "line_count": 396,
          "size_category": "large"
        },
        {
          "file": "dashboard\\test_robustness_verification.py",
          "line_count": 320,
          "size_category": "large"
        },
        {
          "file": "dashboard\\ultimate_frontend_validator.py",
          "line_count": 845,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\analytics.py",
          "line_count": 789,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\async_processing.py",
          "line_count": 606,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\coverage.py",
          "line_count": 583,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\crew_orchestration.py",
          "line_count": 812,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\enhanced_analytics.py",
          "line_count": 587,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\flow_optimization.py",
          "line_count": 662,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\intelligence.py",
          "line_count": 533,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\intelligence_integration.py",
          "line_count": 478,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\knowledge_graph.py",
          "line_count": 454,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\llm.py",
          "line_count": 405,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\performance.py",
          "line_count": 583,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\phase2_api.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\quality_assurance.py",
          "line_count": 653,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\real_codebase_scanner.py",
          "line_count": 384,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\real_codebase_scanner.stub_backup.py",
          "line_count": 892,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\refactor.py",
          "line_count": 63,
          "size_category": "small"
        },
        {
          "file": "dashboard\\api\\security.py",
          "line_count": 514,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\swarm_orchestration.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\telemetry.py",
          "line_count": 573,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\test_generation.py",
          "line_count": 481,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_aggregator.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_anomaly_detector.py",
          "line_count": 622,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_compressor.py",
          "line_count": 471,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_correlator.py",
          "line_count": 440,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_data_sanitizer.py",
          "line_count": 893,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_dead_letter_queue.py",
          "line_count": 667,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_error_recovery.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_metrics_collector.py",
          "line_count": 626,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_performance_monitor.py",
          "line_count": 495,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_performance_optimizer.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_persistence.py",
          "line_count": 703,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_pipeline.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_quality_assurance.py",
          "line_count": 766,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_quantum_retry.py",
          "line_count": 1192,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py",
          "line_count": 749,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_smart_cache.py",
          "line_count": 723,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\data_store.py",
          "line_count": 506,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\metrics_feed.py",
          "line_count": 360,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\predictive_flow_optimizer.py",
          "line_count": 1077,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\real_data_extractor.py",
          "line_count": 569,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\system_observability_metrics.py",
          "line_count": 840,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\test_collector.py",
          "line_count": 402,
          "size_category": "large"
        },
        {
          "file": "deduplication\\test_deduplicator.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "deployment\\enterprise_deployment.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "deployment\\swarm_orchestrator.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "documentation\\__init__.py",
          "line_count": 6,
          "size_category": "tiny"
        },
        {
          "file": "incremental\\dependency_tracker.py",
          "line_count": 642,
          "size_category": "huge"
        },
        {
          "file": "integration\\automatic_scaling_system.py",
          "line_count": 1092,
          "size_category": "huge"
        },
        {
          "file": "integration\\automatic_scaling_system_robust.py",
          "line_count": 1051,
          "size_category": "huge"
        },
        {
          "file": "integration\\comprehensive_error_recovery.py",
          "line_count": 1280,
          "size_category": "huge"
        },
        {
          "file": "integration\\comprehensive_error_recovery_robust.py",
          "line_count": 1201,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_module_tester.py",
          "line_count": 859,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_analytics.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_analytics_robust.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "integration\\intelligent_caching_layer.py",
          "line_count": 1334,
          "size_category": "huge"
        },
        {
          "file": "integration\\intelligent_caching_layer_robust.py",
          "line_count": 1287,
          "size_category": "huge"
        },
        {
          "file": "integration\\predictive_analytics_engine.py",
          "line_count": 1142,
          "size_category": "huge"
        },
        {
          "file": "integration\\predictive_analytics_engine_robust.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "integration\\realtime_performance_monitoring.py",
          "line_count": 1427,
          "size_category": "huge"
        },
        {
          "file": "integration\\realtime_performance_monitoring_robust.py",
          "line_count": 1302,
          "size_category": "huge"
        },
        {
          "file": "integration\\resource_optimization_engine.py",
          "line_count": 574,
          "size_category": "huge"
        },
        {
          "file": "integration\\workflow_framework.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "monitoring\\enhanced_monitor_separate.py",
          "line_count": 573,
          "size_category": "huge"
        },
        {
          "file": "monitoring\\monitoring_agents.py",
          "line_count": 665,
          "size_category": "huge"
        },
        {
          "file": "monitoring\\__init__.py",
          "line_count": 35,
          "size_category": "tiny"
        },
        {
          "file": "observability\\unified_observability.py",
          "line_count": 455,
          "size_category": "large"
        },
        {
          "file": "observability\\__init__.py",
          "line_count": 170,
          "size_category": "medium"
        },
        {
          "file": "observability\\core\\conversational_interface.py",
          "line_count": 155,
          "size_category": "medium"
        },
        {
          "file": "observability\\core\\event_monitoring.py",
          "line_count": 306,
          "size_category": "large"
        },
        {
          "file": "observability\\core\\multimodal_analyzer.py",
          "line_count": 217,
          "size_category": "medium"
        },
        {
          "file": "optimization\\execution_optimizer.py",
          "line_count": 648,
          "size_category": "huge"
        },
        {
          "file": "orchestration\\swarm_router_enhancement.py",
          "line_count": 764,
          "size_category": "huge"
        },
        {
          "file": "prioritization\\test_prioritizer.py",
          "line_count": 767,
          "size_category": "huge"
        },
        {
          "file": "scripts\\achieve_100_percent_coverage.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "scripts\\ai_test_generator.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "scripts\\analyze_components.py",
          "line_count": 497,
          "size_category": "large"
        },
        {
          "file": "scripts\\api_documenter.py",
          "line_count": 585,
          "size_category": "huge"
        },
        {
          "file": "scripts\\batch_gemini_generator.py",
          "line_count": 148,
          "size_category": "small"
        },
        {
          "file": "scripts\\branch_coverage_analyzer.py",
          "line_count": 462,
          "size_category": "large"
        },
        {
          "file": "scripts\\coverage_baseline.py",
          "line_count": 244,
          "size_category": "medium"
        },
        {
          "file": "scripts\\coverage_improver.py",
          "line_count": 484,
          "size_category": "large"
        },
        {
          "file": "scripts\\dependency_analyzer.py",
          "line_count": 436,
          "size_category": "large"
        },
        {
          "file": "scripts\\diagnose_final_five.py",
          "line_count": 201,
          "size_category": "medium"
        },
        {
          "file": "scripts\\fix_test_infrastructure.py",
          "line_count": 338,
          "size_category": "large"
        },
        {
          "file": "scripts\\gemini_powered_test_generator.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "scripts\\gemini_test_generator.py",
          "line_count": 490,
          "size_category": "large"
        },
        {
          "file": "scripts\\intelligent_converter.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "scripts\\parallel_converter_working.py",
          "line_count": 297,
          "size_category": "medium"
        },
        {
          "file": "scripts\\parallel_coverage_converter.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "scripts\\parallel_coverage_converter_fixed.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "scripts\\quick_coverage_boost.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "scripts\\quick_test_generator.py",
          "line_count": 112,
          "size_category": "small"
        },
        {
          "file": "scripts\\simple_100_percent.py",
          "line_count": 146,
          "size_category": "small"
        },
        {
          "file": "scripts\\smart_test_generator.py",
          "line_count": 452,
          "size_category": "large"
        },
        {
          "file": "scripts\\systematic_coverage.py",
          "line_count": 387,
          "size_category": "large"
        },
        {
          "file": "scripts\\test_gemini_api.py",
          "line_count": 88,
          "size_category": "small"
        },
        {
          "file": "scripts\\test_gemini_correct.py",
          "line_count": 115,
          "size_category": "small"
        },
        {
          "file": "src\\automated_test_generation.py",
          "line_count": 949,
          "size_category": "huge"
        },
        {
          "file": "src\\comprehensive_test_framework.py",
          "line_count": 697,
          "size_category": "huge"
        },
        {
          "file": "src\\coverage_analysis.py",
          "line_count": 669,
          "size_category": "huge"
        },
        {
          "file": "src\\integration_test_matrix.py",
          "line_count": 1159,
          "size_category": "huge"
        },
        {
          "file": "state\\unified_state_manager.py",
          "line_count": 985,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\layer2_integration.py",
          "line_count": 519,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\main.py",
          "line_count": 377,
          "size_category": "large"
        },
        {
          "file": "testmaster\\__init__.py",
          "line_count": 68,
          "size_category": "small"
        },
        {
          "file": "testmaster\\agent_qa\\benchmarking_suite.py",
          "line_count": 366,
          "size_category": "large"
        },
        {
          "file": "testmaster\\agent_qa\\quality_inspector.py",
          "line_count": 318,
          "size_category": "large"
        },
        {
          "file": "testmaster\\agent_qa\\scoring_system.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "testmaster\\agent_qa\\__init__.py",
          "line_count": 216,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\analysis\\__init__.py",
          "line_count": 22,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\api_analysis.py",
          "line_count": 880,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\base_analyzer.py",
          "line_count": 108,
          "size_category": "small"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\clone_detection.py",
          "line_count": 420,
          "size_category": "large"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\complexity_analysis.py",
          "line_count": 698,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\concurrency_analysis.py",
          "line_count": 1397,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\coupling_cohesion.py",
          "line_count": 207,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\crypto_analysis.py",
          "line_count": 808,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\database_analysis.py",
          "line_count": 1246,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\error_handling_analysis.py",
          "line_count": 1279,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\evolution_analysis.py",
          "line_count": 689,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\graph_analysis.py",
          "line_count": 375,
          "size_category": "large"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\inheritance_polymorphism.py",
          "line_count": 246,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
          "line_count": 911,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\main_analyzer.py",
          "line_count": 540,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\memory_analysis.py",
          "line_count": 1141,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\performance_analysis.py",
          "line_count": 1287,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\quality_analysis.py",
          "line_count": 802,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\resource_io_analysis.py",
          "line_count": 1350,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\security_analysis.py",
          "line_count": 911,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\software_metrics.py",
          "line_count": 234,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\statistical_analysis.py",
          "line_count": 881,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\structural_analysis.py",
          "line_count": 814,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\supply_chain_security.py",
          "line_count": 755,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\taint_analysis.py",
          "line_count": 647,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\testing_analysis.py",
          "line_count": 1342,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\__init__.py",
          "line_count": 59,
          "size_category": "small"
        },
        {
          "file": "testmaster\\analysis\\coverage\\base.py",
          "line_count": 52,
          "size_category": "small"
        },
        {
          "file": "testmaster\\analysis\\coverage\\interface.py",
          "line_count": 53,
          "size_category": "small"
        },
        {
          "file": "testmaster\\analysis\\coverage\\__init__.py",
          "line_count": 21,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\async_processing\\async_monitor.py",
          "line_count": 686,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\breaking\\failure_detector.py",
          "line_count": 502,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\breaking\\__init__.py",
          "line_count": 19,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\communication\\claude_messenger.py",
          "line_count": 692,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\communication\\dynamic_handoff.py",
          "line_count": 675,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\communication\\__init__.py",
          "line_count": 29,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\converters\\base.py",
          "line_count": 326,
          "size_category": "large"
        },
        {
          "file": "testmaster\\converters\\batch.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "testmaster\\converters\\intelligent.py",
          "line_count": 527,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\converters\\parallel.py",
          "line_count": 307,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\orchestrator.py",
          "line_count": 470,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\tracking_manager.py",
          "line_count": 737,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\workflow_graph.py",
          "line_count": 617,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\ast_abstraction\\universal_ast.py",
          "line_count": 1076,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\ast_abstraction\\__init__.py",
          "line_count": 50,
          "size_category": "small"
        },
        {
          "file": "testmaster\\core\\framework_abstraction\\test_generator.py",
          "line_count": 571,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\language_detection\\universal_detector.py",
          "line_count": 830,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\language_detection\\__init__.py",
          "line_count": 20,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\flow_optimizer\\dependency_resolver.py",
          "line_count": 395,
          "size_category": "large"
        },
        {
          "file": "testmaster\\flow_optimizer\\flow_analyzer.py",
          "line_count": 373,
          "size_category": "large"
        },
        {
          "file": "testmaster\\flow_optimizer\\__init__.py",
          "line_count": 251,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\generators\\base.py",
          "line_count": 706,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\generators\\intelligent.py",
          "line_count": 589,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\generators\\__init__.py",
          "line_count": 58,
          "size_category": "small"
        },
        {
          "file": "testmaster\\integration\\final_integration_test.py",
          "line_count": 1865,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\context_variables_bridge.py",
          "line_count": 1144,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\event_monitoring_bridge.py",
          "line_count": 1082,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\protocol_communication_bridge.py",
          "line_count": 822,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\sop_workflow_bridge.py",
          "line_count": 964,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\__init__.py",
          "line_count": 119,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\context_builder.py",
          "line_count": 711,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\doc_generator.py",
          "line_count": 557,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\llm_integration.py",
          "line_count": 630,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\quality_assessor.py",
          "line_count": 705,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\__init__.py",
          "line_count": 23,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\api_doc_generator.py",
          "line_count": 632,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\architecture_doc_generator.py",
          "line_count": 813,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\docstring_generator.py",
          "line_count": 562,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\readme_generator.py",
          "line_count": 657,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\tutorial_generator.py",
          "line_count": 975,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\__init__.py",
          "line_count": 24,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\integrations\\git_integration.py",
          "line_count": 582,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\quality\\completeness_checker.py",
          "line_count": 647,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\quality\\__init__.py",
          "line_count": 19,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\readme_templates.py",
          "line_count": 2251,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\hierarchical_planning\\llm_integration.py",
          "line_count": 554,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\hierarchical_planning\\test_plan_generator.py",
          "line_count": 558,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\__init__.py",
          "line_count": 106,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\integration\\agents\\documentation_agent.py",
          "line_count": 650,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\agents\\__init__.py",
          "line_count": 12,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\integration\\coordination\\analysis_coordinator.py",
          "line_count": 740,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\coordination\\__init__.py",
          "line_count": 12,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\integration\\events\\__init__.py",
          "line_count": 13,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\integration\\features\\feature_flags.py",
          "line_count": 730,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\storage\\unified_storage.py",
          "line_count": 738,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\storage\\__init__.py",
          "line_count": 14,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\adaptive_resource_bridge.py",
          "line_count": 581,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
          "line_count": 1147,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\bottleneck_detection_resolution_agent.py",
          "line_count": 1102,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
          "line_count": 900,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
          "line_count": 1162,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\security\\security_intelligence_agent.py",
          "line_count": 935,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\security\\__init__.py",
          "line_count": 29,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\tree_of_thought\\test_thought_generator.py",
          "line_count": 620,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\tree_of_thought\\universal_tot_integration.py",
          "line_count": 496,
          "size_category": "large"
        },
        {
          "file": "testmaster\\mapping\\dependency_tracker.py",
          "line_count": 479,
          "size_category": "large"
        },
        {
          "file": "testmaster\\mapping\\test_mapper.py",
          "line_count": 558,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\monitoring\\idle_detector.py",
          "line_count": 500,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\monitoring\\test_monitor.py",
          "line_count": 519,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\monitoring\\__init__.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\orchestration\\universal_orchestrator.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\file_tagger.py",
          "line_count": 1030,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\handoff_manager.py",
          "line_count": 1246,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\investigator.py",
          "line_count": 1123,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\work_distributor.py",
          "line_count": 796,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\__init__.py",
          "line_count": 35,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\overview\\coverage_intelligence.py",
          "line_count": 1071,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\performance_dashboard.py",
          "line_count": 686,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\regression_tracker.py",
          "line_count": 1375,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\structure_mapper.py",
          "line_count": 1112,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\__init__.py",
          "line_count": 28,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\refactoring\\hierarchical_analyzer.py",
          "line_count": 980,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\reporting\\metrics_analyzer.py",
          "line_count": 100,
          "size_category": "small"
        },
        {
          "file": "testmaster\\reporting\\report_generator.py",
          "line_count": 922,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\reporting\\__init__.py",
          "line_count": 140,
          "size_category": "small"
        },
        {
          "file": "testmaster\\security\\universal_scanner.py",
          "line_count": 823,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\streaming\\live_feedback.py",
          "line_count": 504,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\streaming\\stream_generator.py",
          "line_count": 593,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\telemetry\\flow_analyzer.py",
          "line_count": 640,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\telemetry\\performance_monitor.py",
          "line_count": 554,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\telemetry\\system_profiler.py",
          "line_count": 599,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\telemetry\\telemetry_collector.py",
          "line_count": 421,
          "size_category": "large"
        },
        {
          "file": "testmaster\\telemetry\\telemetry_dashboard.py",
          "line_count": 624,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\telemetry\\__init__.py",
          "line_count": 211,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\ui\\metrics_display.py",
          "line_count": 672,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\ui\\__init__.py",
          "line_count": 29,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\verification\\base.py",
          "line_count": 396,
          "size_category": "large"
        },
        {
          "file": "testmaster\\verification\\quality.py",
          "line_count": 438,
          "size_category": "large"
        },
        {
          "file": "testmaster\\verification\\self_healing.py",
          "line_count": 508,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\verification\\__init__.py",
          "line_count": 43,
          "size_category": "tiny"
        },
        {
          "file": "tests\\test_intelligence_ml.py",
          "line_count": 422,
          "size_category": "large"
        },
        {
          "file": "tests\\test_phase2_core_validation.py",
          "line_count": 569,
          "size_category": "huge"
        },
        {
          "file": "tests\\test_phase2_e2e_validation.py",
          "line_count": 1091,
          "size_category": "huge"
        },
        {
          "file": "tests\\test_phase2_integration_validation.py",
          "line_count": 677,
          "size_category": "huge"
        },
        {
          "file": "tests\\integration\\test_knowledge_graph_integration.py",
          "line_count": 440,
          "size_category": "large"
        },
        {
          "file": "tests\\integration\\test_knowledge_graph_simple.py",
          "line_count": 183,
          "size_category": "medium"
        },
        {
          "file": "tools\\migration\\analyze_legacy_code.py",
          "line_count": 398,
          "size_category": "large"
        },
        {
          "file": "tools\\migration\\safety_checker.py",
          "line_count": 466,
          "size_category": "large"
        },
        {
          "file": "ui\\nocode_enhancement.py",
          "line_count": 879,
          "size_category": "huge"
        },
        {
          "file": "ui\\unified_dashboard.py",
          "line_count": 1131,
          "size_category": "huge"
        },
        {
          "file": "ui_ux\\studio_interface.py",
          "line_count": 634,
          "size_category": "huge"
        }
      ]
    },
    "intelligence": {
      "file_count": 1384,
      "total_lines": 721190,
      "scattered_across": 208,
      "directories": [
        "testmaster\\intelligence\\llm_providers",
        "testmaster\\core",
        "core\\intelligence\\documentation\\revolutionary",
        "testmaster\\intelligence\\documentation\\core",
        "ui_ux",
        "core\\intelligence\\integration",
        "core\\intelligence\\security\\audit",
        "testmaster\\async_processing",
        "prioritization",
        "core\\state",
        "core\\intelligence\\documentation\\intelligence\\optimization",
        "observability",
        "archive\\phase1c_consolidation_20250820_150000\\integration",
        "testmaster\\streaming",
        "dashboard\\dashboard_core",
        "core\\intelligence\\visualization",
        "workflow",
        "testmaster\\intelligence\\integration\\coordination",
        "testmaster\\overview",
        "core\\intelligence\\documentation",
        "analysis\\comprehensive_analysis\\ml_analysis",
        "core",
        "tests",
        "analysis\\comprehensive_analysis\\pattern_recognition",
        "testmaster\\intelligence\\integration",
        "testmaster\\intelligence\\documentation\\integrations",
        "analysis\\comprehensive_analysis\\energy_analysis",
        "archive\\oversized_modules_20250821_042018\\monitoring",
        "core\\intelligence\\testing\\automation",
        "testmaster\\intelligence\\documentation",
        "core\\intelligence\\testing",
        "core\\intelligence\\testing\\security",
        "archive\\original_backup\\optimization",
        "analysis\\comprehensive_analysis\\anomaly_detection",
        "analysis\\comprehensive_analysis\\workflow_analysis",
        "orchestration",
        "agents\\roles",
        "archive\\original_backup\\scripts",
        "dashboard\\api",
        "core\\intelligence\\documentation\\enterprise",
        "optimization",
        "archive\\original_backup\\cache",
        "core\\intelligence\\validation\\integration_test_suite_modules",
        "core\\intelligence\\testing\\ai_generation",
        "scripts",
        "core\\security",
        "cache",
        "archive",
        "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components",
        "core\\intelligence",
        "core\\intelligence\\monitoring\\agent_qa_modules",
        "testmaster\\mapping",
        "observability\\core",
        "core\\intelligence\\ml\\advanced\\performance_optimizer_modules",
        "config",
        "testmaster\\intelligence\\integration\\events",
        "testmaster",
        ".",
        "testmaster\\intelligence\\monitoring",
        "core\\observability",
        "core\\intelligence\\streaming",
        "testmaster\\core\\ast_abstraction",
        "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components",
        "core\\intelligence\\validation",
        "core\\intelligence\\enterprise\\api",
        "testmaster\\analysis\\comprehensive_analysis",
        "core\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules",
        "agents\\team",
        "integration",
        "archive\\phase7_archive\\replaced_code",
        "deployment",
        "core\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules",
        "testmaster\\orchestration",
        "testmaster\\orchestrator",
        "api",
        "archive\\original_backup\\analytics",
        "analysis\\comprehensive_analysis\\business_analysis",
        "core\\intelligence\\security",
        "core\\intelligence\\coordination\\resource_coordination_system_modules",
        "analysis\\comprehensive_analysis\\security_monitoring",
        "analytics",
        "core\\intelligence\\knowledge_graph",
        "testmaster\\telemetry",
        "archive\\phase5_archive\\replaced_code",
        "core\\intelligence\\queuing",
        "testmaster\\intelligence\\integration\\layers",
        "testmaster\\maintenance",
        "core\\tools",
        "core\\intelligence\\documentation\\intelligence",
        "archive\\placeholder_backups_20250820_011745\\integration",
        "testmaster\\breaking",
        "core\\intelligence\\caching",
        "archive\\original_backup\\config",
        "archive\\oversized_modules_20250821_042018\\validation",
        "core\\intelligence\\testing\\advanced",
        "core\\intelligence\\ml\\advanced\\delivery_optimizer_modules",
        "archive\\modularization_20250820_222253",
        "monitoring",
        "analysis\\comprehensive_analysis\\pattern_mining",
        "testmaster\\intelligence\\integration\\features",
        "testmaster\\intelligence\\integration\\agents",
        "tools\\migration",
        "core\\intelligence\\integration\\components",
        "testmaster\\intelligence\\integration\\storage",
        "core\\intelligence\\coordination\\unified_workflow_orchestrator_modules",
        "testmaster\\integration",
        "archive\\phase6_archive\\replaced_code",
        "testmaster\\intelligence\\documentation\\quality",
        "testmaster\\intelligence\\tree_of_thought",
        "dashboard",
        "archive\\legacy_scripts",
        "archive\\oversized_modules_20250821_042018\\ml\\advanced",
        "archive\\original_backup\\integration",
        "analysis\\comprehensive_analysis",
        "archive\\original_backup\\incremental",
        "archive\\placeholder_backups_20250820_011817\\integration",
        "core\\intelligence\\ml\\advanced\\circuit_breaker_ml_modules",
        "incremental",
        "analysis\\comprehensive_analysis\\metaprog_analysis",
        "consolidation",
        "core\\intelligence\\ml\\advanced",
        "testmaster\\reporting",
        "testmaster\\intelligence\\consensus",
        "core\\intelligence\\testing\\components",
        "core\\intelligence\\api\\enterprise_integration_layer_modules",
        "core\\intelligence\\config",
        "core\\intelligence\\coordination\\agent_coordination_protocols_modules",
        "core\\intelligence\\compatibility",
        "testmaster\\intelligence\\documentation\\templates",
        "core\\intelligence\\testing\\enterprise",
        "core\\orchestration",
        "core\\intelligence\\correlation",
        "core\\intelligence\\validation\\system_validation_framework_modules",
        "testmaster\\ui",
        "src",
        "core\\intelligence\\data_pipeline",
        "core\\intelligence\\analysis\\business_analyzer_modules",
        "core\\intelligence\\security\\enterprise",
        "testmaster\\monitoring",
        "archive\\20250818",
        "core\\intelligence\\api\\ml_api_modules",
        "core\\intelligence\\analytics\\realtime",
        "analysis\\comprehensive_analysis\\realtime_analysis",
        "archive\\phase4_archive\\replaced_code",
        "testmaster\\intelligence\\hierarchical_planning",
        "testmaster\\intelligence\\security",
        "analysis\\comprehensive_analysis\\debt_analysis",
        "testmaster\\verification",
        "ui",
        "testmaster\\generators",
        "archive\\oversized_modules_20250821_042018\\ml\\enterprise",
        "testmaster\\intelligence\\documentation\\generators",
        "archive\\original_backup",
        "core\\intelligence\\prediction",
        "core\\intelligence\\ml\\advanced\\integrity_ml_guardian_modules",
        "core\\intelligence\\security\\enterprise\\validation",
        "core\\intelligence\\ml",
        "testmaster\\intelligence\\documentation\\templates\\api",
        "core\\reliability",
        "core\\intelligence\\ml\\enterprise",
        "testmaster\\core\\language_detection",
        "core\\intelligence\\api",
        "archive\\oversized_modules_20250821_042018\\analysis",
        "core\\intelligence\\base",
        "testmaster\\core\\framework_abstraction",
        "analysis\\comprehensive_analysis\\semantic_analysis",
        "core\\intelligence\\analytics",
        "core\\intelligence\\documentation\\revolutionary\\neo4j_dominator_modules",
        "state",
        "archive\\original_backup\\dashboard",
        "tests\\integration",
        "testmaster\\refactoring",
        "archive\\oversized_modules_20250821_042018\\coordination",
        "core\\intelligence\\orchestration",
        "analysis\\comprehensive_analysis\\cognitive_load",
        "analysis\\comprehensive_analysis\\data_pipeline",
        "core\\intelligence\\analysis",
        "validation",
        "archive\\modularization_integration",
        "core\\intelligence\\analytics\\advanced",
        "analysis\\comprehensive_analysis\\data_security",
        "core\\intelligence\\security\\enterprise\\intelligence",
        "core\\intelligence\\enterprise",
        "testmaster\\converters",
        "archive\\COMPLETE_REFACTOR_20250818_112844",
        "core\\intelligence\\analysis\\debt_analyzer_modules",
        "testmaster\\security",
        "core\\intelligence\\coordination",
        "archive\\modularization_20250821",
        "core\\intelligence\\monitoring",
        "testmaster\\intelligence\\optimization",
        "testmaster\\intelligence",
        "testmaster\\intelligence\\bridges",
        "archive\\original_backup\\src",
        "testmaster\\agent_qa",
        "core\\testing",
        "archive\\original_backup\\deduplication",
        "agents\\supervisor",
        "deduplication",
        "archive\\oversized_modules_20250821_042018\\documentation\\revolutionary",
        "testmaster\\flow_optimizer",
        "analysis\\comprehensive_analysis\\domain_modeling",
        "archive\\phase1c_consolidation_20250820_150000",
        "core\\intelligence\\monitoring\\performance_optimization_engine_modules",
        "core\\intelligence\\reliability",
        "core\\intelligence\\dashboard",
        "testmaster\\communication",
        "archive\\oversized_modules_20250821_042018\\api"
      ],
      "consolidation_opportunity": true,
      "files": [
        {
          "file": "accelerated_converter.py",
          "line_count": 256,
          "size_category": "medium"
        },
        {
          "file": "agent_d_comprehensive_test_executor.py",
          "line_count": 911,
          "size_category": "huge"
        },
        {
          "file": "architecture_centralization_analysis.py",
          "line_count": 509,
          "size_category": "huge"
        },
        {
          "file": "ARCHIVE_PROTECTION_SYSTEM.py",
          "line_count": 400,
          "size_category": "large"
        },
        {
          "file": "auto_readme_updater.py",
          "line_count": 619,
          "size_category": "huge"
        },
        {
          "file": "batch_convert_broken_tests.py",
          "line_count": 191,
          "size_category": "medium"
        },
        {
          "file": "comprehensive_classical_analysis_methods.py",
          "line_count": 736,
          "size_category": "huge"
        },
        {
          "file": "comprehensive_codebase_analysis.py",
          "line_count": 332,
          "size_category": "large"
        },
        {
          "file": "comprehensive_feature_audit.py",
          "line_count": 665,
          "size_category": "huge"
        },
        {
          "file": "convert_batch_small.py",
          "line_count": 150,
          "size_category": "medium"
        },
        {
          "file": "convert_with_genai_sdk.py",
          "line_count": 182,
          "size_category": "medium"
        },
        {
          "file": "convert_with_generativeai.py",
          "line_count": 161,
          "size_category": "medium"
        },
        {
          "file": "create_real_implementations.py",
          "line_count": 873,
          "size_category": "huge"
        },
        {
          "file": "debug_feature_flags.py",
          "line_count": 18,
          "size_category": "tiny"
        },
        {
          "file": "debug_integration_tests.py",
          "line_count": 175,
          "size_category": "medium"
        },
        {
          "file": "DEMONSTRATION_OF_SUPERIORITY.py",
          "line_count": 287,
          "size_category": "medium"
        },
        {
          "file": "documentation_cli.py",
          "line_count": 706,
          "size_category": "huge"
        },
        {
          "file": "enable_deep_integration.py",
          "line_count": 240,
          "size_category": "medium"
        },
        {
          "file": "enable_features.py",
          "line_count": 77,
          "size_category": "small"
        },
        {
          "file": "enhanced_context_aware_test_generator.py",
          "line_count": 428,
          "size_category": "large"
        },
        {
          "file": "enhanced_incremental_ast_engine.py",
          "line_count": 826,
          "size_category": "huge"
        },
        {
          "file": "enhanced_intelligent_test_builder.py",
          "line_count": 614,
          "size_category": "huge"
        },
        {
          "file": "enhanced_realtime_security_monitor.py",
          "line_count": 1108,
          "size_category": "huge"
        },
        {
          "file": "enhanced_security_dashboard_api.py",
          "line_count": 701,
          "size_category": "huge"
        },
        {
          "file": "enhanced_security_intelligence_agent.py",
          "line_count": 1091,
          "size_category": "huge"
        },
        {
          "file": "enhanced_self_healing_verifier.py",
          "line_count": 512,
          "size_category": "huge"
        },
        {
          "file": "enhance_analytics.py",
          "line_count": 466,
          "size_category": "large"
        },
        {
          "file": "enhance_auto_generated_tests.py",
          "line_count": 349,
          "size_category": "large"
        },
        {
          "file": "enhance_missing_robust_systems.py",
          "line_count": 1247,
          "size_category": "huge"
        },
        {
          "file": "exhaustive_stub_analysis.py",
          "line_count": 385,
          "size_category": "large"
        },
        {
          "file": "finalize_module_splits.py",
          "line_count": 236,
          "size_category": "medium"
        },
        {
          "file": "final_100_percent_fix.py",
          "line_count": 225,
          "size_category": "medium"
        },
        {
          "file": "final_archive_sweep.py",
          "line_count": 295,
          "size_category": "medium"
        },
        {
          "file": "final_integration_fix.py",
          "line_count": 289,
          "size_category": "medium"
        },
        {
          "file": "find_all_stubs.py",
          "line_count": 274,
          "size_category": "medium"
        },
        {
          "file": "find_critical_stubs.py",
          "line_count": 141,
          "size_category": "small"
        },
        {
          "file": "fix_all_integration_systems.py",
          "line_count": 246,
          "size_category": "medium"
        },
        {
          "file": "fix_analytics_aggregator.py",
          "line_count": 43,
          "size_category": "tiny"
        },
        {
          "file": "fix_backend_issues.py",
          "line_count": 323,
          "size_category": "large"
        },
        {
          "file": "fix_dashboard_imports.py",
          "line_count": 91,
          "size_category": "small"
        },
        {
          "file": "fix_enhanced_test_imports.py",
          "line_count": 230,
          "size_category": "medium"
        },
        {
          "file": "fix_failing_tests.py",
          "line_count": 225,
          "size_category": "medium"
        },
        {
          "file": "fix_final_four_systems.py",
          "line_count": 150,
          "size_category": "medium"
        },
        {
          "file": "fix_final_issues.py",
          "line_count": 168,
          "size_category": "medium"
        },
        {
          "file": "fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "fix_integration_issues_final.py",
          "line_count": 259,
          "size_category": "medium"
        },
        {
          "file": "fix_integration_tests.py",
          "line_count": 249,
          "size_category": "medium"
        },
        {
          "file": "fix_integration_tests_simple.py",
          "line_count": 129,
          "size_category": "small"
        },
        {
          "file": "fix_syntax.py",
          "line_count": 26,
          "size_category": "tiny"
        },
        {
          "file": "fix_testmaster_imports.py",
          "line_count": 149,
          "size_category": "small"
        },
        {
          "file": "fix_tests_for_real_modules.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "fix_to_100_percent.py",
          "line_count": 508,
          "size_category": "huge"
        },
        {
          "file": "fix_week2_test_imports.py",
          "line_count": 125,
          "size_category": "small"
        },
        {
          "file": "IMPLEMENTATION_STATUS_CHECK.py",
          "line_count": 254,
          "size_category": "medium"
        },
        {
          "file": "implement_test_stubs.py",
          "line_count": 507,
          "size_category": "huge"
        },
        {
          "file": "independent_test_verifier.py",
          "line_count": 215,
          "size_category": "medium"
        },
        {
          "file": "integration_test_generator.py",
          "line_count": 572,
          "size_category": "huge"
        },
        {
          "file": "intelligent_test_builder.py",
          "line_count": 359,
          "size_category": "large"
        },
        {
          "file": "intelligent_test_builder_offline.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "intelligent_test_builder_v2.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "layer3_integration_example.py",
          "line_count": 522,
          "size_category": "huge"
        },
        {
          "file": "live_code_quality_monitor.py",
          "line_count": 1045,
          "size_category": "huge"
        },
        {
          "file": "llm_analysis_monitor.py",
          "line_count": 729,
          "size_category": "huge"
        },
        {
          "file": "modularize_api_templates.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "modularize_coverage_analyzer.py",
          "line_count": 257,
          "size_category": "medium"
        },
        {
          "file": "monitor_progress.py",
          "line_count": 30,
          "size_category": "tiny"
        },
        {
          "file": "monitor_to_100.py",
          "line_count": 38,
          "size_category": "tiny"
        },
        {
          "file": "parallel_converter.py",
          "line_count": 311,
          "size_category": "large"
        },
        {
          "file": "parallel_converter_fixed.py",
          "line_count": 352,
          "size_category": "large"
        },
        {
          "file": "performance_profiler.py",
          "line_count": 634,
          "size_category": "huge"
        },
        {
          "file": "phase7_validation.py",
          "line_count": 364,
          "size_category": "large"
        },
        {
          "file": "quick_test_summary.py",
          "line_count": 60,
          "size_category": "small"
        },
        {
          "file": "realtime_metrics_collector.py",
          "line_count": 614,
          "size_category": "huge"
        },
        {
          "file": "real_time_monitor.py",
          "line_count": 563,
          "size_category": "huge"
        },
        {
          "file": "refine_misc_tests.py",
          "line_count": 189,
          "size_category": "medium"
        },
        {
          "file": "replace_stubs_with_archive_implementations.py",
          "line_count": 292,
          "size_category": "medium"
        },
        {
          "file": "restored_asyncio_4.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "restored_asyncio_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_asyncio_6.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "restored_json_4.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "restored_json_5.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "restored_json_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_logging_4.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "restored_logging_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_logging_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_os_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_random_6.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "restored_sys_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_threading_4.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "restored_threading_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_threading_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_time_4.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "restored_time_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_time_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_uuid_4.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "restored_uuid_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_uuid_6.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "restore_archive_robust.py",
          "line_count": 1537,
          "size_category": "huge"
        },
        {
          "file": "restore_missing_methods.py",
          "line_count": 535,
          "size_category": "huge"
        },
        {
          "file": "restore_real_implementations.py",
          "line_count": 163,
          "size_category": "medium"
        },
        {
          "file": "restore_robust_implementations.py",
          "line_count": 175,
          "size_category": "medium"
        },
        {
          "file": "risk_based_test_targeter.py",
          "line_count": 884,
          "size_category": "huge"
        },
        {
          "file": "run_debt_analysis.py",
          "line_count": 96,
          "size_category": "small"
        },
        {
          "file": "run_integration_test.py",
          "line_count": 185,
          "size_category": "medium"
        },
        {
          "file": "run_intelligent_tests.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "run_security_scan.py",
          "line_count": 95,
          "size_category": "small"
        },
        {
          "file": "simple_integration_test.py",
          "line_count": 100,
          "size_category": "small"
        },
        {
          "file": "simple_test.py",
          "line_count": 126,
          "size_category": "small"
        },
        {
          "file": "simple_test_runner.py",
          "line_count": 86,
          "size_category": "small"
        },
        {
          "file": "simple_web_monitor.py",
          "line_count": 191,
          "size_category": "medium"
        },
        {
          "file": "specialized_test_generators.py",
          "line_count": 816,
          "size_category": "huge"
        },
        {
          "file": "split_massive_test_file.py",
          "line_count": 225,
          "size_category": "medium"
        },
        {
          "file": "split_oversized_modules.py",
          "line_count": 278,
          "size_category": "medium"
        },
        {
          "file": "start_monitoring.py",
          "line_count": 264,
          "size_category": "medium"
        },
        {
          "file": "testmaster_orchestrator.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "test_100_percent_integration.py",
          "line_count": 227,
          "size_category": "medium"
        },
        {
          "file": "test_advanced_telemetry_system.py",
          "line_count": 506,
          "size_category": "huge"
        },
        {
          "file": "test_after_refactor.py",
          "line_count": 255,
          "size_category": "medium"
        },
        {
          "file": "test_agent_b_integrations.py",
          "line_count": 312,
          "size_category": "large"
        },
        {
          "file": "test_agent_qa_integration.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "test_agent_qa_system.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "test_analyzer_tab.py",
          "line_count": 50,
          "size_category": "small"
        },
        {
          "file": "test_api_functionality.py",
          "line_count": 223,
          "size_category": "medium"
        },
        {
          "file": "test_async_processing.py",
          "line_count": 407,
          "size_category": "large"
        },
        {
          "file": "test_backend_health.py",
          "line_count": 419,
          "size_category": "large"
        },
        {
          "file": "test_before_refactor.py",
          "line_count": 331,
          "size_category": "large"
        },
        {
          "file": "test_classical_analysis.py",
          "line_count": 292,
          "size_category": "medium"
        },
        {
          "file": "test_complexity_prioritizer.py",
          "line_count": 690,
          "size_category": "huge"
        },
        {
          "file": "test_comprehensive_analysis.py",
          "line_count": 190,
          "size_category": "medium"
        },
        {
          "file": "test_config_intelligence.py",
          "line_count": 133,
          "size_category": "small"
        },
        {
          "file": "test_dependency_orderer.py",
          "line_count": 687,
          "size_category": "huge"
        },
        {
          "file": "test_dynamic_handoff_integration.py",
          "line_count": 254,
          "size_category": "medium"
        },
        {
          "file": "test_enhanced_analysis.py",
          "line_count": 117,
          "size_category": "small"
        },
        {
          "file": "test_enhanced_core_integration.py",
          "line_count": 324,
          "size_category": "large"
        },
        {
          "file": "test_enhanced_server.py",
          "line_count": 76,
          "size_category": "small"
        },
        {
          "file": "test_enhancements.py",
          "line_count": 397,
          "size_category": "large"
        },
        {
          "file": "test_exhaustive_features.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "test_final_integration.py",
          "line_count": 204,
          "size_category": "medium"
        },
        {
          "file": "test_flow_optimizer_system.py",
          "line_count": 609,
          "size_category": "huge"
        },
        {
          "file": "test_graph_workflow_integration.py",
          "line_count": 400,
          "size_category": "large"
        },
        {
          "file": "test_hierarchical_planning_complete.py",
          "line_count": 200,
          "size_category": "medium"
        },
        {
          "file": "test_integration_restoration.py",
          "line_count": 291,
          "size_category": "medium"
        },
        {
          "file": "test_integration_systems.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "test_intelligence_integration.py",
          "line_count": 462,
          "size_category": "large"
        },
        {
          "file": "test_llm_intelligence.py",
          "line_count": 42,
          "size_category": "tiny"
        },
        {
          "file": "test_multi_objective_optimization.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "test_our_implementations.py",
          "line_count": 184,
          "size_category": "medium"
        },
        {
          "file": "test_performance_dashboard_integration.py",
          "line_count": 309,
          "size_category": "large"
        },
        {
          "file": "test_phase1_integration.py",
          "line_count": 274,
          "size_category": "medium"
        },
        {
          "file": "test_phase1_simple.py",
          "line_count": 103,
          "size_category": "small"
        },
        {
          "file": "test_phase2_exhaustive_validation.py",
          "line_count": 249,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_final_validation.py",
          "line_count": 271,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_integration.py",
          "line_count": 255,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_quick_validation.py",
          "line_count": 222,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_simple.py",
          "line_count": 99,
          "size_category": "small"
        },
        {
          "file": "test_phase2_simple_validation.py",
          "line_count": 172,
          "size_category": "medium"
        },
        {
          "file": "test_phase3_complete.py",
          "line_count": 347,
          "size_category": "large"
        },
        {
          "file": "test_phase3_deployment.py",
          "line_count": 191,
          "size_category": "medium"
        },
        {
          "file": "test_phase3_ui.py",
          "line_count": 190,
          "size_category": "medium"
        },
        {
          "file": "test_reporting_system.py",
          "line_count": 423,
          "size_category": "large"
        },
        {
          "file": "test_security_api_server.py",
          "line_count": 46,
          "size_category": "tiny"
        },
        {
          "file": "test_security_full_integration.py",
          "line_count": 530,
          "size_category": "huge"
        },
        {
          "file": "test_security_integration_validation.py",
          "line_count": 329,
          "size_category": "large"
        },
        {
          "file": "test_streaming_generation.py",
          "line_count": 432,
          "size_category": "large"
        },
        {
          "file": "test_streaming_simple.py",
          "line_count": 164,
          "size_category": "medium"
        },
        {
          "file": "test_tot_integration.py",
          "line_count": 165,
          "size_category": "medium"
        },
        {
          "file": "test_tracking_manager_integration.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "test_unified_integration.py",
          "line_count": 249,
          "size_category": "medium"
        },
        {
          "file": "test_universal_ast_system.py",
          "line_count": 579,
          "size_category": "huge"
        },
        {
          "file": "test_universal_language_detector.py",
          "line_count": 693,
          "size_category": "huge"
        },
        {
          "file": "turbo_converter.py",
          "line_count": 264,
          "size_category": "medium"
        },
        {
          "file": "unified_orchestration_example.py",
          "line_count": 407,
          "size_category": "large"
        },
        {
          "file": "unified_security_scanner.py",
          "line_count": 1124,
          "size_category": "huge"
        },
        {
          "file": "utility_analysis_report.py",
          "line_count": 405,
          "size_category": "large"
        },
        {
          "file": "validate_api_endpoints.py",
          "line_count": 787,
          "size_category": "huge"
        },
        {
          "file": "validate_dashboard_core.py",
          "line_count": 156,
          "size_category": "medium"
        },
        {
          "file": "validate_newton_destroyer.py",
          "line_count": 112,
          "size_category": "small"
        },
        {
          "file": "validate_phase_1_7.py",
          "line_count": 186,
          "size_category": "medium"
        },
        {
          "file": "verify_classical_modules.py",
          "line_count": 96,
          "size_category": "small"
        },
        {
          "file": "web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "week_5_8_batch_converter.py",
          "line_count": 331,
          "size_category": "large"
        },
        {
          "file": "week_7_8_converter.py",
          "line_count": 350,
          "size_category": "large"
        },
        {
          "file": "write_real_tests.py",
          "line_count": 248,
          "size_category": "medium"
        },
        {
          "file": "agents\\roles\\base_role.py",
          "line_count": 373,
          "size_category": "large"
        },
        {
          "file": "agents\\roles\\quality_assurance.py",
          "line_count": 40,
          "size_category": "tiny"
        },
        {
          "file": "agents\\roles\\test_architect.py",
          "line_count": 945,
          "size_category": "huge"
        },
        {
          "file": "agents\\roles\\test_engineer.py",
          "line_count": 917,
          "size_category": "huge"
        },
        {
          "file": "agents\\roles\\test_executor.py",
          "line_count": 36,
          "size_category": "tiny"
        },
        {
          "file": "agents\\supervisor\\testing_supervisor.py",
          "line_count": 492,
          "size_category": "large"
        },
        {
          "file": "agents\\team\\testing_team.py",
          "line_count": 429,
          "size_category": "large"
        },
        {
          "file": "analysis\\comprehensive_analysis\\__init__.py",
          "line_count": 64,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\anomaly_detection\\anomaly_detection_analyzer.py",
          "line_count": 882,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\business_analysis\\business_domain_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\business_analysis\\business_rule_analysis_wrapper.py",
          "line_count": 70,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\business_analysis\\_shared_utils.py",
          "line_count": 42,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\business_analysis\\__init__.py",
          "line_count": 17,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\cognitive_load\\cognitive_load_analyzer.py",
          "line_count": 1113,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\data_pipeline\\data_pipeline_analyzer.py",
          "line_count": 964,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\data_security\\data_leakage_detector.py",
          "line_count": 795,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\debt_analysis\\technical_debt_analysis_wrapper.py",
          "line_count": 68,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\debt_analysis\\_shared_utils.py",
          "line_count": 42,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\domain_modeling\\domain_model_analyzer.py",
          "line_count": 921,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\domain_modeling\\__init__.py",
          "line_count": 9,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\energy_analysis\\energy_consumption_analysis_wrapper.py",
          "line_count": 68,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\energy_analysis\\_shared_utils.py",
          "line_count": 42,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprogramming_analysis_wrapper.py",
          "line_count": 68,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\metaprog_analysis\\_shared_utils.py",
          "line_count": 42,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_code_analysis_wrapper.py",
          "line_count": 257,
          "size_category": "medium"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_core_analyzer.py",
          "line_count": 397,
          "size_category": "large"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_data_analyzer.py",
          "line_count": 513,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_model_analyzer.py",
          "line_count": 550,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_tensor_analyzer.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\_shared_utils.py",
          "line_count": 296,
          "size_category": "medium"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\__init__.py",
          "line_count": 17,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\pattern_mining\\cross_repo_pattern_miner.py",
          "line_count": 1142,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\pattern_recognition\\ml_pattern_recognition.py",
          "line_count": 951,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\pattern_recognition\\__init__.py",
          "line_count": 9,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\realtime_analysis\\realtime_ast_engine.py",
          "line_count": 974,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py",
          "line_count": 1038,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_analysis_wrapper.py",
          "line_count": 68,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\semantic_analysis\\_shared_utils.py",
          "line_count": 42,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\workflow_analysis\\workflow_pattern_detector.py",
          "line_count": 1118,
          "size_category": "huge"
        },
        {
          "file": "analytics\\failure_analyzer.py",
          "line_count": 661,
          "size_category": "huge"
        },
        {
          "file": "api\\orchestration_api.py",
          "line_count": 447,
          "size_category": "large"
        },
        {
          "file": "api\\orchestration_flask.py",
          "line_count": 475,
          "size_category": "large"
        },
        {
          "file": "api\\phase2_api.py",
          "line_count": 531,
          "size_category": "huge"
        },
        {
          "file": "api\\phase3_api.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "archive\\advanced_testing_intelligence.py",
          "line_count": 770,
          "size_category": "huge"
        },
        {
          "file": "archive\\archive_system.py",
          "line_count": 312,
          "size_category": "large"
        },
        {
          "file": "archive\\coverage_analyzer_original_2697_lines.py",
          "line_count": 2698,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_business_rule_analysis_original.py",
          "line_count": 1213,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "line_count": 1188,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "line_count": 1206,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_ml_code_analysis_original.py",
          "line_count": 1249,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_semantic_analysis_original.py",
          "line_count": 1244,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_technical_debt_analysis_original.py",
          "line_count": 1301,
          "size_category": "huge"
        },
        {
          "file": "archive\\integration_hub_original_20250820_220939.py",
          "line_count": 1877,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_energy_consumption_analysis.py",
          "line_count": 1188,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_metaprogramming_analysis.py",
          "line_count": 1206,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_ml_code_analysis.py",
          "line_count": 1249,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_technical_debt_analysis.py",
          "line_count": 1301,
          "size_category": "huge"
        },
        {
          "file": "archive\\20250818\\web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "line_count": 789,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_aggregator.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "line_count": 622,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
          "line_count": 449,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_batch_processor.py",
          "line_count": 495,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "line_count": 577,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_compressor.py",
          "line_count": 471,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_correlator.py",
          "line_count": 440,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "line_count": 893,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "line_count": 667,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "line_count": 1290,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "line_count": 775,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_enhancer.py",
          "line_count": 407,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "line_count": 661,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "line_count": 598,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "line_count": 658,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "line_count": 580,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_flow_monitor.py",
          "line_count": 579,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "line_count": 725,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "line_count": 690,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "line_count": 776,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "line_count": 626,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "line_count": 656,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_optimizer.py",
          "line_count": 378,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "line_count": 555,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_monitor.py",
          "line_count": 495,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "line_count": 703,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "line_count": 899,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "line_count": 766,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "line_count": 1192,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "line_count": 835,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "line_count": 850,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "line_count": 749,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "line_count": 694,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
          "line_count": 498,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "line_count": 723,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "line_count": 448,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "line_count": 680,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_validator.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "line_count": 674,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "line_count": 1142,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "line_count": 2698,
          "size_category": "huge"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_enhanced_test_imports.py",
          "line_count": 230,
          "size_category": "medium"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_failing_tests.py",
          "line_count": 225,
          "size_category": "medium"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_syntax.py",
          "line_count": 26,
          "size_category": "tiny"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_tests_for_real_modules.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_week2_test_imports.py",
          "line_count": 125,
          "size_category": "small"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\accelerated_converter.py",
          "line_count": 256,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\achieve_100_percent.py",
          "line_count": 262,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\achieve_100_percent_coverage.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\ai_test_generator.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\automated_test_generation.py",
          "line_count": 949,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\batch_convert_broken_tests.py",
          "line_count": 191,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\batch_gemini_generator.py",
          "line_count": 148,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\branch_coverage_analyzer.py",
          "line_count": 462,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\check_what_needs_tests.py",
          "line_count": 58,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\comprehensive_test_framework.py",
          "line_count": 697,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\convert_batch_small.py",
          "line_count": 150,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\convert_with_genai_sdk.py",
          "line_count": 182,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\convert_with_generativeai.py",
          "line_count": 161,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\coverage_analysis.py",
          "line_count": 669,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\coverage_baseline.py",
          "line_count": 244,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\coverage_improver.py",
          "line_count": 484,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\data_flow_tests.py",
          "line_count": 797,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\diagnose_final_five.py",
          "line_count": 201,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
          "line_count": 428,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\enhanced_self_healing_verifier.py",
          "line_count": 512,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\enhance_auto_generated_tests.py",
          "line_count": 349,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\fast_converter.py",
          "line_count": 136,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\final_five_converter.py",
          "line_count": 154,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\find_truly_missing.py",
          "line_count": 74,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\fix_all_imports.py",
          "line_count": 91,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\fix_enhanced_test_imports.py",
          "line_count": 230,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\fix_failing_tests.py",
          "line_count": 225,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\fix_remaining_issues.py",
          "line_count": 398,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\fix_tests_for_real_modules.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\fix_test_infrastructure.py",
          "line_count": 338,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\fix_week2_test_imports.py",
          "line_count": 125,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\gemini_powered_test_generator.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\gemini_test_generator.py",
          "line_count": 490,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\generate_coverage_sequential.py",
          "line_count": 268,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\implement_test_stubs.py",
          "line_count": 507,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\independent_test_verifier.py",
          "line_count": 215,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\integration_test_generator.py",
          "line_count": 572,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\integration_test_matrix.py",
          "line_count": 1159,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\intelligent_converter.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\intelligent_test_builder.py",
          "line_count": 359,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\intelligent_test_builder_offline.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\intelligent_test_builder_v2.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\measure_final_coverage.py",
          "line_count": 124,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\monitor_progress.py",
          "line_count": 30,
          "size_category": "tiny"
        },
        {
          "file": "archive\\legacy_scripts\\monitor_to_100.py",
          "line_count": 38,
          "size_category": "tiny"
        },
        {
          "file": "archive\\legacy_scripts\\parallel_converter.py",
          "line_count": 311,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\parallel_converter_fixed.py",
          "line_count": 352,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\parallel_converter_working.py",
          "line_count": 297,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\parallel_coverage_converter.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\parallel_coverage_converter_fixed.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\quick_coverage_boost.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\quick_test_generator.py",
          "line_count": 112,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\quick_test_summary.py",
          "line_count": 60,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\run_intelligent_tests.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\run_limited_coverage.py",
          "line_count": 49,
          "size_category": "tiny"
        },
        {
          "file": "archive\\legacy_scripts\\self_healing_converter.py",
          "line_count": 384,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\simple_100_percent.py",
          "line_count": 146,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\simple_test_generator.py",
          "line_count": 182,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\simple_test_runner.py",
          "line_count": 86,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\smart_test_generator.py",
          "line_count": 452,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\specialized_test_generators.py",
          "line_count": 816,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\systematic_coverage.py",
          "line_count": 387,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\test_gemini_api.py",
          "line_count": 88,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\test_gemini_config.py",
          "line_count": 148,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\test_gemini_correct.py",
          "line_count": 115,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\test_single_api_call.py",
          "line_count": 174,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\test_single_generation.py",
          "line_count": 134,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\test_updated_prompt.py",
          "line_count": 174,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\turbo_converter.py",
          "line_count": 264,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\week_5_8_batch_converter.py",
          "line_count": 331,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\week_7_8_converter.py",
          "line_count": 350,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\working_test_generator.py",
          "line_count": 136,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\write_real_tests.py",
          "line_count": 248,
          "size_category": "medium"
        },
        {
          "file": "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "line_count": 1376,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "line_count": 1750,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\business_analyzer_original.py",
          "line_count": 1266,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "line_count": 1547,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "line_count": 953,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "line_count": 1877,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\accelerated_converter.py",
          "line_count": 256,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\batch_convert_broken_tests.py",
          "line_count": 191,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\convert_batch_small.py",
          "line_count": 150,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\convert_with_genai_sdk.py",
          "line_count": 182,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\convert_with_generativeai.py",
          "line_count": 161,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\enhanced_context_aware_test_generator.py",
          "line_count": 428,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\enhanced_self_healing_verifier.py",
          "line_count": 512,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\enhance_auto_generated_tests.py",
          "line_count": 349,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\fix_enhanced_test_imports.py",
          "line_count": 230,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\fix_failing_tests.py",
          "line_count": 225,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\fix_tests_for_real_modules.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\fix_week2_test_imports.py",
          "line_count": 125,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\implement_test_stubs.py",
          "line_count": 507,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\independent_test_verifier.py",
          "line_count": 215,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\integration_test_generator.py",
          "line_count": 572,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\intelligent_test_builder.py",
          "line_count": 359,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\intelligent_test_builder_offline.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\intelligent_test_builder_v2.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\monitor_progress.py",
          "line_count": 30,
          "size_category": "tiny"
        },
        {
          "file": "archive\\original_backup\\monitor_to_100.py",
          "line_count": 38,
          "size_category": "tiny"
        },
        {
          "file": "archive\\original_backup\\parallel_converter.py",
          "line_count": 311,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\parallel_converter_fixed.py",
          "line_count": 352,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\quick_test_summary.py",
          "line_count": 60,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\run_intelligent_tests.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\simple_test_runner.py",
          "line_count": 86,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\specialized_test_generators.py",
          "line_count": 816,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\testmaster_orchestrator.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\turbo_converter.py",
          "line_count": 264,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\week_5_8_batch_converter.py",
          "line_count": 331,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\week_7_8_converter.py",
          "line_count": 350,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\write_real_tests.py",
          "line_count": 248,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\analytics\\failure_analyzer.py",
          "line_count": 661,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\cache\\intelligent_cache.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\config\\testmaster_config.py",
          "line_count": 560,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\dashboard\\quality_dashboard.py",
          "line_count": 603,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\deduplication\\test_deduplicator.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\incremental\\dependency_tracker.py",
          "line_count": 642,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\integration\\cross_module_tester.py",
          "line_count": 859,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\optimization\\execution_optimizer.py",
          "line_count": 648,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\scripts\\achieve_100_percent.py",
          "line_count": 262,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\achieve_100_percent_coverage.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\ai_test_generator.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\scripts\\batch_gemini_generator.py",
          "line_count": 148,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\branch_coverage_analyzer.py",
          "line_count": 462,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\check_what_needs_tests.py",
          "line_count": 58,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\coverage_baseline.py",
          "line_count": 244,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\coverage_improver.py",
          "line_count": 484,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\diagnose_final_five.py",
          "line_count": 201,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\fast_converter.py",
          "line_count": 136,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\final_five_converter.py",
          "line_count": 154,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\find_truly_missing.py",
          "line_count": 74,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\fix_all_imports.py",
          "line_count": 91,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\fix_remaining_issues.py",
          "line_count": 398,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\fix_test_infrastructure.py",
          "line_count": 338,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\gemini_powered_test_generator.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\gemini_test_generator.py",
          "line_count": 490,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\generate_coverage_sequential.py",
          "line_count": 268,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\intelligent_converter.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\measure_final_coverage.py",
          "line_count": 124,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\parallel_converter_working.py",
          "line_count": 297,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\parallel_coverage_converter.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\parallel_coverage_converter_fixed.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\quick_coverage_boost.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\quick_test_generator.py",
          "line_count": 112,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\run_limited_coverage.py",
          "line_count": 49,
          "size_category": "tiny"
        },
        {
          "file": "archive\\original_backup\\scripts\\self_healing_converter.py",
          "line_count": 384,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\simple_100_percent.py",
          "line_count": 146,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\simple_test_generator.py",
          "line_count": 182,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\smart_test_generator.py",
          "line_count": 452,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\systematic_coverage.py",
          "line_count": 387,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\test_gemini_api.py",
          "line_count": 88,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\test_gemini_config.py",
          "line_count": 148,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\test_gemini_correct.py",
          "line_count": 115,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\test_single_api_call.py",
          "line_count": 174,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\test_single_generation.py",
          "line_count": 134,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\test_updated_prompt.py",
          "line_count": 174,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\working_test_generator.py",
          "line_count": 136,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\src\\automated_test_generation.py",
          "line_count": 949,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\src\\comprehensive_test_framework.py",
          "line_count": 697,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\src\\coverage_analysis.py",
          "line_count": 669,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\src\\data_flow_tests.py",
          "line_count": 797,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\src\\integration_test_matrix.py",
          "line_count": 1159,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "line_count": 1266,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
          "line_count": 1547,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\api\\enterprise_integration_layer.py",
          "line_count": 1160,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "line_count": 1151,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\coordination\\agent_coordination_protocols.py",
          "line_count": 1311,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\coordination\\resource_coordination_system.py",
          "line_count": 1030,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\coordination\\unified_workflow_orchestrator.py",
          "line_count": 1355,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\documentation\\revolutionary\\neo4j_dominator.py",
          "line_count": 1158,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "line_count": 1294,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\delivery_optimizer.py",
          "line_count": 1276,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\integrity_ml_guardian.py",
          "line_count": 1444,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\performance_optimizer.py",
          "line_count": 1144,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\sla_ml_optimizer.py",
          "line_count": 1627,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\enterprise\\ml_infrastructure_orchestrator.py",
          "line_count": 1117,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "line_count": 1750,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\monitoring\\performance_optimization_engine.py",
          "line_count": 1124,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\validation\\integration_test_suite.py",
          "line_count": 1062,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\validation\\system_validation_framework.py",
          "line_count": 1295,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "line_count": 715,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "line_count": 618,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\enhanced_monitor.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "line_count": 610,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "line_count": 757,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "line_count": 1051,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "line_count": 1201,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "line_count": 859,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "line_count": 618,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "line_count": 1287,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "line_count": 1302,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "line_count": 768,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
          "line_count": 991,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase4_archive\\replaced_code\\enhanced_monitor_20250819_195132.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase5_archive\\replaced_code\\agent_graph_20250819_195602.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "archive\\phase5_archive\\replaced_code\\enterprise_deployment_20250819_195602.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase5_archive\\replaced_code\\testing_team_20250819_195602.py",
          "line_count": 429,
          "size_category": "large"
        },
        {
          "file": "archive\\phase6_archive\\replaced_code\\agent_graph_20250819_200928.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase7_archive\\replaced_code\\enhanced_monitor_20250819_202006.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
          "line_count": 991,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
          "line_count": 991,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "cache\\intelligent_cache.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "config\\testmaster_config.py",
          "line_count": 560,
          "size_category": "huge"
        },
        {
          "file": "config\\yaml_config_enhancer.py",
          "line_count": 633,
          "size_category": "huge"
        },
        {
          "file": "consolidation\\feature_discovery.py",
          "line_count": 364,
          "size_category": "large"
        },
        {
          "file": "core\\async_state_manager.py",
          "line_count": 746,
          "size_category": "huge"
        },
        {
          "file": "core\\feature_flags.py",
          "line_count": 438,
          "size_category": "large"
        },
        {
          "file": "core\\framework_abstraction.py",
          "line_count": 604,
          "size_category": "huge"
        },
        {
          "file": "core\\framework_abstraction.stub_backup.py",
          "line_count": 361,
          "size_category": "large"
        },
        {
          "file": "core\\shared_state.py",
          "line_count": 610,
          "size_category": "huge"
        },
        {
          "file": "core\\tracking_manager.py",
          "line_count": 131,
          "size_category": "small"
        },
        {
          "file": "core\\__init__.py",
          "line_count": 116,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\orchestrator.py",
          "line_count": 390,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\__init__.py",
          "line_count": 541,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\business_analyzer.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\analysis\\business_analyzer_modular.py",
          "line_count": 343,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\business_base.py",
          "line_count": 251,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\business_constraint_analyzer.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\business_rule_extractor.py",
          "line_count": 360,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\business_workflow_analyzer.py",
          "line_count": 351,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_analyzer.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_analyzer_modular.py",
          "line_count": 282,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_base.py",
          "line_count": 197,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_code_analyzer.py",
          "line_count": 248,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_quantifier.py",
          "line_count": 338,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_test_analyzer.py",
          "line_count": 306,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\ml_analyzer.py",
          "line_count": 777,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\ml_code_analyzer.py",
          "line_count": 573,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_analyzer.py",
          "line_count": 953,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_analyzer_modular.py",
          "line_count": 259,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_base.py",
          "line_count": 252,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_pattern_detector.py",
          "line_count": 307,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\technical_debt_analyzer.py",
          "line_count": 574,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\__init__.py",
          "line_count": 496,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py",
          "line_count": 477,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\business_analyzer_modules\\__init__.py",
          "line_count": 12,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_analyzer_modules\\__init__.py",
          "line_count": 12,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\analytics\\advanced_anomaly_detector.py",
          "line_count": 299,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analytics\\analytics_anomaly_detector.py",
          "line_count": 578,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\analytics_deduplication.py",
          "line_count": 940,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\analytics_hub.py",
          "line_count": 641,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\predictive_analytics_engine.py",
          "line_count": 652,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\statistical_engine.py",
          "line_count": 318,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analytics\\__init__.py",
          "line_count": 799,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\advanced\\correlation_engine.py",
          "line_count": 589,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\realtime\\streaming_analytics.py",
          "line_count": 453,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\api\\endpoints.py",
          "line_count": 583,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\api\\enterprise_integration_layer.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\api\\intelligence_api.py",
          "line_count": 100,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\api\\intelligence_endpoints.py",
          "line_count": 393,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\api\\ml_api.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\api\\security_blueprint.py",
          "line_count": 170,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\api\\serializers.py",
          "line_count": 300,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\api\\unified_api_gateway.py",
          "line_count": 926,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\api\\unified_intelligence_api.py",
          "line_count": 453,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\api\\validators.py",
          "line_count": 373,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\api\\__init__.py",
          "line_count": 138,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\api\\enterprise_integration_layer_modules\\__init__.py",
          "line_count": 11,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\api\\ml_api_modules\\__init__.py",
          "line_count": 12,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\base\\__init__.py",
          "line_count": 571,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\caching\\distributed_smart_cache.py",
          "line_count": 743,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\compatibility\\__init__.py",
          "line_count": 600,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\config\\enterprise_config_manager.py",
          "line_count": 864,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\coordination\\agent_coordination_protocols.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\coordination\\cross_agent_bridge.py",
          "line_count": 907,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\coordination\\distributed_lock_manager.py",
          "line_count": 829,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\coordination\\resource_coordination_system.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\coordination\\service_discovery_registry.py",
          "line_count": 702,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\coordination\\unified_workflow_orchestrator.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\coordination\\agent_coordination_protocols_modules\\agent_coordination_protocols_core.py",
          "line_count": 10,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\coordination\\agent_coordination_protocols_modules\\__init__.py",
          "line_count": 10,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\coordination\\resource_coordination_system_modules\\resource_coordination_system_core.py",
          "line_count": 10,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\coordination\\resource_coordination_system_modules\\__init__.py",
          "line_count": 10,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\coordination\\unified_workflow_orchestrator_modules\\unified_workflow_orchestrator_core.py",
          "line_count": 10,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\coordination\\unified_workflow_orchestrator_modules\\__init__.py",
          "line_count": 10,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\correlation\\cross_system_analytics.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\dashboard\\intelligence_backend.py",
          "line_count": 412,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\data_pipeline\\advanced_data_pipeline.py",
          "line_count": 717,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\adaptive_template_system.py",
          "line_count": 613,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\agency_swarm_analyzer.py",
          "line_count": 181,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\documentation\\api_docs_extractor.py",
          "line_count": 331,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\api_spec_builder.py",
          "line_count": 316,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\api_validation_framework.py",
          "line_count": 750,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\auto_api_docs_generator.py",
          "line_count": 708,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\auto_generator.py",
          "line_count": 290,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\documentation\\bilingual_docs_processor.py",
          "line_count": 548,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\changelog_generator.py",
          "line_count": 390,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\comprehensive_visualization_engine.py",
          "line_count": 828,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\cookbook_organization_manager.py",
          "line_count": 648,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\cross_framework_integration.py",
          "line_count": 602,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\design_first_docs.py",
          "line_count": 739,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\diagram_creator.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\docstring_analyzer.py",
          "line_count": 332,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\docs_api.py",
          "line_count": 353,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\docs_testing_framework.py",
          "line_count": 639,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\doc_orchestrator.py",
          "line_count": 341,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise_api_docs.py",
          "line_count": 744,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\example_docs_system.py",
          "line_count": 507,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\faq_system.py",
          "line_count": 522,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\hierarchical_docs_organizer.py",
          "line_count": 637,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence_integration.py",
          "line_count": 653,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligent_content_orchestrator.py",
          "line_count": 659,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\interactive_docs.py",
          "line_count": 404,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\interactive_docs_system.py",
          "line_count": 739,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\json_docs_processor.py",
          "line_count": 977,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\knowledge_management_framework.py",
          "line_count": 1022,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\legacy_integration_framework.py",
          "line_count": 875,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\live_architecture.py",
          "line_count": 446,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\markdown_generator.py",
          "line_count": 323,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\master_documentation_orchestrator.py",
          "line_count": 912,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\mdx_generator.py",
          "line_count": 217,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\documentation\\metrics_reporter.py",
          "line_count": 351,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\migration_guide_generator.py",
          "line_count": 516,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\multilingual_docs.py",
          "line_count": 468,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\multimodal_recipe_engine.py",
          "line_count": 701,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\multi_agent_pattern_docs.py",
          "line_count": 727,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\phase_1_7_integration.py",
          "line_count": 351,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\production_ready_docs.py",
          "line_count": 886,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\quality_assessment_engine.py",
          "line_count": 552,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\recipe_based_learning.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\roadmap_generator.py",
          "line_count": 535,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\service_oriented_arch_docs.py",
          "line_count": 768,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\swarms_auto_generation_adapter.py",
          "line_count": 384,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\swarms_doc_intelligence_extractor.py",
          "line_count": 258,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\documentation\\swarms_navigation_intelligence.py",
          "line_count": 453,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\swarms_self_healing_docs.py",
          "line_count": 517,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\tracking_integration_docs.py",
          "line_count": 591,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\tutorial_grid_system.py",
          "line_count": 729,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\tutorial_system.py",
          "line_count": 438,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\unified_doc_generator.py",
          "line_count": 568,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\ux_excellence_framework.py",
          "line_count": 1044,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\workflow_recipe_docs.py",
          "line_count": 796,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\yaml_config_processor.py",
          "line_count": 634,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\__init__.py",
          "line_count": 19,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise\\documentation_intelligence.py",
          "line_count": 451,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise\\documentation_validator.py",
          "line_count": 249,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise\\enterprise_doc_orchestrator.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise\\workflow_automation.py",
          "line_count": 562,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\analyzer.py",
          "line_count": 438,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\metrics.py",
          "line_count": 332,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\optimizer.py",
          "line_count": 619,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\project_coordinator.py",
          "line_count": 587,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\__init__.py",
          "line_count": 26,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\optimization\\content_enhancer.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\optimization\\strategy_engine.py",
          "line_count": 286,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\optimization\\__init__.py",
          "line_count": 17,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\ai_documentation_synthesizer.py",
          "line_count": 706,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\codesee_annihilator.py",
          "line_count": 767,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\falkordb_obliterator.py",
          "line_count": 596,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\interactive_chat_interface.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\living_documentation_engine.py",
          "line_count": 664,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\neo4j_dominator.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\newton_graph_destroyer.py",
          "line_count": 561,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\__init__.py",
          "line_count": 22,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\neo4j_dominator_modules\\neo4j_dominator_core.py",
          "line_count": 10,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\neo4j_dominator_modules\\__init__.py",
          "line_count": 10,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\enterprise\\api_orchestrator.py",
          "line_count": 577,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\integration_validator.py",
          "line_count": 234,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\enterprise\\reporting_engine.py",
          "line_count": 635,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\api\\endpoint_manager.py",
          "line_count": 652,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\api\\request_router.py",
          "line_count": 580,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\api\\service_registry.py",
          "line_count": 467,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\integration\\base.py",
          "line_count": 161,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\integration\\__init__.py",
          "line_count": 563,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\integration\\components\\cross_system_analyzer.py",
          "line_count": 576,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\integration\\components\\endpoint_manager.py",
          "line_count": 438,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\integration\\components\\event_processor.py",
          "line_count": 458,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\integration\\components\\performance_monitor.py",
          "line_count": 575,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\ai_code_explorer.py",
          "line_count": 430,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\code_knowledge_graph_engine.py",
          "line_count": 369,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\instant_graph_engine.py",
          "line_count": 465,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\multi_language_analyzer.py",
          "line_count": 415,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\predictive_code_intelligence.py",
          "line_count": 478,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\visual_relationship_mapper.py",
          "line_count": 440,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\__init__.py",
          "line_count": 94,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\ml\\advanced_models.py",
          "line_count": 272,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\ml\\anomaly_algorithms.py",
          "line_count": 344,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\correlation_engine.py",
          "line_count": 340,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\explainability.py",
          "line_count": 403,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\feature_engineering.py",
          "line_count": 338,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\gpu_accelerator.py",
          "line_count": 400,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\integration_analysis.py",
          "line_count": 474,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\ml_orchestrator.py",
          "line_count": 701,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\model_registry.py",
          "line_count": 397,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\online_learning.py",
          "line_count": 363,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\pattern_detector.py",
          "line_count": 188,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\ml\\statistical_engine.py",
          "line_count": 141,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\adaptive_configuration_manager.py",
          "line_count": 693,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\adaptive_load_balancer.py",
          "line_count": 600,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\anomaly_detection.py",
          "line_count": 525,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\batch_processor.py",
          "line_count": 856,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\circuit_breaker_ml.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\delivery_optimizer.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\distributed_ml_coordinator.py",
          "line_count": 779,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\ensemble_meta_learner.py",
          "line_count": 340,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\integrity_ml_guardian.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\intelligent_data_pipeline.py",
          "line_count": 791,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\intelligent_resource_scheduler.py",
          "line_count": 743,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\ml_network_optimizer.py",
          "line_count": 697,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\performance_execution_manager.py",
          "line_count": 415,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\performance_ml_engine.py",
          "line_count": 913,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\performance_optimizer.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\predictive_engine.py",
          "line_count": 850,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\predictive_maintenance_ai.py",
          "line_count": 810,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\sla_ml_optimizer.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\smart_cache.py",
          "line_count": 593,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\telemetry_export_manager.py",
          "line_count": 604,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\telemetry_ml_collector.py",
          "line_count": 539,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\telemetry_observability_engine.py",
          "line_count": 633,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\watchdog_ml_monitor.py",
          "line_count": 546,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\watchdog_process_manager.py",
          "line_count": 646,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\watchdog_recovery_system.py",
          "line_count": 642,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\__init__.py",
          "line_count": 21,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\circuit_breaker_ml_modules\\__init__.py",
          "line_count": 12,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\delivery_optimizer_modules\\__init__.py",
          "line_count": 12,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\integrity_ml_guardian_modules\\__init__.py",
          "line_count": 12,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\performance_optimizer_modules\\__init__.py",
          "line_count": 12,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\__init__.py",
          "line_count": 12,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\ml\\enterprise\\ml_auto_scaling.py",
          "line_count": 876,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
          "line_count": 756,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\__init__.py",
          "line_count": 12,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\monitoring\\agent_qa.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\monitoring\\agent_qa_modular.py",
          "line_count": 243,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\monitoring\\enterprise_performance_monitor.py",
          "line_count": 817,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\monitoring\\pattern_detector.py",
          "line_count": 355,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\monitoring\\performance_optimization_engine.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\monitoring\\qa_base.py",
          "line_count": 208,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\monitoring\\qa_monitor.py",
          "line_count": 257,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\monitoring\\qa_scorer.py",
          "line_count": 255,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\monitoring\\__init__.py",
          "line_count": 99,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\monitoring\\agent_qa_modules\\agent_qa_core.py",
          "line_count": 10,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\monitoring\\agent_qa_modules\\__init__.py",
          "line_count": 10,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\monitoring\\performance_optimization_engine_modules\\__init__.py",
          "line_count": 12,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\orchestration\\agent_coordinator.py",
          "line_count": 527,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\orchestration\\cross_system_orchestrator.py",
          "line_count": 982,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\orchestration\\integration_hub.py",
          "line_count": 711,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\orchestration\\workflow_orchestration_engine.py",
          "line_count": 801,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\prediction\\forecaster.py",
          "line_count": 367,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\queuing\\express_priority_queue.py",
          "line_count": 516,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\reliability\\enterprise_error_recovery.py",
          "line_count": 890,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\reliability\\quantum_retry_orchestrator.py",
          "line_count": 472,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\reliability\\quantum_retry_strategies.py",
          "line_count": 332,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\reliability\\__init__.py",
          "line_count": 29,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\security\\advanced_security_intelligence.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\ai_security_integration.py",
          "line_count": 178,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\audit_logger.py",
          "line_count": 266,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\code_vulnerability_scanner.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\compliance_checker.py",
          "line_count": 422,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\dependency_scanner.py",
          "line_count": 384,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\knowledge_graph_integration.py",
          "line_count": 203,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\security_analytics.py",
          "line_count": 432,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\security_api.py",
          "line_count": 445,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\security_compliance_validator.py",
          "line_count": 704,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\security_dashboard.py",
          "line_count": 412,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\threat_intelligence_engine.py",
          "line_count": 550,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\threat_modeler.py",
          "line_count": 424,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\ultimate_security_orchestrator.py",
          "line_count": 529,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\unified_security_service.py",
          "line_count": 270,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\vulnerability_scanner.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\__init__.py",
          "line_count": 19,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\security\\audit\\audit_events.py",
          "line_count": 255,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\audit\\audit_interface.py",
          "line_count": 374,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\audit\\audit_reporter.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\audit\\audit_storage.py",
          "line_count": 287,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\compliance_automation.py",
          "line_count": 470,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\enterprise_security_monitor.py",
          "line_count": 400,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\governance_framework.py",
          "line_count": 548,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\security_intelligence.py",
          "line_count": 599,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\security_validator.py",
          "line_count": 443,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\intelligence\\incident_responder.py",
          "line_count": 648,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\intelligence\\threat_detector.py",
          "line_count": 806,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\intelligence\\__init__.py",
          "line_count": 19,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\validation\\compliance_validator.py",
          "line_count": 562,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\validation\\integration_validator.py",
          "line_count": 592,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\validation\\penetration_tester.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\streaming\\event_streaming_engine.py",
          "line_count": 815,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\automation_engine.py",
          "line_count": 597,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\base.py",
          "line_count": 128,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\testing\\chaos_engineer.py",
          "line_count": 400,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\contract_tester.py",
          "line_count": 352,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\flaky_test_detector.py",
          "line_count": 492,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\fuzzer.py",
          "line_count": 346,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\load_generator.py",
          "line_count": 454,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\mutation_engine.py",
          "line_count": 285,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\testing\\property_tester.py",
          "line_count": 307,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\quality_dashboard.py",
          "line_count": 387,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\regression_detector.py",
          "line_count": 417,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\security_fuzzer.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\testing_api.py",
          "line_count": 481,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\test_analytics.py",
          "line_count": 477,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\test_intelligence.py",
          "line_count": 548,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\test_orchestrator.py",
          "line_count": 391,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\test_quality_scorer.py",
          "line_count": 405,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\test_selector.py",
          "line_count": 388,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\__init__.py",
          "line_count": 457,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\advanced\\ml_test_optimizer.py",
          "line_count": 857,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\advanced\\statistical_coverage_analyzer.py",
          "line_count": 799,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\advanced\\__init__.py",
          "line_count": 43,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\claude_test_generator.py",
          "line_count": 459,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
          "line_count": 543,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\universal_ai_generator.py",
          "line_count": 472,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\__init__.py",
          "line_count": 56,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\testing\\automation\\continuous_testing_engine.py",
          "line_count": 547,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\automation\\enterprise_test_orchestrator.py",
          "line_count": 727,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\automation\\test_maintenance_system.py",
          "line_count": 551,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\automation\\__init__.py",
          "line_count": 72,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\testing\\components\\coverage_analyzer.py",
          "line_count": 1101,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\components\\execution_engine.py",
          "line_count": 382,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\components\\integration_generator.py",
          "line_count": 749,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\components\\ml_optimizer.py",
          "line_count": 751,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\enterprise\\predictive_test_failure.py",
          "line_count": 849,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\enterprise\\quality_analytics_engine.py",
          "line_count": 919,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\enterprise\\quality_gate_automation.py",
          "line_count": 742,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\enterprise\\__init__.py",
          "line_count": 72,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\testing\\security\\advanced_owasp_tester.py",
          "line_count": 913,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\security\\api_security_tester.py",
          "line_count": 532,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\security\\compliance_validator.py",
          "line_count": 663,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\validation\\integration_test_suite.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\validation\\system_validation_framework.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\validation\\integration_test_suite_modules\\__init__.py",
          "line_count": 12,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\validation\\system_validation_framework_modules\\__init__.py",
          "line_count": 11,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\visualization\\agent_interface_systems.py",
          "line_count": 394,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\dashboard_systems.py",
          "line_count": 377,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\data_visualization_engines.py",
          "line_count": 437,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\development_tools_ui.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\interactive_visualizations.py",
          "line_count": 395,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\observability_systems.py",
          "line_count": 427,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\realtime_ui_components.py",
          "line_count": 479,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\user_experience_frameworks.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\__init__.py",
          "line_count": 222,
          "size_category": "medium"
        },
        {
          "file": "core\\observability\\agent_ops_separate.py",
          "line_count": 571,
          "size_category": "huge"
        },
        {
          "file": "core\\observability\\unified_monitor.py",
          "line_count": 757,
          "size_category": "huge"
        },
        {
          "file": "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "line_count": 1891,
          "size_category": "huge"
        },
        {
          "file": "core\\observability\\__init__.py",
          "line_count": 28,
          "size_category": "tiny"
        },
        {
          "file": "core\\orchestration\\agent_graph.py",
          "line_count": 501,
          "size_category": "huge"
        },
        {
          "file": "core\\orchestration\\enhanced_agent_orchestrator.py",
          "line_count": 755,
          "size_category": "huge"
        },
        {
          "file": "core\\reliability\\emergency_backup_recovery.py",
          "line_count": 824,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\adaptive_fallback_orchestrator.py",
          "line_count": 677,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\adaptive_security_resilience.py",
          "line_count": 748,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\agent_communication_security.py",
          "line_count": 355,
          "size_category": "large"
        },
        {
          "file": "core\\security\\api_security_layer.py",
          "line_count": 380,
          "size_category": "large"
        },
        {
          "file": "core\\security\\authentication_system.py",
          "line_count": 289,
          "size_category": "medium"
        },
        {
          "file": "core\\security\\byzantine_consensus_security.py",
          "line_count": 637,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\circuit_breaker_matrix.py",
          "line_count": 630,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\cloud_event_security.py",
          "line_count": 523,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\code_generation_security.py",
          "line_count": 741,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\compliance_framework.py",
          "line_count": 1115,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\configuration_security.py",
          "line_count": 441,
          "size_category": "large"
        },
        {
          "file": "core\\security\\container_security_validator.py",
          "line_count": 628,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\data_integrity_guardian.py",
          "line_count": 710,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\deployment_pipeline_security.py",
          "line_count": 863,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\distributed_agent_registry.py",
          "line_count": 399,
          "size_category": "large"
        },
        {
          "file": "core\\security\\distributed_communication_security.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\distributed_coordination_security.py",
          "line_count": 777,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\distributed_key_management_security.py",
          "line_count": 678,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\document_classification_security.py",
          "line_count": 691,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\enterprise_audit_logging.py",
          "line_count": 516,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\enterprise_authentication.py",
          "line_count": 754,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\enterprise_auth_gateway.py",
          "line_count": 590,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\enum_security.py",
          "line_count": 505,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\error_handler.py",
          "line_count": 125,
          "size_category": "small"
        },
        {
          "file": "core\\security\\error_isolation_system.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\error_recovery_framework.py",
          "line_count": 578,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\exception_monitoring.py",
          "line_count": 498,
          "size_category": "large"
        },
        {
          "file": "core\\security\\fault_tolerance_engine.py",
          "line_count": 705,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\file_security_handler.py",
          "line_count": 353,
          "size_category": "large"
        },
        {
          "file": "core\\security\\flow_persistence_security.py",
          "line_count": 698,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\graceful_degradation_manager.py",
          "line_count": 699,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\guardrail_security_system.py",
          "line_count": 542,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\health_monitoring_nexus.py",
          "line_count": 664,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\identity_validation_system.py",
          "line_count": 370,
          "size_category": "large"
        },
        {
          "file": "core\\security\\license_compliance_framework.py",
          "line_count": 516,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\message_context_security.py",
          "line_count": 428,
          "size_category": "large"
        },
        {
          "file": "core\\security\\multi_agent_access_control.py",
          "line_count": 801,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\multi_agent_evaluation_security.py",
          "line_count": 677,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\network_security_controls.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\operational_security.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\quantum_retry_engine.py",
          "line_count": 616,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\rate_limiter.py",
          "line_count": 333,
          "size_category": "large"
        },
        {
          "file": "core\\security\\resilience_orchestrator.py",
          "line_count": 681,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\retry_mechanism_system.py",
          "line_count": 655,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\secure_message_delivery.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\secure_performance_optimizer.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\security_monitoring_system.py",
          "line_count": 760,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\self_healing_coordinator.py",
          "line_count": 698,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\service_mesh_security.py",
          "line_count": 596,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\thread_safety_manager.py",
          "line_count": 411,
          "size_category": "large"
        },
        {
          "file": "core\\security\\threat_intelligence_system.py",
          "line_count": 881,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\validation_framework.py",
          "line_count": 220,
          "size_category": "medium"
        },
        {
          "file": "core\\security\\validation_security.py",
          "line_count": 605,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\vulnerability_detection_framework.py",
          "line_count": 716,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\__init__.py",
          "line_count": 596,
          "size_category": "huge"
        },
        {
          "file": "core\\state\\enhanced_state_manager.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\adaptive_testing_framework.py",
          "line_count": 1012,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\agent_reasoning_testing.py",
          "line_count": 564,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\archive_intelligence_mining.py",
          "line_count": 586,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\async_sync_testing.py",
          "line_count": 159,
          "size_category": "medium"
        },
        {
          "file": "core\\testing\\collaborative_testing_platform.py",
          "line_count": 1224,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\communication_testing.py",
          "line_count": 303,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\competitive_analysis_framework.py",
          "line_count": 455,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\crew_thread_safety_testing.py",
          "line_count": 599,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\distributed_test_coordinator.py",
          "line_count": 994,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\embedding_cache_testing.py",
          "line_count": 622,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\enterprise_test_framework.py",
          "line_count": 739,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\flow_testing.py",
          "line_count": 743,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\formatter_testing.py",
          "line_count": 526,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\graph_async_testing.py",
          "line_count": 473,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\graph_constraints_testing.py",
          "line_count": 398,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\graph_index_testing.py",
          "line_count": 1103,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\graph_operations_testing.py",
          "line_count": 1063,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\graph_performance_testing.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\graph_vector_testing.py",
          "line_count": 535,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\hallucination_guardrail_testing.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\hook_testing.py",
          "line_count": 951,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\integration_test_framework.py",
          "line_count": 489,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\intelligence_synthesis_framework.py",
          "line_count": 899,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\intelligent_test_generator.py",
          "line_count": 1119,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\langgraph_supervisor_testing.py",
          "line_count": 693,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\mcp_testing.py",
          "line_count": 428,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\multimodal_validation_testing.py",
          "line_count": 643,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\multi_modal_test_engine.py",
          "line_count": 1208,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\parallel_test_executor.py",
          "line_count": 526,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\pattern_consolidation_engine.py",
          "line_count": 799,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\performance_test_suite.py",
          "line_count": 462,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\pipeline_testing.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\react_agent_testing.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\repository_intelligence_aggregator.py",
          "line_count": 970,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\response_validation_testing.py",
          "line_count": 440,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\run_all_tests.py",
          "line_count": 389,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\session_testing.py",
          "line_count": 877,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\supercharged_test_generator.py",
          "line_count": 443,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\supercharged_test_generator.py_stub_backup_20250821_042438.py",
          "line_count": 557,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\task_guardrails_testing.py",
          "line_count": 768,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\testmaster_api_gateway.py",
          "line_count": 1318,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\test_ai_code_exploration.py",
          "line_count": 355,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\test_coverage_optimizer.py",
          "line_count": 282,
          "size_category": "medium"
        },
        {
          "file": "core\\testing\\test_evolution_analyzer.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\test_integration_hub.py",
          "line_count": 601,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\test_intelligence_orchestrator.py",
          "line_count": 328,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\test_knowledge_graph_engine.py",
          "line_count": 256,
          "size_category": "medium"
        },
        {
          "file": "core\\testing\\test_multi_language_superiority.py",
          "line_count": 363,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\test_quality_analyzer.py",
          "line_count": 245,
          "size_category": "medium"
        },
        {
          "file": "core\\testing\\test_ui_interface_superiority.py",
          "line_count": 492,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\test_zero_setup_domination.py",
          "line_count": 380,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\thread_retry_testing.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\tool_factory_testing.py",
          "line_count": 643,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\tool_testing.py",
          "line_count": 916,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\tracing_testing.py",
          "line_count": 1157,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\unified_test_orchestrator.py",
          "line_count": 489,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\user_input_testing.py",
          "line_count": 862,
          "size_category": "huge"
        },
        {
          "file": "core\\tools\\concrete_tools.py",
          "line_count": 472,
          "size_category": "large"
        },
        {
          "file": "core\\tools\\type_safe_tools.py",
          "line_count": 471,
          "size_category": "large"
        },
        {
          "file": "dashboard\\automated_frontend_simulator.py",
          "line_count": 376,
          "size_category": "large"
        },
        {
          "file": "dashboard\\automated_frontend_tester.py",
          "line_count": 651,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\comprehensive_frontend_test.py",
          "line_count": 285,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\comprehensive_frontend_validator.py",
          "line_count": 552,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\debug_blueprints.py",
          "line_count": 60,
          "size_category": "small"
        },
        {
          "file": "dashboard\\demo_automated_frontend_testing.py",
          "line_count": 298,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\discover_backend_features.py",
          "line_count": 215,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\frontend_display_validator.py",
          "line_count": 773,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\integration_gap_analysis.py",
          "line_count": 307,
          "size_category": "large"
        },
        {
          "file": "dashboard\\quality_dashboard.py",
          "line_count": 603,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\quick_frontend_test.py",
          "line_count": 223,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\quick_integration_test.py",
          "line_count": 202,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\quick_validation.py",
          "line_count": 74,
          "size_category": "small"
        },
        {
          "file": "dashboard\\server.py",
          "line_count": 548,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\simple_robustness_test.py",
          "line_count": 145,
          "size_category": "small"
        },
        {
          "file": "dashboard\\test_all_features.py",
          "line_count": 300,
          "size_category": "large"
        },
        {
          "file": "dashboard\\test_analytics_import.py",
          "line_count": 71,
          "size_category": "small"
        },
        {
          "file": "dashboard\\test_api_endpoints.py",
          "line_count": 224,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\test_final_enhancements.py",
          "line_count": 863,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\test_frontend_automated.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "dashboard\\test_frontend_integration.py",
          "line_count": 772,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\test_frontend_without_browser.py",
          "line_count": 234,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\test_multi_agent_integration.py",
          "line_count": 961,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\test_new_robustness_features.py",
          "line_count": 396,
          "size_category": "large"
        },
        {
          "file": "dashboard\\test_new_visualization_apis.py",
          "line_count": 132,
          "size_category": "small"
        },
        {
          "file": "dashboard\\test_robustness_suite.py",
          "line_count": 373,
          "size_category": "large"
        },
        {
          "file": "dashboard\\test_robustness_verification.py",
          "line_count": 320,
          "size_category": "large"
        },
        {
          "file": "dashboard\\test_ultra_reliability.py",
          "line_count": 1049,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\ultimate_frontend_validator.py",
          "line_count": 845,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\validate_100_percent_real_data.py",
          "line_count": 176,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\validate_all_endpoints.py",
          "line_count": 226,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\wsgi.py",
          "line_count": 89,
          "size_category": "small"
        },
        {
          "file": "dashboard\\api\\analytics.py",
          "line_count": 789,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\async_processing.py",
          "line_count": 606,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\backend_health_monitor.py",
          "line_count": 659,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\comprehensive_monitoring.py",
          "line_count": 665,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\coverage.py",
          "line_count": 583,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\crew_orchestration.py",
          "line_count": 812,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\enhanced_analytics.py",
          "line_count": 587,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\enhanced_telemetry.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\flow_optimization.py",
          "line_count": 662,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\frontend_data_contracts.py",
          "line_count": 390,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\health.py",
          "line_count": 760,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\intelligence.py",
          "line_count": 533,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\intelligence_integration.py",
          "line_count": 478,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\knowledge_graph.py",
          "line_count": 454,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\llm.py",
          "line_count": 405,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\monitoring.py",
          "line_count": 366,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\observability.py",
          "line_count": 522,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\orchestration_flask.py",
          "line_count": 475,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\performance.py",
          "line_count": 583,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\phase2_api.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\production_deployment.py",
          "line_count": 499,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\quality_assurance.py",
          "line_count": 653,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\real_codebase_scanner.py",
          "line_count": 384,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\real_codebase_scanner.stub_backup.py",
          "line_count": 892,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\security.py",
          "line_count": 514,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\swarm_orchestration.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\telemetry.py",
          "line_count": 573,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\tests.py",
          "line_count": 101,
          "size_category": "small"
        },
        {
          "file": "dashboard\\api\\test_generation.py",
          "line_count": 481,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\websocket_dashboard.py",
          "line_count": 547,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\workflow.py",
          "line_count": 354,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_aggregator.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_anomaly_detector.py",
          "line_count": 622,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_backup.py",
          "line_count": 449,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_batch_processor.py",
          "line_count": 495,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_circuit_breaker.py",
          "line_count": 577,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_compressor.py",
          "line_count": 471,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_connectivity_monitor.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_correlator.py",
          "line_count": 440,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_data_sanitizer.py",
          "line_count": 893,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_dead_letter_queue.py",
          "line_count": 667,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_deduplication.py",
          "line_count": 1290,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_deduplication_engine.py",
          "line_count": 775,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_delivery_enhancer.py",
          "line_count": 407,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_delivery_guarantee.py",
          "line_count": 661,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_delivery_verifier.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_error_recovery.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_event_queue.py",
          "line_count": 598,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_export_manager.py",
          "line_count": 658,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_fallback_system.py",
          "line_count": 580,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_flow_monitor.py",
          "line_count": 579,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_health_monitor.py",
          "line_count": 725,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py",
          "line_count": 690,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_integrity_guardian.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_integrity_verifier.py",
          "line_count": 776,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_metrics_collector.py",
          "line_count": 626,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_normalizer.py",
          "line_count": 656,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_optimizer.py",
          "line_count": 378,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_performance_booster.py",
          "line_count": 555,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_performance_monitor.py",
          "line_count": 495,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_performance_optimizer.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_persistence.py",
          "line_count": 703,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_pipeline.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_priority_queue.py",
          "line_count": 899,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_quality_assurance.py",
          "line_count": 766,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_quantum_retry.py",
          "line_count": 1192,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_rate_limiter.py",
          "line_count": 835,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_receipt_tracker.py",
          "line_count": 850,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py",
          "line_count": 749,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_redundancy.py",
          "line_count": 694,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_retry_manager.py",
          "line_count": 498,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_sla_tracker.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_smart_cache.py",
          "line_count": 723,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_streaming.py",
          "line_count": 448,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_telemetry.py",
          "line_count": 680,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_validator.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_watchdog.py",
          "line_count": 674,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\data_store.py",
          "line_count": 506,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\emergency_backup_recovery.py",
          "line_count": 1309,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\error_handler.py",
          "line_count": 267,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\dashboard_core\\metrics_feed.py",
          "line_count": 360,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\monitor.py",
          "line_count": 314,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\predictive_flow_optimizer.py",
          "line_count": 1077,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\realtime_analytics_tracker.py",
          "line_count": 608,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\real_data_extractor.py",
          "line_count": 569,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\system_monitor.py",
          "line_count": 199,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\dashboard_core\\system_observability_metrics.py",
          "line_count": 840,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\test_collector.py",
          "line_count": 402,
          "size_category": "large"
        },
        {
          "file": "deduplication\\test_deduplicator.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "deployment\\enterprise_deployment.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "deployment\\service_registry.py",
          "line_count": 446,
          "size_category": "large"
        },
        {
          "file": "deployment\\swarm_orchestrator.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "incremental\\dependency_tracker.py",
          "line_count": 642,
          "size_category": "huge"
        },
        {
          "file": "integration\\automatic_scaling_system.py",
          "line_count": 1092,
          "size_category": "huge"
        },
        {
          "file": "integration\\automatic_scaling_system_robust.py",
          "line_count": 1051,
          "size_category": "huge"
        },
        {
          "file": "integration\\comprehensive_error_recovery.py",
          "line_count": 1280,
          "size_category": "huge"
        },
        {
          "file": "integration\\comprehensive_error_recovery_robust.py",
          "line_count": 1201,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_module_tester.py",
          "line_count": 859,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_analytics.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_analytics_robust.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_apis.py",
          "line_count": 618,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_apis_robust.py",
          "line_count": 618,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_communication.py",
          "line_count": 327,
          "size_category": "large"
        },
        {
          "file": "integration\\distributed_task_queue.py",
          "line_count": 472,
          "size_category": "large"
        },
        {
          "file": "integration\\intelligent_caching_layer.py",
          "line_count": 1334,
          "size_category": "huge"
        },
        {
          "file": "integration\\intelligent_caching_layer_robust.py",
          "line_count": 1287,
          "size_category": "huge"
        },
        {
          "file": "integration\\load_balancing_system.py",
          "line_count": 543,
          "size_category": "huge"
        },
        {
          "file": "integration\\multi_environment_support.py",
          "line_count": 462,
          "size_category": "large"
        },
        {
          "file": "integration\\predictive_analytics_engine.py",
          "line_count": 1142,
          "size_category": "huge"
        },
        {
          "file": "integration\\predictive_analytics_engine_robust.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "integration\\realtime_performance_monitoring.py",
          "line_count": 1427,
          "size_category": "huge"
        },
        {
          "file": "integration\\realtime_performance_monitoring_robust.py",
          "line_count": 1302,
          "size_category": "huge"
        },
        {
          "file": "integration\\resource_optimization_engine.py",
          "line_count": 574,
          "size_category": "huge"
        },
        {
          "file": "integration\\service_mesh_integration.py",
          "line_count": 625,
          "size_category": "huge"
        },
        {
          "file": "integration\\visual_workflow_designer.py",
          "line_count": 768,
          "size_category": "huge"
        },
        {
          "file": "integration\\workflow_execution_engine.py",
          "line_count": 991,
          "size_category": "huge"
        },
        {
          "file": "integration\\workflow_execution_engine_robust.py",
          "line_count": 991,
          "size_category": "huge"
        },
        {
          "file": "integration\\workflow_framework.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "monitoring\\enhanced_monitor_separate.py",
          "line_count": 573,
          "size_category": "huge"
        },
        {
          "file": "monitoring\\monitoring_agents.py",
          "line_count": 665,
          "size_category": "huge"
        },
        {
          "file": "observability\\unified_observability.py",
          "line_count": 455,
          "size_category": "large"
        },
        {
          "file": "observability\\__init__.py",
          "line_count": 170,
          "size_category": "medium"
        },
        {
          "file": "observability\\core\\conversational_interface.py",
          "line_count": 155,
          "size_category": "medium"
        },
        {
          "file": "observability\\core\\cost_management.py",
          "line_count": 194,
          "size_category": "medium"
        },
        {
          "file": "observability\\core\\event_monitoring.py",
          "line_count": 306,
          "size_category": "large"
        },
        {
          "file": "observability\\core\\multimodal_analyzer.py",
          "line_count": 217,
          "size_category": "medium"
        },
        {
          "file": "optimization\\execution_optimizer.py",
          "line_count": 648,
          "size_category": "huge"
        },
        {
          "file": "orchestration\\swarm_router_enhancement.py",
          "line_count": 764,
          "size_category": "huge"
        },
        {
          "file": "orchestration\\unified_orchestrator.py",
          "line_count": 1279,
          "size_category": "huge"
        },
        {
          "file": "prioritization\\test_prioritizer.py",
          "line_count": 767,
          "size_category": "huge"
        },
        {
          "file": "scripts\\achieve_100_percent.py",
          "line_count": 262,
          "size_category": "medium"
        },
        {
          "file": "scripts\\achieve_100_percent_coverage.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "scripts\\ai_test_generator.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "scripts\\analyze_components.py",
          "line_count": 497,
          "size_category": "large"
        },
        {
          "file": "scripts\\api_documenter.py",
          "line_count": 585,
          "size_category": "huge"
        },
        {
          "file": "scripts\\batch_gemini_generator.py",
          "line_count": 148,
          "size_category": "small"
        },
        {
          "file": "scripts\\branch_coverage_analyzer.py",
          "line_count": 462,
          "size_category": "large"
        },
        {
          "file": "scripts\\check_what_needs_tests.py",
          "line_count": 58,
          "size_category": "small"
        },
        {
          "file": "scripts\\coverage_baseline.py",
          "line_count": 244,
          "size_category": "medium"
        },
        {
          "file": "scripts\\coverage_improver.py",
          "line_count": 484,
          "size_category": "large"
        },
        {
          "file": "scripts\\dependency_analyzer.py",
          "line_count": 436,
          "size_category": "large"
        },
        {
          "file": "scripts\\diagnose_final_five.py",
          "line_count": 201,
          "size_category": "medium"
        },
        {
          "file": "scripts\\fast_converter.py",
          "line_count": 136,
          "size_category": "small"
        },
        {
          "file": "scripts\\final_five_converter.py",
          "line_count": 154,
          "size_category": "medium"
        },
        {
          "file": "scripts\\find_truly_missing.py",
          "line_count": 74,
          "size_category": "small"
        },
        {
          "file": "scripts\\fix_all_imports.py",
          "line_count": 91,
          "size_category": "small"
        },
        {
          "file": "scripts\\fix_remaining_issues.py",
          "line_count": 398,
          "size_category": "large"
        },
        {
          "file": "scripts\\fix_test_infrastructure.py",
          "line_count": 338,
          "size_category": "large"
        },
        {
          "file": "scripts\\gemini_powered_test_generator.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "scripts\\gemini_test_generator.py",
          "line_count": 490,
          "size_category": "large"
        },
        {
          "file": "scripts\\generate_coverage_sequential.py",
          "line_count": 268,
          "size_category": "medium"
        },
        {
          "file": "scripts\\intelligent_converter.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "scripts\\measure_final_coverage.py",
          "line_count": 124,
          "size_category": "small"
        },
        {
          "file": "scripts\\parallel_converter_working.py",
          "line_count": 297,
          "size_category": "medium"
        },
        {
          "file": "scripts\\parallel_coverage_converter.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "scripts\\parallel_coverage_converter_fixed.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "scripts\\quick_coverage_boost.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "scripts\\quick_test_generator.py",
          "line_count": 112,
          "size_category": "small"
        },
        {
          "file": "scripts\\run_limited_coverage.py",
          "line_count": 49,
          "size_category": "tiny"
        },
        {
          "file": "scripts\\self_healing_converter.py",
          "line_count": 384,
          "size_category": "large"
        },
        {
          "file": "scripts\\simple_100_percent.py",
          "line_count": 146,
          "size_category": "small"
        },
        {
          "file": "scripts\\simple_test_generator.py",
          "line_count": 182,
          "size_category": "medium"
        },
        {
          "file": "scripts\\smart_test_generator.py",
          "line_count": 452,
          "size_category": "large"
        },
        {
          "file": "scripts\\systematic_coverage.py",
          "line_count": 387,
          "size_category": "large"
        },
        {
          "file": "scripts\\test_gemini_api.py",
          "line_count": 88,
          "size_category": "small"
        },
        {
          "file": "scripts\\test_gemini_config.py",
          "line_count": 148,
          "size_category": "small"
        },
        {
          "file": "scripts\\test_gemini_correct.py",
          "line_count": 115,
          "size_category": "small"
        },
        {
          "file": "scripts\\test_single_api_call.py",
          "line_count": 174,
          "size_category": "medium"
        },
        {
          "file": "scripts\\test_single_generation.py",
          "line_count": 134,
          "size_category": "small"
        },
        {
          "file": "scripts\\test_updated_prompt.py",
          "line_count": 174,
          "size_category": "medium"
        },
        {
          "file": "scripts\\working_test_generator.py",
          "line_count": 136,
          "size_category": "small"
        },
        {
          "file": "src\\automated_test_generation.py",
          "line_count": 949,
          "size_category": "huge"
        },
        {
          "file": "src\\comprehensive_test_framework.py",
          "line_count": 697,
          "size_category": "huge"
        },
        {
          "file": "src\\coverage_analysis.py",
          "line_count": 669,
          "size_category": "huge"
        },
        {
          "file": "src\\data_flow_tests.py",
          "line_count": 797,
          "size_category": "huge"
        },
        {
          "file": "src\\integration_test_matrix.py",
          "line_count": 1159,
          "size_category": "huge"
        },
        {
          "file": "state\\unified_state_manager.py",
          "line_count": 985,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\layer2_integration.py",
          "line_count": 519,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\main.py",
          "line_count": 377,
          "size_category": "large"
        },
        {
          "file": "testmaster\\__init__.py",
          "line_count": 68,
          "size_category": "small"
        },
        {
          "file": "testmaster\\__main__.py",
          "line_count": 8,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\agent_qa\\benchmarking_suite.py",
          "line_count": 366,
          "size_category": "large"
        },
        {
          "file": "testmaster\\agent_qa\\quality_inspector.py",
          "line_count": 318,
          "size_category": "large"
        },
        {
          "file": "testmaster\\agent_qa\\quality_monitor.py",
          "line_count": 353,
          "size_category": "large"
        },
        {
          "file": "testmaster\\agent_qa\\scoring_system.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "testmaster\\agent_qa\\validation_engine.py",
          "line_count": 371,
          "size_category": "large"
        },
        {
          "file": "testmaster\\agent_qa\\__init__.py",
          "line_count": 216,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\api_analysis.py",
          "line_count": 880,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\clone_detection.py",
          "line_count": 420,
          "size_category": "large"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\complexity_analysis.py",
          "line_count": 698,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\concurrency_analysis.py",
          "line_count": 1397,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\crypto_analysis.py",
          "line_count": 808,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\database_analysis.py",
          "line_count": 1246,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\error_handling_analysis.py",
          "line_count": 1279,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\evolution_analysis.py",
          "line_count": 689,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\graph_analysis.py",
          "line_count": 375,
          "size_category": "large"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\inheritance_polymorphism.py",
          "line_count": 246,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
          "line_count": 911,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\main_analyzer.py",
          "line_count": 540,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\memory_analysis.py",
          "line_count": 1141,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\performance_analysis.py",
          "line_count": 1287,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\quality_analysis.py",
          "line_count": 802,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\resource_io_analysis.py",
          "line_count": 1350,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\security_analysis.py",
          "line_count": 911,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\software_metrics.py",
          "line_count": 234,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\statistical_analysis.py",
          "line_count": 881,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\structural_analysis.py",
          "line_count": 814,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\supply_chain_security.py",
          "line_count": 755,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\taint_analysis.py",
          "line_count": 647,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\testing_analysis.py",
          "line_count": 1342,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\__init__.py",
          "line_count": 59,
          "size_category": "small"
        },
        {
          "file": "testmaster\\async_processing\\async_executor.py",
          "line_count": 584,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\async_processing\\async_monitor.py",
          "line_count": 686,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\async_processing\\concurrent_scheduler.py",
          "line_count": 621,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\async_processing\\thread_pool_manager.py",
          "line_count": 637,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\breaking\\failure_detector.py",
          "line_count": 502,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\breaking\\__init__.py",
          "line_count": 19,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\communication\\claude_messenger.py",
          "line_count": 692,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\communication\\dynamic_handoff.py",
          "line_count": 675,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\communication\\message_queue.py",
          "line_count": 690,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\communication\\__init__.py",
          "line_count": 29,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\converters\\base.py",
          "line_count": 326,
          "size_category": "large"
        },
        {
          "file": "testmaster\\converters\\batch.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "testmaster\\converters\\intelligent.py",
          "line_count": 527,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\converters\\parallel.py",
          "line_count": 307,
          "size_category": "large"
        },
        {
          "file": "testmaster\\converters\\__init__.py",
          "line_count": 65,
          "size_category": "small"
        },
        {
          "file": "testmaster\\core\\config.py",
          "line_count": 606,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\context_manager.py",
          "line_count": 555,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\exceptions.py",
          "line_count": 26,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\core\\feature_flags.py",
          "line_count": 406,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\layer_manager.py",
          "line_count": 663,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\monitoring_decorators.py",
          "line_count": 318,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\orchestrator.py",
          "line_count": 470,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\tracking_manager.py",
          "line_count": 737,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\workflow_graph.py",
          "line_count": 617,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\ast_abstraction\\language_parsers.py",
          "line_count": 1114,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\ast_abstraction\\universal_ast.py",
          "line_count": 1076,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "line_count": 864,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\framework_abstraction\\test_generator.py",
          "line_count": 571,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\framework_abstraction\\universal_test.py",
          "line_count": 425,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\language_detection\\universal_detector.py",
          "line_count": 830,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\flow_optimizer\\execution_router.py",
          "line_count": 372,
          "size_category": "large"
        },
        {
          "file": "testmaster\\flow_optimizer\\flow_analyzer.py",
          "line_count": 373,
          "size_category": "large"
        },
        {
          "file": "testmaster\\flow_optimizer\\parallel_executor.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "testmaster\\flow_optimizer\\resource_optimizer.py",
          "line_count": 418,
          "size_category": "large"
        },
        {
          "file": "testmaster\\flow_optimizer\\__init__.py",
          "line_count": 251,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\generators\\base.py",
          "line_count": 706,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\generators\\intelligent.py",
          "line_count": 589,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\generators\\__init__.py",
          "line_count": 58,
          "size_category": "small"
        },
        {
          "file": "testmaster\\integration\\final_integration_test.py",
          "line_count": 1865,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\integration\\__init__.py",
          "line_count": 23,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\__init__.py",
          "line_count": 73,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\context_variables_bridge.py",
          "line_count": 1144,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\event_monitoring_bridge.py",
          "line_count": 1082,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\protocol_communication_bridge.py",
          "line_count": 822,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\session_tracking_bridge.py",
          "line_count": 1111,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\sop_workflow_bridge.py",
          "line_count": 964,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\consensus\\agent_coordination.py",
          "line_count": 514,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\consensus\\consensus_engine.py",
          "line_count": 427,
          "size_category": "large"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\__init__.py",
          "line_count": 119,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\context_builder.py",
          "line_count": 711,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\doc_generator.py",
          "line_count": 557,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\llm_integration.py",
          "line_count": 630,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\quality_assessor.py",
          "line_count": 705,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\__init__.py",
          "line_count": 23,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\api_doc_generator.py",
          "line_count": 632,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\architecture_doc_generator.py",
          "line_count": 813,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\docstring_generator.py",
          "line_count": 562,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\readme_generator.py",
          "line_count": 657,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\tutorial_generator.py",
          "line_count": 975,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\__init__.py",
          "line_count": 24,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\integrations\\ci_cd_integration.py",
          "line_count": 522,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\integrations\\git_integration.py",
          "line_count": 582,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\quality\\completeness_checker.py",
          "line_count": 647,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\quality\\doc_validator.py",
          "line_count": 692,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\quality\\style_checker.py",
          "line_count": 1424,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\docstring_templates.py",
          "line_count": 884,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\readme_templates.py",
          "line_count": 2251,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\template_engine.py",
          "line_count": 534,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\api\\grpc_templates.py",
          "line_count": 420,
          "size_category": "large"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\api\\manager.py",
          "line_count": 57,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\api\\rest_templates.py",
          "line_count": 634,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\api\\websocket_templates.py",
          "line_count": 561,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\hierarchical_planning\\htp_reasoning.py",
          "line_count": 383,
          "size_category": "large"
        },
        {
          "file": "testmaster\\intelligence\\hierarchical_planning\\llm_integration.py",
          "line_count": 554,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\hierarchical_planning\\test_plan_generator.py",
          "line_count": 558,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\hierarchical_planning\\unified_integration.py",
          "line_count": 524,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\hierarchical_planning\\__init__.py",
          "line_count": 128,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\integration\\__init__.py",
          "line_count": 106,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\integration\\agents\\documentation_agent.py",
          "line_count": 650,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\agents\\__init__.py",
          "line_count": 12,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\integration\\coordination\\analysis_coordinator.py",
          "line_count": 740,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\coordination\\__init__.py",
          "line_count": 12,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\integration\\events\\event_system.py",
          "line_count": 249,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\intelligence\\integration\\features\\feature_flags.py",
          "line_count": 730,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\features\\__init__.py",
          "line_count": 13,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\integration\\layers\\layer_manager.py",
          "line_count": 663,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\layers\\__init__.py",
          "line_count": 14,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\integration\\storage\\unified_storage.py",
          "line_count": 738,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\storage\\__init__.py",
          "line_count": 14,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\llm_providers\\provider_implementations.py",
          "line_count": 592,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\llm_providers\\provider_optimization.py",
          "line_count": 447,
          "size_category": "large"
        },
        {
          "file": "testmaster\\intelligence\\llm_providers\\universal_llm_provider.py",
          "line_count": 469,
          "size_category": "large"
        },
        {
          "file": "testmaster\\intelligence\\llm_providers\\__init__.py",
          "line_count": 59,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\adaptive_resource_bridge.py",
          "line_count": 581,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
          "line_count": 1147,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\bottleneck_detection_resolution_agent.py",
          "line_count": 1102,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
          "line_count": 900,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
          "line_count": 1162,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\optimization\\multi_objective_optimizer.py",
          "line_count": 686,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\optimization\\optimization_algorithms.py",
          "line_count": 484,
          "size_category": "large"
        },
        {
          "file": "testmaster\\intelligence\\optimization\\test_optimization_objectives.py",
          "line_count": 422,
          "size_category": "large"
        },
        {
          "file": "testmaster\\intelligence\\optimization\\__init__.py",
          "line_count": 78,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\security\\security_intelligence_agent.py",
          "line_count": 935,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\security\\__init__.py",
          "line_count": 29,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\tree_of_thought\\test_thought_generator.py",
          "line_count": 620,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\tree_of_thought\\tot_reasoning.py",
          "line_count": 508,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\tree_of_thought\\universal_tot_integration.py",
          "line_count": 496,
          "size_category": "large"
        },
        {
          "file": "testmaster\\intelligence\\tree_of_thought\\__init__.py",
          "line_count": 59,
          "size_category": "small"
        },
        {
          "file": "testmaster\\maintenance\\__init__.py",
          "line_count": 1,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\mapping\\dependency_tracker.py",
          "line_count": 479,
          "size_category": "large"
        },
        {
          "file": "testmaster\\mapping\\test_mapper.py",
          "line_count": 558,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\monitoring\\file_watcher.py",
          "line_count": 566,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\monitoring\\idle_detector.py",
          "line_count": 500,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\monitoring\\test_monitor.py",
          "line_count": 519,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\monitoring\\test_scheduler.py",
          "line_count": 595,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\monitoring\\__init__.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\orchestration\\framework_adapter.py",
          "line_count": 585,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestration\\output_system.py",
          "line_count": 826,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestration\\universal_orchestrator.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestration\\__init__.py",
          "line_count": 54,
          "size_category": "small"
        },
        {
          "file": "testmaster\\orchestrator\\file_tagger.py",
          "line_count": 1030,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\handoff_manager.py",
          "line_count": 1246,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\investigator.py",
          "line_count": 1123,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\work_distributor.py",
          "line_count": 796,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\__init__.py",
          "line_count": 35,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\overview\\coverage_intelligence.py",
          "line_count": 1071,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\performance_dashboard.py",
          "line_count": 686,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\regression_tracker.py",
          "line_count": 1375,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\structure_mapper.py",
          "line_count": 1112,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\__init__.py",
          "line_count": 28,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\refactoring\\hierarchical_analyzer.py",
          "line_count": 980,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\reporting\\dashboard_builder.py",
          "line_count": 86,
          "size_category": "small"
        },
        {
          "file": "testmaster\\reporting\\report_generator.py",
          "line_count": 922,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\reporting\\report_scheduler.py",
          "line_count": 85,
          "size_category": "small"
        },
        {
          "file": "testmaster\\reporting\\__init__.py",
          "line_count": 140,
          "size_category": "small"
        },
        {
          "file": "testmaster\\security\\compliance_framework.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\security\\security_test_generator.py",
          "line_count": 777,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\security\\universal_scanner.py",
          "line_count": 823,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\security\\__init__.py",
          "line_count": 53,
          "size_category": "small"
        },
        {
          "file": "testmaster\\streaming\\incremental_enhancer.py",
          "line_count": 562,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\streaming\\live_feedback.py",
          "line_count": 504,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\streaming\\stream_generator.py",
          "line_count": 593,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\telemetry\\flow_analyzer.py",
          "line_count": 640,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\telemetry\\performance_monitor.py",
          "line_count": 554,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\telemetry\\system_profiler.py",
          "line_count": 599,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\telemetry\\telemetry_collector.py",
          "line_count": 421,
          "size_category": "large"
        },
        {
          "file": "testmaster\\telemetry\\telemetry_dashboard.py",
          "line_count": 624,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\telemetry\\__init__.py",
          "line_count": 211,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\ui\\alert_system.py",
          "line_count": 800,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\ui\\dashboard.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\ui\\metrics_display.py",
          "line_count": 672,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\ui\\__init__.py",
          "line_count": 29,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\verification\\base.py",
          "line_count": 396,
          "size_category": "large"
        },
        {
          "file": "testmaster\\verification\\quality.py",
          "line_count": 438,
          "size_category": "large"
        },
        {
          "file": "testmaster\\verification\\self_healing.py",
          "line_count": 508,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\verification\\__init__.py",
          "line_count": 43,
          "size_category": "tiny"
        },
        {
          "file": "tests\\test_intelligence_ml.py",
          "line_count": 422,
          "size_category": "large"
        },
        {
          "file": "tests\\test_phase2_core_validation.py",
          "line_count": 569,
          "size_category": "huge"
        },
        {
          "file": "tests\\test_phase2_e2e_validation.py",
          "line_count": 1091,
          "size_category": "huge"
        },
        {
          "file": "tests\\test_phase2_integration_validation.py",
          "line_count": 677,
          "size_category": "huge"
        },
        {
          "file": "tests\\integration\\test_knowledge_graph_integration.py",
          "line_count": 440,
          "size_category": "large"
        },
        {
          "file": "tests\\integration\\test_knowledge_graph_simple.py",
          "line_count": 183,
          "size_category": "medium"
        },
        {
          "file": "tools\\migration\\analyze_legacy_code.py",
          "line_count": 398,
          "size_category": "large"
        },
        {
          "file": "tools\\migration\\safety_checker.py",
          "line_count": 466,
          "size_category": "large"
        },
        {
          "file": "ui\\nocode_enhancement.py",
          "line_count": 879,
          "size_category": "huge"
        },
        {
          "file": "ui\\unified_dashboard.py",
          "line_count": 1131,
          "size_category": "huge"
        },
        {
          "file": "ui_ux\\agent_verse_ui.py",
          "line_count": 614,
          "size_category": "huge"
        },
        {
          "file": "ui_ux\\interactive_dashboard.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "ui_ux\\studio_interface.py",
          "line_count": 634,
          "size_category": "huge"
        },
        {
          "file": "validation\\phase_validator.py",
          "line_count": 431,
          "size_category": "large"
        },
        {
          "file": "workflow\\consolidation_workflow.py",
          "line_count": 421,
          "size_category": "large"
        }
      ]
    },
    "monitoring": {
      "file_count": 1144,
      "total_lines": 662641,
      "scattered_across": 188,
      "directories": [
        "testmaster\\intelligence\\llm_providers",
        "testmaster\\core",
        "core\\intelligence\\documentation\\revolutionary",
        "testmaster\\intelligence\\documentation\\core",
        "ui_ux",
        "core\\intelligence\\integration",
        "core\\intelligence\\security\\audit",
        "testmaster\\async_processing",
        "prioritization",
        "core\\state",
        "core\\intelligence\\documentation\\intelligence\\optimization",
        "observability",
        "archive\\phase1c_consolidation_20250820_150000\\integration",
        "testmaster\\streaming",
        "dashboard\\dashboard_core",
        "core\\intelligence\\visualization",
        "workflow",
        "testmaster\\intelligence\\integration\\coordination",
        "testmaster\\overview",
        "core\\intelligence\\documentation",
        "analysis\\comprehensive_analysis\\ml_analysis",
        "core",
        "tests",
        "analysis\\comprehensive_analysis\\pattern_recognition",
        "testmaster\\intelligence\\integration",
        "testmaster\\intelligence\\documentation\\integrations",
        "analysis\\comprehensive_analysis\\energy_analysis",
        "archive\\oversized_modules_20250821_042018\\monitoring",
        "core\\intelligence\\testing\\automation",
        "core\\intelligence\\testing",
        "core\\intelligence\\testing\\security",
        "archive\\original_backup\\optimization",
        "analysis\\comprehensive_analysis\\anomaly_detection",
        "analysis\\comprehensive_analysis\\workflow_analysis",
        "orchestration",
        "agents\\roles",
        "archive\\original_backup\\scripts",
        "dashboard\\api",
        "core\\intelligence\\documentation\\enterprise",
        "optimization",
        "archive\\original_backup\\cache",
        "scripts",
        "core\\intelligence\\testing\\ai_generation",
        "core\\security",
        "cache",
        "archive",
        "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components",
        "core\\intelligence",
        "testmaster\\mapping",
        "observability\\core",
        "config",
        "testmaster\\intelligence\\integration\\events",
        "testmaster",
        ".",
        "testmaster\\intelligence\\monitoring",
        "core\\observability",
        "core\\intelligence\\streaming",
        "testmaster\\core\\ast_abstraction",
        "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components",
        "core\\intelligence\\enterprise\\api",
        "testmaster\\analysis\\coverage",
        "testmaster\\analysis\\comprehensive_analysis",
        "agents\\team",
        "integration",
        "archive\\phase7_archive\\replaced_code",
        "deployment",
        "testmaster\\orchestration",
        "testmaster\\orchestrator",
        "api",
        "archive\\original_backup\\analytics",
        "analysis\\comprehensive_analysis\\business_analysis",
        "core\\intelligence\\security",
        "testmaster\\telemetry",
        "analysis\\comprehensive_analysis\\security_monitoring",
        "analytics",
        "core\\intelligence\\knowledge_graph",
        "archive\\phase5_archive\\replaced_code",
        "core\\intelligence\\queuing",
        "testmaster\\intelligence\\integration\\layers",
        "core\\tools",
        "core\\intelligence\\documentation\\intelligence",
        "archive\\placeholder_backups_20250820_011745\\integration",
        "testmaster\\breaking",
        "core\\intelligence\\caching",
        "archive\\original_backup\\config",
        "archive\\oversized_modules_20250821_042018\\validation",
        "core\\intelligence\\testing\\advanced",
        "archive\\modularization_20250820_222253",
        "monitoring",
        "analysis\\comprehensive_analysis\\pattern_mining",
        "testmaster\\intelligence\\integration\\features",
        "testmaster\\intelligence\\integration\\agents",
        "tools\\migration",
        "core\\intelligence\\integration\\components",
        "testmaster\\intelligence\\integration\\storage",
        "testmaster\\integration",
        "archive\\phase6_archive\\replaced_code",
        "testmaster\\intelligence\\documentation\\quality",
        "testmaster\\intelligence\\tree_of_thought",
        "dashboard",
        "archive\\legacy_scripts",
        "archive\\oversized_modules_20250821_042018\\ml\\advanced",
        "archive\\original_backup\\integration",
        "analysis\\comprehensive_analysis",
        "archive\\original_backup\\incremental",
        "archive\\placeholder_backups_20250820_011817\\integration",
        "incremental",
        "analysis\\comprehensive_analysis\\metaprog_analysis",
        "consolidation",
        "core\\intelligence\\ml\\advanced",
        "testmaster\\reporting",
        "core\\intelligence\\testing\\components",
        "core\\intelligence\\config",
        "core\\intelligence\\compatibility",
        "testmaster\\intelligence\\documentation\\templates",
        "core\\intelligence\\testing\\enterprise",
        "core\\orchestration",
        "core\\intelligence\\correlation",
        "testmaster\\ui",
        "src",
        "core\\intelligence\\data_pipeline",
        "core\\intelligence\\analysis\\business_analyzer_modules",
        "core\\intelligence\\security\\enterprise",
        "testmaster\\monitoring",
        "archive\\20250818",
        "core\\intelligence\\api\\ml_api_modules",
        "core\\intelligence\\analytics\\realtime",
        "analysis\\comprehensive_analysis\\realtime_analysis",
        "archive\\phase4_archive\\replaced_code",
        "testmaster\\intelligence\\hierarchical_planning",
        "testmaster\\intelligence\\security",
        "analysis\\comprehensive_analysis\\debt_analysis",
        "testmaster\\verification",
        "ui",
        "testmaster\\generators",
        "archive\\oversized_modules_20250821_042018\\ml\\enterprise",
        "testmaster\\intelligence\\documentation\\generators",
        "archive\\original_backup",
        "core\\intelligence\\prediction",
        "core\\intelligence\\security\\enterprise\\validation",
        "core\\intelligence\\ml",
        "testmaster\\intelligence\\documentation\\templates\\api",
        "core\\reliability",
        "core\\intelligence\\ml\\enterprise",
        "testmaster\\core\\language_detection",
        "core\\intelligence\\api",
        "archive\\oversized_modules_20250821_042018\\analysis",
        "core\\intelligence\\base",
        "testmaster\\core\\framework_abstraction",
        "analysis\\comprehensive_analysis\\semantic_analysis",
        "core\\intelligence\\analytics",
        "tests\\integration",
        "state",
        "archive\\original_backup\\dashboard",
        "testmaster\\refactoring",
        "archive\\oversized_modules_20250821_042018\\coordination",
        "core\\intelligence\\orchestration",
        "analysis\\comprehensive_analysis\\cognitive_load",
        "analysis\\comprehensive_analysis\\data_pipeline",
        "core\\intelligence\\analysis",
        "validation",
        "archive\\modularization_integration",
        "core\\intelligence\\analytics\\advanced",
        "analysis\\comprehensive_analysis\\data_security",
        "core\\intelligence\\security\\enterprise\\intelligence",
        "core\\intelligence\\enterprise",
        "testmaster\\converters",
        "archive\\COMPLETE_REFACTOR_20250818_112844",
        "testmaster\\security",
        "core\\intelligence\\coordination",
        "archive\\modularization_20250821",
        "core\\intelligence\\monitoring",
        "testmaster\\intelligence\\optimization",
        "testmaster\\intelligence\\bridges",
        "archive\\original_backup\\src",
        "testmaster\\agent_qa",
        "core\\testing",
        "archive\\original_backup\\deduplication",
        "agents\\supervisor",
        "deduplication",
        "archive\\oversized_modules_20250821_042018\\documentation\\revolutionary",
        "testmaster\\flow_optimizer",
        "analysis\\comprehensive_analysis\\domain_modeling",
        "archive\\phase1c_consolidation_20250820_150000",
        "core\\intelligence\\reliability",
        "core\\intelligence\\dashboard",
        "testmaster\\communication",
        "archive\\oversized_modules_20250821_042018\\api"
      ],
      "consolidation_opportunity": true,
      "files": [
        {
          "file": "achieve_100_percent.py",
          "line_count": 133,
          "size_category": "small"
        },
        {
          "file": "agent_d_comprehensive_test_executor.py",
          "line_count": 911,
          "size_category": "huge"
        },
        {
          "file": "architecture_centralization_analysis.py",
          "line_count": 509,
          "size_category": "huge"
        },
        {
          "file": "auto_readme_updater.py",
          "line_count": 619,
          "size_category": "huge"
        },
        {
          "file": "comprehensive_classical_analysis_methods.py",
          "line_count": 736,
          "size_category": "huge"
        },
        {
          "file": "comprehensive_codebase_analysis.py",
          "line_count": 332,
          "size_category": "large"
        },
        {
          "file": "comprehensive_feature_audit.py",
          "line_count": 665,
          "size_category": "huge"
        },
        {
          "file": "create_real_implementations.py",
          "line_count": 873,
          "size_category": "huge"
        },
        {
          "file": "debug_feature_flags.py",
          "line_count": 18,
          "size_category": "tiny"
        },
        {
          "file": "documentation_cli.py",
          "line_count": 706,
          "size_category": "huge"
        },
        {
          "file": "enable_deep_integration.py",
          "line_count": 240,
          "size_category": "medium"
        },
        {
          "file": "enable_features.py",
          "line_count": 77,
          "size_category": "small"
        },
        {
          "file": "enhanced_context_aware_test_generator.py",
          "line_count": 428,
          "size_category": "large"
        },
        {
          "file": "enhanced_incremental_ast_engine.py",
          "line_count": 826,
          "size_category": "huge"
        },
        {
          "file": "enhanced_intelligent_test_builder.py",
          "line_count": 614,
          "size_category": "huge"
        },
        {
          "file": "enhanced_realtime_security_monitor.py",
          "line_count": 1108,
          "size_category": "huge"
        },
        {
          "file": "enhanced_security_dashboard_api.py",
          "line_count": 701,
          "size_category": "huge"
        },
        {
          "file": "enhanced_security_intelligence_agent.py",
          "line_count": 1091,
          "size_category": "huge"
        },
        {
          "file": "enhanced_self_healing_verifier.py",
          "line_count": 512,
          "size_category": "huge"
        },
        {
          "file": "enhance_analytics.py",
          "line_count": 466,
          "size_category": "large"
        },
        {
          "file": "enhance_auto_generated_tests.py",
          "line_count": 349,
          "size_category": "large"
        },
        {
          "file": "enhance_missing_robust_systems.py",
          "line_count": 1247,
          "size_category": "huge"
        },
        {
          "file": "finalize_module_splits.py",
          "line_count": 236,
          "size_category": "medium"
        },
        {
          "file": "final_100_percent_fix.py",
          "line_count": 225,
          "size_category": "medium"
        },
        {
          "file": "final_archive_sweep.py",
          "line_count": 295,
          "size_category": "medium"
        },
        {
          "file": "final_integration_fix.py",
          "line_count": 289,
          "size_category": "medium"
        },
        {
          "file": "fix_all_integration_systems.py",
          "line_count": 246,
          "size_category": "medium"
        },
        {
          "file": "fix_backend_issues.py",
          "line_count": 323,
          "size_category": "large"
        },
        {
          "file": "fix_dashboard_imports.py",
          "line_count": 91,
          "size_category": "small"
        },
        {
          "file": "fix_enhanced_test_imports.py",
          "line_count": 230,
          "size_category": "medium"
        },
        {
          "file": "fix_final_four_systems.py",
          "line_count": 150,
          "size_category": "medium"
        },
        {
          "file": "fix_final_issues.py",
          "line_count": 168,
          "size_category": "medium"
        },
        {
          "file": "fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "fix_integration_issues_final.py",
          "line_count": 259,
          "size_category": "medium"
        },
        {
          "file": "fix_integration_tests.py",
          "line_count": 249,
          "size_category": "medium"
        },
        {
          "file": "fix_integration_tests_simple.py",
          "line_count": 129,
          "size_category": "small"
        },
        {
          "file": "fix_testmaster_imports.py",
          "line_count": 149,
          "size_category": "small"
        },
        {
          "file": "fix_tests_for_real_modules.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "fix_to_100_percent.py",
          "line_count": 508,
          "size_category": "huge"
        },
        {
          "file": "fix_week2_test_imports.py",
          "line_count": 125,
          "size_category": "small"
        },
        {
          "file": "IMPLEMENTATION_STATUS_CHECK.py",
          "line_count": 254,
          "size_category": "medium"
        },
        {
          "file": "independent_test_verifier.py",
          "line_count": 215,
          "size_category": "medium"
        },
        {
          "file": "integration_test_generator.py",
          "line_count": 572,
          "size_category": "huge"
        },
        {
          "file": "intelligent_test_builder.py",
          "line_count": 359,
          "size_category": "large"
        },
        {
          "file": "intelligent_test_builder_offline.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "intelligent_test_builder_v2.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "layer3_integration_example.py",
          "line_count": 522,
          "size_category": "huge"
        },
        {
          "file": "live_code_quality_monitor.py",
          "line_count": 1045,
          "size_category": "huge"
        },
        {
          "file": "llm_analysis_monitor.py",
          "line_count": 729,
          "size_category": "huge"
        },
        {
          "file": "modularize_coverage_analyzer.py",
          "line_count": 257,
          "size_category": "medium"
        },
        {
          "file": "monitor_progress.py",
          "line_count": 30,
          "size_category": "tiny"
        },
        {
          "file": "monitor_to_100.py",
          "line_count": 38,
          "size_category": "tiny"
        },
        {
          "file": "performance_profiler.py",
          "line_count": 634,
          "size_category": "huge"
        },
        {
          "file": "realtime_metrics_collector.py",
          "line_count": 614,
          "size_category": "huge"
        },
        {
          "file": "real_time_monitor.py",
          "line_count": 563,
          "size_category": "huge"
        },
        {
          "file": "refine_misc_tests.py",
          "line_count": 189,
          "size_category": "medium"
        },
        {
          "file": "replace_stubs_with_archive_implementations.py",
          "line_count": 292,
          "size_category": "medium"
        },
        {
          "file": "restored_asyncio_4.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "restored_asyncio_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_asyncio_6.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "restored_json_4.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "restored_json_5.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "restored_json_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_logging_4.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "restored_logging_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_logging_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_os_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_random_6.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "restored_sys_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_threading_4.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "restored_threading_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_threading_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_time_4.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "restored_time_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_time_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_uuid_4.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "restored_uuid_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_uuid_6.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "restore_archive_robust.py",
          "line_count": 1537,
          "size_category": "huge"
        },
        {
          "file": "restore_missing_methods.py",
          "line_count": 535,
          "size_category": "huge"
        },
        {
          "file": "restore_real_implementations.py",
          "line_count": 163,
          "size_category": "medium"
        },
        {
          "file": "restore_robust_implementations.py",
          "line_count": 175,
          "size_category": "medium"
        },
        {
          "file": "risk_based_test_targeter.py",
          "line_count": 884,
          "size_category": "huge"
        },
        {
          "file": "run_debt_analysis.py",
          "line_count": 96,
          "size_category": "small"
        },
        {
          "file": "run_integration_test.py",
          "line_count": 185,
          "size_category": "medium"
        },
        {
          "file": "run_intelligent_tests.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "run_security_scan.py",
          "line_count": 95,
          "size_category": "small"
        },
        {
          "file": "simple_integration_test.py",
          "line_count": 100,
          "size_category": "small"
        },
        {
          "file": "simple_test.py",
          "line_count": 126,
          "size_category": "small"
        },
        {
          "file": "simple_web_monitor.py",
          "line_count": 191,
          "size_category": "medium"
        },
        {
          "file": "specialized_test_generators.py",
          "line_count": 816,
          "size_category": "huge"
        },
        {
          "file": "split_massive_test_file.py",
          "line_count": 225,
          "size_category": "medium"
        },
        {
          "file": "split_oversized_modules.py",
          "line_count": 278,
          "size_category": "medium"
        },
        {
          "file": "start_monitoring.py",
          "line_count": 264,
          "size_category": "medium"
        },
        {
          "file": "testmaster_orchestrator.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "test_100_percent_integration.py",
          "line_count": 227,
          "size_category": "medium"
        },
        {
          "file": "test_advanced_telemetry_system.py",
          "line_count": 506,
          "size_category": "huge"
        },
        {
          "file": "test_after_refactor.py",
          "line_count": 255,
          "size_category": "medium"
        },
        {
          "file": "test_agent_b_integrations.py",
          "line_count": 312,
          "size_category": "large"
        },
        {
          "file": "test_agent_qa_integration.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "test_agent_qa_system.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "test_analyzer_tab.py",
          "line_count": 50,
          "size_category": "small"
        },
        {
          "file": "test_api_functionality.py",
          "line_count": 223,
          "size_category": "medium"
        },
        {
          "file": "test_async_processing.py",
          "line_count": 407,
          "size_category": "large"
        },
        {
          "file": "test_backend_health.py",
          "line_count": 419,
          "size_category": "large"
        },
        {
          "file": "test_before_refactor.py",
          "line_count": 331,
          "size_category": "large"
        },
        {
          "file": "test_complexity_prioritizer.py",
          "line_count": 690,
          "size_category": "huge"
        },
        {
          "file": "test_comprehensive_analysis.py",
          "line_count": 190,
          "size_category": "medium"
        },
        {
          "file": "test_dependency_orderer.py",
          "line_count": 687,
          "size_category": "huge"
        },
        {
          "file": "test_dynamic_handoff_integration.py",
          "line_count": 254,
          "size_category": "medium"
        },
        {
          "file": "test_enhanced_analysis.py",
          "line_count": 117,
          "size_category": "small"
        },
        {
          "file": "test_enhanced_core_integration.py",
          "line_count": 324,
          "size_category": "large"
        },
        {
          "file": "test_enhanced_server.py",
          "line_count": 76,
          "size_category": "small"
        },
        {
          "file": "test_enhancements.py",
          "line_count": 397,
          "size_category": "large"
        },
        {
          "file": "test_exhaustive_features.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "test_flow_optimizer_system.py",
          "line_count": 609,
          "size_category": "huge"
        },
        {
          "file": "test_graph_workflow_integration.py",
          "line_count": 400,
          "size_category": "large"
        },
        {
          "file": "test_integration_restoration.py",
          "line_count": 291,
          "size_category": "medium"
        },
        {
          "file": "test_integration_systems.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "test_intelligence_integration.py",
          "line_count": 462,
          "size_category": "large"
        },
        {
          "file": "test_llm_intelligence.py",
          "line_count": 42,
          "size_category": "tiny"
        },
        {
          "file": "test_multi_objective_optimization.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "test_our_implementations.py",
          "line_count": 184,
          "size_category": "medium"
        },
        {
          "file": "test_performance_dashboard_integration.py",
          "line_count": 309,
          "size_category": "large"
        },
        {
          "file": "test_phase1_integration.py",
          "line_count": 274,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_exhaustive_validation.py",
          "line_count": 249,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_final_validation.py",
          "line_count": 271,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_integration.py",
          "line_count": 255,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_quick_validation.py",
          "line_count": 222,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_simple_validation.py",
          "line_count": 172,
          "size_category": "medium"
        },
        {
          "file": "test_phase3_complete.py",
          "line_count": 347,
          "size_category": "large"
        },
        {
          "file": "test_phase3_ui.py",
          "line_count": 190,
          "size_category": "medium"
        },
        {
          "file": "test_reporting_system.py",
          "line_count": 423,
          "size_category": "large"
        },
        {
          "file": "test_routes.py",
          "line_count": 30,
          "size_category": "tiny"
        },
        {
          "file": "test_security_full_integration.py",
          "line_count": 530,
          "size_category": "huge"
        },
        {
          "file": "test_security_integration_validation.py",
          "line_count": 329,
          "size_category": "large"
        },
        {
          "file": "test_streaming_generation.py",
          "line_count": 432,
          "size_category": "large"
        },
        {
          "file": "test_tot_integration.py",
          "line_count": 165,
          "size_category": "medium"
        },
        {
          "file": "test_tracking_manager_integration.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "test_universal_ast_system.py",
          "line_count": 579,
          "size_category": "huge"
        },
        {
          "file": "test_universal_language_detector.py",
          "line_count": 693,
          "size_category": "huge"
        },
        {
          "file": "unified_orchestration_example.py",
          "line_count": 407,
          "size_category": "large"
        },
        {
          "file": "unified_security_scanner.py",
          "line_count": 1124,
          "size_category": "huge"
        },
        {
          "file": "utility_analysis_report.py",
          "line_count": 405,
          "size_category": "large"
        },
        {
          "file": "validate_api_endpoints.py",
          "line_count": 787,
          "size_category": "huge"
        },
        {
          "file": "validate_dashboard_core.py",
          "line_count": 156,
          "size_category": "medium"
        },
        {
          "file": "validate_phase_1_7.py",
          "line_count": 186,
          "size_category": "medium"
        },
        {
          "file": "web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "week_7_8_converter.py",
          "line_count": 350,
          "size_category": "large"
        },
        {
          "file": "write_real_tests.py",
          "line_count": 248,
          "size_category": "medium"
        },
        {
          "file": "agents\\roles\\base_role.py",
          "line_count": 373,
          "size_category": "large"
        },
        {
          "file": "agents\\roles\\test_architect.py",
          "line_count": 945,
          "size_category": "huge"
        },
        {
          "file": "agents\\roles\\test_engineer.py",
          "line_count": 917,
          "size_category": "huge"
        },
        {
          "file": "agents\\roles\\test_executor.py",
          "line_count": 36,
          "size_category": "tiny"
        },
        {
          "file": "agents\\supervisor\\testing_supervisor.py",
          "line_count": 492,
          "size_category": "large"
        },
        {
          "file": "agents\\team\\testing_team.py",
          "line_count": 429,
          "size_category": "large"
        },
        {
          "file": "analysis\\comprehensive_analysis\\__init__.py",
          "line_count": 64,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\anomaly_detection\\anomaly_detection_analyzer.py",
          "line_count": 882,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\business_analysis\\business_core_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\business_analysis\\business_domain_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\business_analysis\\business_rule_analysis_wrapper.py",
          "line_count": 70,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\business_analysis\\business_validation_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\business_analysis\\business_workflow_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\cognitive_load\\cognitive_load_analyzer.py",
          "line_count": 1113,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\cognitive_load\\__init__.py",
          "line_count": 9,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\data_pipeline\\data_pipeline_analyzer.py",
          "line_count": 964,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\data_security\\data_leakage_detector.py",
          "line_count": 795,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\debt_analysis\\debt_category_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\debt_analysis\\debt_core_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\debt_analysis\\debt_financial_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\debt_analysis\\technical_debt_analysis_wrapper.py",
          "line_count": 68,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\domain_modeling\\domain_model_analyzer.py",
          "line_count": 921,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\domain_modeling\\__init__.py",
          "line_count": 9,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\energy_analysis\\energy_algorithm_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\energy_analysis\\energy_carbon_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\energy_analysis\\energy_consumption_analysis_wrapper.py",
          "line_count": 68,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\energy_analysis\\energy_core_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprogramming_analysis_wrapper.py",
          "line_count": 68,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_core_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_reflection_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_security_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_core_analyzer.py",
          "line_count": 397,
          "size_category": "large"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_data_analyzer.py",
          "line_count": 513,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_model_analyzer.py",
          "line_count": 550,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_tensor_analyzer.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "analysis\\comprehensive_analysis\\pattern_mining\\cross_repo_pattern_miner.py",
          "line_count": 1142,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\pattern_recognition\\ml_pattern_recognition.py",
          "line_count": 951,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\realtime_analysis\\realtime_ast_engine.py",
          "line_count": 974,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\realtime_analysis\\__init__.py",
          "line_count": 9,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py",
          "line_count": 1038,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\security_monitoring\\__init__.py",
          "line_count": 9,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_analysis_wrapper.py",
          "line_count": 68,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_context_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_core_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_pattern_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\workflow_analysis\\workflow_pattern_detector.py",
          "line_count": 1118,
          "size_category": "huge"
        },
        {
          "file": "analytics\\failure_analyzer.py",
          "line_count": 661,
          "size_category": "huge"
        },
        {
          "file": "api\\orchestration_api.py",
          "line_count": 447,
          "size_category": "large"
        },
        {
          "file": "api\\orchestration_flask.py",
          "line_count": 475,
          "size_category": "large"
        },
        {
          "file": "api\\phase2_api.py",
          "line_count": 531,
          "size_category": "huge"
        },
        {
          "file": "api\\phase3_api.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "archive\\advanced_testing_intelligence.py",
          "line_count": 770,
          "size_category": "huge"
        },
        {
          "file": "archive\\coverage_analyzer_original_2697_lines.py",
          "line_count": 2698,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_business_rule_analysis_original.py",
          "line_count": 1213,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "line_count": 1188,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "line_count": 1206,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_ml_code_analysis_original.py",
          "line_count": 1249,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_semantic_analysis_original.py",
          "line_count": 1244,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_technical_debt_analysis_original.py",
          "line_count": 1301,
          "size_category": "huge"
        },
        {
          "file": "archive\\integration_hub_original_20250820_220939.py",
          "line_count": 1877,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_replacement_20250820_011555_cross_system_communication.py",
          "line_count": 28,
          "size_category": "tiny"
        },
        {
          "file": "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\real_impl_backup_1755670819_distributed_task_queue.py",
          "line_count": 28,
          "size_category": "tiny"
        },
        {
          "file": "archive\\superseded_toplevel_energy_consumption_analysis.py",
          "line_count": 1188,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_metaprogramming_analysis.py",
          "line_count": 1206,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_ml_code_analysis.py",
          "line_count": 1249,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_technical_debt_analysis.py",
          "line_count": 1301,
          "size_category": "huge"
        },
        {
          "file": "archive\\20250818\\web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "line_count": 789,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_aggregator.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "line_count": 622,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
          "line_count": 449,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_batch_processor.py",
          "line_count": 495,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "line_count": 577,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_compressor.py",
          "line_count": 471,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_correlator.py",
          "line_count": 440,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "line_count": 893,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "line_count": 667,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "line_count": 1290,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "line_count": 775,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_enhancer.py",
          "line_count": 407,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "line_count": 661,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "line_count": 598,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "line_count": 658,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "line_count": 580,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_flow_monitor.py",
          "line_count": 579,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "line_count": 725,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "line_count": 690,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "line_count": 776,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "line_count": 626,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "line_count": 656,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_optimizer.py",
          "line_count": 378,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "line_count": 555,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_monitor.py",
          "line_count": 495,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "line_count": 703,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "line_count": 899,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "line_count": 766,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "line_count": 1192,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "line_count": 835,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "line_count": 850,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "line_count": 749,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "line_count": 694,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
          "line_count": 498,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "line_count": 723,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "line_count": 448,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "line_count": 680,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_validator.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "line_count": 674,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "line_count": 1142,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "line_count": 2698,
          "size_category": "huge"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_enhanced_test_imports.py",
          "line_count": 230,
          "size_category": "medium"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_tests_for_real_modules.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_week2_test_imports.py",
          "line_count": 125,
          "size_category": "small"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\achieve_100_percent_coverage.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\coverage_analysis.py",
          "line_count": 669,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\coverage_improver.py",
          "line_count": 484,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\data_flow_tests.py",
          "line_count": 797,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
          "line_count": 428,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\enhanced_self_healing_verifier.py",
          "line_count": 512,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\enhance_auto_generated_tests.py",
          "line_count": 349,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\fast_converter.py",
          "line_count": 136,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\fix_enhanced_test_imports.py",
          "line_count": 230,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\fix_remaining_issues.py",
          "line_count": 398,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\fix_tests_for_real_modules.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\fix_test_infrastructure.py",
          "line_count": 338,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\fix_week2_test_imports.py",
          "line_count": 125,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\independent_test_verifier.py",
          "line_count": 215,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\integration_test_generator.py",
          "line_count": 572,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\integration_test_matrix.py",
          "line_count": 1159,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\intelligent_test_builder.py",
          "line_count": 359,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\intelligent_test_builder_offline.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\intelligent_test_builder_v2.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\monitor_progress.py",
          "line_count": 30,
          "size_category": "tiny"
        },
        {
          "file": "archive\\legacy_scripts\\monitor_to_100.py",
          "line_count": 38,
          "size_category": "tiny"
        },
        {
          "file": "archive\\legacy_scripts\\quick_coverage_boost.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\run_intelligent_tests.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\simple_100_percent.py",
          "line_count": 146,
          "size_category": "small"
        },
        {
          "file": "archive\\legacy_scripts\\smart_test_generator.py",
          "line_count": 452,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\specialized_test_generators.py",
          "line_count": 816,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\week_7_8_converter.py",
          "line_count": 350,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\write_real_tests.py",
          "line_count": 248,
          "size_category": "medium"
        },
        {
          "file": "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "line_count": 1376,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "line_count": 1750,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\business_analyzer_original.py",
          "line_count": 1266,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "line_count": 1547,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "line_count": 953,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "line_count": 1877,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\enhanced_context_aware_test_generator.py",
          "line_count": 428,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\enhanced_self_healing_verifier.py",
          "line_count": 512,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\enhance_auto_generated_tests.py",
          "line_count": 349,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\fix_enhanced_test_imports.py",
          "line_count": 230,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\fix_tests_for_real_modules.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\fix_week2_test_imports.py",
          "line_count": 125,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\independent_test_verifier.py",
          "line_count": 215,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\integration_test_generator.py",
          "line_count": 572,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\intelligent_test_builder.py",
          "line_count": 359,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\intelligent_test_builder_offline.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\intelligent_test_builder_v2.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\monitor_progress.py",
          "line_count": 30,
          "size_category": "tiny"
        },
        {
          "file": "archive\\original_backup\\monitor_to_100.py",
          "line_count": 38,
          "size_category": "tiny"
        },
        {
          "file": "archive\\original_backup\\run_intelligent_tests.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\specialized_test_generators.py",
          "line_count": 816,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\testmaster_orchestrator.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\week_7_8_converter.py",
          "line_count": 350,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\write_real_tests.py",
          "line_count": 248,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\analytics\\failure_analyzer.py",
          "line_count": 661,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\cache\\intelligent_cache.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\config\\testmaster_config.py",
          "line_count": 560,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\dashboard\\quality_dashboard.py",
          "line_count": 603,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\deduplication\\test_deduplicator.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\incremental\\dependency_tracker.py",
          "line_count": 642,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\integration\\cross_module_tester.py",
          "line_count": 859,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\optimization\\execution_optimizer.py",
          "line_count": 648,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\scripts\\achieve_100_percent_coverage.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\coverage_improver.py",
          "line_count": 484,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\fast_converter.py",
          "line_count": 136,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\fix_remaining_issues.py",
          "line_count": 398,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\fix_test_infrastructure.py",
          "line_count": 338,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\quick_coverage_boost.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\simple_100_percent.py",
          "line_count": 146,
          "size_category": "small"
        },
        {
          "file": "archive\\original_backup\\scripts\\smart_test_generator.py",
          "line_count": 452,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\src\\coverage_analysis.py",
          "line_count": 669,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\src\\data_flow_tests.py",
          "line_count": 797,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\src\\integration_test_matrix.py",
          "line_count": 1159,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "line_count": 1266,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
          "line_count": 1547,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\api\\enterprise_integration_layer.py",
          "line_count": 1160,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "line_count": 1151,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\coordination\\agent_coordination_protocols.py",
          "line_count": 1311,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\coordination\\resource_coordination_system.py",
          "line_count": 1030,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\coordination\\unified_workflow_orchestrator.py",
          "line_count": 1355,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\documentation\\revolutionary\\neo4j_dominator.py",
          "line_count": 1158,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "line_count": 1294,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\delivery_optimizer.py",
          "line_count": 1276,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\integrity_ml_guardian.py",
          "line_count": 1444,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\performance_optimizer.py",
          "line_count": 1144,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\sla_ml_optimizer.py",
          "line_count": 1627,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\enterprise\\ml_infrastructure_orchestrator.py",
          "line_count": 1117,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "line_count": 1750,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\monitoring\\performance_optimization_engine.py",
          "line_count": 1124,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\validation\\integration_test_suite.py",
          "line_count": 1062,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\validation\\system_validation_framework.py",
          "line_count": 1295,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "line_count": 715,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "line_count": 618,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\enhanced_monitor.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "line_count": 610,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "line_count": 757,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "line_count": 1051,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "line_count": 1201,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "line_count": 859,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "line_count": 618,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "line_count": 1287,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "line_count": 1302,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "line_count": 768,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
          "line_count": 991,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase4_archive\\replaced_code\\enhanced_monitor_20250819_195132.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase5_archive\\replaced_code\\agent_graph_20250819_195602.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "archive\\phase5_archive\\replaced_code\\enterprise_deployment_20250819_195602.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase5_archive\\replaced_code\\testing_team_20250819_195602.py",
          "line_count": 429,
          "size_category": "large"
        },
        {
          "file": "archive\\phase6_archive\\replaced_code\\agent_graph_20250819_200928.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase7_archive\\replaced_code\\enhanced_monitor_20250819_202006.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
          "line_count": 991,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
          "line_count": 991,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "cache\\intelligent_cache.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "config\\testmaster_config.py",
          "line_count": 560,
          "size_category": "huge"
        },
        {
          "file": "config\\yaml_config_enhancer.py",
          "line_count": 633,
          "size_category": "huge"
        },
        {
          "file": "consolidation\\feature_discovery.py",
          "line_count": 364,
          "size_category": "large"
        },
        {
          "file": "core\\async_state_manager.py",
          "line_count": 746,
          "size_category": "huge"
        },
        {
          "file": "core\\context_manager.py",
          "line_count": 95,
          "size_category": "small"
        },
        {
          "file": "core\\feature_flags.py",
          "line_count": 438,
          "size_category": "large"
        },
        {
          "file": "core\\framework_abstraction.py",
          "line_count": 604,
          "size_category": "huge"
        },
        {
          "file": "core\\shared_state.py",
          "line_count": 610,
          "size_category": "huge"
        },
        {
          "file": "core\\tracking_manager.py",
          "line_count": 131,
          "size_category": "small"
        },
        {
          "file": "core\\__init__.py",
          "line_count": 116,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\orchestrator.py",
          "line_count": 390,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\__init__.py",
          "line_count": 541,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\business_analyzer_modular.py",
          "line_count": 343,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\business_base.py",
          "line_count": 251,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\business_constraint_analyzer.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\business_rule_extractor.py",
          "line_count": 360,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\business_workflow_analyzer.py",
          "line_count": 351,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_analyzer_modular.py",
          "line_count": 282,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_base.py",
          "line_count": 197,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_quantifier.py",
          "line_count": 338,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\ml_analyzer.py",
          "line_count": 777,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\ml_code_analyzer.py",
          "line_count": 573,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_analyzer.py",
          "line_count": 953,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_analyzer_modular.py",
          "line_count": 259,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_base.py",
          "line_count": 252,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_intent_analyzer.py",
          "line_count": 327,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_relationship_analyzer.py",
          "line_count": 372,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\technical_debt_analyzer.py",
          "line_count": 574,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\__init__.py",
          "line_count": 496,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py",
          "line_count": 477,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analytics\\advanced_anomaly_detector.py",
          "line_count": 299,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analytics\\analytics_anomaly_detector.py",
          "line_count": 578,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\analytics_deduplication.py",
          "line_count": 940,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\analytics_hub.py",
          "line_count": 641,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\predictive_analytics_engine.py",
          "line_count": 652,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\statistical_engine.py",
          "line_count": 318,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analytics\\__init__.py",
          "line_count": 799,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\advanced\\correlation_engine.py",
          "line_count": 589,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\realtime\\streaming_analytics.py",
          "line_count": 453,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\api\\endpoints.py",
          "line_count": 583,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\api\\intelligence_api.py",
          "line_count": 100,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\api\\intelligence_endpoints.py",
          "line_count": 393,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\api\\security_blueprint.py",
          "line_count": 170,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\api\\serializers.py",
          "line_count": 300,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\api\\unified_api_gateway.py",
          "line_count": 926,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\api\\unified_intelligence_api.py",
          "line_count": 453,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\api\\validators.py",
          "line_count": 373,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\api\\__init__.py",
          "line_count": 138,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\api\\ml_api_modules\\__init__.py",
          "line_count": 12,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\base\\__init__.py",
          "line_count": 571,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\caching\\distributed_smart_cache.py",
          "line_count": 743,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\compatibility\\__init__.py",
          "line_count": 600,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\config\\enterprise_config_manager.py",
          "line_count": 864,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\coordination\\cross_agent_bridge.py",
          "line_count": 907,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\coordination\\distributed_lock_manager.py",
          "line_count": 829,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\coordination\\service_discovery_registry.py",
          "line_count": 702,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\correlation\\cross_system_analytics.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\dashboard\\intelligence_backend.py",
          "line_count": 412,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\data_pipeline\\advanced_data_pipeline.py",
          "line_count": 717,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\adaptive_template_system.py",
          "line_count": 613,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\agency_swarm_analyzer.py",
          "line_count": 181,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\documentation\\api_spec_builder.py",
          "line_count": 316,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\api_validation_framework.py",
          "line_count": 750,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\auto_api_docs_generator.py",
          "line_count": 708,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\auto_generator.py",
          "line_count": 290,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\documentation\\bilingual_docs_processor.py",
          "line_count": 548,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\changelog_generator.py",
          "line_count": 390,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\comprehensive_visualization_engine.py",
          "line_count": 828,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\cookbook_organization_manager.py",
          "line_count": 648,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\cross_framework_integration.py",
          "line_count": 602,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\design_first_docs.py",
          "line_count": 739,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\diagram_creator.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\docstring_analyzer.py",
          "line_count": 332,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\docs_api.py",
          "line_count": 353,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\docs_testing_framework.py",
          "line_count": 639,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\doc_orchestrator.py",
          "line_count": 341,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\example_docs_system.py",
          "line_count": 507,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\faq_system.py",
          "line_count": 522,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\hierarchical_docs_organizer.py",
          "line_count": 637,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence_integration.py",
          "line_count": 653,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligent_content_orchestrator.py",
          "line_count": 659,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\interactive_docs.py",
          "line_count": 404,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\interactive_docs_system.py",
          "line_count": 739,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\knowledge_management_framework.py",
          "line_count": 1022,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\legacy_integration_framework.py",
          "line_count": 875,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\live_architecture.py",
          "line_count": 446,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\markdown_generator.py",
          "line_count": 323,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\master_documentation_orchestrator.py",
          "line_count": 912,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\metrics_reporter.py",
          "line_count": 351,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\migration_guide_generator.py",
          "line_count": 516,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\multimodal_recipe_engine.py",
          "line_count": 701,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\multi_agent_pattern_docs.py",
          "line_count": 727,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\phase_1_7_integration.py",
          "line_count": 351,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\production_ready_docs.py",
          "line_count": 886,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\quality_assessment_engine.py",
          "line_count": 552,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\recipe_based_learning.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\roadmap_generator.py",
          "line_count": 535,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\service_oriented_arch_docs.py",
          "line_count": 768,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\swarms_auto_generation_adapter.py",
          "line_count": 384,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\swarms_navigation_intelligence.py",
          "line_count": 453,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\swarms_self_healing_docs.py",
          "line_count": 517,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\tracking_integration_docs.py",
          "line_count": 591,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\tutorial_grid_system.py",
          "line_count": 729,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\unified_doc_generator.py",
          "line_count": 568,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\ux_excellence_framework.py",
          "line_count": 1044,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\workflow_recipe_docs.py",
          "line_count": 796,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise\\documentation_intelligence.py",
          "line_count": 451,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise\\documentation_validator.py",
          "line_count": 249,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise\\enterprise_doc_orchestrator.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise\\workflow_automation.py",
          "line_count": 562,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\analyzer.py",
          "line_count": 438,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\metrics.py",
          "line_count": 332,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\optimizer.py",
          "line_count": 619,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\project_coordinator.py",
          "line_count": 587,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\__init__.py",
          "line_count": 26,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\optimization\\content_enhancer.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\optimization\\strategy_engine.py",
          "line_count": 286,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\ai_documentation_synthesizer.py",
          "line_count": 706,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\codesee_annihilator.py",
          "line_count": 767,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\falkordb_obliterator.py",
          "line_count": 596,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\interactive_chat_interface.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\living_documentation_engine.py",
          "line_count": 664,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\newton_graph_destroyer.py",
          "line_count": 561,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\api_orchestrator.py",
          "line_count": 577,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\integration_validator.py",
          "line_count": 234,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\enterprise\\reporting_engine.py",
          "line_count": 635,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\api\\endpoint_manager.py",
          "line_count": 652,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\api\\request_router.py",
          "line_count": 580,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\api\\service_registry.py",
          "line_count": 467,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\integration\\base.py",
          "line_count": 161,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\integration\\__init__.py",
          "line_count": 563,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\integration\\components\\cross_system_analyzer.py",
          "line_count": 576,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\integration\\components\\endpoint_manager.py",
          "line_count": 438,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\integration\\components\\event_processor.py",
          "line_count": 458,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\integration\\components\\performance_monitor.py",
          "line_count": 575,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\ai_code_explorer.py",
          "line_count": 430,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\code_knowledge_graph_engine.py",
          "line_count": 369,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\instant_graph_engine.py",
          "line_count": 465,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\multi_language_analyzer.py",
          "line_count": 415,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\predictive_code_intelligence.py",
          "line_count": 478,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\visual_relationship_mapper.py",
          "line_count": 440,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\__init__.py",
          "line_count": 94,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\ml\\advanced_models.py",
          "line_count": 272,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\ml\\correlation_engine.py",
          "line_count": 340,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\explainability.py",
          "line_count": 403,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\feature_engineering.py",
          "line_count": 338,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\gpu_accelerator.py",
          "line_count": 400,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\integration_analysis.py",
          "line_count": 474,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\ml_orchestrator.py",
          "line_count": 701,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\model_registry.py",
          "line_count": 397,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\online_learning.py",
          "line_count": 363,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\adaptive_configuration_manager.py",
          "line_count": 693,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\adaptive_load_balancer.py",
          "line_count": 600,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\anomaly_detection.py",
          "line_count": 525,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\batch_processor.py",
          "line_count": 856,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\distributed_ml_coordinator.py",
          "line_count": 779,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\ensemble_meta_learner.py",
          "line_count": 340,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\intelligent_data_pipeline.py",
          "line_count": 791,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\intelligent_resource_scheduler.py",
          "line_count": 743,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\ml_network_optimizer.py",
          "line_count": 697,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\performance_execution_manager.py",
          "line_count": 415,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\performance_ml_engine.py",
          "line_count": 913,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\predictive_engine.py",
          "line_count": 850,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\predictive_maintenance_ai.py",
          "line_count": 810,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\smart_cache.py",
          "line_count": 593,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\telemetry_export_manager.py",
          "line_count": 604,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\telemetry_ml_collector.py",
          "line_count": 539,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\telemetry_observability_engine.py",
          "line_count": 633,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\watchdog_ml_monitor.py",
          "line_count": 546,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\watchdog_process_manager.py",
          "line_count": 646,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\watchdog_recovery_system.py",
          "line_count": 642,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\enterprise\\ml_auto_scaling.py",
          "line_count": 876,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
          "line_count": 756,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\monitoring\\agent_qa_modular.py",
          "line_count": 243,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\monitoring\\enterprise_performance_monitor.py",
          "line_count": 817,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\monitoring\\pattern_detector.py",
          "line_count": 355,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\monitoring\\qa_base.py",
          "line_count": 208,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\monitoring\\qa_monitor.py",
          "line_count": 257,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\monitoring\\qa_scorer.py",
          "line_count": 255,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\monitoring\\__init__.py",
          "line_count": 99,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\orchestration\\agent_coordinator.py",
          "line_count": 527,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\orchestration\\cross_system_orchestrator.py",
          "line_count": 982,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\orchestration\\integration_hub.py",
          "line_count": 711,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\orchestration\\workflow_orchestration_engine.py",
          "line_count": 801,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\prediction\\forecaster.py",
          "line_count": 367,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\queuing\\express_priority_queue.py",
          "line_count": 516,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\reliability\\enterprise_error_recovery.py",
          "line_count": 890,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\reliability\\quantum_retry_orchestrator.py",
          "line_count": 472,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\reliability\\quantum_retry_strategies.py",
          "line_count": 332,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\advanced_security_intelligence.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\ai_security_integration.py",
          "line_count": 178,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\audit_logger.py",
          "line_count": 266,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\code_vulnerability_scanner.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\compliance_checker.py",
          "line_count": 422,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\crypto_analyzer.py",
          "line_count": 354,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\dependency_scanner.py",
          "line_count": 384,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\knowledge_graph_integration.py",
          "line_count": 203,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\security_analytics.py",
          "line_count": 432,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\security_api.py",
          "line_count": 445,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\security_compliance_validator.py",
          "line_count": 704,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\security_dashboard.py",
          "line_count": 412,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\threat_intelligence_engine.py",
          "line_count": 550,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\threat_modeler.py",
          "line_count": 424,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\ultimate_security_orchestrator.py",
          "line_count": 529,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\unified_security_service.py",
          "line_count": 270,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\vulnerability_scanner.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\audit\\audit_events.py",
          "line_count": 255,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\audit\\audit_interface.py",
          "line_count": 374,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\audit\\audit_reporter.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\audit\\audit_storage.py",
          "line_count": 287,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\audit\\__init__.py",
          "line_count": 18,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\compliance_automation.py",
          "line_count": 470,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\enterprise_security_monitor.py",
          "line_count": 400,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\governance_framework.py",
          "line_count": 548,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\security_intelligence.py",
          "line_count": 599,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\security_validator.py",
          "line_count": 443,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\intelligence\\incident_responder.py",
          "line_count": 648,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\intelligence\\threat_detector.py",
          "line_count": 806,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\validation\\compliance_validator.py",
          "line_count": 562,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\validation\\integration_validator.py",
          "line_count": 592,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\validation\\penetration_tester.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\streaming\\event_streaming_engine.py",
          "line_count": 815,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\automation_engine.py",
          "line_count": 597,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\base.py",
          "line_count": 128,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\testing\\chaos_engineer.py",
          "line_count": 400,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\flaky_test_detector.py",
          "line_count": 492,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\load_generator.py",
          "line_count": 454,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\mutation_engine.py",
          "line_count": 285,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\testing\\quality_dashboard.py",
          "line_count": 387,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\regression_detector.py",
          "line_count": 417,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\security_fuzzer.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\testing_api.py",
          "line_count": 481,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\test_analytics.py",
          "line_count": 477,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\test_intelligence.py",
          "line_count": 548,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\test_orchestrator.py",
          "line_count": 391,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\test_quality_scorer.py",
          "line_count": 405,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\test_selector.py",
          "line_count": 388,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\__init__.py",
          "line_count": 457,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\advanced\\ml_test_optimizer.py",
          "line_count": 857,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\advanced\\statistical_coverage_analyzer.py",
          "line_count": 799,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\advanced\\__init__.py",
          "line_count": 43,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\claude_test_generator.py",
          "line_count": 459,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
          "line_count": 543,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\universal_ai_generator.py",
          "line_count": 472,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\automation\\continuous_testing_engine.py",
          "line_count": 547,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\automation\\enterprise_test_orchestrator.py",
          "line_count": 727,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\automation\\test_maintenance_system.py",
          "line_count": 551,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\automation\\__init__.py",
          "line_count": 72,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\testing\\components\\coverage_analyzer.py",
          "line_count": 1101,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\components\\execution_engine.py",
          "line_count": 382,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\components\\integration_generator.py",
          "line_count": 749,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\components\\ml_optimizer.py",
          "line_count": 751,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\enterprise\\predictive_test_failure.py",
          "line_count": 849,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\enterprise\\quality_analytics_engine.py",
          "line_count": 919,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\enterprise\\quality_gate_automation.py",
          "line_count": 742,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\enterprise\\__init__.py",
          "line_count": 72,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\testing\\security\\advanced_owasp_tester.py",
          "line_count": 913,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\security\\api_security_tester.py",
          "line_count": 532,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\security\\compliance_validator.py",
          "line_count": 663,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\visualization\\agent_interface_systems.py",
          "line_count": 394,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\dashboard_systems.py",
          "line_count": 377,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\data_visualization_engines.py",
          "line_count": 437,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\development_tools_ui.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\observability_systems.py",
          "line_count": 427,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\realtime_ui_components.py",
          "line_count": 479,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\user_experience_frameworks.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\__init__.py",
          "line_count": 222,
          "size_category": "medium"
        },
        {
          "file": "core\\observability\\agent_ops_separate.py",
          "line_count": 571,
          "size_category": "huge"
        },
        {
          "file": "core\\observability\\unified_monitor.py",
          "line_count": 757,
          "size_category": "huge"
        },
        {
          "file": "core\\observability\\unified_monitor_enhanced.py",
          "line_count": 368,
          "size_category": "large"
        },
        {
          "file": "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "line_count": 1891,
          "size_category": "huge"
        },
        {
          "file": "core\\observability\\__init__.py",
          "line_count": 28,
          "size_category": "tiny"
        },
        {
          "file": "core\\orchestration\\agent_graph.py",
          "line_count": 501,
          "size_category": "huge"
        },
        {
          "file": "core\\orchestration\\enhanced_agent_orchestrator.py",
          "line_count": 755,
          "size_category": "huge"
        },
        {
          "file": "core\\reliability\\emergency_backup_recovery.py",
          "line_count": 824,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\adaptive_fallback_orchestrator.py",
          "line_count": 677,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\adaptive_security_resilience.py",
          "line_count": 748,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\agent_communication_security.py",
          "line_count": 355,
          "size_category": "large"
        },
        {
          "file": "core\\security\\api_security_layer.py",
          "line_count": 380,
          "size_category": "large"
        },
        {
          "file": "core\\security\\authentication_system.py",
          "line_count": 289,
          "size_category": "medium"
        },
        {
          "file": "core\\security\\byzantine_consensus_security.py",
          "line_count": 637,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\circuit_breaker_matrix.py",
          "line_count": 630,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\cloud_event_security.py",
          "line_count": 523,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\code_generation_security.py",
          "line_count": 741,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\compliance_framework.py",
          "line_count": 1115,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\configuration_security.py",
          "line_count": 441,
          "size_category": "large"
        },
        {
          "file": "core\\security\\container_security_validator.py",
          "line_count": 628,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\data_integrity_guardian.py",
          "line_count": 710,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\deployment_pipeline_security.py",
          "line_count": 863,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\distributed_agent_registry.py",
          "line_count": 399,
          "size_category": "large"
        },
        {
          "file": "core\\security\\distributed_communication_security.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\distributed_coordination_security.py",
          "line_count": 777,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\distributed_key_management_security.py",
          "line_count": 678,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\document_classification_security.py",
          "line_count": 691,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\enterprise_audit_logging.py",
          "line_count": 516,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\enterprise_authentication.py",
          "line_count": 754,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\enterprise_auth_gateway.py",
          "line_count": 590,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\enum_security.py",
          "line_count": 505,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\error_handler.py",
          "line_count": 125,
          "size_category": "small"
        },
        {
          "file": "core\\security\\error_isolation_system.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\error_recovery_framework.py",
          "line_count": 578,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\exception_monitoring.py",
          "line_count": 498,
          "size_category": "large"
        },
        {
          "file": "core\\security\\fault_tolerance_engine.py",
          "line_count": 705,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\file_security_handler.py",
          "line_count": 353,
          "size_category": "large"
        },
        {
          "file": "core\\security\\flow_persistence_security.py",
          "line_count": 698,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\graceful_degradation_manager.py",
          "line_count": 699,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\guardrail_security_system.py",
          "line_count": 542,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\health_monitoring_nexus.py",
          "line_count": 664,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\identity_validation_system.py",
          "line_count": 370,
          "size_category": "large"
        },
        {
          "file": "core\\security\\license_compliance_framework.py",
          "line_count": 516,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\message_context_security.py",
          "line_count": 428,
          "size_category": "large"
        },
        {
          "file": "core\\security\\multi_agent_access_control.py",
          "line_count": 801,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\multi_agent_evaluation_security.py",
          "line_count": 677,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\network_security_controls.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\operational_security.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\quantum_retry_engine.py",
          "line_count": 616,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\rate_limiter.py",
          "line_count": 333,
          "size_category": "large"
        },
        {
          "file": "core\\security\\resilience_orchestrator.py",
          "line_count": 681,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\retry_mechanism_system.py",
          "line_count": 655,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\secure_message_delivery.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\secure_performance_optimizer.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\security_monitoring_system.py",
          "line_count": 760,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\self_healing_coordinator.py",
          "line_count": 698,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\service_mesh_security.py",
          "line_count": 596,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\thread_safety_manager.py",
          "line_count": 411,
          "size_category": "large"
        },
        {
          "file": "core\\security\\threat_intelligence_system.py",
          "line_count": 881,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\validation_framework.py",
          "line_count": 220,
          "size_category": "medium"
        },
        {
          "file": "core\\security\\validation_security.py",
          "line_count": 605,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\vulnerability_detection_framework.py",
          "line_count": 716,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\__init__.py",
          "line_count": 596,
          "size_category": "huge"
        },
        {
          "file": "core\\state\\enhanced_state_manager.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\adaptive_testing_framework.py",
          "line_count": 1012,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\agent_reasoning_testing.py",
          "line_count": 564,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\archive_intelligence_mining.py",
          "line_count": 586,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\collaborative_testing_platform.py",
          "line_count": 1224,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\competitive_analysis_framework.py",
          "line_count": 455,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\crew_thread_safety_testing.py",
          "line_count": 599,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\distributed_test_coordinator.py",
          "line_count": 994,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\enterprise_test_framework.py",
          "line_count": 739,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\flow_testing.py",
          "line_count": 743,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\graph_async_testing.py",
          "line_count": 473,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\graph_index_testing.py",
          "line_count": 1103,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\graph_performance_testing.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\graph_vector_testing.py",
          "line_count": 535,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\hallucination_guardrail_testing.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\hook_testing.py",
          "line_count": 951,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\integration_test_framework.py",
          "line_count": 489,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\intelligence_synthesis_framework.py",
          "line_count": 899,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\intelligent_test_generator.py",
          "line_count": 1119,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\langgraph_supervisor_testing.py",
          "line_count": 693,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\multi_modal_test_engine.py",
          "line_count": 1208,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\parallel_test_executor.py",
          "line_count": 526,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\pattern_consolidation_engine.py",
          "line_count": 799,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\performance_test_suite.py",
          "line_count": 462,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\pipeline_testing.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\repository_intelligence_aggregator.py",
          "line_count": 970,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\response_validation_testing.py",
          "line_count": 440,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\run_all_tests.py",
          "line_count": 389,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\session_testing.py",
          "line_count": 877,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\supercharged_test_generator.py",
          "line_count": 443,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\supercharged_test_generator.py_stub_backup_20250821_042438.py",
          "line_count": 557,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\task_guardrails_testing.py",
          "line_count": 768,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\testmaster_api_gateway.py",
          "line_count": 1318,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\test_ai_code_exploration.py",
          "line_count": 355,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\test_coverage_optimizer.py",
          "line_count": 282,
          "size_category": "medium"
        },
        {
          "file": "core\\testing\\test_evolution_analyzer.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\test_integration_hub.py",
          "line_count": 601,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\test_intelligence_orchestrator.py",
          "line_count": 328,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\test_knowledge_graph_engine.py",
          "line_count": 256,
          "size_category": "medium"
        },
        {
          "file": "core\\testing\\test_multi_language_superiority.py",
          "line_count": 363,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\test_quality_analyzer.py",
          "line_count": 245,
          "size_category": "medium"
        },
        {
          "file": "core\\testing\\test_ui_interface_superiority.py",
          "line_count": 492,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\test_zero_setup_domination.py",
          "line_count": 380,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\thread_retry_testing.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\tool_factory_testing.py",
          "line_count": 643,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\tool_testing.py",
          "line_count": 916,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\tracing_testing.py",
          "line_count": 1157,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\unified_test_orchestrator.py",
          "line_count": 489,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\user_input_testing.py",
          "line_count": 862,
          "size_category": "huge"
        },
        {
          "file": "core\\tools\\concrete_tools.py",
          "line_count": 472,
          "size_category": "large"
        },
        {
          "file": "core\\tools\\type_safe_tools.py",
          "line_count": 471,
          "size_category": "large"
        },
        {
          "file": "dashboard\\automated_frontend_simulator.py",
          "line_count": 376,
          "size_category": "large"
        },
        {
          "file": "dashboard\\automated_frontend_tester.py",
          "line_count": 651,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\comprehensive_frontend_test.py",
          "line_count": 285,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\comprehensive_frontend_validator.py",
          "line_count": 552,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\demo_automated_frontend_testing.py",
          "line_count": 298,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\discover_backend_features.py",
          "line_count": 215,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\frontend_display_validator.py",
          "line_count": 773,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\gunicorn_config.py",
          "line_count": 49,
          "size_category": "tiny"
        },
        {
          "file": "dashboard\\integration_gap_analysis.py",
          "line_count": 307,
          "size_category": "large"
        },
        {
          "file": "dashboard\\quality_dashboard.py",
          "line_count": 603,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\quick_frontend_test.py",
          "line_count": 223,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\quick_integration_test.py",
          "line_count": 202,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\quick_validation.py",
          "line_count": 74,
          "size_category": "small"
        },
        {
          "file": "dashboard\\server.py",
          "line_count": 548,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\simple_robustness_test.py",
          "line_count": 145,
          "size_category": "small"
        },
        {
          "file": "dashboard\\test_all_features.py",
          "line_count": 300,
          "size_category": "large"
        },
        {
          "file": "dashboard\\test_analytics_import.py",
          "line_count": 71,
          "size_category": "small"
        },
        {
          "file": "dashboard\\test_api_endpoints.py",
          "line_count": 224,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\test_final_enhancements.py",
          "line_count": 863,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\test_frontend_integration.py",
          "line_count": 772,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\test_frontend_without_browser.py",
          "line_count": 234,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\test_multi_agent_integration.py",
          "line_count": 961,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\test_new_robustness_features.py",
          "line_count": 396,
          "size_category": "large"
        },
        {
          "file": "dashboard\\test_new_visualization_apis.py",
          "line_count": 132,
          "size_category": "small"
        },
        {
          "file": "dashboard\\test_robustness_suite.py",
          "line_count": 373,
          "size_category": "large"
        },
        {
          "file": "dashboard\\test_robustness_verification.py",
          "line_count": 320,
          "size_category": "large"
        },
        {
          "file": "dashboard\\test_ultra_reliability.py",
          "line_count": 1049,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\ultimate_frontend_validator.py",
          "line_count": 845,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\validate_all_endpoints.py",
          "line_count": 226,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\wsgi.py",
          "line_count": 89,
          "size_category": "small"
        },
        {
          "file": "dashboard\\api\\analytics.py",
          "line_count": 789,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\async_processing.py",
          "line_count": 606,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\backend_health_monitor.py",
          "line_count": 659,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\comprehensive_monitoring.py",
          "line_count": 665,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\coverage.py",
          "line_count": 583,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\crew_orchestration.py",
          "line_count": 812,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\enhanced_analytics.py",
          "line_count": 587,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\enhanced_telemetry.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\flow_optimization.py",
          "line_count": 662,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\frontend_data_contracts.py",
          "line_count": 390,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\health.py",
          "line_count": 760,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\intelligence.py",
          "line_count": 533,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\intelligence_integration.py",
          "line_count": 478,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\knowledge_graph.py",
          "line_count": 454,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\llm.py",
          "line_count": 405,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\monitoring.py",
          "line_count": 366,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\observability.py",
          "line_count": 522,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\orchestration_flask.py",
          "line_count": 475,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\performance.py",
          "line_count": 583,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\phase2_api.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\production_deployment.py",
          "line_count": 499,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\quality_assurance.py",
          "line_count": 653,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\real_codebase_scanner.py",
          "line_count": 384,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\real_codebase_scanner.stub_backup.py",
          "line_count": 892,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\refactor.py",
          "line_count": 63,
          "size_category": "small"
        },
        {
          "file": "dashboard\\api\\security.py",
          "line_count": 514,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\swarm_orchestration.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\telemetry.py",
          "line_count": 573,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\tests.py",
          "line_count": 101,
          "size_category": "small"
        },
        {
          "file": "dashboard\\api\\test_generation.py",
          "line_count": 481,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\websocket_dashboard.py",
          "line_count": 547,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\workflow.py",
          "line_count": 354,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_aggregator.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_anomaly_detector.py",
          "line_count": 622,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_backup.py",
          "line_count": 449,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_batch_processor.py",
          "line_count": 495,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_circuit_breaker.py",
          "line_count": 577,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_compressor.py",
          "line_count": 471,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_connectivity_monitor.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_correlator.py",
          "line_count": 440,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_data_sanitizer.py",
          "line_count": 893,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_dead_letter_queue.py",
          "line_count": 667,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_deduplication.py",
          "line_count": 1290,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_deduplication_engine.py",
          "line_count": 775,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_delivery_enhancer.py",
          "line_count": 407,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_delivery_guarantee.py",
          "line_count": 661,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_delivery_verifier.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_error_recovery.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_event_queue.py",
          "line_count": 598,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_export_manager.py",
          "line_count": 658,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_fallback_system.py",
          "line_count": 580,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_flow_monitor.py",
          "line_count": 579,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_health_monitor.py",
          "line_count": 725,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py",
          "line_count": 690,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_integrity_guardian.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_integrity_verifier.py",
          "line_count": 776,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_metrics_collector.py",
          "line_count": 626,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_normalizer.py",
          "line_count": 656,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_optimizer.py",
          "line_count": 378,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_performance_booster.py",
          "line_count": 555,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_performance_monitor.py",
          "line_count": 495,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_performance_optimizer.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_persistence.py",
          "line_count": 703,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_pipeline.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_priority_queue.py",
          "line_count": 899,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_quality_assurance.py",
          "line_count": 766,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_quantum_retry.py",
          "line_count": 1192,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_rate_limiter.py",
          "line_count": 835,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_receipt_tracker.py",
          "line_count": 850,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py",
          "line_count": 749,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_redundancy.py",
          "line_count": 694,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_retry_manager.py",
          "line_count": 498,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_sla_tracker.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_smart_cache.py",
          "line_count": 723,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_streaming.py",
          "line_count": 448,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_telemetry.py",
          "line_count": 680,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_validator.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_watchdog.py",
          "line_count": 674,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\cache.py",
          "line_count": 120,
          "size_category": "small"
        },
        {
          "file": "dashboard\\dashboard_core\\data_store.py",
          "line_count": 506,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\emergency_backup_recovery.py",
          "line_count": 1309,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\error_handler.py",
          "line_count": 267,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\dashboard_core\\metrics_feed.py",
          "line_count": 360,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\monitor.py",
          "line_count": 314,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\predictive_flow_optimizer.py",
          "line_count": 1077,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\realtime_analytics_tracker.py",
          "line_count": 608,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\real_data_extractor.py",
          "line_count": 569,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\real_time_analytics.py",
          "line_count": 33,
          "size_category": "tiny"
        },
        {
          "file": "dashboard\\dashboard_core\\system_monitor.py",
          "line_count": 199,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\dashboard_core\\system_observability_metrics.py",
          "line_count": 840,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\test_collector.py",
          "line_count": 402,
          "size_category": "large"
        },
        {
          "file": "deduplication\\test_deduplicator.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "deployment\\enterprise_deployment.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "deployment\\service_registry.py",
          "line_count": 446,
          "size_category": "large"
        },
        {
          "file": "deployment\\swarm_orchestrator.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "incremental\\dependency_tracker.py",
          "line_count": 642,
          "size_category": "huge"
        },
        {
          "file": "integration\\automatic_scaling_system.py",
          "line_count": 1092,
          "size_category": "huge"
        },
        {
          "file": "integration\\automatic_scaling_system_robust.py",
          "line_count": 1051,
          "size_category": "huge"
        },
        {
          "file": "integration\\comprehensive_error_recovery.py",
          "line_count": 1280,
          "size_category": "huge"
        },
        {
          "file": "integration\\comprehensive_error_recovery_robust.py",
          "line_count": 1201,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_module_tester.py",
          "line_count": 859,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_analytics.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_analytics_robust.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_apis.py",
          "line_count": 618,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_apis_robust.py",
          "line_count": 618,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_communication.py",
          "line_count": 327,
          "size_category": "large"
        },
        {
          "file": "integration\\distributed_task_queue.py",
          "line_count": 472,
          "size_category": "large"
        },
        {
          "file": "integration\\intelligent_caching_layer.py",
          "line_count": 1334,
          "size_category": "huge"
        },
        {
          "file": "integration\\intelligent_caching_layer_robust.py",
          "line_count": 1287,
          "size_category": "huge"
        },
        {
          "file": "integration\\load_balancing_system.py",
          "line_count": 543,
          "size_category": "huge"
        },
        {
          "file": "integration\\multi_environment_support.py",
          "line_count": 462,
          "size_category": "large"
        },
        {
          "file": "integration\\predictive_analytics_engine.py",
          "line_count": 1142,
          "size_category": "huge"
        },
        {
          "file": "integration\\predictive_analytics_engine_robust.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "integration\\realtime_performance_monitoring.py",
          "line_count": 1427,
          "size_category": "huge"
        },
        {
          "file": "integration\\realtime_performance_monitoring_robust.py",
          "line_count": 1302,
          "size_category": "huge"
        },
        {
          "file": "integration\\resource_optimization_engine.py",
          "line_count": 574,
          "size_category": "huge"
        },
        {
          "file": "integration\\service_mesh_integration.py",
          "line_count": 625,
          "size_category": "huge"
        },
        {
          "file": "integration\\visual_workflow_designer.py",
          "line_count": 768,
          "size_category": "huge"
        },
        {
          "file": "integration\\workflow_execution_engine.py",
          "line_count": 991,
          "size_category": "huge"
        },
        {
          "file": "integration\\workflow_execution_engine_robust.py",
          "line_count": 991,
          "size_category": "huge"
        },
        {
          "file": "integration\\workflow_framework.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "monitoring\\enhanced_monitor_separate.py",
          "line_count": 573,
          "size_category": "huge"
        },
        {
          "file": "monitoring\\monitoring_agents.py",
          "line_count": 665,
          "size_category": "huge"
        },
        {
          "file": "monitoring\\__init__.py",
          "line_count": 35,
          "size_category": "tiny"
        },
        {
          "file": "observability\\unified_observability.py",
          "line_count": 455,
          "size_category": "large"
        },
        {
          "file": "observability\\__init__.py",
          "line_count": 170,
          "size_category": "medium"
        },
        {
          "file": "observability\\core\\conversational_interface.py",
          "line_count": 155,
          "size_category": "medium"
        },
        {
          "file": "observability\\core\\cost_management.py",
          "line_count": 194,
          "size_category": "medium"
        },
        {
          "file": "observability\\core\\event_monitoring.py",
          "line_count": 306,
          "size_category": "large"
        },
        {
          "file": "observability\\core\\multimodal_analyzer.py",
          "line_count": 217,
          "size_category": "medium"
        },
        {
          "file": "observability\\core\\session_tracking.py",
          "line_count": 178,
          "size_category": "medium"
        },
        {
          "file": "optimization\\execution_optimizer.py",
          "line_count": 648,
          "size_category": "huge"
        },
        {
          "file": "orchestration\\swarm_router_enhancement.py",
          "line_count": 764,
          "size_category": "huge"
        },
        {
          "file": "orchestration\\unified_orchestrator.py",
          "line_count": 1279,
          "size_category": "huge"
        },
        {
          "file": "prioritization\\test_prioritizer.py",
          "line_count": 767,
          "size_category": "huge"
        },
        {
          "file": "scripts\\achieve_100_percent_coverage.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "scripts\\analyze_components.py",
          "line_count": 497,
          "size_category": "large"
        },
        {
          "file": "scripts\\api_documenter.py",
          "line_count": 585,
          "size_category": "huge"
        },
        {
          "file": "scripts\\coverage_improver.py",
          "line_count": 484,
          "size_category": "large"
        },
        {
          "file": "scripts\\fast_converter.py",
          "line_count": 136,
          "size_category": "small"
        },
        {
          "file": "scripts\\fix_remaining_issues.py",
          "line_count": 398,
          "size_category": "large"
        },
        {
          "file": "scripts\\fix_test_infrastructure.py",
          "line_count": 338,
          "size_category": "large"
        },
        {
          "file": "scripts\\quick_coverage_boost.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "scripts\\simple_100_percent.py",
          "line_count": 146,
          "size_category": "small"
        },
        {
          "file": "scripts\\smart_test_generator.py",
          "line_count": 452,
          "size_category": "large"
        },
        {
          "file": "src\\coverage_analysis.py",
          "line_count": 669,
          "size_category": "huge"
        },
        {
          "file": "src\\data_flow_tests.py",
          "line_count": 797,
          "size_category": "huge"
        },
        {
          "file": "src\\integration_test_matrix.py",
          "line_count": 1159,
          "size_category": "huge"
        },
        {
          "file": "state\\unified_state_manager.py",
          "line_count": 985,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\layer2_integration.py",
          "line_count": 519,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\main.py",
          "line_count": 377,
          "size_category": "large"
        },
        {
          "file": "testmaster\\__init__.py",
          "line_count": 68,
          "size_category": "small"
        },
        {
          "file": "testmaster\\agent_qa\\benchmarking_suite.py",
          "line_count": 366,
          "size_category": "large"
        },
        {
          "file": "testmaster\\agent_qa\\quality_inspector.py",
          "line_count": 318,
          "size_category": "large"
        },
        {
          "file": "testmaster\\agent_qa\\quality_monitor.py",
          "line_count": 353,
          "size_category": "large"
        },
        {
          "file": "testmaster\\agent_qa\\scoring_system.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "testmaster\\agent_qa\\__init__.py",
          "line_count": 216,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\api_analysis.py",
          "line_count": 880,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\clone_detection.py",
          "line_count": 420,
          "size_category": "large"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\complexity_analysis.py",
          "line_count": 698,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\concurrency_analysis.py",
          "line_count": 1397,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\coupling_cohesion.py",
          "line_count": 207,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\crypto_analysis.py",
          "line_count": 808,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\database_analysis.py",
          "line_count": 1246,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\error_handling_analysis.py",
          "line_count": 1279,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\evolution_analysis.py",
          "line_count": 689,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\graph_analysis.py",
          "line_count": 375,
          "size_category": "large"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\inheritance_polymorphism.py",
          "line_count": 246,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
          "line_count": 911,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\main_analyzer.py",
          "line_count": 540,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\memory_analysis.py",
          "line_count": 1141,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\performance_analysis.py",
          "line_count": 1287,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\quality_analysis.py",
          "line_count": 802,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\resource_io_analysis.py",
          "line_count": 1350,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\security_analysis.py",
          "line_count": 911,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\software_metrics.py",
          "line_count": 234,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\statistical_analysis.py",
          "line_count": 881,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\structural_analysis.py",
          "line_count": 814,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\supply_chain_security.py",
          "line_count": 755,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\taint_analysis.py",
          "line_count": 647,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\testing_analysis.py",
          "line_count": 1342,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\__init__.py",
          "line_count": 59,
          "size_category": "small"
        },
        {
          "file": "testmaster\\analysis\\coverage\\base.py",
          "line_count": 52,
          "size_category": "small"
        },
        {
          "file": "testmaster\\async_processing\\async_executor.py",
          "line_count": 584,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\async_processing\\async_monitor.py",
          "line_count": 686,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\async_processing\\concurrent_scheduler.py",
          "line_count": 621,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\async_processing\\thread_pool_manager.py",
          "line_count": 637,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\async_processing\\__init__.py",
          "line_count": 136,
          "size_category": "small"
        },
        {
          "file": "testmaster\\breaking\\failure_detector.py",
          "line_count": 502,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\breaking\\__init__.py",
          "line_count": 19,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\communication\\claude_messenger.py",
          "line_count": 692,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\communication\\dynamic_handoff.py",
          "line_count": 675,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\communication\\message_queue.py",
          "line_count": 690,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\communication\\tag_reader.py",
          "line_count": 594,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\converters\\base.py",
          "line_count": 326,
          "size_category": "large"
        },
        {
          "file": "testmaster\\converters\\intelligent.py",
          "line_count": 527,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\config.py",
          "line_count": 606,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\context_manager.py",
          "line_count": 555,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\feature_flags.py",
          "line_count": 406,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\layer_manager.py",
          "line_count": 663,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\monitoring_decorators.py",
          "line_count": 318,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\orchestrator.py",
          "line_count": 470,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\tracking_manager.py",
          "line_count": 737,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\workflow_graph.py",
          "line_count": 617,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\ast_abstraction\\language_parsers.py",
          "line_count": 1114,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\ast_abstraction\\universal_ast.py",
          "line_count": 1076,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\framework_abstraction\\test_generator.py",
          "line_count": 571,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\framework_abstraction\\universal_test.py",
          "line_count": 425,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\language_detection\\universal_detector.py",
          "line_count": 830,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\flow_optimizer\\dependency_resolver.py",
          "line_count": 395,
          "size_category": "large"
        },
        {
          "file": "testmaster\\flow_optimizer\\execution_router.py",
          "line_count": 372,
          "size_category": "large"
        },
        {
          "file": "testmaster\\flow_optimizer\\flow_analyzer.py",
          "line_count": 373,
          "size_category": "large"
        },
        {
          "file": "testmaster\\flow_optimizer\\parallel_executor.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "testmaster\\flow_optimizer\\resource_optimizer.py",
          "line_count": 418,
          "size_category": "large"
        },
        {
          "file": "testmaster\\flow_optimizer\\__init__.py",
          "line_count": 251,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\generators\\base.py",
          "line_count": 706,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\generators\\intelligent.py",
          "line_count": 589,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\integration\\final_integration_test.py",
          "line_count": 1865,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\context_variables_bridge.py",
          "line_count": 1144,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\event_monitoring_bridge.py",
          "line_count": 1082,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\protocol_communication_bridge.py",
          "line_count": 822,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\session_tracking_bridge.py",
          "line_count": 1111,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\sop_workflow_bridge.py",
          "line_count": 964,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\__init__.py",
          "line_count": 116,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\context_builder.py",
          "line_count": 711,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\doc_generator.py",
          "line_count": 557,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\llm_integration.py",
          "line_count": 630,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\quality_assessor.py",
          "line_count": 705,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\api_doc_generator.py",
          "line_count": 632,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\architecture_doc_generator.py",
          "line_count": 813,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\docstring_generator.py",
          "line_count": 562,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\readme_generator.py",
          "line_count": 657,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\tutorial_generator.py",
          "line_count": 975,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\integrations\\ci_cd_integration.py",
          "line_count": 522,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\integrations\\git_integration.py",
          "line_count": 582,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\quality\\completeness_checker.py",
          "line_count": 647,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\quality\\doc_validator.py",
          "line_count": 692,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\readme_templates.py",
          "line_count": 2251,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\template_engine.py",
          "line_count": 534,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\api\\grpc_templates.py",
          "line_count": 420,
          "size_category": "large"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\api\\rest_templates.py",
          "line_count": 634,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\api\\websocket_templates.py",
          "line_count": 561,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\hierarchical_planning\\llm_integration.py",
          "line_count": 554,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\hierarchical_planning\\test_plan_generator.py",
          "line_count": 558,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\hierarchical_planning\\unified_integration.py",
          "line_count": 524,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\__init__.py",
          "line_count": 106,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\integration\\agents\\documentation_agent.py",
          "line_count": 650,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\coordination\\analysis_coordinator.py",
          "line_count": 740,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\events\\event_system.py",
          "line_count": 249,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\intelligence\\integration\\features\\feature_flags.py",
          "line_count": 730,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\layers\\layer_manager.py",
          "line_count": 663,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\layers\\__init__.py",
          "line_count": 14,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\integration\\storage\\unified_storage.py",
          "line_count": 738,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\llm_providers\\provider_optimization.py",
          "line_count": 447,
          "size_category": "large"
        },
        {
          "file": "testmaster\\intelligence\\llm_providers\\universal_llm_provider.py",
          "line_count": 469,
          "size_category": "large"
        },
        {
          "file": "testmaster\\intelligence\\llm_providers\\__init__.py",
          "line_count": 59,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\adaptive_resource_bridge.py",
          "line_count": 581,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
          "line_count": 1147,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\bottleneck_detection_resolution_agent.py",
          "line_count": 1102,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
          "line_count": 900,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\__init__.py",
          "line_count": 79,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
          "line_count": 1162,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\optimization\\multi_objective_optimizer.py",
          "line_count": 686,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\optimization\\test_optimization_objectives.py",
          "line_count": 422,
          "size_category": "large"
        },
        {
          "file": "testmaster\\intelligence\\security\\security_intelligence_agent.py",
          "line_count": 935,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\tree_of_thought\\test_thought_generator.py",
          "line_count": 620,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\tree_of_thought\\tot_reasoning.py",
          "line_count": 508,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\tree_of_thought\\universal_tot_integration.py",
          "line_count": 496,
          "size_category": "large"
        },
        {
          "file": "testmaster\\mapping\\dependency_tracker.py",
          "line_count": 479,
          "size_category": "large"
        },
        {
          "file": "testmaster\\mapping\\__init__.py",
          "line_count": 24,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\monitoring\\file_watcher.py",
          "line_count": 566,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\monitoring\\idle_detector.py",
          "line_count": 500,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\monitoring\\test_monitor.py",
          "line_count": 519,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\monitoring\\test_scheduler.py",
          "line_count": 595,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\monitoring\\__init__.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\orchestration\\framework_adapter.py",
          "line_count": 585,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestration\\output_system.py",
          "line_count": 826,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestration\\universal_orchestrator.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestration\\__init__.py",
          "line_count": 54,
          "size_category": "small"
        },
        {
          "file": "testmaster\\orchestrator\\file_tagger.py",
          "line_count": 1030,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\handoff_manager.py",
          "line_count": 1246,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\investigator.py",
          "line_count": 1123,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\work_distributor.py",
          "line_count": 796,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\__init__.py",
          "line_count": 35,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\overview\\coverage_intelligence.py",
          "line_count": 1071,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\performance_dashboard.py",
          "line_count": 686,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\regression_tracker.py",
          "line_count": 1375,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\structure_mapper.py",
          "line_count": 1112,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\__init__.py",
          "line_count": 28,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\refactoring\\hierarchical_analyzer.py",
          "line_count": 980,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\reporting\\dashboard_builder.py",
          "line_count": 86,
          "size_category": "small"
        },
        {
          "file": "testmaster\\reporting\\data_collector.py",
          "line_count": 112,
          "size_category": "small"
        },
        {
          "file": "testmaster\\reporting\\metrics_analyzer.py",
          "line_count": 100,
          "size_category": "small"
        },
        {
          "file": "testmaster\\reporting\\report_generator.py",
          "line_count": 922,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\reporting\\__init__.py",
          "line_count": 140,
          "size_category": "small"
        },
        {
          "file": "testmaster\\security\\compliance_framework.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\security\\security_test_generator.py",
          "line_count": 777,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\security\\universal_scanner.py",
          "line_count": 823,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\streaming\\collaborative_generator.py",
          "line_count": 99,
          "size_category": "small"
        },
        {
          "file": "testmaster\\streaming\\incremental_enhancer.py",
          "line_count": 562,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\streaming\\live_feedback.py",
          "line_count": 504,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\streaming\\stream_generator.py",
          "line_count": 593,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\streaming\\stream_monitor.py",
          "line_count": 57,
          "size_category": "small"
        },
        {
          "file": "testmaster\\streaming\\__init__.py",
          "line_count": 137,
          "size_category": "small"
        },
        {
          "file": "testmaster\\telemetry\\flow_analyzer.py",
          "line_count": 640,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\telemetry\\performance_monitor.py",
          "line_count": 554,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\telemetry\\system_profiler.py",
          "line_count": 599,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\telemetry\\telemetry_collector.py",
          "line_count": 421,
          "size_category": "large"
        },
        {
          "file": "testmaster\\telemetry\\telemetry_dashboard.py",
          "line_count": 624,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\telemetry\\__init__.py",
          "line_count": 211,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\ui\\alert_system.py",
          "line_count": 800,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\ui\\dashboard.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\ui\\metrics_display.py",
          "line_count": 672,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\ui\\__init__.py",
          "line_count": 29,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\verification\\base.py",
          "line_count": 396,
          "size_category": "large"
        },
        {
          "file": "testmaster\\verification\\quality.py",
          "line_count": 438,
          "size_category": "large"
        },
        {
          "file": "testmaster\\verification\\self_healing.py",
          "line_count": 508,
          "size_category": "huge"
        },
        {
          "file": "tests\\test_intelligence_ml.py",
          "line_count": 422,
          "size_category": "large"
        },
        {
          "file": "tests\\test_phase2_core_validation.py",
          "line_count": 569,
          "size_category": "huge"
        },
        {
          "file": "tests\\test_phase2_e2e_validation.py",
          "line_count": 1091,
          "size_category": "huge"
        },
        {
          "file": "tests\\test_phase2_integration_validation.py",
          "line_count": 677,
          "size_category": "huge"
        },
        {
          "file": "tests\\integration\\test_knowledge_graph_integration.py",
          "line_count": 440,
          "size_category": "large"
        },
        {
          "file": "tools\\migration\\safety_checker.py",
          "line_count": 466,
          "size_category": "large"
        },
        {
          "file": "ui\\nocode_enhancement.py",
          "line_count": 879,
          "size_category": "huge"
        },
        {
          "file": "ui\\unified_dashboard.py",
          "line_count": 1131,
          "size_category": "huge"
        },
        {
          "file": "ui_ux\\agent_verse_ui.py",
          "line_count": 614,
          "size_category": "huge"
        },
        {
          "file": "ui_ux\\interactive_dashboard.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "ui_ux\\studio_interface.py",
          "line_count": 634,
          "size_category": "huge"
        },
        {
          "file": "ui_ux\\__init__.py",
          "line_count": 56,
          "size_category": "small"
        },
        {
          "file": "validation\\phase_validator.py",
          "line_count": 431,
          "size_category": "large"
        },
        {
          "file": "workflow\\consolidation_workflow.py",
          "line_count": 421,
          "size_category": "large"
        }
      ]
    },
    "utility": {
      "file_count": 488,
      "total_lines": 296231,
      "scattered_across": 130,
      "directories": [
        "testmaster\\core",
        "core\\intelligence\\documentation\\revolutionary",
        "testmaster\\intelligence\\documentation\\core",
        "ui_ux",
        "core\\intelligence\\integration",
        "core\\intelligence\\security\\audit",
        "testmaster\\async_processing",
        "prioritization",
        "core\\state",
        "core\\intelligence\\documentation\\intelligence\\optimization",
        "observability",
        "archive\\phase1c_consolidation_20250820_150000\\integration",
        "testmaster\\streaming",
        "dashboard\\dashboard_core",
        "testmaster\\intelligence\\integration\\coordination",
        "testmaster\\overview",
        "core\\intelligence\\documentation",
        "analysis\\comprehensive_analysis\\ml_analysis",
        "core",
        "tests",
        "analysis\\comprehensive_analysis\\pattern_recognition",
        "analysis\\comprehensive_analysis\\energy_analysis",
        "core\\intelligence\\testing\\automation",
        "core\\intelligence\\testing",
        "core\\intelligence\\testing\\security",
        "analysis\\comprehensive_analysis\\anomaly_detection",
        "agents\\roles",
        "archive\\original_backup\\scripts",
        "dashboard\\api",
        "core\\intelligence\\documentation\\enterprise",
        "scripts",
        "core\\security",
        "archive",
        "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components",
        "testmaster\\mapping",
        "testmaster",
        ".",
        "testmaster\\intelligence\\monitoring",
        "core\\observability",
        "testmaster\\core\\ast_abstraction",
        "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components",
        "core\\intelligence\\validation",
        "core\\intelligence\\enterprise\\api",
        "testmaster\\analysis\\comprehensive_analysis",
        "integration",
        "deployment",
        "testmaster\\orchestrator",
        "archive\\original_backup\\analytics",
        "analysis\\comprehensive_analysis\\business_analysis",
        "core\\intelligence\\security",
        "testmaster\\telemetry",
        "analytics",
        "core\\intelligence\\knowledge_graph",
        "core\\intelligence\\documentation\\intelligence",
        "testmaster\\breaking",
        "core\\intelligence\\testing\\advanced",
        "archive\\modularization_20250820_222253",
        "monitoring",
        "analysis\\comprehensive_analysis\\pattern_mining",
        "testmaster\\intelligence\\integration\\agents",
        "core\\intelligence\\integration\\components",
        "testmaster\\integration",
        "archive\\phase6_archive\\replaced_code",
        "testmaster\\intelligence\\documentation\\quality",
        "testmaster\\intelligence\\tree_of_thought",
        "dashboard",
        "archive\\legacy_scripts",
        "archive\\oversized_modules_20250821_042018\\ml\\advanced",
        "archive\\original_backup\\integration",
        "archive\\original_backup\\incremental",
        "incremental",
        "analysis\\comprehensive_analysis\\metaprog_analysis",
        "consolidation",
        "core\\intelligence\\ml\\advanced",
        "testmaster\\reporting",
        "testmaster\\intelligence\\consensus",
        "core\\intelligence\\compatibility",
        "testmaster\\intelligence\\documentation\\templates",
        "testmaster\\ui",
        "src",
        "core\\intelligence\\analysis\\business_analyzer_modules",
        "core\\intelligence\\security\\enterprise",
        "testmaster\\monitoring",
        "testmaster\\intelligence\\hierarchical_planning",
        "testmaster\\intelligence\\security",
        "analysis\\comprehensive_analysis\\debt_analysis",
        "testmaster\\verification",
        "testmaster\\generators",
        "archive\\oversized_modules_20250821_042018\\ml\\enterprise",
        "testmaster\\intelligence\\documentation\\generators",
        "archive\\original_backup",
        "core\\intelligence\\security\\enterprise\\validation",
        "core\\intelligence\\ml",
        "testmaster\\intelligence\\documentation\\templates\\api",
        "core\\reliability",
        "core\\intelligence\\ml\\enterprise",
        "testmaster\\core\\language_detection",
        "core\\intelligence\\api",
        "archive\\oversized_modules_20250821_042018\\analysis",
        "testmaster\\core\\framework_abstraction",
        "analysis\\comprehensive_analysis\\semantic_analysis",
        "core\\intelligence\\analytics",
        "testmaster\\refactoring",
        "archive\\oversized_modules_20250821_042018\\coordination",
        "core\\intelligence\\orchestration",
        "analysis\\comprehensive_analysis\\cognitive_load",
        "analysis\\comprehensive_analysis\\data_pipeline",
        "core\\intelligence\\analysis",
        "archive\\modularization_integration",
        "core\\intelligence\\analytics\\advanced",
        "analysis\\comprehensive_analysis\\data_security",
        "core\\intelligence\\security\\enterprise\\intelligence",
        "core\\intelligence\\enterprise",
        "testmaster\\converters",
        "archive\\COMPLETE_REFACTOR_20250818_112844",
        "testmaster\\security",
        "core\\intelligence\\coordination",
        "archive\\modularization_20250821",
        "core\\intelligence\\monitoring",
        "testmaster\\intelligence\\optimization",
        "testmaster\\intelligence\\bridges",
        "archive\\original_backup\\src",
        "core\\testing",
        "archive\\original_backup\\deduplication",
        "deduplication",
        "archive\\oversized_modules_20250821_042018\\documentation\\revolutionary",
        "archive\\phase1c_consolidation_20250820_150000",
        "testmaster\\utils",
        "testmaster\\communication",
        "archive\\oversized_modules_20250821_042018\\api"
      ],
      "consolidation_opportunity": true,
      "files": [
        {
          "file": "agent_d_comprehensive_test_executor.py",
          "line_count": 911,
          "size_category": "huge"
        },
        {
          "file": "architecture_centralization_analysis.py",
          "line_count": 509,
          "size_category": "huge"
        },
        {
          "file": "comprehensive_classical_analysis_methods.py",
          "line_count": 736,
          "size_category": "huge"
        },
        {
          "file": "comprehensive_codebase_analysis.py",
          "line_count": 332,
          "size_category": "large"
        },
        {
          "file": "comprehensive_feature_audit.py",
          "line_count": 665,
          "size_category": "huge"
        },
        {
          "file": "convert_with_genai_sdk.py",
          "line_count": 182,
          "size_category": "medium"
        },
        {
          "file": "convert_with_generativeai.py",
          "line_count": 161,
          "size_category": "medium"
        },
        {
          "file": "enable_deep_integration.py",
          "line_count": 240,
          "size_category": "medium"
        },
        {
          "file": "enable_features.py",
          "line_count": 77,
          "size_category": "small"
        },
        {
          "file": "enhanced_context_aware_test_generator.py",
          "line_count": 428,
          "size_category": "large"
        },
        {
          "file": "enhance_auto_generated_tests.py",
          "line_count": 349,
          "size_category": "large"
        },
        {
          "file": "finalize_module_splits.py",
          "line_count": 236,
          "size_category": "medium"
        },
        {
          "file": "final_100_percent_fix.py",
          "line_count": 225,
          "size_category": "medium"
        },
        {
          "file": "fix_backend_issues.py",
          "line_count": 323,
          "size_category": "large"
        },
        {
          "file": "fix_failing_tests.py",
          "line_count": 225,
          "size_category": "medium"
        },
        {
          "file": "fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "fix_testmaster_imports.py",
          "line_count": 149,
          "size_category": "small"
        },
        {
          "file": "fix_tests_for_real_modules.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "implement_test_stubs.py",
          "line_count": 507,
          "size_category": "huge"
        },
        {
          "file": "intelligent_test_builder.py",
          "line_count": 359,
          "size_category": "large"
        },
        {
          "file": "intelligent_test_builder_offline.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "intelligent_test_builder_v2.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "layer3_integration_example.py",
          "line_count": 522,
          "size_category": "huge"
        },
        {
          "file": "live_code_quality_monitor.py",
          "line_count": 1045,
          "size_category": "huge"
        },
        {
          "file": "performance_profiler.py",
          "line_count": 634,
          "size_category": "huge"
        },
        {
          "file": "real_time_monitor.py",
          "line_count": 563,
          "size_category": "huge"
        },
        {
          "file": "refine_misc_tests.py",
          "line_count": 189,
          "size_category": "medium"
        },
        {
          "file": "restored_asyncio_6.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "restored_json_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_logging_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_os_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_random_6.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "restored_sys_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_threading_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_time_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_uuid_6.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "restore_archive_robust.py",
          "line_count": 1537,
          "size_category": "huge"
        },
        {
          "file": "restore_real_implementations.py",
          "line_count": 163,
          "size_category": "medium"
        },
        {
          "file": "risk_based_test_targeter.py",
          "line_count": 884,
          "size_category": "huge"
        },
        {
          "file": "run_integration_test.py",
          "line_count": 185,
          "size_category": "medium"
        },
        {
          "file": "simple_web_monitor.py",
          "line_count": 191,
          "size_category": "medium"
        },
        {
          "file": "split_massive_test_file.py",
          "line_count": 225,
          "size_category": "medium"
        },
        {
          "file": "split_oversized_modules.py",
          "line_count": 278,
          "size_category": "medium"
        },
        {
          "file": "start_monitoring.py",
          "line_count": 264,
          "size_category": "medium"
        },
        {
          "file": "test_api_functionality.py",
          "line_count": 223,
          "size_category": "medium"
        },
        {
          "file": "test_backend_health.py",
          "line_count": 419,
          "size_category": "large"
        },
        {
          "file": "test_complexity_prioritizer.py",
          "line_count": 690,
          "size_category": "huge"
        },
        {
          "file": "test_dependency_orderer.py",
          "line_count": 687,
          "size_category": "huge"
        },
        {
          "file": "test_dynamic_handoff_integration.py",
          "line_count": 254,
          "size_category": "medium"
        },
        {
          "file": "test_enhancements.py",
          "line_count": 397,
          "size_category": "large"
        },
        {
          "file": "test_graph_workflow_integration.py",
          "line_count": 400,
          "size_category": "large"
        },
        {
          "file": "test_integration_systems.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "test_tracking_manager_integration.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "test_universal_ast_system.py",
          "line_count": 579,
          "size_category": "huge"
        },
        {
          "file": "test_universal_language_detector.py",
          "line_count": 693,
          "size_category": "huge"
        },
        {
          "file": "unified_orchestration_example.py",
          "line_count": 407,
          "size_category": "large"
        },
        {
          "file": "utility_analysis_report.py",
          "line_count": 405,
          "size_category": "large"
        },
        {
          "file": "validate_api_endpoints.py",
          "line_count": 787,
          "size_category": "huge"
        },
        {
          "file": "week_5_8_batch_converter.py",
          "line_count": 331,
          "size_category": "large"
        },
        {
          "file": "week_7_8_converter.py",
          "line_count": 350,
          "size_category": "large"
        },
        {
          "file": "write_real_tests.py",
          "line_count": 248,
          "size_category": "medium"
        },
        {
          "file": "agents\\roles\\base_role.py",
          "line_count": 373,
          "size_category": "large"
        },
        {
          "file": "agents\\roles\\test_architect.py",
          "line_count": 945,
          "size_category": "huge"
        },
        {
          "file": "agents\\roles\\test_engineer.py",
          "line_count": 917,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\anomaly_detection\\anomaly_detection_analyzer.py",
          "line_count": 882,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\business_analysis\\business_core_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\business_analysis\\business_domain_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\business_analysis\\business_validation_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\business_analysis\\business_workflow_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\business_analysis\\_shared_utils.py",
          "line_count": 42,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\cognitive_load\\cognitive_load_analyzer.py",
          "line_count": 1113,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\data_pipeline\\data_pipeline_analyzer.py",
          "line_count": 964,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\data_security\\data_leakage_detector.py",
          "line_count": 795,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\debt_analysis\\debt_category_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\debt_analysis\\debt_core_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\debt_analysis\\debt_financial_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\debt_analysis\\_shared_utils.py",
          "line_count": 42,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\energy_analysis\\energy_algorithm_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\energy_analysis\\energy_carbon_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\energy_analysis\\energy_core_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\energy_analysis\\_shared_utils.py",
          "line_count": 42,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_core_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_reflection_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_security_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\metaprog_analysis\\_shared_utils.py",
          "line_count": 42,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_core_analyzer.py",
          "line_count": 397,
          "size_category": "large"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_data_analyzer.py",
          "line_count": 513,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_model_analyzer.py",
          "line_count": 550,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_tensor_analyzer.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\_shared_utils.py",
          "line_count": 296,
          "size_category": "medium"
        },
        {
          "file": "analysis\\comprehensive_analysis\\pattern_mining\\cross_repo_pattern_miner.py",
          "line_count": 1142,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\pattern_recognition\\ml_pattern_recognition.py",
          "line_count": 951,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_context_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_core_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\semantic_analysis\\semantic_pattern_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\semantic_analysis\\_shared_utils.py",
          "line_count": 42,
          "size_category": "tiny"
        },
        {
          "file": "analytics\\failure_analyzer.py",
          "line_count": 661,
          "size_category": "huge"
        },
        {
          "file": "archive\\advanced_testing_intelligence.py",
          "line_count": 770,
          "size_category": "huge"
        },
        {
          "file": "archive\\coverage_analyzer_original_2697_lines.py",
          "line_count": 2698,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_business_rule_analysis_original.py",
          "line_count": 1213,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "line_count": 1188,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "line_count": 1206,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_ml_code_analysis_original.py",
          "line_count": 1249,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_semantic_analysis_original.py",
          "line_count": 1244,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_technical_debt_analysis_original.py",
          "line_count": 1301,
          "size_category": "huge"
        },
        {
          "file": "archive\\integration_hub_original_20250820_220939.py",
          "line_count": 1877,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_energy_consumption_analysis.py",
          "line_count": 1188,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_metaprogramming_analysis.py",
          "line_count": 1206,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_ml_code_analysis.py",
          "line_count": 1249,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_technical_debt_analysis.py",
          "line_count": 1301,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "line_count": 893,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "line_count": 667,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "line_count": 1290,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "line_count": 656,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_optimizer.py",
          "line_count": 378,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "line_count": 694,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "line_count": 2698,
          "size_category": "huge"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_failing_tests.py",
          "line_count": 225,
          "size_category": "medium"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_tests_for_real_modules.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\automated_test_generation.py",
          "line_count": 949,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\convert_with_genai_sdk.py",
          "line_count": 182,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\convert_with_generativeai.py",
          "line_count": 161,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\diagnose_final_five.py",
          "line_count": 201,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
          "line_count": 428,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\enhance_auto_generated_tests.py",
          "line_count": 349,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\final_five_converter.py",
          "line_count": 154,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\fix_failing_tests.py",
          "line_count": 225,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\fix_tests_for_real_modules.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\gemini_test_generator.py",
          "line_count": 490,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\implement_test_stubs.py",
          "line_count": 507,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\intelligent_converter.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\intelligent_test_builder.py",
          "line_count": 359,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\intelligent_test_builder_offline.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\intelligent_test_builder_v2.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\parallel_coverage_converter_fixed.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\test_single_api_call.py",
          "line_count": 174,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\week_5_8_batch_converter.py",
          "line_count": 331,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\week_7_8_converter.py",
          "line_count": 350,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\write_real_tests.py",
          "line_count": 248,
          "size_category": "medium"
        },
        {
          "file": "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "line_count": 1376,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\business_analyzer_original.py",
          "line_count": 1266,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "line_count": 1547,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "line_count": 953,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "line_count": 1877,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\convert_with_genai_sdk.py",
          "line_count": 182,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\convert_with_generativeai.py",
          "line_count": 161,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\enhanced_context_aware_test_generator.py",
          "line_count": 428,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\enhance_auto_generated_tests.py",
          "line_count": 349,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\fix_failing_tests.py",
          "line_count": 225,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\fix_tests_for_real_modules.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\implement_test_stubs.py",
          "line_count": 507,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\intelligent_test_builder.py",
          "line_count": 359,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\intelligent_test_builder_offline.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\intelligent_test_builder_v2.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\week_5_8_batch_converter.py",
          "line_count": 331,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\week_7_8_converter.py",
          "line_count": 350,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\write_real_tests.py",
          "line_count": 248,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\analytics\\failure_analyzer.py",
          "line_count": 661,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\deduplication\\test_deduplicator.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\incremental\\dependency_tracker.py",
          "line_count": 642,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\integration\\cross_module_tester.py",
          "line_count": 859,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\scripts\\diagnose_final_five.py",
          "line_count": 201,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\final_five_converter.py",
          "line_count": 154,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\scripts\\gemini_test_generator.py",
          "line_count": 490,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\intelligent_converter.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\parallel_coverage_converter_fixed.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\test_single_api_call.py",
          "line_count": 174,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\src\\automated_test_generation.py",
          "line_count": 949,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "line_count": 1266,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
          "line_count": 1547,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\api\\enterprise_integration_layer.py",
          "line_count": 1160,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\coordination\\agent_coordination_protocols.py",
          "line_count": 1311,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\coordination\\unified_workflow_orchestrator.py",
          "line_count": 1355,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\documentation\\revolutionary\\neo4j_dominator.py",
          "line_count": 1158,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\performance_optimizer.py",
          "line_count": 1144,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\enterprise\\ml_infrastructure_orchestrator.py",
          "line_count": 1117,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "line_count": 715,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "line_count": 610,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
          "line_count": 859,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "consolidation\\feature_discovery.py",
          "line_count": 364,
          "size_category": "large"
        },
        {
          "file": "core\\async_state_manager.py",
          "line_count": 746,
          "size_category": "huge"
        },
        {
          "file": "core\\feature_flags.py",
          "line_count": 438,
          "size_category": "large"
        },
        {
          "file": "core\\framework_abstraction.py",
          "line_count": 604,
          "size_category": "huge"
        },
        {
          "file": "core\\framework_abstraction.stub_backup.py",
          "line_count": 361,
          "size_category": "large"
        },
        {
          "file": "core\\shared_state.py",
          "line_count": 610,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\business_analyzer.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_analyzer.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_code_analyzer.py",
          "line_count": 248,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\ml_analyzer.py",
          "line_count": 777,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\ml_code_analyzer.py",
          "line_count": 573,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_analyzer.py",
          "line_count": 953,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_analyzer_modular.py",
          "line_count": 259,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_base.py",
          "line_count": 252,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_intent_analyzer.py",
          "line_count": 327,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\technical_debt_analyzer.py",
          "line_count": 574,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py",
          "line_count": 477,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analytics\\analytics_deduplication.py",
          "line_count": 940,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\advanced\\correlation_engine.py",
          "line_count": 589,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\api\\enterprise_integration_layer.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\api\\ml_api.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\api\\validators.py",
          "line_count": 373,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\compatibility\\__init__.py",
          "line_count": 600,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\coordination\\agent_coordination_protocols.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\coordination\\cross_agent_bridge.py",
          "line_count": 907,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\coordination\\distributed_lock_manager.py",
          "line_count": 829,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\coordination\\resource_coordination_system.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\coordination\\unified_workflow_orchestrator.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\documentation\\api_spec_builder.py",
          "line_count": 316,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\auto_generator.py",
          "line_count": 290,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\documentation\\comprehensive_visualization_engine.py",
          "line_count": 828,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\cookbook_organization_manager.py",
          "line_count": 648,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\design_first_docs.py",
          "line_count": 739,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\diagram_creator.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\docs_testing_framework.py",
          "line_count": 639,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise_api_docs.py",
          "line_count": 744,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\example_docs_system.py",
          "line_count": 507,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\faq_system.py",
          "line_count": 522,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\hierarchical_docs_organizer.py",
          "line_count": 637,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\json_docs_processor.py",
          "line_count": 977,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\knowledge_management_framework.py",
          "line_count": 1022,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\legacy_integration_framework.py",
          "line_count": 875,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\master_documentation_orchestrator.py",
          "line_count": 912,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\metrics_reporter.py",
          "line_count": 351,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\migration_guide_generator.py",
          "line_count": 516,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\multilingual_docs.py",
          "line_count": 468,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\multi_agent_pattern_docs.py",
          "line_count": 727,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\quality_assessment_engine.py",
          "line_count": 552,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\swarms_auto_generation_adapter.py",
          "line_count": 384,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\swarms_navigation_intelligence.py",
          "line_count": 453,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\swarms_self_healing_docs.py",
          "line_count": 517,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\tracking_integration_docs.py",
          "line_count": 591,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\tutorial_grid_system.py",
          "line_count": 729,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\ux_excellence_framework.py",
          "line_count": 1044,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\yaml_config_processor.py",
          "line_count": 634,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise\\documentation_intelligence.py",
          "line_count": 451,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise\\enterprise_doc_orchestrator.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\analyzer.py",
          "line_count": 438,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\optimizer.py",
          "line_count": 619,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\project_coordinator.py",
          "line_count": 587,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\optimization\\content_enhancer.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\ai_documentation_synthesizer.py",
          "line_count": 706,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\codesee_annihilator.py",
          "line_count": 767,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\falkordb_obliterator.py",
          "line_count": 596,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\interactive_chat_interface.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\living_documentation_engine.py",
          "line_count": 664,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\neo4j_dominator.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\newton_graph_destroyer.py",
          "line_count": 561,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\api_orchestrator.py",
          "line_count": 577,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\api\\endpoint_manager.py",
          "line_count": 652,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\api\\request_router.py",
          "line_count": 580,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\api\\service_registry.py",
          "line_count": 467,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\integration\\base.py",
          "line_count": 161,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\integration\\__init__.py",
          "line_count": 563,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\integration\\components\\cross_system_analyzer.py",
          "line_count": 576,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\multi_language_analyzer.py",
          "line_count": 415,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\integration_analysis.py",
          "line_count": 474,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\circuit_breaker_ml.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\delivery_optimizer.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\integrity_ml_guardian.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\performance_optimizer.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\sla_ml_optimizer.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\monitoring\\agent_qa.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\monitoring\\agent_qa_modular.py",
          "line_count": 243,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\monitoring\\performance_optimization_engine.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\orchestration\\integration_hub.py",
          "line_count": 711,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\advanced_security_intelligence.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\code_vulnerability_scanner.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\compliance_checker.py",
          "line_count": 422,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\dependency_scanner.py",
          "line_count": 384,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\security_compliance_validator.py",
          "line_count": 704,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\threat_intelligence_engine.py",
          "line_count": 550,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\ultimate_security_orchestrator.py",
          "line_count": 529,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\vulnerability_scanner.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\audit\\audit_events.py",
          "line_count": 255,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\audit\\audit_interface.py",
          "line_count": 374,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\audit\\audit_reporter.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\compliance_automation.py",
          "line_count": 470,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\enterprise_security_monitor.py",
          "line_count": 400,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\governance_framework.py",
          "line_count": 548,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\security_intelligence.py",
          "line_count": 599,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\security_validator.py",
          "line_count": 443,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\intelligence\\incident_responder.py",
          "line_count": 648,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\intelligence\\threat_detector.py",
          "line_count": 806,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\validation\\compliance_validator.py",
          "line_count": 562,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\validation\\integration_validator.py",
          "line_count": 592,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\automation_engine.py",
          "line_count": 597,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\base.py",
          "line_count": 128,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\testing\\flaky_test_detector.py",
          "line_count": 492,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\fuzzer.py",
          "line_count": 346,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\test_orchestrator.py",
          "line_count": 391,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\__init__.py",
          "line_count": 457,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\advanced\\ml_test_optimizer.py",
          "line_count": 857,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\advanced\\statistical_coverage_analyzer.py",
          "line_count": 799,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\automation\\continuous_testing_engine.py",
          "line_count": 547,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\automation\\test_maintenance_system.py",
          "line_count": 551,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\security\\api_security_tester.py",
          "line_count": 532,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\validation\\integration_test_suite.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\validation\\system_validation_framework.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "line_count": 1891,
          "size_category": "huge"
        },
        {
          "file": "core\\reliability\\emergency_backup_recovery.py",
          "line_count": 824,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\byzantine_consensus_security.py",
          "line_count": 637,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\deployment_pipeline_security.py",
          "line_count": 863,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\document_classification_security.py",
          "line_count": 691,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\enterprise_audit_logging.py",
          "line_count": 516,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\enterprise_authentication.py",
          "line_count": 754,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\error_recovery_framework.py",
          "line_count": 578,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\license_compliance_framework.py",
          "line_count": 516,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\threat_intelligence_system.py",
          "line_count": 881,
          "size_category": "huge"
        },
        {
          "file": "core\\state\\enhanced_state_manager.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\adaptive_testing_framework.py",
          "line_count": 1012,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\async_sync_testing.py",
          "line_count": 159,
          "size_category": "medium"
        },
        {
          "file": "core\\testing\\collaborative_testing_platform.py",
          "line_count": 1224,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\competitive_analysis_framework.py",
          "line_count": 455,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\flow_testing.py",
          "line_count": 743,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\graph_operations_testing.py",
          "line_count": 1063,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\integration_test_framework.py",
          "line_count": 489,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\intelligence_synthesis_framework.py",
          "line_count": 899,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\multi_modal_test_engine.py",
          "line_count": 1208,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\pattern_consolidation_engine.py",
          "line_count": 799,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\repository_intelligence_aggregator.py",
          "line_count": 970,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\supercharged_test_generator.py",
          "line_count": 443,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\supercharged_test_generator.py_stub_backup_20250821_042438.py",
          "line_count": 557,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\testmaster_api_gateway.py",
          "line_count": 1318,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\test_ai_code_exploration.py",
          "line_count": 355,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\test_evolution_analyzer.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\test_integration_hub.py",
          "line_count": 601,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\test_quality_analyzer.py",
          "line_count": 245,
          "size_category": "medium"
        },
        {
          "file": "core\\testing\\thread_retry_testing.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\user_input_testing.py",
          "line_count": 862,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\frontend_display_validator.py",
          "line_count": 773,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\backend_health_monitor.py",
          "line_count": 659,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\coverage.py",
          "line_count": 583,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\crew_orchestration.py",
          "line_count": 812,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\flow_optimization.py",
          "line_count": 662,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\intelligence.py",
          "line_count": 533,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\observability.py",
          "line_count": 522,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\performance.py",
          "line_count": 583,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\real_codebase_scanner.stub_backup.py",
          "line_count": 892,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\security.py",
          "line_count": 514,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\swarm_orchestration.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\telemetry.py",
          "line_count": 573,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\test_generation.py",
          "line_count": 481,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_data_sanitizer.py",
          "line_count": 893,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_dead_letter_queue.py",
          "line_count": 667,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_deduplication.py",
          "line_count": 1290,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_normalizer.py",
          "line_count": 656,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_optimizer.py",
          "line_count": 378,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_pipeline.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_redundancy.py",
          "line_count": 694,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\metrics_feed.py",
          "line_count": 360,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\real_data_extractor.py",
          "line_count": 569,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\test_collector.py",
          "line_count": 402,
          "size_category": "large"
        },
        {
          "file": "deduplication\\test_deduplicator.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "deployment\\swarm_orchestrator.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "incremental\\dependency_tracker.py",
          "line_count": 642,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_module_tester.py",
          "line_count": 859,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_analytics.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_analytics_robust.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "monitoring\\enhanced_monitor_separate.py",
          "line_count": 573,
          "size_category": "huge"
        },
        {
          "file": "observability\\__init__.py",
          "line_count": 170,
          "size_category": "medium"
        },
        {
          "file": "prioritization\\test_prioritizer.py",
          "line_count": 767,
          "size_category": "huge"
        },
        {
          "file": "scripts\\analyze_components.py",
          "line_count": 497,
          "size_category": "large"
        },
        {
          "file": "scripts\\diagnose_final_five.py",
          "line_count": 201,
          "size_category": "medium"
        },
        {
          "file": "scripts\\final_five_converter.py",
          "line_count": 154,
          "size_category": "medium"
        },
        {
          "file": "scripts\\gemini_test_generator.py",
          "line_count": 490,
          "size_category": "large"
        },
        {
          "file": "scripts\\intelligent_converter.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "scripts\\parallel_coverage_converter_fixed.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "scripts\\test_single_api_call.py",
          "line_count": 174,
          "size_category": "medium"
        },
        {
          "file": "src\\automated_test_generation.py",
          "line_count": 949,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\layer2_integration.py",
          "line_count": 519,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\api_analysis.py",
          "line_count": 880,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\base_analyzer.py",
          "line_count": 108,
          "size_category": "small"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\clone_detection.py",
          "line_count": 420,
          "size_category": "large"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\concurrency_analysis.py",
          "line_count": 1397,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\coupling_cohesion.py",
          "line_count": 207,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\crypto_analysis.py",
          "line_count": 808,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\database_analysis.py",
          "line_count": 1246,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\error_handling_analysis.py",
          "line_count": 1279,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\inheritance_polymorphism.py",
          "line_count": 246,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
          "line_count": 911,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\main_analyzer.py",
          "line_count": 540,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\memory_analysis.py",
          "line_count": 1141,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\performance_analysis.py",
          "line_count": 1287,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\quality_analysis.py",
          "line_count": 802,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\security_analysis.py",
          "line_count": 911,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\structural_analysis.py",
          "line_count": 814,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\supply_chain_security.py",
          "line_count": 755,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\testing_analysis.py",
          "line_count": 1342,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\async_processing\\async_executor.py",
          "line_count": 584,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\async_processing\\async_monitor.py",
          "line_count": 686,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\async_processing\\concurrent_scheduler.py",
          "line_count": 621,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\async_processing\\thread_pool_manager.py",
          "line_count": 637,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\breaking\\failure_detector.py",
          "line_count": 502,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\communication\\claude_messenger.py",
          "line_count": 692,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\communication\\dynamic_handoff.py",
          "line_count": 675,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\communication\\tag_reader.py",
          "line_count": 594,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\communication\\__init__.py",
          "line_count": 29,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\converters\\batch.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "testmaster\\converters\\intelligent.py",
          "line_count": 527,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\converters\\parallel.py",
          "line_count": 307,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\config.py",
          "line_count": 606,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\context_manager.py",
          "line_count": 555,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\feature_flags.py",
          "line_count": 406,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\layer_manager.py",
          "line_count": 663,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\monitoring_decorators.py",
          "line_count": 318,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\orchestrator.py",
          "line_count": 470,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\shared_state.py",
          "line_count": 49,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\core\\tracking_manager.py",
          "line_count": 737,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\workflow_graph.py",
          "line_count": 617,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\ast_abstraction\\language_parsers.py",
          "line_count": 1114,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\ast_abstraction\\universal_ast.py",
          "line_count": 1076,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\framework_abstraction\\framework_adapters.py",
          "line_count": 864,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\framework_abstraction\\test_generator.py",
          "line_count": 571,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\framework_abstraction\\universal_test.py",
          "line_count": 425,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\language_detection\\universal_detector.py",
          "line_count": 830,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\generators\\base.py",
          "line_count": 706,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\generators\\intelligent.py",
          "line_count": 589,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\integration\\final_integration_test.py",
          "line_count": 1865,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\context_variables_bridge.py",
          "line_count": 1144,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\event_monitoring_bridge.py",
          "line_count": 1082,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\protocol_communication_bridge.py",
          "line_count": 822,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\session_tracking_bridge.py",
          "line_count": 1111,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\sop_workflow_bridge.py",
          "line_count": 964,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\consensus\\agent_coordination.py",
          "line_count": 514,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\context_builder.py",
          "line_count": 711,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\llm_integration.py",
          "line_count": 630,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\api_doc_generator.py",
          "line_count": 632,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\architecture_doc_generator.py",
          "line_count": 813,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\readme_generator.py",
          "line_count": 657,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\tutorial_generator.py",
          "line_count": 975,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\quality\\completeness_checker.py",
          "line_count": 647,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\quality\\doc_validator.py",
          "line_count": 692,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\quality\\style_checker.py",
          "line_count": 1424,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\readme_templates.py",
          "line_count": 2251,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\template_engine.py",
          "line_count": 534,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\api\\rest_templates.py",
          "line_count": 634,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\api\\websocket_templates.py",
          "line_count": 561,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\hierarchical_planning\\llm_integration.py",
          "line_count": 554,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\hierarchical_planning\\test_plan_generator.py",
          "line_count": 558,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\agents\\documentation_agent.py",
          "line_count": 650,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\coordination\\analysis_coordinator.py",
          "line_count": 740,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\adaptive_resource_bridge.py",
          "line_count": 581,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
          "line_count": 1147,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\bottleneck_detection_resolution_agent.py",
          "line_count": 1102,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
          "line_count": 900,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
          "line_count": 1162,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\security\\security_intelligence_agent.py",
          "line_count": 935,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\tree_of_thought\\universal_tot_integration.py",
          "line_count": 496,
          "size_category": "large"
        },
        {
          "file": "testmaster\\mapping\\dependency_tracker.py",
          "line_count": 479,
          "size_category": "large"
        },
        {
          "file": "testmaster\\monitoring\\file_watcher.py",
          "line_count": 566,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\monitoring\\idle_detector.py",
          "line_count": 500,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\monitoring\\test_monitor.py",
          "line_count": 519,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\file_tagger.py",
          "line_count": 1030,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\handoff_manager.py",
          "line_count": 1246,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\investigator.py",
          "line_count": 1123,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\coverage_intelligence.py",
          "line_count": 1071,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\performance_dashboard.py",
          "line_count": 686,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\regression_tracker.py",
          "line_count": 1375,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\structure_mapper.py",
          "line_count": 1112,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\refactoring\\hierarchical_analyzer.py",
          "line_count": 980,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\reporting\\report_generator.py",
          "line_count": 922,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\security\\compliance_framework.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\security\\security_test_generator.py",
          "line_count": 777,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\security\\universal_scanner.py",
          "line_count": 823,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\streaming\\incremental_enhancer.py",
          "line_count": 562,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\streaming\\live_feedback.py",
          "line_count": 504,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\streaming\\stream_generator.py",
          "line_count": 593,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\telemetry\\flow_analyzer.py",
          "line_count": 640,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\telemetry\\performance_monitor.py",
          "line_count": 554,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\telemetry\\system_profiler.py",
          "line_count": 599,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\telemetry\\telemetry_collector.py",
          "line_count": 421,
          "size_category": "large"
        },
        {
          "file": "testmaster\\telemetry\\telemetry_dashboard.py",
          "line_count": 624,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\ui\\alert_system.py",
          "line_count": 800,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\utils\\__init__.py",
          "line_count": 1,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\verification\\base.py",
          "line_count": 396,
          "size_category": "large"
        },
        {
          "file": "testmaster\\verification\\quality.py",
          "line_count": 438,
          "size_category": "large"
        },
        {
          "file": "tests\\test_phase2_core_validation.py",
          "line_count": 569,
          "size_category": "huge"
        },
        {
          "file": "tests\\test_phase2_integration_validation.py",
          "line_count": 677,
          "size_category": "huge"
        },
        {
          "file": "ui_ux\\studio_interface.py",
          "line_count": 634,
          "size_category": "huge"
        }
      ]
    },
    "security": {
      "file_count": 753,
      "total_lines": 469982,
      "scattered_across": 151,
      "directories": [
        "testmaster\\intelligence\\llm_providers",
        "testmaster\\core",
        "core\\intelligence\\documentation\\revolutionary",
        "testmaster\\intelligence\\documentation\\core",
        "ui_ux",
        "core\\intelligence\\integration",
        "core\\intelligence\\security\\audit",
        "prioritization",
        "core\\state",
        "core\\intelligence\\documentation\\intelligence\\optimization",
        "observability",
        "archive\\phase1c_consolidation_20250820_150000\\integration",
        "workflow",
        "dashboard\\dashboard_core",
        "core\\intelligence\\visualization",
        "testmaster\\intelligence\\integration\\coordination",
        "testmaster\\overview",
        "core\\intelligence\\documentation",
        "analysis\\comprehensive_analysis\\ml_analysis",
        "core",
        "tests",
        "analysis\\comprehensive_analysis\\pattern_recognition",
        "testmaster\\intelligence\\integration",
        "testmaster\\intelligence\\documentation\\integrations",
        "archive\\oversized_modules_20250821_042018\\monitoring",
        "core\\intelligence\\testing\\automation",
        "testmaster\\intelligence\\documentation",
        "core\\intelligence\\testing",
        "core\\intelligence\\testing\\security",
        "analysis\\comprehensive_analysis\\workflow_analysis",
        "analysis\\comprehensive_analysis\\anomaly_detection",
        "orchestration",
        "agents\\roles",
        "archive\\original_backup\\scripts",
        "dashboard\\api",
        "core\\intelligence\\documentation\\enterprise",
        "archive\\original_backup\\cache",
        "scripts",
        "core\\intelligence\\testing\\ai_generation",
        "core\\security",
        "cache",
        "archive",
        "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components",
        "core\\intelligence",
        "observability\\core",
        "config",
        "testmaster",
        ".",
        "core\\observability",
        "core\\intelligence\\streaming",
        "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components",
        "core\\intelligence\\enterprise\\api",
        "testmaster\\analysis\\comprehensive_analysis",
        "agents\\team",
        "integration",
        "archive\\phase7_archive\\replaced_code",
        "deployment",
        "testmaster\\orchestration",
        "testmaster\\orchestrator",
        "api",
        "archive\\original_backup\\analytics",
        "core\\intelligence\\security",
        "testmaster\\telemetry",
        "analysis\\comprehensive_analysis\\security_monitoring",
        "analytics",
        "core\\intelligence\\knowledge_graph",
        "archive\\phase5_archive\\replaced_code",
        "observability\\replay",
        "testmaster\\intelligence\\integration\\layers",
        "core\\tools",
        "core\\intelligence\\documentation\\intelligence",
        "archive\\placeholder_backups_20250820_011745\\integration",
        "archive\\original_backup\\config",
        "archive\\oversized_modules_20250821_042018\\validation",
        "core\\intelligence\\testing\\advanced",
        "archive\\modularization_20250820_222253",
        "monitoring",
        "analysis\\comprehensive_analysis\\pattern_mining",
        "testmaster\\intelligence\\integration\\features",
        "testmaster\\intelligence\\integration\\agents",
        "core\\intelligence\\integration\\components",
        "testmaster\\integration",
        "archive\\phase6_archive\\replaced_code",
        "testmaster\\intelligence\\tree_of_thought",
        "dashboard",
        "archive\\legacy_scripts",
        "archive\\oversized_modules_20250821_042018\\ml\\advanced",
        "analysis\\comprehensive_analysis",
        "archive\\placeholder_backups_20250820_011817\\integration",
        "analysis\\comprehensive_analysis\\metaprog_analysis",
        "consolidation",
        "core\\intelligence\\ml\\advanced",
        "testmaster\\reporting",
        "testmaster\\intelligence\\consensus",
        "core\\intelligence\\testing\\components",
        "core\\intelligence\\config",
        "testmaster\\intelligence\\documentation\\templates",
        "core\\intelligence\\testing\\enterprise",
        "core\\orchestration",
        "core\\intelligence\\analysis\\business_analyzer_modules",
        "core\\intelligence\\security\\enterprise",
        "testmaster\\monitoring",
        "archive\\20250818",
        "core\\intelligence\\analytics\\realtime",
        "analysis\\comprehensive_analysis\\realtime_analysis",
        "archive\\phase4_archive\\replaced_code",
        "testmaster\\intelligence\\hierarchical_planning",
        "testmaster\\intelligence\\security",
        "ui",
        "archive\\oversized_modules_20250821_042018\\ml\\enterprise",
        "testmaster\\intelligence\\documentation\\generators",
        "archive\\original_backup",
        "core\\intelligence\\prediction",
        "core\\intelligence\\security\\enterprise\\validation",
        "core\\intelligence\\ml",
        "testmaster\\intelligence\\documentation\\templates\\api",
        "core\\reliability",
        "core\\intelligence\\ml\\enterprise",
        "core\\intelligence\\api",
        "archive\\oversized_modules_20250821_042018\\analysis",
        "testmaster\\core\\framework_abstraction",
        "core\\intelligence\\analytics",
        "tests\\integration",
        "state",
        "testmaster\\refactoring",
        "archive\\oversized_modules_20250821_042018\\coordination",
        "core\\intelligence\\orchestration",
        "core\\intelligence\\analysis",
        "validation",
        "archive\\modularization_integration",
        "core\\intelligence\\analytics\\advanced",
        "analysis\\comprehensive_analysis\\data_security",
        "core\\intelligence\\security\\enterprise\\intelligence",
        "core\\intelligence\\enterprise",
        "archive\\COMPLETE_REFACTOR_20250818_112844",
        "testmaster\\security",
        "core\\intelligence\\coordination",
        "archive\\modularization_20250821",
        "core\\intelligence\\monitoring",
        "testmaster\\intelligence\\optimization",
        "testmaster\\intelligence\\bridges",
        "testmaster\\agent_qa",
        "core\\testing",
        "agents\\supervisor",
        "agents",
        "archive\\oversized_modules_20250821_042018\\documentation\\revolutionary",
        "archive\\phase1c_consolidation_20250820_150000",
        "core\\intelligence\\reliability",
        "core\\intelligence\\dashboard",
        "testmaster\\communication",
        "archive\\oversized_modules_20250821_042018\\api"
      ],
      "consolidation_opportunity": true,
      "files": [
        {
          "file": "agent_d_comprehensive_test_executor.py",
          "line_count": 911,
          "size_category": "huge"
        },
        {
          "file": "ARCHIVE_PROTECTION_SYSTEM.py",
          "line_count": 400,
          "size_category": "large"
        },
        {
          "file": "auto_readme_updater.py",
          "line_count": 619,
          "size_category": "huge"
        },
        {
          "file": "comprehensive_classical_analysis_methods.py",
          "line_count": 736,
          "size_category": "huge"
        },
        {
          "file": "comprehensive_codebase_analysis.py",
          "line_count": 332,
          "size_category": "large"
        },
        {
          "file": "comprehensive_feature_audit.py",
          "line_count": 665,
          "size_category": "huge"
        },
        {
          "file": "create_real_implementations.py",
          "line_count": 873,
          "size_category": "huge"
        },
        {
          "file": "DEMONSTRATION_OF_SUPERIORITY.py",
          "line_count": 287,
          "size_category": "medium"
        },
        {
          "file": "enhanced_incremental_ast_engine.py",
          "line_count": 826,
          "size_category": "huge"
        },
        {
          "file": "enhanced_intelligent_test_builder.py",
          "line_count": 614,
          "size_category": "huge"
        },
        {
          "file": "enhanced_realtime_security_monitor.py",
          "line_count": 1108,
          "size_category": "huge"
        },
        {
          "file": "enhanced_security_dashboard_api.py",
          "line_count": 701,
          "size_category": "huge"
        },
        {
          "file": "enhanced_security_intelligence_agent.py",
          "line_count": 1091,
          "size_category": "huge"
        },
        {
          "file": "enhance_missing_robust_systems.py",
          "line_count": 1247,
          "size_category": "huge"
        },
        {
          "file": "final_100_percent_fix.py",
          "line_count": 225,
          "size_category": "medium"
        },
        {
          "file": "final_archive_sweep.py",
          "line_count": 295,
          "size_category": "medium"
        },
        {
          "file": "fix_backend_issues.py",
          "line_count": 323,
          "size_category": "large"
        },
        {
          "file": "integration_test_generator.py",
          "line_count": 572,
          "size_category": "huge"
        },
        {
          "file": "layer3_integration_example.py",
          "line_count": 522,
          "size_category": "huge"
        },
        {
          "file": "live_code_quality_monitor.py",
          "line_count": 1045,
          "size_category": "huge"
        },
        {
          "file": "llm_analysis_monitor.py",
          "line_count": 729,
          "size_category": "huge"
        },
        {
          "file": "modularize_api_templates.py",
          "line_count": 335,
          "size_category": "large"
        },
        {
          "file": "phase7_validation.py",
          "line_count": 364,
          "size_category": "large"
        },
        {
          "file": "real_time_monitor.py",
          "line_count": 563,
          "size_category": "huge"
        },
        {
          "file": "restored_asyncio_4.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "restored_asyncio_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_asyncio_6.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "restored_json_4.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "restored_json_5.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "restored_json_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_logging_4.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "restored_logging_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_logging_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_os_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_random_6.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "restored_sys_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_threading_4.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "restored_threading_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_threading_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_time_4.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "restored_time_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_time_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_uuid_4.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "restored_uuid_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_uuid_6.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "restore_archive_robust.py",
          "line_count": 1537,
          "size_category": "huge"
        },
        {
          "file": "risk_based_test_targeter.py",
          "line_count": 884,
          "size_category": "huge"
        },
        {
          "file": "run_integration_test.py",
          "line_count": 185,
          "size_category": "medium"
        },
        {
          "file": "run_security_scan.py",
          "line_count": 95,
          "size_category": "small"
        },
        {
          "file": "simple_web_monitor.py",
          "line_count": 191,
          "size_category": "medium"
        },
        {
          "file": "start_monitoring.py",
          "line_count": 264,
          "size_category": "medium"
        },
        {
          "file": "test_100_percent_integration.py",
          "line_count": 227,
          "size_category": "medium"
        },
        {
          "file": "test_after_refactor.py",
          "line_count": 255,
          "size_category": "medium"
        },
        {
          "file": "test_agent_b_integrations.py",
          "line_count": 312,
          "size_category": "large"
        },
        {
          "file": "test_agent_qa_integration.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "test_agent_qa_system.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "test_api_functionality.py",
          "line_count": 223,
          "size_category": "medium"
        },
        {
          "file": "test_backend_health.py",
          "line_count": 419,
          "size_category": "large"
        },
        {
          "file": "test_before_refactor.py",
          "line_count": 331,
          "size_category": "large"
        },
        {
          "file": "test_classical_analysis.py",
          "line_count": 292,
          "size_category": "medium"
        },
        {
          "file": "test_complexity_prioritizer.py",
          "line_count": 690,
          "size_category": "huge"
        },
        {
          "file": "test_comprehensive_analysis.py",
          "line_count": 190,
          "size_category": "medium"
        },
        {
          "file": "test_config_intelligence.py",
          "line_count": 133,
          "size_category": "small"
        },
        {
          "file": "test_enhanced_server.py",
          "line_count": 76,
          "size_category": "small"
        },
        {
          "file": "test_exhaustive_features.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "test_final_integration.py",
          "line_count": 204,
          "size_category": "medium"
        },
        {
          "file": "test_integration_restoration.py",
          "line_count": 291,
          "size_category": "medium"
        },
        {
          "file": "test_llm_intelligence.py",
          "line_count": 42,
          "size_category": "tiny"
        },
        {
          "file": "test_multi_objective_optimization.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "test_phase1_integration.py",
          "line_count": 274,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_exhaustive_validation.py",
          "line_count": 249,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_final_validation.py",
          "line_count": 271,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_integration.py",
          "line_count": 255,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_quick_validation.py",
          "line_count": 222,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_simple_validation.py",
          "line_count": 172,
          "size_category": "medium"
        },
        {
          "file": "test_security_api_server.py",
          "line_count": 46,
          "size_category": "tiny"
        },
        {
          "file": "test_security_full_integration.py",
          "line_count": 530,
          "size_category": "huge"
        },
        {
          "file": "test_security_integration_validation.py",
          "line_count": 329,
          "size_category": "large"
        },
        {
          "file": "test_tot_integration.py",
          "line_count": 165,
          "size_category": "medium"
        },
        {
          "file": "test_unified_integration.py",
          "line_count": 249,
          "size_category": "medium"
        },
        {
          "file": "test_universal_language_detector.py",
          "line_count": 693,
          "size_category": "huge"
        },
        {
          "file": "unified_orchestration_example.py",
          "line_count": 407,
          "size_category": "large"
        },
        {
          "file": "unified_security_scanner.py",
          "line_count": 1124,
          "size_category": "huge"
        },
        {
          "file": "validate_api_endpoints.py",
          "line_count": 787,
          "size_category": "huge"
        },
        {
          "file": "validate_newton_destroyer.py",
          "line_count": 112,
          "size_category": "small"
        },
        {
          "file": "verify_classical_modules.py",
          "line_count": 96,
          "size_category": "small"
        },
        {
          "file": "web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "agents\\__init__.py",
          "line_count": 48,
          "size_category": "tiny"
        },
        {
          "file": "agents\\roles\\base_role.py",
          "line_count": 373,
          "size_category": "large"
        },
        {
          "file": "agents\\roles\\quality_assurance.py",
          "line_count": 40,
          "size_category": "tiny"
        },
        {
          "file": "agents\\roles\\test_architect.py",
          "line_count": 945,
          "size_category": "huge"
        },
        {
          "file": "agents\\roles\\test_coordinator.py",
          "line_count": 36,
          "size_category": "tiny"
        },
        {
          "file": "agents\\roles\\test_engineer.py",
          "line_count": 917,
          "size_category": "huge"
        },
        {
          "file": "agents\\roles\\test_executor.py",
          "line_count": 36,
          "size_category": "tiny"
        },
        {
          "file": "agents\\roles\\__init__.py",
          "line_count": 28,
          "size_category": "tiny"
        },
        {
          "file": "agents\\supervisor\\testing_supervisor.py",
          "line_count": 492,
          "size_category": "large"
        },
        {
          "file": "agents\\supervisor\\__init__.py",
          "line_count": 23,
          "size_category": "tiny"
        },
        {
          "file": "agents\\team\\testing_team.py",
          "line_count": 429,
          "size_category": "large"
        },
        {
          "file": "agents\\team\\__init__.py",
          "line_count": 25,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\__init__.py",
          "line_count": 64,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\anomaly_detection\\anomaly_detection_analyzer.py",
          "line_count": 882,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\data_security\\__init__.py",
          "line_count": 9,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprogramming_analysis_wrapper.py",
          "line_count": 68,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_security_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\metaprog_analysis\\__init__.py",
          "line_count": 15,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_code_analysis_wrapper.py",
          "line_count": 257,
          "size_category": "medium"
        },
        {
          "file": "analysis\\comprehensive_analysis\\pattern_mining\\cross_repo_pattern_miner.py",
          "line_count": 1142,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\pattern_recognition\\ml_pattern_recognition.py",
          "line_count": 951,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\realtime_analysis\\realtime_ast_engine.py",
          "line_count": 974,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py",
          "line_count": 1038,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\security_monitoring\\__init__.py",
          "line_count": 9,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\workflow_analysis\\workflow_pattern_detector.py",
          "line_count": 1118,
          "size_category": "huge"
        },
        {
          "file": "analytics\\failure_analyzer.py",
          "line_count": 661,
          "size_category": "huge"
        },
        {
          "file": "api\\orchestration_api.py",
          "line_count": 447,
          "size_category": "large"
        },
        {
          "file": "api\\orchestration_flask.py",
          "line_count": 475,
          "size_category": "large"
        },
        {
          "file": "api\\phase2_api.py",
          "line_count": 531,
          "size_category": "huge"
        },
        {
          "file": "api\\phase3_api.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "archive\\advanced_testing_intelligence.py",
          "line_count": 770,
          "size_category": "huge"
        },
        {
          "file": "archive\\archive_system.py",
          "line_count": 312,
          "size_category": "large"
        },
        {
          "file": "archive\\coverage_analyzer_original_2697_lines.py",
          "line_count": 2698,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_business_rule_analysis_original.py",
          "line_count": 1213,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "line_count": 1206,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_ml_code_analysis_original.py",
          "line_count": 1249,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_semantic_analysis_original.py",
          "line_count": 1244,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_technical_debt_analysis_original.py",
          "line_count": 1301,
          "size_category": "huge"
        },
        {
          "file": "archive\\integration_hub_original_20250820_220939.py",
          "line_count": 1877,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_metaprogramming_analysis.py",
          "line_count": 1206,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_ml_code_analysis.py",
          "line_count": 1249,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_technical_debt_analysis.py",
          "line_count": 1301,
          "size_category": "huge"
        },
        {
          "file": "archive\\20250818\\web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "line_count": 789,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_aggregator.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
          "line_count": 622,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
          "line_count": 449,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_batch_processor.py",
          "line_count": 495,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
          "line_count": 577,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_compressor.py",
          "line_count": 471,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_correlator.py",
          "line_count": 440,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
          "line_count": 893,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "line_count": 667,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "line_count": 1290,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
          "line_count": 775,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_enhancer.py",
          "line_count": 407,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "line_count": 661,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "line_count": 598,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
          "line_count": 658,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "line_count": 580,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_flow_monitor.py",
          "line_count": 579,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
          "line_count": 725,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
          "line_count": 690,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "line_count": 776,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
          "line_count": 626,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
          "line_count": 656,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_optimizer.py",
          "line_count": 378,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "line_count": 555,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_monitor.py",
          "line_count": 495,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "line_count": 703,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "line_count": 899,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
          "line_count": 766,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "line_count": 1192,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "line_count": 835,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "line_count": 850,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "line_count": 749,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
          "line_count": 694,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
          "line_count": 498,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
          "line_count": 723,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "line_count": 448,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
          "line_count": 680,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_validator.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
          "line_count": 674,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "line_count": 1142,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "line_count": 2698,
          "size_category": "huge"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\integration_test_generator.py",
          "line_count": 572,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\simple_100_percent.py",
          "line_count": 146,
          "size_category": "small"
        },
        {
          "file": "archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
          "line_count": 1376,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\agent_qa_original_1749_lines.py",
          "line_count": 1750,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\business_analyzer_original.py",
          "line_count": 1266,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "line_count": 1547,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "line_count": 953,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "line_count": 1877,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\integration_test_generator.py",
          "line_count": 572,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\analytics\\failure_analyzer.py",
          "line_count": 661,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\cache\\intelligent_cache.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\config\\testmaster_config.py",
          "line_count": 560,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\scripts\\simple_100_percent.py",
          "line_count": 146,
          "size_category": "small"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "line_count": 1266,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
          "line_count": 1547,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\api\\enterprise_integration_layer.py",
          "line_count": 1160,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\coordination\\agent_coordination_protocols.py",
          "line_count": 1311,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\coordination\\resource_coordination_system.py",
          "line_count": 1030,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\documentation\\revolutionary\\neo4j_dominator.py",
          "line_count": 1158,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "line_count": 1294,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\delivery_optimizer.py",
          "line_count": 1276,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\integrity_ml_guardian.py",
          "line_count": 1444,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\performance_optimizer.py",
          "line_count": 1144,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\sla_ml_optimizer.py",
          "line_count": 1627,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\enterprise\\ml_infrastructure_orchestrator.py",
          "line_count": 1117,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\monitoring\\agent_qa.py",
          "line_count": 1750,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\monitoring\\performance_optimization_engine.py",
          "line_count": 1124,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\validation\\integration_test_suite.py",
          "line_count": 1062,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\validation\\system_validation_framework.py",
          "line_count": 1295,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "line_count": 618,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\enhanced_monitor.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "line_count": 610,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
          "line_count": 757,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "line_count": 1051,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "line_count": 1201,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "line_count": 618,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "line_count": 1287,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "line_count": 1302,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "line_count": 768,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
          "line_count": 991,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase4_archive\\replaced_code\\enhanced_monitor_20250819_195132.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase5_archive\\replaced_code\\agent_graph_20250819_195602.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "archive\\phase5_archive\\replaced_code\\enterprise_deployment_20250819_195602.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase5_archive\\replaced_code\\testing_team_20250819_195602.py",
          "line_count": 429,
          "size_category": "large"
        },
        {
          "file": "archive\\phase6_archive\\replaced_code\\agent_graph_20250819_200928.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase7_archive\\replaced_code\\enhanced_monitor_20250819_202006.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
          "line_count": 991,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
          "line_count": 991,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "cache\\intelligent_cache.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "config\\testmaster_config.py",
          "line_count": 560,
          "size_category": "huge"
        },
        {
          "file": "config\\yaml_config_enhancer.py",
          "line_count": 633,
          "size_category": "huge"
        },
        {
          "file": "consolidation\\feature_discovery.py",
          "line_count": 364,
          "size_category": "large"
        },
        {
          "file": "core\\framework_abstraction.py",
          "line_count": 604,
          "size_category": "huge"
        },
        {
          "file": "core\\framework_abstraction.stub_backup.py",
          "line_count": 361,
          "size_category": "large"
        },
        {
          "file": "core\\shared_state.py",
          "line_count": 610,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\orchestrator.py",
          "line_count": 390,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\__init__.py",
          "line_count": 541,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\business_analyzer_modular.py",
          "line_count": 343,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\business_base.py",
          "line_count": 251,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\business_rule_extractor.py",
          "line_count": 360,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_analyzer_modular.py",
          "line_count": 282,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_base.py",
          "line_count": 197,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_quantifier.py",
          "line_count": 338,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\ml_analyzer.py",
          "line_count": 777,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\ml_code_analyzer.py",
          "line_count": 573,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_analyzer.py",
          "line_count": 953,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_base.py",
          "line_count": 252,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\technical_debt_analyzer.py",
          "line_count": 574,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py",
          "line_count": 477,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analytics\\statistical_engine.py",
          "line_count": 318,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analytics\\advanced\\correlation_engine.py",
          "line_count": 589,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\realtime\\streaming_analytics.py",
          "line_count": 453,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\api\\intelligence_api.py",
          "line_count": 100,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\api\\intelligence_endpoints.py",
          "line_count": 393,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\api\\security_blueprint.py",
          "line_count": 170,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\api\\unified_api_gateway.py",
          "line_count": 926,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\api\\validators.py",
          "line_count": 373,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\api\\__init__.py",
          "line_count": 138,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\config\\enterprise_config_manager.py",
          "line_count": 864,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\coordination\\distributed_lock_manager.py",
          "line_count": 829,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\coordination\\service_discovery_registry.py",
          "line_count": 702,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\dashboard\\intelligence_backend.py",
          "line_count": 412,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\adaptive_template_system.py",
          "line_count": 613,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\api_validation_framework.py",
          "line_count": 750,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\auto_generator.py",
          "line_count": 290,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\documentation\\changelog_generator.py",
          "line_count": 390,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\comprehensive_visualization_engine.py",
          "line_count": 828,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\cookbook_organization_manager.py",
          "line_count": 648,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\cross_framework_integration.py",
          "line_count": 602,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\design_first_docs.py",
          "line_count": 739,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\docs_testing_framework.py",
          "line_count": 639,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise_api_docs.py",
          "line_count": 744,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\faq_system.py",
          "line_count": 522,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence_integration.py",
          "line_count": 653,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\json_docs_processor.py",
          "line_count": 977,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\knowledge_management_framework.py",
          "line_count": 1022,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\legacy_integration_framework.py",
          "line_count": 875,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\master_documentation_orchestrator.py",
          "line_count": 912,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\migration_guide_generator.py",
          "line_count": 516,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\phase_1_7_integration.py",
          "line_count": 351,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\production_ready_docs.py",
          "line_count": 886,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\quality_assessment_engine.py",
          "line_count": 552,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\roadmap_generator.py",
          "line_count": 535,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\service_oriented_arch_docs.py",
          "line_count": 768,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\swarms_doc_intelligence_extractor.py",
          "line_count": 258,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\documentation\\swarms_navigation_intelligence.py",
          "line_count": 453,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\ux_excellence_framework.py",
          "line_count": 1044,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\yaml_config_processor.py",
          "line_count": 634,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise\\documentation_intelligence.py",
          "line_count": 451,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise\\documentation_validator.py",
          "line_count": 249,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise\\workflow_automation.py",
          "line_count": 562,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\analyzer.py",
          "line_count": 438,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\metrics.py",
          "line_count": 332,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\project_coordinator.py",
          "line_count": 587,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\optimization\\content_enhancer.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\optimization\\strategy_engine.py",
          "line_count": 286,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\ai_documentation_synthesizer.py",
          "line_count": 706,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\codesee_annihilator.py",
          "line_count": 767,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\interactive_chat_interface.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\enterprise\\api_orchestrator.py",
          "line_count": 577,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\reporting_engine.py",
          "line_count": 635,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\api\\endpoint_manager.py",
          "line_count": 652,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\api\\service_registry.py",
          "line_count": 467,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\integration\\base.py",
          "line_count": 161,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\integration\\__init__.py",
          "line_count": 563,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\integration\\components\\endpoint_manager.py",
          "line_count": 438,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\ai_code_explorer.py",
          "line_count": 430,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\code_knowledge_graph_engine.py",
          "line_count": 369,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\instant_graph_engine.py",
          "line_count": 465,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\multi_language_analyzer.py",
          "line_count": 415,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\predictive_code_intelligence.py",
          "line_count": 478,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\visual_relationship_mapper.py",
          "line_count": 440,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\__init__.py",
          "line_count": 94,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\ml\\advanced_models.py",
          "line_count": 272,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\ml\\anomaly_algorithms.py",
          "line_count": 344,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\correlation_engine.py",
          "line_count": 340,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\explainability.py",
          "line_count": 403,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\feature_engineering.py",
          "line_count": 338,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\gpu_accelerator.py",
          "line_count": 400,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\integration_analysis.py",
          "line_count": 474,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\ml_orchestrator.py",
          "line_count": 701,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\model_registry.py",
          "line_count": 397,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\online_learning.py",
          "line_count": 363,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\pattern_detector.py",
          "line_count": 188,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\ml\\statistical_engine.py",
          "line_count": 141,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\anomaly_detection.py",
          "line_count": 525,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\batch_processor.py",
          "line_count": 856,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\ensemble_meta_learner.py",
          "line_count": 340,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\performance_ml_engine.py",
          "line_count": 913,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\predictive_engine.py",
          "line_count": 850,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\smart_cache.py",
          "line_count": 593,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\enterprise\\ml_auto_scaling.py",
          "line_count": 876,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
          "line_count": 756,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\monitoring\\enterprise_performance_monitor.py",
          "line_count": 817,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\monitoring\\pattern_detector.py",
          "line_count": 355,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\monitoring\\qa_base.py",
          "line_count": 208,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\monitoring\\qa_scorer.py",
          "line_count": 255,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\monitoring\\__init__.py",
          "line_count": 99,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\orchestration\\cross_system_orchestrator.py",
          "line_count": 982,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\orchestration\\integration_hub.py",
          "line_count": 711,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\orchestration\\workflow_orchestration_engine.py",
          "line_count": 801,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\prediction\\forecaster.py",
          "line_count": 367,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\reliability\\enterprise_error_recovery.py",
          "line_count": 890,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\advanced_security_intelligence.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\ai_security_integration.py",
          "line_count": 178,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\audit_logger.py",
          "line_count": 266,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\code_vulnerability_scanner.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\compliance_checker.py",
          "line_count": 422,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\crypto_analyzer.py",
          "line_count": 354,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\dependency_scanner.py",
          "line_count": 384,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\knowledge_graph_integration.py",
          "line_count": 203,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\security_analytics.py",
          "line_count": 432,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\security_api.py",
          "line_count": 445,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\security_compliance_validator.py",
          "line_count": 704,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\security_dashboard.py",
          "line_count": 412,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\threat_intelligence_engine.py",
          "line_count": 550,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\threat_modeler.py",
          "line_count": 424,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\ultimate_security_orchestrator.py",
          "line_count": 529,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\unified_security_service.py",
          "line_count": 270,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\vulnerability_scanner.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\__init__.py",
          "line_count": 19,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\security\\audit\\audit_events.py",
          "line_count": 255,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\audit\\audit_interface.py",
          "line_count": 374,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\audit\\audit_reporter.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\compliance_automation.py",
          "line_count": 470,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\enterprise_security_monitor.py",
          "line_count": 400,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\governance_framework.py",
          "line_count": 548,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\security_intelligence.py",
          "line_count": 599,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\security_validator.py",
          "line_count": 443,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\intelligence\\incident_responder.py",
          "line_count": 648,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\intelligence\\threat_detector.py",
          "line_count": 806,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\intelligence\\__init__.py",
          "line_count": 19,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\validation\\compliance_validator.py",
          "line_count": 562,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\validation\\integration_validator.py",
          "line_count": 592,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\validation\\penetration_tester.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\streaming\\event_streaming_engine.py",
          "line_count": 815,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\automation_engine.py",
          "line_count": 597,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\base.py",
          "line_count": 128,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\testing\\quality_dashboard.py",
          "line_count": 387,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\regression_detector.py",
          "line_count": 417,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\security_fuzzer.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\testing_api.py",
          "line_count": 481,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\test_analytics.py",
          "line_count": 477,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\test_intelligence.py",
          "line_count": 548,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\test_orchestrator.py",
          "line_count": 391,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\test_selector.py",
          "line_count": 388,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\advanced\\__init__.py",
          "line_count": 43,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\claude_test_generator.py",
          "line_count": 459,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
          "line_count": 543,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\universal_ai_generator.py",
          "line_count": 472,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\__init__.py",
          "line_count": 56,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\testing\\automation\\continuous_testing_engine.py",
          "line_count": 547,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\automation\\enterprise_test_orchestrator.py",
          "line_count": 727,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\automation\\__init__.py",
          "line_count": 72,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\testing\\components\\integration_generator.py",
          "line_count": 749,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\enterprise\\quality_analytics_engine.py",
          "line_count": 919,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\enterprise\\quality_gate_automation.py",
          "line_count": 742,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\enterprise\\__init__.py",
          "line_count": 72,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\testing\\security\\advanced_owasp_tester.py",
          "line_count": 913,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\security\\api_security_tester.py",
          "line_count": 532,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\security\\compliance_validator.py",
          "line_count": 663,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\security\\__init__.py",
          "line_count": 72,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\visualization\\agent_interface_systems.py",
          "line_count": 394,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\dashboard_systems.py",
          "line_count": 377,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\data_visualization_engines.py",
          "line_count": 437,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\development_tools_ui.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\interactive_visualizations.py",
          "line_count": 395,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\observability_systems.py",
          "line_count": 427,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\realtime_ui_components.py",
          "line_count": 479,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\user_experience_frameworks.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\__init__.py",
          "line_count": 222,
          "size_category": "medium"
        },
        {
          "file": "core\\observability\\agent_ops_separate.py",
          "line_count": 571,
          "size_category": "huge"
        },
        {
          "file": "core\\observability\\unified_monitor.py",
          "line_count": 757,
          "size_category": "huge"
        },
        {
          "file": "core\\observability\\unified_monitor_enhanced.stub_backup.py",
          "line_count": 1891,
          "size_category": "huge"
        },
        {
          "file": "core\\orchestration\\agent_graph.py",
          "line_count": 501,
          "size_category": "huge"
        },
        {
          "file": "core\\orchestration\\enhanced_agent_orchestrator.py",
          "line_count": 755,
          "size_category": "huge"
        },
        {
          "file": "core\\reliability\\emergency_backup_recovery.py",
          "line_count": 824,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\adaptive_fallback_orchestrator.py",
          "line_count": 677,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\adaptive_security_resilience.py",
          "line_count": 748,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\agent_communication_security.py",
          "line_count": 355,
          "size_category": "large"
        },
        {
          "file": "core\\security\\api_security_layer.py",
          "line_count": 380,
          "size_category": "large"
        },
        {
          "file": "core\\security\\authentication_system.py",
          "line_count": 289,
          "size_category": "medium"
        },
        {
          "file": "core\\security\\byzantine_consensus_security.py",
          "line_count": 637,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\circuit_breaker_matrix.py",
          "line_count": 630,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\cloud_event_security.py",
          "line_count": 523,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\code_generation_security.py",
          "line_count": 741,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\compliance_framework.py",
          "line_count": 1115,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\configuration_security.py",
          "line_count": 441,
          "size_category": "large"
        },
        {
          "file": "core\\security\\container_security_validator.py",
          "line_count": 628,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\data_integrity_guardian.py",
          "line_count": 710,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\deployment_pipeline_security.py",
          "line_count": 863,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\distributed_agent_registry.py",
          "line_count": 399,
          "size_category": "large"
        },
        {
          "file": "core\\security\\distributed_communication_security.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\distributed_coordination_security.py",
          "line_count": 777,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\distributed_key_management_security.py",
          "line_count": 678,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\document_classification_security.py",
          "line_count": 691,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\enterprise_audit_logging.py",
          "line_count": 516,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\enterprise_authentication.py",
          "line_count": 754,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\enterprise_auth_gateway.py",
          "line_count": 590,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\enum_security.py",
          "line_count": 505,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\error_handler.py",
          "line_count": 125,
          "size_category": "small"
        },
        {
          "file": "core\\security\\error_isolation_system.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\error_recovery_framework.py",
          "line_count": 578,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\exception_monitoring.py",
          "line_count": 498,
          "size_category": "large"
        },
        {
          "file": "core\\security\\fault_tolerance_engine.py",
          "line_count": 705,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\file_security_handler.py",
          "line_count": 353,
          "size_category": "large"
        },
        {
          "file": "core\\security\\flow_persistence_security.py",
          "line_count": 698,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\graceful_degradation_manager.py",
          "line_count": 699,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\guardrail_security_system.py",
          "line_count": 542,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\health_monitoring_nexus.py",
          "line_count": 664,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\identity_validation_system.py",
          "line_count": 370,
          "size_category": "large"
        },
        {
          "file": "core\\security\\license_compliance_framework.py",
          "line_count": 516,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\message_context_security.py",
          "line_count": 428,
          "size_category": "large"
        },
        {
          "file": "core\\security\\multi_agent_access_control.py",
          "line_count": 801,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\multi_agent_evaluation_security.py",
          "line_count": 677,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\network_security_controls.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\operational_security.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\quantum_retry_engine.py",
          "line_count": 616,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\rate_limiter.py",
          "line_count": 333,
          "size_category": "large"
        },
        {
          "file": "core\\security\\resilience_orchestrator.py",
          "line_count": 681,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\retry_mechanism_system.py",
          "line_count": 655,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\secure_message_delivery.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\secure_performance_optimizer.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\security_monitoring_system.py",
          "line_count": 760,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\self_healing_coordinator.py",
          "line_count": 698,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\service_mesh_security.py",
          "line_count": 596,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\thread_safety_manager.py",
          "line_count": 411,
          "size_category": "large"
        },
        {
          "file": "core\\security\\threat_intelligence_system.py",
          "line_count": 881,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\validation_framework.py",
          "line_count": 220,
          "size_category": "medium"
        },
        {
          "file": "core\\security\\validation_security.py",
          "line_count": 605,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\vulnerability_detection_framework.py",
          "line_count": 716,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\__init__.py",
          "line_count": 596,
          "size_category": "huge"
        },
        {
          "file": "core\\state\\enhanced_state_manager.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\collaborative_testing_platform.py",
          "line_count": 1224,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\enterprise_test_framework.py",
          "line_count": 739,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\integration_test_framework.py",
          "line_count": 489,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\intelligent_test_generator.py",
          "line_count": 1119,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\mcp_testing.py",
          "line_count": 428,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\performance_test_suite.py",
          "line_count": 462,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\run_all_tests.py",
          "line_count": 389,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\task_guardrails_testing.py",
          "line_count": 768,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\testmaster_api_gateway.py",
          "line_count": 1318,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\test_ai_code_exploration.py",
          "line_count": 355,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\test_evolution_analyzer.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\test_intelligence_orchestrator.py",
          "line_count": 328,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\test_knowledge_graph_engine.py",
          "line_count": 256,
          "size_category": "medium"
        },
        {
          "file": "core\\testing\\test_multi_language_superiority.py",
          "line_count": 363,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\test_ui_interface_superiority.py",
          "line_count": 492,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\test_zero_setup_domination.py",
          "line_count": 380,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\thread_retry_testing.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "core\\tools\\concrete_tools.py",
          "line_count": 472,
          "size_category": "large"
        },
        {
          "file": "core\\tools\\type_safe_tools.py",
          "line_count": 471,
          "size_category": "large"
        },
        {
          "file": "dashboard\\automated_frontend_simulator.py",
          "line_count": 376,
          "size_category": "large"
        },
        {
          "file": "dashboard\\automated_frontend_tester.py",
          "line_count": 651,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\comprehensive_frontend_test.py",
          "line_count": 285,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\comprehensive_frontend_validator.py",
          "line_count": 552,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\demo_automated_frontend_testing.py",
          "line_count": 298,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\discover_backend_features.py",
          "line_count": 215,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\frontend_display_validator.py",
          "line_count": 773,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\gunicorn_config.py",
          "line_count": 49,
          "size_category": "tiny"
        },
        {
          "file": "dashboard\\integration_gap_analysis.py",
          "line_count": 307,
          "size_category": "large"
        },
        {
          "file": "dashboard\\quick_frontend_test.py",
          "line_count": 223,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\quick_integration_test.py",
          "line_count": 202,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\server.py",
          "line_count": 548,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\test_final_enhancements.py",
          "line_count": 863,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\test_frontend_integration.py",
          "line_count": 772,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\test_frontend_without_browser.py",
          "line_count": 234,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\test_multi_agent_integration.py",
          "line_count": 961,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\test_new_robustness_features.py",
          "line_count": 396,
          "size_category": "large"
        },
        {
          "file": "dashboard\\test_new_visualization_apis.py",
          "line_count": 132,
          "size_category": "small"
        },
        {
          "file": "dashboard\\test_robustness_verification.py",
          "line_count": 320,
          "size_category": "large"
        },
        {
          "file": "dashboard\\test_ultra_reliability.py",
          "line_count": 1049,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\ultimate_frontend_validator.py",
          "line_count": 845,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\validate_100_percent_real_data.py",
          "line_count": 176,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\validate_all_endpoints.py",
          "line_count": 226,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\api\\analytics.py",
          "line_count": 789,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\async_processing.py",
          "line_count": 606,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\backend_health_monitor.py",
          "line_count": 659,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\comprehensive_monitoring.py",
          "line_count": 665,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\coverage.py",
          "line_count": 583,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\crew_orchestration.py",
          "line_count": 812,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\enhanced_analytics.py",
          "line_count": 587,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\enhanced_telemetry.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\flow_optimization.py",
          "line_count": 662,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\frontend_data_contracts.py",
          "line_count": 390,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\health.py",
          "line_count": 760,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\intelligence.py",
          "line_count": 533,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\intelligence_integration.py",
          "line_count": 478,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\knowledge_graph.py",
          "line_count": 454,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\llm.py",
          "line_count": 405,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\monitoring.py",
          "line_count": 366,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\observability.py",
          "line_count": 522,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\orchestration_flask.py",
          "line_count": 475,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\performance.py",
          "line_count": 583,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\phase2_api.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\production_deployment.py",
          "line_count": 499,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\quality_assurance.py",
          "line_count": 653,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\real_codebase_scanner.stub_backup.py",
          "line_count": 892,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\refactor.py",
          "line_count": 63,
          "size_category": "small"
        },
        {
          "file": "dashboard\\api\\security.py",
          "line_count": 514,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\swarm_orchestration.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\telemetry.py",
          "line_count": 573,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\tests.py",
          "line_count": 101,
          "size_category": "small"
        },
        {
          "file": "dashboard\\api\\test_generation.py",
          "line_count": 481,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\websocket_dashboard.py",
          "line_count": 547,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\workflow.py",
          "line_count": 354,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_aggregator.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_anomaly_detector.py",
          "line_count": 622,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_backup.py",
          "line_count": 449,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_batch_processor.py",
          "line_count": 495,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_circuit_breaker.py",
          "line_count": 577,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_compressor.py",
          "line_count": 471,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_connectivity_monitor.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_correlator.py",
          "line_count": 440,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_data_sanitizer.py",
          "line_count": 893,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_dead_letter_queue.py",
          "line_count": 667,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_deduplication.py",
          "line_count": 1290,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_deduplication_engine.py",
          "line_count": 775,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_delivery_enhancer.py",
          "line_count": 407,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_delivery_guarantee.py",
          "line_count": 661,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_delivery_verifier.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_error_recovery.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_event_queue.py",
          "line_count": 598,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_export_manager.py",
          "line_count": 658,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_fallback_system.py",
          "line_count": 580,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_flow_monitor.py",
          "line_count": 579,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_health_monitor.py",
          "line_count": 725,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_heartbeat_monitor.py",
          "line_count": 690,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_integrity_guardian.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_integrity_verifier.py",
          "line_count": 776,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_metrics_collector.py",
          "line_count": 626,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_normalizer.py",
          "line_count": 656,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_optimizer.py",
          "line_count": 378,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_performance_booster.py",
          "line_count": 555,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_performance_monitor.py",
          "line_count": 495,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_performance_optimizer.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_persistence.py",
          "line_count": 703,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_pipeline.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_priority_queue.py",
          "line_count": 899,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_quality_assurance.py",
          "line_count": 766,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_quantum_retry.py",
          "line_count": 1192,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_rate_limiter.py",
          "line_count": 835,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_receipt_tracker.py",
          "line_count": 850,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py",
          "line_count": 749,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_redundancy.py",
          "line_count": 694,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_retry_manager.py",
          "line_count": 498,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_sla_tracker.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_smart_cache.py",
          "line_count": 723,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_streaming.py",
          "line_count": 448,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_telemetry.py",
          "line_count": 680,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_validator.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_watchdog.py",
          "line_count": 674,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\cache.py",
          "line_count": 120,
          "size_category": "small"
        },
        {
          "file": "dashboard\\dashboard_core\\data_store.py",
          "line_count": 506,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\emergency_backup_recovery.py",
          "line_count": 1309,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\error_handler.py",
          "line_count": 267,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\dashboard_core\\metrics_feed.py",
          "line_count": 360,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\monitor.py",
          "line_count": 314,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\predictive_flow_optimizer.py",
          "line_count": 1077,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\realtime_analytics_tracker.py",
          "line_count": 608,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\real_data_extractor.py",
          "line_count": 569,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\system_monitor.py",
          "line_count": 199,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\dashboard_core\\system_observability_metrics.py",
          "line_count": 840,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\test_collector.py",
          "line_count": 402,
          "size_category": "large"
        },
        {
          "file": "deployment\\enterprise_deployment.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "deployment\\service_registry.py",
          "line_count": 446,
          "size_category": "large"
        },
        {
          "file": "deployment\\swarm_orchestrator.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "deployment\\__init__.py",
          "line_count": 52,
          "size_category": "small"
        },
        {
          "file": "integration\\automatic_scaling_system.py",
          "line_count": 1092,
          "size_category": "huge"
        },
        {
          "file": "integration\\automatic_scaling_system_robust.py",
          "line_count": 1051,
          "size_category": "huge"
        },
        {
          "file": "integration\\comprehensive_error_recovery.py",
          "line_count": 1280,
          "size_category": "huge"
        },
        {
          "file": "integration\\comprehensive_error_recovery_robust.py",
          "line_count": 1201,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_analytics.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_analytics_robust.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_apis.py",
          "line_count": 618,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_apis_robust.py",
          "line_count": 618,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_communication.py",
          "line_count": 327,
          "size_category": "large"
        },
        {
          "file": "integration\\distributed_task_queue.py",
          "line_count": 472,
          "size_category": "large"
        },
        {
          "file": "integration\\intelligent_caching_layer.py",
          "line_count": 1334,
          "size_category": "huge"
        },
        {
          "file": "integration\\intelligent_caching_layer_robust.py",
          "line_count": 1287,
          "size_category": "huge"
        },
        {
          "file": "integration\\load_balancing_system.py",
          "line_count": 543,
          "size_category": "huge"
        },
        {
          "file": "integration\\multi_environment_support.py",
          "line_count": 462,
          "size_category": "large"
        },
        {
          "file": "integration\\predictive_analytics_engine.py",
          "line_count": 1142,
          "size_category": "huge"
        },
        {
          "file": "integration\\predictive_analytics_engine_robust.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "integration\\realtime_performance_monitoring.py",
          "line_count": 1427,
          "size_category": "huge"
        },
        {
          "file": "integration\\realtime_performance_monitoring_robust.py",
          "line_count": 1302,
          "size_category": "huge"
        },
        {
          "file": "integration\\service_mesh_integration.py",
          "line_count": 625,
          "size_category": "huge"
        },
        {
          "file": "integration\\visual_workflow_designer.py",
          "line_count": 768,
          "size_category": "huge"
        },
        {
          "file": "integration\\workflow_execution_engine.py",
          "line_count": 991,
          "size_category": "huge"
        },
        {
          "file": "integration\\workflow_execution_engine_robust.py",
          "line_count": 991,
          "size_category": "huge"
        },
        {
          "file": "integration\\workflow_framework.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "monitoring\\enhanced_monitor_separate.py",
          "line_count": 573,
          "size_category": "huge"
        },
        {
          "file": "monitoring\\monitoring_agents.py",
          "line_count": 665,
          "size_category": "huge"
        },
        {
          "file": "monitoring\\__init__.py",
          "line_count": 35,
          "size_category": "tiny"
        },
        {
          "file": "observability\\unified_observability.py",
          "line_count": 455,
          "size_category": "large"
        },
        {
          "file": "observability\\__init__.py",
          "line_count": 170,
          "size_category": "medium"
        },
        {
          "file": "observability\\core\\conversational_interface.py",
          "line_count": 155,
          "size_category": "medium"
        },
        {
          "file": "observability\\core\\cost_management.py",
          "line_count": 194,
          "size_category": "medium"
        },
        {
          "file": "observability\\core\\event_monitoring.py",
          "line_count": 306,
          "size_category": "large"
        },
        {
          "file": "observability\\core\\multimodal_analyzer.py",
          "line_count": 217,
          "size_category": "medium"
        },
        {
          "file": "observability\\core\\session_tracking.py",
          "line_count": 178,
          "size_category": "medium"
        },
        {
          "file": "observability\\replay\\__init__.py",
          "line_count": 38,
          "size_category": "tiny"
        },
        {
          "file": "orchestration\\swarm_router_enhancement.py",
          "line_count": 764,
          "size_category": "huge"
        },
        {
          "file": "orchestration\\unified_orchestrator.py",
          "line_count": 1279,
          "size_category": "huge"
        },
        {
          "file": "prioritization\\test_prioritizer.py",
          "line_count": 767,
          "size_category": "huge"
        },
        {
          "file": "scripts\\simple_100_percent.py",
          "line_count": 146,
          "size_category": "small"
        },
        {
          "file": "state\\unified_state_manager.py",
          "line_count": 985,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\main.py",
          "line_count": 377,
          "size_category": "large"
        },
        {
          "file": "testmaster\\__init__.py",
          "line_count": 68,
          "size_category": "small"
        },
        {
          "file": "testmaster\\agent_qa\\quality_inspector.py",
          "line_count": 318,
          "size_category": "large"
        },
        {
          "file": "testmaster\\agent_qa\\scoring_system.py",
          "line_count": 348,
          "size_category": "large"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\api_analysis.py",
          "line_count": 880,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\crypto_analysis.py",
          "line_count": 808,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\database_analysis.py",
          "line_count": 1246,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\evolution_analysis.py",
          "line_count": 689,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\main_analyzer.py",
          "line_count": 540,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\quality_analysis.py",
          "line_count": 802,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\security_analysis.py",
          "line_count": 911,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\supply_chain_security.py",
          "line_count": 755,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\taint_analysis.py",
          "line_count": 647,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\testing_analysis.py",
          "line_count": 1342,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\__init__.py",
          "line_count": 59,
          "size_category": "small"
        },
        {
          "file": "testmaster\\communication\\dynamic_handoff.py",
          "line_count": 675,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\config.py",
          "line_count": 606,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\orchestrator.py",
          "line_count": 470,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\framework_abstraction\\universal_test.py",
          "line_count": 425,
          "size_category": "large"
        },
        {
          "file": "testmaster\\integration\\final_integration_test.py",
          "line_count": 1865,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\context_variables_bridge.py",
          "line_count": 1144,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\event_monitoring_bridge.py",
          "line_count": 1082,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\protocol_communication_bridge.py",
          "line_count": 822,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\session_tracking_bridge.py",
          "line_count": 1111,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\sop_workflow_bridge.py",
          "line_count": 964,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\consensus\\agent_coordination.py",
          "line_count": 514,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\consensus\\consensus_engine.py",
          "line_count": 427,
          "size_category": "large"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\__init__.py",
          "line_count": 119,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\context_builder.py",
          "line_count": 711,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\doc_generator.py",
          "line_count": 557,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\llm_integration.py",
          "line_count": 630,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\quality_assessor.py",
          "line_count": 705,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\api_doc_generator.py",
          "line_count": 632,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\architecture_doc_generator.py",
          "line_count": 813,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\docstring_generator.py",
          "line_count": 562,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\readme_generator.py",
          "line_count": 657,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\integrations\\git_integration.py",
          "line_count": 582,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\docstring_templates.py",
          "line_count": 884,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\readme_templates.py",
          "line_count": 2251,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\template_engine.py",
          "line_count": 534,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\api\\base.py",
          "line_count": 93,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\api\\grpc_templates.py",
          "line_count": 420,
          "size_category": "large"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\api\\rest_templates.py",
          "line_count": 634,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\api\\websocket_templates.py",
          "line_count": 561,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\templates\\api\\__init__.py",
          "line_count": 15,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\hierarchical_planning\\llm_integration.py",
          "line_count": 554,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\hierarchical_planning\\test_plan_generator.py",
          "line_count": 558,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\hierarchical_planning\\unified_integration.py",
          "line_count": 524,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\__init__.py",
          "line_count": 106,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\integration\\agents\\documentation_agent.py",
          "line_count": 650,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\coordination\\analysis_coordinator.py",
          "line_count": 740,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\features\\feature_flags.py",
          "line_count": 730,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\layers\\layer_manager.py",
          "line_count": 663,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\llm_providers\\provider_implementations.py",
          "line_count": 592,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
          "line_count": 1162,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\optimization\\test_optimization_objectives.py",
          "line_count": 422,
          "size_category": "large"
        },
        {
          "file": "testmaster\\intelligence\\optimization\\__init__.py",
          "line_count": 78,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\security\\security_intelligence_agent.py",
          "line_count": 935,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\security\\__init__.py",
          "line_count": 29,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\tree_of_thought\\test_thought_generator.py",
          "line_count": 620,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\tree_of_thought\\universal_tot_integration.py",
          "line_count": 496,
          "size_category": "large"
        },
        {
          "file": "testmaster\\monitoring\\file_watcher.py",
          "line_count": 566,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestration\\universal_orchestrator.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestration\\__init__.py",
          "line_count": 54,
          "size_category": "small"
        },
        {
          "file": "testmaster\\orchestrator\\investigator.py",
          "line_count": 1123,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\work_distributor.py",
          "line_count": 796,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\coverage_intelligence.py",
          "line_count": 1071,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\regression_tracker.py",
          "line_count": 1375,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\refactoring\\hierarchical_analyzer.py",
          "line_count": 980,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\reporting\\report_generator.py",
          "line_count": 922,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\security\\compliance_framework.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\security\\security_test_generator.py",
          "line_count": 777,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\security\\universal_scanner.py",
          "line_count": 823,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\security\\__init__.py",
          "line_count": 53,
          "size_category": "small"
        },
        {
          "file": "testmaster\\telemetry\\telemetry_collector.py",
          "line_count": 421,
          "size_category": "large"
        },
        {
          "file": "tests\\test_intelligence_ml.py",
          "line_count": 422,
          "size_category": "large"
        },
        {
          "file": "tests\\test_phase2_core_validation.py",
          "line_count": 569,
          "size_category": "huge"
        },
        {
          "file": "tests\\test_phase2_e2e_validation.py",
          "line_count": 1091,
          "size_category": "huge"
        },
        {
          "file": "tests\\test_phase2_integration_validation.py",
          "line_count": 677,
          "size_category": "huge"
        },
        {
          "file": "tests\\integration\\test_knowledge_graph_integration.py",
          "line_count": 440,
          "size_category": "large"
        },
        {
          "file": "tests\\integration\\test_knowledge_graph_simple.py",
          "line_count": 183,
          "size_category": "medium"
        },
        {
          "file": "ui\\nocode_enhancement.py",
          "line_count": 879,
          "size_category": "huge"
        },
        {
          "file": "ui\\unified_dashboard.py",
          "line_count": 1131,
          "size_category": "huge"
        },
        {
          "file": "ui_ux\\agent_verse_ui.py",
          "line_count": 614,
          "size_category": "huge"
        },
        {
          "file": "ui_ux\\interactive_dashboard.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "ui_ux\\studio_interface.py",
          "line_count": 634,
          "size_category": "huge"
        },
        {
          "file": "ui_ux\\__init__.py",
          "line_count": 56,
          "size_category": "small"
        },
        {
          "file": "validation\\phase_validator.py",
          "line_count": 431,
          "size_category": "large"
        },
        {
          "file": "workflow\\consolidation_workflow.py",
          "line_count": 421,
          "size_category": "large"
        }
      ]
    },
    "orchestration": {
      "file_count": 512,
      "total_lines": 300998,
      "scattered_across": 130,
      "directories": [
        "testmaster\\core",
        "core\\intelligence\\documentation\\revolutionary",
        "testmaster\\intelligence\\documentation\\core",
        "ui_ux",
        "core\\intelligence\\integration",
        "testmaster\\async_processing",
        "prioritization",
        "core\\state",
        "observability",
        "archive\\phase1c_consolidation_20250820_150000\\integration",
        "testmaster\\streaming",
        "dashboard\\dashboard_core",
        "core\\intelligence\\visualization",
        "workflow",
        "testmaster\\intelligence\\integration\\coordination",
        "testmaster\\overview",
        "core\\intelligence\\documentation",
        "analysis\\comprehensive_analysis\\ml_analysis",
        "core",
        "tests",
        "testmaster\\intelligence\\integration",
        "testmaster\\intelligence\\documentation\\integrations",
        "archive\\oversized_modules_20250821_042018\\monitoring",
        "core\\intelligence\\testing\\automation",
        "testmaster\\intelligence\\documentation",
        "core\\intelligence\\testing",
        "core\\intelligence\\testing\\security",
        "analysis\\comprehensive_analysis\\workflow_analysis",
        "orchestration",
        "agents\\roles",
        "dashboard\\api",
        "core\\intelligence\\documentation\\enterprise",
        "core\\intelligence\\testing\\ai_generation",
        "core\\security",
        "archive",
        "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components",
        "core\\intelligence",
        "testmaster\\mapping",
        "config",
        "testmaster",
        ".",
        "testmaster\\intelligence\\monitoring",
        "core\\intelligence\\streaming",
        "core\\intelligence\\enterprise\\api",
        "testmaster\\analysis\\comprehensive_analysis",
        "agents\\team",
        "integration",
        "deployment",
        "core\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules",
        "testmaster\\orchestration",
        "testmaster\\orchestrator",
        "api",
        "analysis\\comprehensive_analysis\\business_analysis",
        "core\\intelligence\\security",
        "core\\intelligence\\coordination\\resource_coordination_system_modules",
        "testmaster\\telemetry",
        "core\\intelligence\\knowledge_graph",
        "archive\\phase5_archive\\replaced_code",
        "observability\\replay",
        "testmaster\\intelligence\\integration\\layers",
        "core\\tools",
        "core\\intelligence\\documentation\\intelligence",
        "archive\\placeholder_backups_20250820_011745\\integration",
        "archive\\oversized_modules_20250821_042018\\validation",
        "monitoring",
        "analysis\\comprehensive_analysis\\pattern_mining",
        "testmaster\\intelligence\\integration\\agents",
        "core\\intelligence\\coordination\\unified_workflow_orchestrator_modules",
        "testmaster\\integration",
        "archive\\phase6_archive\\replaced_code",
        "dashboard",
        "archive\\legacy_scripts",
        "archive\\oversized_modules_20250821_042018\\ml\\advanced",
        "analysis\\comprehensive_analysis",
        "archive\\placeholder_backups_20250820_011817\\integration",
        "consolidation",
        "core\\intelligence\\ml\\advanced",
        "testmaster\\reporting",
        "testmaster\\intelligence\\consensus",
        "core\\intelligence\\coordination\\agent_coordination_protocols_modules",
        "core\\intelligence\\compatibility",
        "core\\intelligence\\testing\\enterprise",
        "core\\orchestration",
        "core\\intelligence\\correlation",
        "testmaster\\ui",
        "src",
        "core\\intelligence\\analysis\\business_analyzer_modules",
        "core\\intelligence\\security\\enterprise",
        "testmaster\\monitoring",
        "archive\\20250818",
        "core\\intelligence\\analytics\\realtime",
        "testmaster\\intelligence\\hierarchical_planning",
        "testmaster\\intelligence\\security",
        "ui",
        "testmaster\\generators",
        "archive\\oversized_modules_20250821_042018\\ml\\enterprise",
        "archive\\original_backup",
        "core\\intelligence\\ml",
        "core\\intelligence\\ml\\enterprise",
        "testmaster\\core\\language_detection",
        "core\\intelligence\\api",
        "archive\\oversized_modules_20250821_042018\\analysis",
        "core\\intelligence\\base",
        "tests\\integration",
        "core\\intelligence\\analytics",
        "state",
        "archive\\oversized_modules_20250821_042018\\coordination",
        "core\\intelligence\\orchestration",
        "core\\intelligence\\analysis",
        "archive\\modularization_integration",
        "core\\intelligence\\security\\enterprise\\intelligence",
        "analysis\\comprehensive_analysis\\data_security",
        "core\\intelligence\\enterprise",
        "archive\\COMPLETE_REFACTOR_20250818_112844",
        "core\\intelligence\\coordination",
        "archive\\modularization_20250821",
        "core\\intelligence\\monitoring",
        "testmaster\\intelligence\\optimization",
        "testmaster\\intelligence\\bridges",
        "archive\\original_backup\\src",
        "core\\testing",
        "agents\\supervisor",
        "agents",
        "archive\\oversized_modules_20250821_042018\\documentation\\revolutionary",
        "testmaster\\flow_optimizer",
        "archive\\phase1c_consolidation_20250820_150000",
        "core\\intelligence\\reliability",
        "core\\intelligence\\dashboard",
        "testmaster\\communication",
        "archive\\oversized_modules_20250821_042018\\api"
      ],
      "consolidation_opportunity": true,
      "files": [
        {
          "file": "agent_d_comprehensive_test_executor.py",
          "line_count": 911,
          "size_category": "huge"
        },
        {
          "file": "architecture_centralization_analysis.py",
          "line_count": 509,
          "size_category": "huge"
        },
        {
          "file": "auto_readme_updater.py",
          "line_count": 619,
          "size_category": "huge"
        },
        {
          "file": "comprehensive_codebase_analysis.py",
          "line_count": 332,
          "size_category": "large"
        },
        {
          "file": "comprehensive_feature_audit.py",
          "line_count": 665,
          "size_category": "huge"
        },
        {
          "file": "convert_batch_small.py",
          "line_count": 150,
          "size_category": "medium"
        },
        {
          "file": "DEMONSTRATION_OF_SUPERIORITY.py",
          "line_count": 287,
          "size_category": "medium"
        },
        {
          "file": "enable_deep_integration.py",
          "line_count": 240,
          "size_category": "medium"
        },
        {
          "file": "enable_features.py",
          "line_count": 77,
          "size_category": "small"
        },
        {
          "file": "enhance_auto_generated_tests.py",
          "line_count": 349,
          "size_category": "large"
        },
        {
          "file": "finalize_module_splits.py",
          "line_count": 236,
          "size_category": "medium"
        },
        {
          "file": "final_100_percent_fix.py",
          "line_count": 225,
          "size_category": "medium"
        },
        {
          "file": "final_archive_sweep.py",
          "line_count": 295,
          "size_category": "medium"
        },
        {
          "file": "fix_backend_issues.py",
          "line_count": 323,
          "size_category": "large"
        },
        {
          "file": "fix_dashboard_imports.py",
          "line_count": 91,
          "size_category": "small"
        },
        {
          "file": "fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "fix_to_100_percent.py",
          "line_count": 508,
          "size_category": "huge"
        },
        {
          "file": "IMPLEMENTATION_STATUS_CHECK.py",
          "line_count": 254,
          "size_category": "medium"
        },
        {
          "file": "integration_test_generator.py",
          "line_count": 572,
          "size_category": "huge"
        },
        {
          "file": "intelligent_test_builder.py",
          "line_count": 359,
          "size_category": "large"
        },
        {
          "file": "intelligent_test_builder_v2.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "layer3_integration_example.py",
          "line_count": 522,
          "size_category": "huge"
        },
        {
          "file": "llm_analysis_monitor.py",
          "line_count": 729,
          "size_category": "huge"
        },
        {
          "file": "phase7_validation.py",
          "line_count": 364,
          "size_category": "large"
        },
        {
          "file": "real_time_monitor.py",
          "line_count": 563,
          "size_category": "huge"
        },
        {
          "file": "refine_misc_tests.py",
          "line_count": 189,
          "size_category": "medium"
        },
        {
          "file": "restored_asyncio_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_asyncio_6.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "restored_json_5.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "restored_json_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_logging_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_logging_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_os_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_random_6.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "restored_sys_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_threading_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_threading_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_time_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_time_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_uuid_5.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "restored_uuid_6.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "restore_archive_robust.py",
          "line_count": 1537,
          "size_category": "huge"
        },
        {
          "file": "restore_real_implementations.py",
          "line_count": 163,
          "size_category": "medium"
        },
        {
          "file": "restore_robust_implementations.py",
          "line_count": 175,
          "size_category": "medium"
        },
        {
          "file": "run_integration_test.py",
          "line_count": 185,
          "size_category": "medium"
        },
        {
          "file": "simple_integration_test.py",
          "line_count": 100,
          "size_category": "small"
        },
        {
          "file": "simple_web_monitor.py",
          "line_count": 191,
          "size_category": "medium"
        },
        {
          "file": "specialized_test_generators.py",
          "line_count": 816,
          "size_category": "huge"
        },
        {
          "file": "split_massive_test_file.py",
          "line_count": 225,
          "size_category": "medium"
        },
        {
          "file": "split_oversized_modules.py",
          "line_count": 278,
          "size_category": "medium"
        },
        {
          "file": "start_monitoring.py",
          "line_count": 264,
          "size_category": "medium"
        },
        {
          "file": "testmaster_orchestrator.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "test_advanced_telemetry_system.py",
          "line_count": 506,
          "size_category": "huge"
        },
        {
          "file": "test_after_refactor.py",
          "line_count": 255,
          "size_category": "medium"
        },
        {
          "file": "test_agent_qa_system.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "test_api_functionality.py",
          "line_count": 223,
          "size_category": "medium"
        },
        {
          "file": "test_backend_health.py",
          "line_count": 419,
          "size_category": "large"
        },
        {
          "file": "test_before_refactor.py",
          "line_count": 331,
          "size_category": "large"
        },
        {
          "file": "test_config_intelligence.py",
          "line_count": 133,
          "size_category": "small"
        },
        {
          "file": "test_enhanced_core_integration.py",
          "line_count": 324,
          "size_category": "large"
        },
        {
          "file": "test_enhanced_server.py",
          "line_count": 76,
          "size_category": "small"
        },
        {
          "file": "test_enhancements.py",
          "line_count": 397,
          "size_category": "large"
        },
        {
          "file": "test_exhaustive_features.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "test_final_integration.py",
          "line_count": 204,
          "size_category": "medium"
        },
        {
          "file": "test_flow_optimizer_system.py",
          "line_count": 609,
          "size_category": "huge"
        },
        {
          "file": "test_graph_workflow_integration.py",
          "line_count": 400,
          "size_category": "large"
        },
        {
          "file": "test_hierarchical_planning_complete.py",
          "line_count": 200,
          "size_category": "medium"
        },
        {
          "file": "test_integration_restoration.py",
          "line_count": 291,
          "size_category": "medium"
        },
        {
          "file": "test_performance_dashboard_integration.py",
          "line_count": 309,
          "size_category": "large"
        },
        {
          "file": "test_phase1_integration.py",
          "line_count": 274,
          "size_category": "medium"
        },
        {
          "file": "test_phase1_simple.py",
          "line_count": 103,
          "size_category": "small"
        },
        {
          "file": "test_phase2_exhaustive_validation.py",
          "line_count": 249,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_final_validation.py",
          "line_count": 271,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_integration.py",
          "line_count": 255,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_quick_validation.py",
          "line_count": 222,
          "size_category": "medium"
        },
        {
          "file": "test_phase2_simple_validation.py",
          "line_count": 172,
          "size_category": "medium"
        },
        {
          "file": "test_phase3_complete.py",
          "line_count": 347,
          "size_category": "large"
        },
        {
          "file": "test_phase3_deployment.py",
          "line_count": 191,
          "size_category": "medium"
        },
        {
          "file": "test_phase3_ui.py",
          "line_count": 190,
          "size_category": "medium"
        },
        {
          "file": "test_reporting_system.py",
          "line_count": 423,
          "size_category": "large"
        },
        {
          "file": "test_security_full_integration.py",
          "line_count": 530,
          "size_category": "huge"
        },
        {
          "file": "test_security_integration_validation.py",
          "line_count": 329,
          "size_category": "large"
        },
        {
          "file": "test_streaming_generation.py",
          "line_count": 432,
          "size_category": "large"
        },
        {
          "file": "test_unified_integration.py",
          "line_count": 249,
          "size_category": "medium"
        },
        {
          "file": "unified_orchestration_example.py",
          "line_count": 407,
          "size_category": "large"
        },
        {
          "file": "unified_security_scanner.py",
          "line_count": 1124,
          "size_category": "huge"
        },
        {
          "file": "utility_analysis_report.py",
          "line_count": 405,
          "size_category": "large"
        },
        {
          "file": "validate_dashboard_core.py",
          "line_count": 156,
          "size_category": "medium"
        },
        {
          "file": "validate_newton_destroyer.py",
          "line_count": 112,
          "size_category": "small"
        },
        {
          "file": "web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "agents\\__init__.py",
          "line_count": 48,
          "size_category": "tiny"
        },
        {
          "file": "agents\\roles\\base_role.py",
          "line_count": 373,
          "size_category": "large"
        },
        {
          "file": "agents\\roles\\test_architect.py",
          "line_count": 945,
          "size_category": "huge"
        },
        {
          "file": "agents\\roles\\test_coordinator.py",
          "line_count": 36,
          "size_category": "tiny"
        },
        {
          "file": "agents\\roles\\__init__.py",
          "line_count": 28,
          "size_category": "tiny"
        },
        {
          "file": "agents\\supervisor\\testing_supervisor.py",
          "line_count": 492,
          "size_category": "large"
        },
        {
          "file": "agents\\supervisor\\__init__.py",
          "line_count": 23,
          "size_category": "tiny"
        },
        {
          "file": "agents\\team\\testing_team.py",
          "line_count": 429,
          "size_category": "large"
        },
        {
          "file": "agents\\team\\__init__.py",
          "line_count": 25,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\__init__.py",
          "line_count": 64,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\business_analysis\\business_rule_analysis_wrapper.py",
          "line_count": 70,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\business_analysis\\business_workflow_analyzer.py",
          "line_count": 84,
          "size_category": "small"
        },
        {
          "file": "analysis\\comprehensive_analysis\\business_analysis\\__init__.py",
          "line_count": 17,
          "size_category": "tiny"
        },
        {
          "file": "analysis\\comprehensive_analysis\\data_security\\data_leakage_detector.py",
          "line_count": 795,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\ml_analysis\\ml_core_analyzer.py",
          "line_count": 397,
          "size_category": "large"
        },
        {
          "file": "analysis\\comprehensive_analysis\\pattern_mining\\cross_repo_pattern_miner.py",
          "line_count": 1142,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\workflow_analysis\\workflow_pattern_detector.py",
          "line_count": 1118,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\workflow_analysis\\__init__.py",
          "line_count": 9,
          "size_category": "tiny"
        },
        {
          "file": "api\\orchestration_api.py",
          "line_count": 447,
          "size_category": "large"
        },
        {
          "file": "api\\orchestration_flask.py",
          "line_count": 475,
          "size_category": "large"
        },
        {
          "file": "api\\phase2_api.py",
          "line_count": 531,
          "size_category": "huge"
        },
        {
          "file": "api\\phase3_api.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_business_rule_analysis_original.py",
          "line_count": 1213,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_semantic_analysis_original.py",
          "line_count": 1244,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_technical_debt_analysis_original.py",
          "line_count": 1301,
          "size_category": "huge"
        },
        {
          "file": "archive\\integration_hub_original_20250820_220939.py",
          "line_count": 1877,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_technical_debt_analysis.py",
          "line_count": 1301,
          "size_category": "huge"
        },
        {
          "file": "archive\\20250818\\web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "line_count": 789,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_aggregator.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
          "line_count": 749,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
          "line_count": 448,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "line_count": 1142,
          "size_category": "huge"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\convert_batch_small.py",
          "line_count": 150,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\enhance_auto_generated_tests.py",
          "line_count": 349,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\integration_test_generator.py",
          "line_count": 572,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\integration_test_matrix.py",
          "line_count": 1159,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\intelligent_test_builder.py",
          "line_count": 359,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\intelligent_test_builder_v2.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "archive\\legacy_scripts\\specialized_test_generators.py",
          "line_count": 816,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\testmaster_orchestrator.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\business_analyzer_original.py",
          "line_count": 1266,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "line_count": 1547,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "line_count": 953,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "line_count": 1877,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\convert_batch_small.py",
          "line_count": 150,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\enhance_auto_generated_tests.py",
          "line_count": 349,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\fix_import_paths.py",
          "line_count": 166,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\integration_test_generator.py",
          "line_count": 572,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\intelligent_test_builder.py",
          "line_count": 359,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\intelligent_test_builder_v2.py",
          "line_count": 273,
          "size_category": "medium"
        },
        {
          "file": "archive\\original_backup\\specialized_test_generators.py",
          "line_count": 816,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\testmaster_orchestrator.py",
          "line_count": 567,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\src\\integration_test_matrix.py",
          "line_count": 1159,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
          "line_count": 1266,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
          "line_count": 1547,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\api\\enterprise_integration_layer.py",
          "line_count": 1160,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "line_count": 1151,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\coordination\\agent_coordination_protocols.py",
          "line_count": 1311,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\coordination\\resource_coordination_system.py",
          "line_count": 1030,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\coordination\\unified_workflow_orchestrator.py",
          "line_count": 1355,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\documentation\\revolutionary\\neo4j_dominator.py",
          "line_count": 1158,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
          "line_count": 1294,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\advanced\\integrity_ml_guardian.py",
          "line_count": 1444,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\ml\\enterprise\\ml_infrastructure_orchestrator.py",
          "line_count": 1117,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\monitoring\\performance_optimization_engine.py",
          "line_count": 1124,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\validation\\integration_test_suite.py",
          "line_count": 1062,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\validation\\system_validation_framework.py",
          "line_count": 1295,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
          "line_count": 715,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "line_count": 618,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
          "line_count": 610,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
          "line_count": 1051,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "line_count": 1201,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "line_count": 618,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
          "line_count": 1287,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
          "line_count": 1302,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
          "line_count": 768,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
          "line_count": 991,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase5_archive\\replaced_code\\agent_graph_20250819_195602.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "archive\\phase5_archive\\replaced_code\\enterprise_deployment_20250819_195602.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase5_archive\\replaced_code\\testing_team_20250819_195602.py",
          "line_count": 429,
          "size_category": "large"
        },
        {
          "file": "archive\\phase6_archive\\replaced_code\\agent_graph_20250819_200928.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
          "line_count": 991,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
          "line_count": 991,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "config\\yaml_config_enhancer.py",
          "line_count": 633,
          "size_category": "huge"
        },
        {
          "file": "consolidation\\feature_discovery.py",
          "line_count": 364,
          "size_category": "large"
        },
        {
          "file": "core\\async_state_manager.py",
          "line_count": 746,
          "size_category": "huge"
        },
        {
          "file": "core\\feature_flags.py",
          "line_count": 438,
          "size_category": "large"
        },
        {
          "file": "core\\shared_state.py",
          "line_count": 610,
          "size_category": "huge"
        },
        {
          "file": "core\\__init__.py",
          "line_count": 116,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\orchestrator.py",
          "line_count": 390,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\business_analyzer_modular.py",
          "line_count": 343,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\business_base.py",
          "line_count": 251,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\business_workflow_analyzer.py",
          "line_count": 351,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\debt_analyzer_modular.py",
          "line_count": 282,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_analyzer.py",
          "line_count": 953,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_analyzer_modular.py",
          "line_count": 259,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_base.py",
          "line_count": 252,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_intent_analyzer.py",
          "line_count": 327,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analysis\\technical_debt_analyzer.py",
          "line_count": 574,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py",
          "line_count": 477,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\analytics\\predictive_analytics_engine.py",
          "line_count": 652,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analytics\\realtime\\streaming_analytics.py",
          "line_count": 453,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\api\\intelligence_api.py",
          "line_count": 100,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\api\\intelligence_endpoints.py",
          "line_count": 393,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\api\\unified_api_gateway.py",
          "line_count": 926,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\api\\unified_intelligence_api.py",
          "line_count": 453,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\base\\__init__.py",
          "line_count": 571,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\compatibility\\__init__.py",
          "line_count": 600,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\coordination\\agent_coordination_protocols.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\coordination\\cross_agent_bridge.py",
          "line_count": 907,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\coordination\\distributed_lock_manager.py",
          "line_count": 829,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\coordination\\resource_coordination_system.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\coordination\\unified_workflow_orchestrator.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\coordination\\agent_coordination_protocols_modules\\agent_coordination_protocols_core.py",
          "line_count": 10,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\coordination\\agent_coordination_protocols_modules\\__init__.py",
          "line_count": 10,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\coordination\\resource_coordination_system_modules\\resource_coordination_system_core.py",
          "line_count": 10,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\coordination\\resource_coordination_system_modules\\__init__.py",
          "line_count": 10,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\coordination\\unified_workflow_orchestrator_modules\\unified_workflow_orchestrator_core.py",
          "line_count": 10,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\coordination\\unified_workflow_orchestrator_modules\\__init__.py",
          "line_count": 10,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\correlation\\cross_system_analytics.py",
          "line_count": 645,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\dashboard\\intelligence_backend.py",
          "line_count": 412,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\api_validation_framework.py",
          "line_count": 750,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\comprehensive_visualization_engine.py",
          "line_count": 828,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\cookbook_organization_manager.py",
          "line_count": 648,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\cross_framework_integration.py",
          "line_count": 602,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\design_first_docs.py",
          "line_count": 739,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\docs_api.py",
          "line_count": 353,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\doc_orchestrator.py",
          "line_count": 341,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence_integration.py",
          "line_count": 653,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligent_content_orchestrator.py",
          "line_count": 659,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\interactive_docs_system.py",
          "line_count": 739,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\knowledge_management_framework.py",
          "line_count": 1022,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\legacy_integration_framework.py",
          "line_count": 875,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\master_documentation_orchestrator.py",
          "line_count": 912,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\multimodal_recipe_engine.py",
          "line_count": 701,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\multi_agent_pattern_docs.py",
          "line_count": 727,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\phase_1_7_integration.py",
          "line_count": 351,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\production_ready_docs.py",
          "line_count": 886,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\quality_assessment_engine.py",
          "line_count": 552,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\recipe_based_learning.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\service_oriented_arch_docs.py",
          "line_count": 768,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\swarms_doc_intelligence_extractor.py",
          "line_count": 258,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\documentation\\tutorial_grid_system.py",
          "line_count": 729,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\unified_doc_generator.py",
          "line_count": 568,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\ux_excellence_framework.py",
          "line_count": 1044,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\workflow_recipe_docs.py",
          "line_count": 796,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\yaml_config_processor.py",
          "line_count": 634,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise\\documentation_intelligence.py",
          "line_count": 451,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise\\documentation_validator.py",
          "line_count": 249,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise\\enterprise_doc_orchestrator.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\enterprise\\workflow_automation.py",
          "line_count": 562,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\optimizer.py",
          "line_count": 619,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\intelligence\\project_coordinator.py",
          "line_count": 587,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\interactive_chat_interface.py",
          "line_count": 483,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\enterprise\\api_orchestrator.py",
          "line_count": 577,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\integration_validator.py",
          "line_count": 234,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\enterprise\\reporting_engine.py",
          "line_count": 635,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\api\\endpoint_manager.py",
          "line_count": 652,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\api\\request_router.py",
          "line_count": 580,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\enterprise\\api\\service_registry.py",
          "line_count": 467,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\enterprise\\api\\__init__.py",
          "line_count": 23,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\integration\\__init__.py",
          "line_count": 563,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\ai_code_explorer.py",
          "line_count": 430,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\code_knowledge_graph_engine.py",
          "line_count": 369,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\integration_analysis.py",
          "line_count": 474,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\ml_orchestrator.py",
          "line_count": 701,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\distributed_ml_coordinator.py",
          "line_count": 779,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\performance_execution_manager.py",
          "line_count": 415,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\performance_ml_engine.py",
          "line_count": 913,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\telemetry_export_manager.py",
          "line_count": 604,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\telemetry_ml_collector.py",
          "line_count": 539,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\telemetry_observability_engine.py",
          "line_count": 633,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\watchdog_ml_monitor.py",
          "line_count": 546,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\watchdog_process_manager.py",
          "line_count": 646,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\watchdog_recovery_system.py",
          "line_count": 642,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\enterprise\\ml_auto_scaling.py",
          "line_count": 876,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator.py",
          "line_count": 27,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
          "line_count": 756,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\__init__.py",
          "line_count": 12,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\monitoring\\agent_qa_modular.py",
          "line_count": 243,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\orchestration\\agent_coordinator.py",
          "line_count": 527,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\orchestration\\cross_system_orchestrator.py",
          "line_count": 982,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\orchestration\\integration_hub.py",
          "line_count": 711,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\orchestration\\workflow_orchestration_engine.py",
          "line_count": 801,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\reliability\\enterprise_error_recovery.py",
          "line_count": 890,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\reliability\\quantum_retry_orchestrator.py",
          "line_count": 472,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\reliability\\__init__.py",
          "line_count": 29,
          "size_category": "tiny"
        },
        {
          "file": "core\\intelligence\\security\\audit_logger.py",
          "line_count": 266,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\security_compliance_validator.py",
          "line_count": 704,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\threat_intelligence_engine.py",
          "line_count": 550,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\ultimate_security_orchestrator.py",
          "line_count": 529,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\unified_security_service.py",
          "line_count": 270,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\compliance_automation.py",
          "line_count": 470,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\enterprise_security_monitor.py",
          "line_count": 400,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\governance_framework.py",
          "line_count": 548,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\security_intelligence.py",
          "line_count": 599,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\security_validator.py",
          "line_count": 443,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\intelligence\\incident_responder.py",
          "line_count": 648,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\intelligence\\threat_detector.py",
          "line_count": 806,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\streaming\\event_streaming_engine.py",
          "line_count": 815,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\testing_api.py",
          "line_count": 481,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\test_orchestrator.py",
          "line_count": 391,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\__init__.py",
          "line_count": 457,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\claude_test_generator.py",
          "line_count": 459,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
          "line_count": 543,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\universal_ai_generator.py",
          "line_count": 472,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\automation\\enterprise_test_orchestrator.py",
          "line_count": 727,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\automation\\__init__.py",
          "line_count": 72,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\testing\\enterprise\\quality_gate_automation.py",
          "line_count": 742,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\security\\compliance_validator.py",
          "line_count": 663,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\visualization\\agent_interface_systems.py",
          "line_count": 394,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\dashboard_systems.py",
          "line_count": 377,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\development_tools_ui.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\interactive_visualizations.py",
          "line_count": 395,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\realtime_ui_components.py",
          "line_count": 479,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\user_experience_frameworks.py",
          "line_count": 491,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\visualization\\__init__.py",
          "line_count": 222,
          "size_category": "medium"
        },
        {
          "file": "core\\orchestration\\agent_graph.py",
          "line_count": 501,
          "size_category": "huge"
        },
        {
          "file": "core\\orchestration\\enhanced_agent_orchestrator.py",
          "line_count": 755,
          "size_category": "huge"
        },
        {
          "file": "core\\orchestration\\__init__.py",
          "line_count": 24,
          "size_category": "tiny"
        },
        {
          "file": "core\\security\\adaptive_fallback_orchestrator.py",
          "line_count": 677,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\adaptive_security_resilience.py",
          "line_count": 748,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\byzantine_consensus_security.py",
          "line_count": 637,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\container_security_validator.py",
          "line_count": 628,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\distributed_coordination_security.py",
          "line_count": 777,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\multi_agent_access_control.py",
          "line_count": 801,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\resilience_orchestrator.py",
          "line_count": 681,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\self_healing_coordinator.py",
          "line_count": 698,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\__init__.py",
          "line_count": 596,
          "size_category": "huge"
        },
        {
          "file": "core\\state\\enhanced_state_manager.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\competitive_analysis_framework.py",
          "line_count": 455,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\distributed_test_coordinator.py",
          "line_count": 994,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\integration_test_framework.py",
          "line_count": 489,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\langgraph_supervisor_testing.py",
          "line_count": 693,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\repository_intelligence_aggregator.py",
          "line_count": 970,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\run_all_tests.py",
          "line_count": 389,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\session_testing.py",
          "line_count": 877,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\testmaster_api_gateway.py",
          "line_count": 1318,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\test_integration_hub.py",
          "line_count": 601,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\test_intelligence_orchestrator.py",
          "line_count": 328,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\unified_test_orchestrator.py",
          "line_count": 489,
          "size_category": "large"
        },
        {
          "file": "core\\tools\\type_safe_tools.py",
          "line_count": 471,
          "size_category": "large"
        },
        {
          "file": "dashboard\\automated_frontend_simulator.py",
          "line_count": 376,
          "size_category": "large"
        },
        {
          "file": "dashboard\\comprehensive_frontend_test.py",
          "line_count": 285,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\comprehensive_frontend_validator.py",
          "line_count": 552,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\debug_blueprints.py",
          "line_count": 60,
          "size_category": "small"
        },
        {
          "file": "dashboard\\discover_backend_features.py",
          "line_count": 215,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\integration_gap_analysis.py",
          "line_count": 307,
          "size_category": "large"
        },
        {
          "file": "dashboard\\quick_integration_test.py",
          "line_count": 202,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\quick_validation.py",
          "line_count": 74,
          "size_category": "small"
        },
        {
          "file": "dashboard\\server.py",
          "line_count": 548,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\test_all_features.py",
          "line_count": 300,
          "size_category": "large"
        },
        {
          "file": "dashboard\\test_api_endpoints.py",
          "line_count": 224,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\test_frontend_automated.py",
          "line_count": 339,
          "size_category": "large"
        },
        {
          "file": "dashboard\\test_frontend_integration.py",
          "line_count": 772,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\test_multi_agent_integration.py",
          "line_count": 961,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\test_new_visualization_apis.py",
          "line_count": 132,
          "size_category": "small"
        },
        {
          "file": "dashboard\\ultimate_frontend_validator.py",
          "line_count": 845,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\validate_all_endpoints.py",
          "line_count": 226,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\api\\analytics.py",
          "line_count": 789,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\backend_health_monitor.py",
          "line_count": 659,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\crew_orchestration.py",
          "line_count": 812,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\enhanced_analytics.py",
          "line_count": 587,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\enhanced_telemetry.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\flow_optimization.py",
          "line_count": 662,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\intelligence.py",
          "line_count": 533,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\intelligence_integration.py",
          "line_count": 478,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\observability.py",
          "line_count": 522,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\orchestration_flask.py",
          "line_count": 475,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\phase2_api.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\production_deployment.py",
          "line_count": 499,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\swarm_orchestration.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\websocket_dashboard.py",
          "line_count": 547,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\workflow.py",
          "line_count": 354,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_aggregator.py",
          "line_count": 434,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_pipeline.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_recovery_orchestrator.py",
          "line_count": 749,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_streaming.py",
          "line_count": 448,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\data_store.py",
          "line_count": 506,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\metrics_feed.py",
          "line_count": 360,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\real_data_extractor.py",
          "line_count": 569,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\system_observability_metrics.py",
          "line_count": 840,
          "size_category": "huge"
        },
        {
          "file": "deployment\\enterprise_deployment.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "deployment\\swarm_orchestrator.py",
          "line_count": 713,
          "size_category": "huge"
        },
        {
          "file": "deployment\\__init__.py",
          "line_count": 52,
          "size_category": "small"
        },
        {
          "file": "integration\\automatic_scaling_system.py",
          "line_count": 1092,
          "size_category": "huge"
        },
        {
          "file": "integration\\automatic_scaling_system_robust.py",
          "line_count": 1051,
          "size_category": "huge"
        },
        {
          "file": "integration\\comprehensive_error_recovery.py",
          "line_count": 1280,
          "size_category": "huge"
        },
        {
          "file": "integration\\comprehensive_error_recovery_robust.py",
          "line_count": 1201,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_analytics.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_analytics_robust.py",
          "line_count": 933,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_apis.py",
          "line_count": 618,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_apis_robust.py",
          "line_count": 618,
          "size_category": "huge"
        },
        {
          "file": "integration\\cross_system_communication.py",
          "line_count": 327,
          "size_category": "large"
        },
        {
          "file": "integration\\intelligent_caching_layer.py",
          "line_count": 1334,
          "size_category": "huge"
        },
        {
          "file": "integration\\intelligent_caching_layer_robust.py",
          "line_count": 1287,
          "size_category": "huge"
        },
        {
          "file": "integration\\predictive_analytics_engine.py",
          "line_count": 1142,
          "size_category": "huge"
        },
        {
          "file": "integration\\predictive_analytics_engine_robust.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "integration\\realtime_performance_monitoring.py",
          "line_count": 1427,
          "size_category": "huge"
        },
        {
          "file": "integration\\realtime_performance_monitoring_robust.py",
          "line_count": 1302,
          "size_category": "huge"
        },
        {
          "file": "integration\\visual_workflow_designer.py",
          "line_count": 768,
          "size_category": "huge"
        },
        {
          "file": "integration\\workflow_execution_engine.py",
          "line_count": 991,
          "size_category": "huge"
        },
        {
          "file": "integration\\workflow_execution_engine_robust.py",
          "line_count": 991,
          "size_category": "huge"
        },
        {
          "file": "integration\\workflow_framework.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "monitoring\\monitoring_agents.py",
          "line_count": 665,
          "size_category": "huge"
        },
        {
          "file": "observability\\unified_observability.py",
          "line_count": 455,
          "size_category": "large"
        },
        {
          "file": "observability\\replay\\__init__.py",
          "line_count": 38,
          "size_category": "tiny"
        },
        {
          "file": "orchestration\\swarm_router_enhancement.py",
          "line_count": 764,
          "size_category": "huge"
        },
        {
          "file": "orchestration\\unified_orchestrator.py",
          "line_count": 1279,
          "size_category": "huge"
        },
        {
          "file": "prioritization\\test_prioritizer.py",
          "line_count": 767,
          "size_category": "huge"
        },
        {
          "file": "src\\integration_test_matrix.py",
          "line_count": 1159,
          "size_category": "huge"
        },
        {
          "file": "state\\unified_state_manager.py",
          "line_count": 985,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\layer2_integration.py",
          "line_count": 519,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\main.py",
          "line_count": 377,
          "size_category": "large"
        },
        {
          "file": "testmaster\\__init__.py",
          "line_count": 68,
          "size_category": "small"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\main_analyzer.py",
          "line_count": 540,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\__init__.py",
          "line_count": 59,
          "size_category": "small"
        },
        {
          "file": "testmaster\\async_processing\\async_executor.py",
          "line_count": 584,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\async_processing\\async_monitor.py",
          "line_count": 686,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\async_processing\\concurrent_scheduler.py",
          "line_count": 621,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\async_processing\\thread_pool_manager.py",
          "line_count": 637,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\communication\\__init__.py",
          "line_count": 29,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\core\\config.py",
          "line_count": 606,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\context_manager.py",
          "line_count": 555,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\feature_flags.py",
          "line_count": 406,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\layer_manager.py",
          "line_count": 663,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\orchestrator.py",
          "line_count": 470,
          "size_category": "large"
        },
        {
          "file": "testmaster\\core\\tracking_manager.py",
          "line_count": 737,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\workflow_graph.py",
          "line_count": 617,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\language_detection\\universal_detector.py",
          "line_count": 830,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\flow_optimizer\\dependency_resolver.py",
          "line_count": 395,
          "size_category": "large"
        },
        {
          "file": "testmaster\\flow_optimizer\\execution_router.py",
          "line_count": 372,
          "size_category": "large"
        },
        {
          "file": "testmaster\\flow_optimizer\\flow_analyzer.py",
          "line_count": 373,
          "size_category": "large"
        },
        {
          "file": "testmaster\\flow_optimizer\\parallel_executor.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "testmaster\\flow_optimizer\\resource_optimizer.py",
          "line_count": 418,
          "size_category": "large"
        },
        {
          "file": "testmaster\\flow_optimizer\\__init__.py",
          "line_count": 251,
          "size_category": "medium"
        },
        {
          "file": "testmaster\\generators\\base.py",
          "line_count": 706,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\integration\\final_integration_test.py",
          "line_count": 1865,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\context_variables_bridge.py",
          "line_count": 1144,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\event_monitoring_bridge.py",
          "line_count": 1082,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\protocol_communication_bridge.py",
          "line_count": 822,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\session_tracking_bridge.py",
          "line_count": 1111,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\sop_workflow_bridge.py",
          "line_count": 964,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\__init__.py",
          "line_count": 116,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\consensus\\agent_coordination.py",
          "line_count": 514,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\consensus\\consensus_engine.py",
          "line_count": 427,
          "size_category": "large"
        },
        {
          "file": "testmaster\\intelligence\\consensus\\__init__.py",
          "line_count": 29,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\__init__.py",
          "line_count": 119,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\doc_generator.py",
          "line_count": 557,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\llm_integration.py",
          "line_count": 630,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\quality_assessor.py",
          "line_count": 705,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\core\\__init__.py",
          "line_count": 23,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\integrations\\ci_cd_integration.py",
          "line_count": 522,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\hierarchical_planning\\unified_integration.py",
          "line_count": 524,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\hierarchical_planning\\__init__.py",
          "line_count": 128,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\integration\\__init__.py",
          "line_count": 106,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\integration\\agents\\documentation_agent.py",
          "line_count": 650,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\agents\\__init__.py",
          "line_count": 12,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\integration\\coordination\\analysis_coordinator.py",
          "line_count": 740,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\coordination\\__init__.py",
          "line_count": 12,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\intelligence\\integration\\layers\\layer_manager.py",
          "line_count": 663,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\adaptive_resource_bridge.py",
          "line_count": 581,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
          "line_count": 1147,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\bottleneck_detection_resolution_agent.py",
          "line_count": 1102,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
          "line_count": 900,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\monitoring\\__init__.py",
          "line_count": 79,
          "size_category": "small"
        },
        {
          "file": "testmaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
          "line_count": 1162,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\security\\security_intelligence_agent.py",
          "line_count": 935,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\mapping\\dependency_tracker.py",
          "line_count": 479,
          "size_category": "large"
        },
        {
          "file": "testmaster\\monitoring\\test_monitor.py",
          "line_count": 519,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestration\\output_system.py",
          "line_count": 826,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestration\\universal_orchestrator.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestration\\__init__.py",
          "line_count": 54,
          "size_category": "small"
        },
        {
          "file": "testmaster\\orchestrator\\file_tagger.py",
          "line_count": 1030,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\investigator.py",
          "line_count": 1123,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\work_distributor.py",
          "line_count": 796,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\orchestrator\\__init__.py",
          "line_count": 35,
          "size_category": "tiny"
        },
        {
          "file": "testmaster\\overview\\coverage_intelligence.py",
          "line_count": 1071,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\performance_dashboard.py",
          "line_count": 686,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\regression_tracker.py",
          "line_count": 1375,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\structure_mapper.py",
          "line_count": 1112,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\reporting\\dashboard_builder.py",
          "line_count": 86,
          "size_category": "small"
        },
        {
          "file": "testmaster\\reporting\\data_collector.py",
          "line_count": 112,
          "size_category": "small"
        },
        {
          "file": "testmaster\\reporting\\metrics_analyzer.py",
          "line_count": 100,
          "size_category": "small"
        },
        {
          "file": "testmaster\\reporting\\report_generator.py",
          "line_count": 922,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\reporting\\report_scheduler.py",
          "line_count": 85,
          "size_category": "small"
        },
        {
          "file": "testmaster\\reporting\\__init__.py",
          "line_count": 140,
          "size_category": "small"
        },
        {
          "file": "testmaster\\streaming\\incremental_enhancer.py",
          "line_count": 562,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\streaming\\live_feedback.py",
          "line_count": 504,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\streaming\\stream_generator.py",
          "line_count": 593,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\telemetry\\flow_analyzer.py",
          "line_count": 640,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\telemetry\\performance_monitor.py",
          "line_count": 554,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\telemetry\\system_profiler.py",
          "line_count": 599,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\telemetry\\telemetry_collector.py",
          "line_count": 421,
          "size_category": "large"
        },
        {
          "file": "testmaster\\telemetry\\telemetry_dashboard.py",
          "line_count": 624,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\ui\\__init__.py",
          "line_count": 29,
          "size_category": "tiny"
        },
        {
          "file": "tests\\test_phase2_core_validation.py",
          "line_count": 569,
          "size_category": "huge"
        },
        {
          "file": "tests\\test_phase2_e2e_validation.py",
          "line_count": 1091,
          "size_category": "huge"
        },
        {
          "file": "tests\\test_phase2_integration_validation.py",
          "line_count": 677,
          "size_category": "huge"
        },
        {
          "file": "tests\\integration\\test_knowledge_graph_integration.py",
          "line_count": 440,
          "size_category": "large"
        },
        {
          "file": "tests\\integration\\test_knowledge_graph_simple.py",
          "line_count": 183,
          "size_category": "medium"
        },
        {
          "file": "ui\\unified_dashboard.py",
          "line_count": 1131,
          "size_category": "huge"
        },
        {
          "file": "ui_ux\\agent_verse_ui.py",
          "line_count": 614,
          "size_category": "huge"
        },
        {
          "file": "ui_ux\\studio_interface.py",
          "line_count": 634,
          "size_category": "huge"
        },
        {
          "file": "ui_ux\\__init__.py",
          "line_count": 56,
          "size_category": "small"
        },
        {
          "file": "workflow\\consolidation_workflow.py",
          "line_count": 421,
          "size_category": "large"
        }
      ]
    },
    "api": {
      "file_count": 68,
      "total_lines": 42294,
      "scattered_across": 19,
      "directories": [
        "core\\intelligence\\ml\\enterprise",
        "core\\intelligence\\api",
        "dashboard\\dashboard_core",
        "archive\\phase6_archive\\replaced_code",
        "testmaster\\overview",
        "core\\intelligence\\documentation",
        "dashboard",
        "tests",
        "consolidation",
        "api",
        "core\\intelligence\\testing",
        "core\\intelligence\\security",
        ".",
        "archive\\COMPLETE_REFACTOR_20250818_112844",
        "dashboard\\api",
        "scripts",
        "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components",
        "archive\\20250818",
        "archive\\oversized_modules_20250821_042018\\api"
      ],
      "consolidation_opportunity": true,
      "files": [
        {
          "file": "comprehensive_codebase_analysis.py",
          "line_count": 332,
          "size_category": "large"
        },
        {
          "file": "enhanced_security_dashboard_api.py",
          "line_count": 701,
          "size_category": "huge"
        },
        {
          "file": "restored_json_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_logging_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_os_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_sys_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_threading_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "restored_time_6.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "simple_web_monitor.py",
          "line_count": 191,
          "size_category": "medium"
        },
        {
          "file": "test_enhanced_server.py",
          "line_count": 76,
          "size_category": "small"
        },
        {
          "file": "test_universal_language_detector.py",
          "line_count": 693,
          "size_category": "huge"
        },
        {
          "file": "unified_orchestration_example.py",
          "line_count": 407,
          "size_category": "large"
        },
        {
          "file": "web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "api\\orchestration_flask.py",
          "line_count": 475,
          "size_category": "large"
        },
        {
          "file": "api\\phase2_api.py",
          "line_count": 531,
          "size_category": "huge"
        },
        {
          "file": "api\\phase3_api.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "archive\\20250818\\web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
          "line_count": 789,
          "size_category": "huge"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "line_count": 1151,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "consolidation\\feature_discovery.py",
          "line_count": 364,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\api\\endpoints.py",
          "line_count": 583,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\api\\intelligence_api.py",
          "line_count": 100,
          "size_category": "small"
        },
        {
          "file": "core\\intelligence\\api\\intelligence_endpoints.py",
          "line_count": 393,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\api\\security_blueprint.py",
          "line_count": 170,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\api\\unified_intelligence_api.py",
          "line_count": 453,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\documentation\\docs_api.py",
          "line_count": 353,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
          "line_count": 756,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\security_api.py",
          "line_count": 445,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\threat_modeler.py",
          "line_count": 424,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\testing_api.py",
          "line_count": 481,
          "size_category": "large"
        },
        {
          "file": "dashboard\\server.py",
          "line_count": 548,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\wsgi.py",
          "line_count": 89,
          "size_category": "small"
        },
        {
          "file": "dashboard\\api\\analytics.py",
          "line_count": 789,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\async_processing.py",
          "line_count": 606,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\backend_health_monitor.py",
          "line_count": 659,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\comprehensive_monitoring.py",
          "line_count": 665,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\coverage.py",
          "line_count": 583,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\crew_orchestration.py",
          "line_count": 812,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\enhanced_analytics.py",
          "line_count": 587,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\enhanced_telemetry.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\flow_optimization.py",
          "line_count": 662,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\frontend_data_contracts.py",
          "line_count": 390,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\health.py",
          "line_count": 760,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\intelligence.py",
          "line_count": 533,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\intelligence_integration.py",
          "line_count": 478,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\knowledge_graph.py",
          "line_count": 454,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\llm.py",
          "line_count": 405,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\monitoring.py",
          "line_count": 366,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\observability.py",
          "line_count": 522,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\orchestration_flask.py",
          "line_count": 475,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\performance.py",
          "line_count": 583,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\phase2_api.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\production_deployment.py",
          "line_count": 499,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\quality_assurance.py",
          "line_count": 653,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\real_codebase_scanner.stub_backup.py",
          "line_count": 892,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\refactor.py",
          "line_count": 63,
          "size_category": "small"
        },
        {
          "file": "dashboard\\api\\security.py",
          "line_count": 514,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\swarm_orchestration.py",
          "line_count": 1028,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\telemetry.py",
          "line_count": 573,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\tests.py",
          "line_count": 101,
          "size_category": "small"
        },
        {
          "file": "dashboard\\api\\test_generation.py",
          "line_count": 481,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\workflow.py",
          "line_count": 354,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\error_handler.py",
          "line_count": 267,
          "size_category": "medium"
        },
        {
          "file": "scripts\\dependency_analyzer.py",
          "line_count": 436,
          "size_category": "large"
        },
        {
          "file": "testmaster\\overview\\performance_dashboard.py",
          "line_count": 686,
          "size_category": "huge"
        },
        {
          "file": "tests\\test_phase2_e2e_validation.py",
          "line_count": 1091,
          "size_category": "huge"
        }
      ]
    },
    "database": {
      "file_count": 208,
      "total_lines": 167769,
      "scattered_across": 64,
      "directories": [
        "archive\\original_backup",
        "testmaster\\core",
        "analysis\\comprehensive_analysis\\pattern_mining",
        "core\\intelligence\\documentation\\revolutionary",
        "core\\intelligence\\security\\enterprise\\validation",
        "core\\intelligence\\integration",
        "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components",
        "prioritization",
        "testmaster\\intelligence\\integration\\storage",
        "core\\reliability",
        "testmaster\\analysis\\comprehensive_analysis",
        "archive\\phase1c_consolidation_20250820_150000\\integration",
        "core\\intelligence\\api",
        "archive\\oversized_modules_20250821_042018\\analysis",
        "dashboard\\dashboard_core",
        "core\\intelligence\\analytics",
        "testmaster\\overview",
        "core\\intelligence\\documentation",
        "dashboard",
        "archive\\legacy_scripts",
        "tests",
        "testmaster\\refactoring",
        "integration",
        "archive\\oversized_modules_20250821_042018\\coordination",
        "core\\intelligence\\orchestration",
        "archive\\placeholder_backups_20250820_011817\\integration",
        "archive\\oversized_modules_20250821_042018\\monitoring",
        "analysis\\comprehensive_analysis\\data_pipeline",
        "core\\intelligence\\analysis",
        "core\\intelligence\\testing\\automation",
        "core\\intelligence\\ml\\advanced",
        "archive\\modularization_integration",
        "core\\intelligence\\testing",
        "core\\intelligence\\config",
        "core\\intelligence\\security",
        "analysis\\comprehensive_analysis\\security_monitoring",
        "archive\\COMPLETE_REFACTOR_20250818_112844",
        ".",
        "core\\intelligence\\knowledge_graph",
        "core\\intelligence\\testing\\enterprise",
        "core\\intelligence\\testing\\security",
        "testmaster\\security",
        "core\\intelligence\\coordination",
        "archive\\modularization_20250821",
        "analysis\\comprehensive_analysis\\workflow_analysis",
        "agents\\roles",
        "archive\\original_backup\\scripts",
        "dashboard\\api",
        "testmaster\\intelligence\\bridges",
        "archive\\original_backup\\cache",
        "scripts",
        "core\\intelligence\\testing\\ai_generation",
        "core\\testing",
        "core\\security",
        "cache",
        "archive\\placeholder_backups_20250820_011745\\integration",
        "archive",
        "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components",
        "archive\\20250818",
        "archive\\oversized_modules_20250821_042018\\documentation\\revolutionary",
        "testmaster\\intelligence\\security",
        "core\\intelligence\\testing\\advanced",
        "archive\\oversized_modules_20250821_042018\\api",
        "testmaster\\intelligence\\documentation\\generators"
      ],
      "consolidation_opportunity": true,
      "files": [
        {
          "file": "comprehensive_codebase_analysis.py",
          "line_count": 332,
          "size_category": "large"
        },
        {
          "file": "DEMONSTRATION_OF_SUPERIORITY.py",
          "line_count": 287,
          "size_category": "medium"
        },
        {
          "file": "enhanced_security_intelligence_agent.py",
          "line_count": 1091,
          "size_category": "huge"
        },
        {
          "file": "enhance_analytics.py",
          "line_count": 466,
          "size_category": "large"
        },
        {
          "file": "integration_test_generator.py",
          "line_count": 572,
          "size_category": "huge"
        },
        {
          "file": "llm_analysis_monitor.py",
          "line_count": 729,
          "size_category": "huge"
        },
        {
          "file": "restore_missing_methods.py",
          "line_count": 535,
          "size_category": "huge"
        },
        {
          "file": "test_classical_analysis.py",
          "line_count": 292,
          "size_category": "medium"
        },
        {
          "file": "test_complexity_prioritizer.py",
          "line_count": 690,
          "size_category": "huge"
        },
        {
          "file": "test_integration_systems.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "test_security_integration_validation.py",
          "line_count": 329,
          "size_category": "large"
        },
        {
          "file": "test_tracking_manager_integration.py",
          "line_count": 356,
          "size_category": "large"
        },
        {
          "file": "test_universal_language_detector.py",
          "line_count": 693,
          "size_category": "huge"
        },
        {
          "file": "unified_orchestration_example.py",
          "line_count": 407,
          "size_category": "large"
        },
        {
          "file": "verify_classical_modules.py",
          "line_count": 96,
          "size_category": "small"
        },
        {
          "file": "web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "agents\\roles\\test_architect.py",
          "line_count": 945,
          "size_category": "huge"
        },
        {
          "file": "agents\\roles\\test_engineer.py",
          "line_count": 917,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\data_pipeline\\data_pipeline_analyzer.py",
          "line_count": 964,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\pattern_mining\\cross_repo_pattern_miner.py",
          "line_count": 1142,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\security_monitoring\\continuous_security_monitor.py",
          "line_count": 1038,
          "size_category": "huge"
        },
        {
          "file": "analysis\\comprehensive_analysis\\workflow_analysis\\workflow_pattern_detector.py",
          "line_count": 1118,
          "size_category": "huge"
        },
        {
          "file": "archive\\advanced_testing_intelligence.py",
          "line_count": 770,
          "size_category": "huge"
        },
        {
          "file": "archive\\coverage_analyzer_original_2697_lines.py",
          "line_count": 2698,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_energy_consumption_analysis_original.py",
          "line_count": 1188,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_metaprogramming_analysis_original.py",
          "line_count": 1206,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_semantic_analysis_original.py",
          "line_count": 1244,
          "size_category": "huge"
        },
        {
          "file": "archive\\from_subarchive_technical_debt_analysis_original.py",
          "line_count": 1301,
          "size_category": "huge"
        },
        {
          "file": "archive\\integration_hub_original_20250820_220939.py",
          "line_count": 1877,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_energy_consumption_analysis.py",
          "line_count": 1188,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_metaprogramming_analysis.py",
          "line_count": 1206,
          "size_category": "huge"
        },
        {
          "file": "archive\\superseded_toplevel_technical_debt_analysis.py",
          "line_count": 1301,
          "size_category": "huge"
        },
        {
          "file": "archive\\20250818\\web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
          "line_count": 449,
          "size_category": "large"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
          "line_count": 667,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "line_count": 1290,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
          "line_count": 661,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
          "line_count": 598,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
          "line_count": 580,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "line_count": 776,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_persistence.py",
          "line_count": 703,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
          "line_count": 899,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
          "line_count": 1192,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
          "line_count": 850,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
          "line_count": 1142,
          "size_category": "huge"
        },
        {
          "file": "archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "line_count": 2698,
          "size_category": "huge"
        },
        {
          "file": "archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
          "line_count": 1598,
          "size_category": "huge"
        },
        {
          "file": "archive\\legacy_scripts\\achieve_100_percent_coverage.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\gemini_powered_test_generator.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "archive\\legacy_scripts\\integration_test_generator.py",
          "line_count": 572,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "line_count": 1547,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_20250821\\semantic_analyzer_original.py",
          "line_count": 953,
          "size_category": "huge"
        },
        {
          "file": "archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "line_count": 1877,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\integration_test_generator.py",
          "line_count": 572,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\cache\\intelligent_cache.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "archive\\original_backup\\scripts\\achieve_100_percent_coverage.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "archive\\original_backup\\scripts\\gemini_powered_test_generator.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
          "line_count": 1547,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\api\\enterprise_integration_layer.py",
          "line_count": 1160,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\coordination\\resource_coordination_system.py",
          "line_count": 1030,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\coordination\\unified_workflow_orchestrator.py",
          "line_count": 1355,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\documentation\\revolutionary\\neo4j_dominator.py",
          "line_count": 1158,
          "size_category": "huge"
        },
        {
          "file": "archive\\oversized_modules_20250821_042018\\monitoring\\performance_optimization_engine.py",
          "line_count": 1124,
          "size_category": "huge"
        },
        {
          "file": "archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "cache\\intelligent_cache.py",
          "line_count": 631,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_analyzer.py",
          "line_count": 953,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\analysis\\semantic_base.py",
          "line_count": 252,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\analytics\\analytics_deduplication.py",
          "line_count": 940,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\api\\validators.py",
          "line_count": 373,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\config\\enterprise_config_manager.py",
          "line_count": 864,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\coordination\\service_discovery_registry.py",
          "line_count": 702,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\faq_system.py",
          "line_count": 522,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\knowledge_management_framework.py",
          "line_count": 1022,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\production_ready_docs.py",
          "line_count": 886,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\service_oriented_arch_docs.py",
          "line_count": 768,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\tutorial_grid_system.py",
          "line_count": 729,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\workflow_recipe_docs.py",
          "line_count": 796,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\ai_documentation_synthesizer.py",
          "line_count": 706,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\documentation\\revolutionary\\falkordb_obliterator.py",
          "line_count": 596,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\integration\\base.py",
          "line_count": 161,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\integration\\__init__.py",
          "line_count": 563,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\instant_graph_engine.py",
          "line_count": 465,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\knowledge_graph\\predictive_code_intelligence.py",
          "line_count": 478,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\ml_network_optimizer.py",
          "line_count": 697,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\predictive_maintenance_ai.py",
          "line_count": 810,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\telemetry_export_manager.py",
          "line_count": 604,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\ml\\advanced\\telemetry_observability_engine.py",
          "line_count": 633,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\orchestration\\integration_hub.py",
          "line_count": 711,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\advanced_security_intelligence.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\ai_security_integration.py",
          "line_count": 178,
          "size_category": "medium"
        },
        {
          "file": "core\\intelligence\\security\\code_vulnerability_scanner.py",
          "line_count": 549,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\dependency_scanner.py",
          "line_count": 384,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\security_compliance_validator.py",
          "line_count": 704,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\threat_intelligence_engine.py",
          "line_count": 550,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\security\\threat_modeler.py",
          "line_count": 424,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\security\\enterprise\\validation\\penetration_tester.py",
          "line_count": 511,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\test_orchestrator.py",
          "line_count": 391,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\test_selector.py",
          "line_count": 388,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\advanced\\ml_test_optimizer.py",
          "line_count": 857,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\claude_test_generator.py",
          "line_count": 459,
          "size_category": "large"
        },
        {
          "file": "core\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
          "line_count": 543,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\automation\\enterprise_test_orchestrator.py",
          "line_count": 727,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\enterprise\\predictive_test_failure.py",
          "line_count": 849,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\security\\advanced_owasp_tester.py",
          "line_count": 913,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\security\\api_security_tester.py",
          "line_count": 532,
          "size_category": "huge"
        },
        {
          "file": "core\\intelligence\\testing\\security\\compliance_validator.py",
          "line_count": 663,
          "size_category": "huge"
        },
        {
          "file": "core\\reliability\\emergency_backup_recovery.py",
          "line_count": 824,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\adaptive_fallback_orchestrator.py",
          "line_count": 677,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\circuit_breaker_matrix.py",
          "line_count": 630,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\compliance_framework.py",
          "line_count": 1115,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\data_integrity_guardian.py",
          "line_count": 710,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\document_classification_security.py",
          "line_count": 691,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\enterprise_auth_gateway.py",
          "line_count": 590,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\error_isolation_system.py",
          "line_count": 747,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\fault_tolerance_engine.py",
          "line_count": 705,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\flow_persistence_security.py",
          "line_count": 698,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\graceful_degradation_manager.py",
          "line_count": 699,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\health_monitoring_nexus.py",
          "line_count": 664,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\quantum_retry_engine.py",
          "line_count": 616,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\resilience_orchestrator.py",
          "line_count": 681,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\secure_message_delivery.py",
          "line_count": 712,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\self_healing_coordinator.py",
          "line_count": 698,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\threat_intelligence_system.py",
          "line_count": 881,
          "size_category": "huge"
        },
        {
          "file": "core\\security\\vulnerability_detection_framework.py",
          "line_count": 716,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\archive_intelligence_mining.py",
          "line_count": 586,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\competitive_analysis_framework.py",
          "line_count": 455,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\graph_async_testing.py",
          "line_count": 473,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\graph_index_testing.py",
          "line_count": 1103,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\graph_operations_testing.py",
          "line_count": 1063,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\graph_vector_testing.py",
          "line_count": 535,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\intelligence_synthesis_framework.py",
          "line_count": 899,
          "size_category": "huge"
        },
        {
          "file": "core\\testing\\test_ai_code_exploration.py",
          "line_count": 355,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\test_knowledge_graph_engine.py",
          "line_count": 256,
          "size_category": "medium"
        },
        {
          "file": "core\\testing\\test_multi_language_superiority.py",
          "line_count": 363,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\test_ui_interface_superiority.py",
          "line_count": 492,
          "size_category": "large"
        },
        {
          "file": "core\\testing\\test_zero_setup_domination.py",
          "line_count": 380,
          "size_category": "large"
        },
        {
          "file": "dashboard\\test_ultra_reliability.py",
          "line_count": 1049,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\flow_optimization.py",
          "line_count": 662,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\health.py",
          "line_count": 760,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\knowledge_graph.py",
          "line_count": 454,
          "size_category": "large"
        },
        {
          "file": "dashboard\\api\\security.py",
          "line_count": 514,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\api\\telemetry.py",
          "line_count": 573,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_backup.py",
          "line_count": 449,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_dead_letter_queue.py",
          "line_count": 667,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_deduplication.py",
          "line_count": 1290,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_delivery_guarantee.py",
          "line_count": 661,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_error_recovery.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_event_queue.py",
          "line_count": 598,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_fallback_system.py",
          "line_count": 580,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_integrity_guardian.py",
          "line_count": 623,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_integrity_verifier.py",
          "line_count": 776,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_performance_optimizer.py",
          "line_count": 660,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_persistence.py",
          "line_count": 703,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py",
          "line_count": 818,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_priority_queue.py",
          "line_count": 899,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_quantum_retry.py",
          "line_count": 1192,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_receipt_tracker.py",
          "line_count": 850,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\analytics_sla_tracker.py",
          "line_count": 860,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\data_store.py",
          "line_count": 506,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\emergency_backup_recovery.py",
          "line_count": 1309,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\error_handler.py",
          "line_count": 267,
          "size_category": "medium"
        },
        {
          "file": "dashboard\\dashboard_core\\metrics_feed.py",
          "line_count": 360,
          "size_category": "large"
        },
        {
          "file": "dashboard\\dashboard_core\\predictive_flow_optimizer.py",
          "line_count": 1077,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\system_observability_metrics.py",
          "line_count": 840,
          "size_category": "huge"
        },
        {
          "file": "dashboard\\dashboard_core\\test_collector.py",
          "line_count": 402,
          "size_category": "large"
        },
        {
          "file": "integration\\multi_environment_support.py",
          "line_count": 462,
          "size_category": "large"
        },
        {
          "file": "integration\\predictive_analytics_engine.py",
          "line_count": 1142,
          "size_category": "huge"
        },
        {
          "file": "integration\\predictive_analytics_engine_robust.py",
          "line_count": 1061,
          "size_category": "huge"
        },
        {
          "file": "prioritization\\test_prioritizer.py",
          "line_count": 767,
          "size_category": "huge"
        },
        {
          "file": "scripts\\achieve_100_percent_coverage.py",
          "line_count": 439,
          "size_category": "large"
        },
        {
          "file": "scripts\\analyze_components.py",
          "line_count": 497,
          "size_category": "large"
        },
        {
          "file": "scripts\\gemini_powered_test_generator.py",
          "line_count": 365,
          "size_category": "large"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\api_analysis.py",
          "line_count": 880,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\concurrency_analysis.py",
          "line_count": 1397,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\database_analysis.py",
          "line_count": 1246,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\error_handling_analysis.py",
          "line_count": 1279,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
          "line_count": 911,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\main_analyzer.py",
          "line_count": 540,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\memory_analysis.py",
          "line_count": 1141,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\performance_analysis.py",
          "line_count": 1287,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\resource_io_analysis.py",
          "line_count": 1350,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\structural_analysis.py",
          "line_count": 814,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\supply_chain_security.py",
          "line_count": 755,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\taint_analysis.py",
          "line_count": 647,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\analysis\\comprehensive_analysis\\testing_analysis.py",
          "line_count": 1342,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\core\\tracking_manager.py",
          "line_count": 737,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\bridges\\event_monitoring_bridge.py",
          "line_count": 1082,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\architecture_doc_generator.py",
          "line_count": 813,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\documentation\\generators\\tutorial_generator.py",
          "line_count": 975,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\integration\\storage\\unified_storage.py",
          "line_count": 738,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\intelligence\\security\\security_intelligence_agent.py",
          "line_count": 935,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\coverage_intelligence.py",
          "line_count": 1071,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\regression_tracker.py",
          "line_count": 1375,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\overview\\structure_mapper.py",
          "line_count": 1112,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\refactoring\\hierarchical_analyzer.py",
          "line_count": 980,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\security\\security_test_generator.py",
          "line_count": 777,
          "size_category": "huge"
        },
        {
          "file": "testmaster\\security\\universal_scanner.py",
          "line_count": 823,
          "size_category": "huge"
        },
        {
          "file": "tests\\test_phase2_core_validation.py",
          "line_count": 569,
          "size_category": "huge"
        },
        {
          "file": "tests\\test_phase2_e2e_validation.py",
          "line_count": 1091,
          "size_category": "huge"
        },
        {
          "file": "tests\\test_phase2_integration_validation.py",
          "line_count": 677,
          "size_category": "huge"
        }
      ]
    }
  },
  "file_distribution": {
    "config": {
      "count": 862,
      "total_lines": 517963
    },
    "analysis": {
      "count": 928,
      "total_lines": 512328
    },
    "database": {
      "count": 208,
      "total_lines": 167769
    },
    "intelligence": {
      "count": 1384,
      "total_lines": 721190
    },
    "orchestration": {
      "count": 512,
      "total_lines": 300998
    },
    "api": {
      "count": 68,
      "total_lines": 42294
    },
    "monitoring": {
      "count": 1144,
      "total_lines": 662641
    },
    "utility": {
      "count": 488,
      "total_lines": 296231
    },
    "test": {
      "count": 815,
      "total_lines": 432562
    },
    "security": {
      "count": 753,
      "total_lines": 469982
    }
  },
  "size_distribution": {
    "medium": 178,
    "small": 147,
    "huge": 672,
    "large": 337,
    "tiny": 147
  }
}