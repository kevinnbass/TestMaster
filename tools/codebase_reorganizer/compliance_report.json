{
  "compliance_score": 76.83257918552036,
  "total_files_analyzed": 65,
  "total_functions_analyzed": 753,
  "total_lines_analyzed": 18736,
  "total_issues": 256,
  "rule_compliance": {
    "1": false,
    "2": false,
    "3": false,
    "4": false,
    "5": true,
    "6": true,
    "7": false,
    "8": true,
    "9": true,
    "10": true,
    "11": true,
    "12": true,
    "13": true,
    "14": true,
    "15": false,
    "16": false,
    "17": true
  },
  "detailed_analysis": {
    "files_by_severity": {
      "high": 97,
      "medium": 133,
      "low": 26
    },
    "rules_violated": 7,
    "assertion_ratio": 0.22841965471447542,
    "average_function_size": 79.125
  },
  "issues": [
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\compliance_audit_reporting.py",
      "line_number": 19,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function '_print_header' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\compliance_audit_reporting.py",
      "line_number": 136,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function 'generate_summary_report' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\compliance_fixes.py",
      "line_number": 1,
      "rule_number": 16,
      "rule_description": "Module size under 300 lines (500 max)",
      "severity": "high",
      "description": "Module exceeds recommended size limit (567 lines)",
      "suggestion": "Consider splitting into smaller modules"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\compliance_fixes.py",
      "line_number": 551,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function 'main' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\compliance_fixes.py",
      "line_number": 32,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function '__init__' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\compliance_fixes.py",
      "line_number": 32,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function '__init__' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\compliance_fixes.py",
      "line_number": 346,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function 'apply_fixes' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\compliance_fixes.py",
      "line_number": 375,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function 'run_compliance_fixes' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\compliance_fixes.py",
      "line_number": 375,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function 'run_compliance_fixes' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_integration_engine.py",
      "line_number": 1,
      "rule_number": 16,
      "rule_description": "Module size under 300 lines (500 max)",
      "severity": "high",
      "description": "Module exceeds recommended size limit (1126 lines)",
      "suggestion": "Consider splitting into smaller modules"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_integration_engine.py",
      "line_number": 1031,
      "rule_number": 4,
      "rule_description": "Functions limited to 60 lines max (including docstrings/comments)",
      "severity": "high",
      "description": "Function 'main' exceeds 60 line limit (90 lines)",
      "suggestion": "Break function into smaller, focused functions"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_integration_engine.py",
      "line_number": 1031,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function 'main' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_integration_engine.py",
      "line_number": 1031,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function 'main' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_integration_engine.py",
      "line_number": 114,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function '__init__' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_integration_engine.py",
      "line_number": 193,
      "rule_number": 4,
      "rule_description": "Functions limited to 60 lines max (including docstrings/comments)",
      "severity": "high",
      "description": "Function '_load_classification_taxonomy' exceeds 60 line limit (87 lines)",
      "suggestion": "Break function into smaller, focused functions"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_integration_engine.py",
      "line_number": 281,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function 'integrate_intelligence' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_integration_engine.py",
      "line_number": 281,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function 'integrate_intelligence' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_integration_engine.py",
      "line_number": 432,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_calculate_agreement_confidence' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_integration_engine.py",
      "line_number": 496,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function '_weighted_voting_classification' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_integration_engine.py",
      "line_number": 594,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_get_pattern_based_classification' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_integration_engine.py",
      "line_number": 625,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_generate_classification_reasoning' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_integration_engine.py",
      "line_number": 700,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_generate_integrated_recommendations' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_integration_engine.py",
      "line_number": 738,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_generate_synthesis_reasoning' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_integration_engine.py",
      "line_number": 771,
      "rule_number": 4,
      "rule_description": "Functions limited to 60 lines max (including docstrings/comments)",
      "severity": "high",
      "description": "Function 'generate_reorganization_plan' exceeds 60 line limit (77 lines)",
      "suggestion": "Break function into smaller, focused functions"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_integration_engine.py",
      "line_number": 771,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function 'generate_reorganization_plan' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_integration_engine.py",
      "line_number": 771,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function 'generate_reorganization_plan' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_integration_engine.py",
      "line_number": 849,
      "rule_number": 4,
      "rule_description": "Functions limited to 60 lines max (including docstrings/comments)",
      "severity": "high",
      "description": "Function '_generate_reorganization_phases' exceeds 60 line limit (101 lines)",
      "suggestion": "Break function into smaller, focused functions"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_integration_engine.py",
      "line_number": 849,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function '_generate_reorganization_phases' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_integration_engine.py",
      "line_number": 849,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_generate_reorganization_phases' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_integration_engine.py",
      "line_number": 849,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_generate_reorganization_phases' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_integration_engine.py",
      "line_number": 951,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function '_assess_reorganization_risks' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_integration_engine.py",
      "line_number": 951,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_assess_reorganization_risks' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_integration_engine.py",
      "line_number": 1002,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function 'save_integration_results' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_reorganizer.py",
      "line_number": 1,
      "rule_number": 16,
      "rule_description": "Module size under 300 lines (500 max)",
      "severity": "high",
      "description": "Module exceeds recommended size limit (709 lines)",
      "suggestion": "Consider splitting into smaller modules"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_reorganizer.py",
      "line_number": 101,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_discover_intelligence_modules' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_reorganizer.py",
      "line_number": 172,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function 'analyze_codebase_with_intelligence' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_reorganizer.py",
      "line_number": 172,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function 'analyze_codebase_with_intelligence' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_reorganizer.py",
      "line_number": 172,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function 'analyze_codebase_with_intelligence' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_reorganizer.py",
      "line_number": 372,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_combine_intelligence_analyses' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_reorganizer.py",
      "line_number": 424,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function 'generate_intelligent_reorganization_plan' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_reorganizer.py",
      "line_number": 424,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function 'generate_intelligent_reorganization_plan' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_reorganizer.py",
      "line_number": 481,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_create_moves_from_analysis' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_reorganizer.py",
      "line_number": 532,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_generate_intelligence_recommendations' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_reorganizer.py",
      "line_number": 532,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_generate_intelligence_recommendations' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_reorganizer.py",
      "line_number": 628,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_execute_moves' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligence_reorganizer.py",
      "line_number": 647,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_handle_medium_confidence_moves' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\intelligent_reorganizer.py",
      "line_number": 1,
      "rule_number": 16,
      "rule_description": "Module size under 300 lines (500 max)",
      "severity": "high",
      "description": "Module exceeds recommended size limit (578 lines)",
      "suggestion": "Consider splitting into smaller modules"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_clients.py",
      "line_number": 19,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function 'analyze_code' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_clients.py",
      "line_number": 41,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function '_mock_security_response' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_clients.py",
      "line_number": 59,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function '_mock_test_response' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_clients.py",
      "line_number": 77,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function '_mock_api_response' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_clients.py",
      "line_number": 95,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function '_mock_general_response' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_clients.py",
      "line_number": 117,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function '__init__' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_clients.py",
      "line_number": 125,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function 'analyze_code' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_clients.py",
      "line_number": 141,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function '__init__' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_clients.py",
      "line_number": 145,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function 'analyze_code' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_clients.py",
      "line_number": 178,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function '__init__' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_clients.py",
      "line_number": 182,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function 'analyze_code' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_clients.py",
      "line_number": 195,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function '__init__' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_clients.py",
      "line_number": 199,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function 'analyze_code' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_core.py",
      "line_number": 1,
      "rule_number": 16,
      "rule_description": "Module size under 300 lines (500 max)",
      "severity": "high",
      "description": "Module exceeds recommended size limit (614 lines)",
      "suggestion": "Consider splitting into smaller modules"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_core.py",
      "line_number": 38,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function '__init__' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_core.py",
      "line_number": 114,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function '_initialize_llm_client' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_core.py",
      "line_number": 181,
      "rule_number": 4,
      "rule_description": "Functions limited to 60 lines max (including docstrings/comments)",
      "severity": "high",
      "description": "Function 'scan_and_analyze' exceeds 60 line limit (69 lines)",
      "suggestion": "Break function into smaller, focused functions"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_core.py",
      "line_number": 181,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function 'scan_and_analyze' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_core.py",
      "line_number": 251,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function '_discover_python_files' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_core.py",
      "line_number": 251,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_discover_python_files' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_core.py",
      "line_number": 251,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_discover_python_files' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_core.py",
      "line_number": 270,
      "rule_number": 4,
      "rule_description": "Functions limited to 60 lines max (including docstrings/comments)",
      "severity": "high",
      "description": "Function '_analyze_file_comprehensive' exceeds 60 line limit (72 lines)",
      "suggestion": "Break function into smaller, focused functions"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_core.py",
      "line_number": 443,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function '_count_classes' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_core.py",
      "line_number": 451,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function '_count_functions' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_core.py",
      "line_number": 459,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_build_directory_structure' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_core.py",
      "line_number": 481,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function '_calculate_scan_statistics' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_core.py",
      "line_number": 518,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function 'integrate_with_static_analysis' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_core.py",
      "line_number": 518,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function 'integrate_with_static_analysis' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_core.py",
      "line_number": 604,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_generate_final_recommendations' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_integration_engine.py",
      "line_number": 1,
      "rule_number": 16,
      "rule_description": "Module size under 300 lines (500 max)",
      "severity": "high",
      "description": "Module exceeds recommended size limit (716 lines)",
      "suggestion": "Consider splitting into smaller modules"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_integration_engine.py",
      "line_number": 652,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function 'main' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_integration_engine.py",
      "line_number": 652,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function 'main' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_integration_engine.py",
      "line_number": 652,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function 'main' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_integration_engine.py",
      "line_number": 51,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function '__init__' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_integration_engine.py",
      "line_number": 93,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function 'integrate_intelligence' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_integration_engine.py",
      "line_number": 93,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function 'integrate_intelligence' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_integration_engine.py",
      "line_number": 344,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_generate_integrated_recommendations' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_integration_engine.py",
      "line_number": 373,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_generate_synthesis_reasoning' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_integration_engine.py",
      "line_number": 398,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function 'generate_reorganization_plan' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_integration_engine.py",
      "line_number": 434,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_create_phase1_high_confidence' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_integration_engine.py",
      "line_number": 434,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_create_phase1_high_confidence' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_integration_engine.py",
      "line_number": 465,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_create_phase2_security_modules' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_integration_engine.py",
      "line_number": 465,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_create_phase2_security_modules' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_integration_engine.py",
      "line_number": 497,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_create_phase3_complex_modules' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_integration_engine.py",
      "line_number": 497,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_create_phase3_complex_modules' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_integration_engine.py",
      "line_number": 528,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_generate_reorganization_phases' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_integration_engine.py",
      "line_number": 539,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_estimate_reorganization_effort' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_integration_engine.py",
      "line_number": 570,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_assess_reorganization_risks' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_integration_engine.py",
      "line_number": 570,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_assess_reorganization_risks' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 1,
      "rule_number": 16,
      "rule_description": "Module size under 300 lines (500 max)",
      "severity": "high",
      "description": "Module exceeds recommended size limit (893 lines)",
      "suggestion": "Consider splitting into smaller modules"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 832,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function 'main' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 172,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function '_initialize_llm_client' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 224,
      "rule_number": 4,
      "rule_description": "Functions limited to 60 lines max (including docstrings/comments)",
      "severity": "high",
      "description": "Function 'scan_and_analyze' exceeds 60 line limit (82 lines)",
      "suggestion": "Break function into smaller, focused functions"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 224,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function 'scan_and_analyze' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 224,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function 'scan_and_analyze' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 224,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function 'scan_and_analyze' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 307,
      "rule_number": 4,
      "rule_description": "Functions limited to 60 lines max (including docstrings/comments)",
      "severity": "high",
      "description": "Function '_analyze_file_with_llm' exceeds 60 line limit (66 lines)",
      "suggestion": "Break function into smaller, focused functions"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 466,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_create_classification_summary' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 492,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_generate_recommended_structure' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 508,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_identify_problematic_modules' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 508,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_identify_problematic_modules' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 533,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_identify_integration_opportunities' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 533,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_identify_integration_opportunities' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 558,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_analyze_security_concerns' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 558,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_analyze_security_concerns' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 572,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_analyze_testing_gaps' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 572,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_analyze_testing_gaps' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 598,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_build_directory_structure' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 658,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_update_cache' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 668,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function 'analyze_code' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 690,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function '_mock_security_response' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 710,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function '_mock_test_response' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 730,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function '_mock_api_response' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 750,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function '_mock_general_response' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 774,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function '__init__' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 779,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function 'analyze_code' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 795,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function '__init__' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_scanner.py",
      "line_number": 799,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function 'analyze_code' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\llm_intelligence_system.py",
      "line_number": 1,
      "rule_number": 0,
      "rule_description": "General compliance",
      "severity": "high",
      "description": "Syntax error: invalid non-printable character U+FEFF (<unknown>, line 1)",
      "suggestion": "Fix syntax errors before analysis"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\maintainability_analysis.py",
      "line_number": 22,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function '__init__' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\maintainability_analysis.py",
      "line_number": 99,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function 'analyze_testability' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\maintainability_analysis.py",
      "line_number": 119,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function 'get_function_count' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\maintainability_analysis.py",
      "line_number": 123,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function 'get_class_count' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\maintainability_analysis.py",
      "line_number": 127,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function 'get_long_function_count' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\maintainability_analysis.py",
      "line_number": 136,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function 'get_large_class_count' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\maintainability_analyzer.py",
      "line_number": 19,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function '__init__' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\maintainability_descriptions.py",
      "line_number": 22,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function '__init__' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\maintainability_recommendations.py",
      "line_number": 23,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function '__init__' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\maintainability_recommendations.py",
      "line_number": 121,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function 'get_testability_recommendations' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\maintainability_recommendations.py",
      "line_number": 141,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function 'get_general_recommendations' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\meta_analysis.py",
      "line_number": 1,
      "rule_number": 16,
      "rule_description": "Module size under 300 lines (500 max)",
      "severity": "medium",
      "description": "Module exceeds recommended size limit (415 lines)",
      "suggestion": "Consider splitting into smaller modules"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\meta_analysis.py",
      "line_number": 169,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_score_analysis_types' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\meta_analysis.py",
      "line_number": 202,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_find_best_category' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\meta_analysis.py",
      "line_number": 285,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_basic_relationship_analysis' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\meta_analysis.py",
      "line_number": 308,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_basic_pattern_analysis' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\meta_analysis.py",
      "line_number": 338,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function '_basic_ml_analysis' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\meta_analysis.py",
      "line_number": 363,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_basic_dependency_analysis' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\meta_analysis.py",
      "line_number": 388,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_fallback_categorization' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\meta_planning.py",
      "line_number": 30,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function 'analyze_codebase' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\meta_planning.py",
      "line_number": 30,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function 'analyze_codebase' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\meta_planning.py",
      "line_number": 30,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function 'analyze_codebase' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\meta_planning.py",
      "line_number": 56,
      "rule_number": 4,
      "rule_description": "Functions limited to 60 lines max (including docstrings/comments)",
      "severity": "high",
      "description": "Function 'generate_intelligent_reorganization_plan' exceeds 60 line limit (72 lines)",
      "suggestion": "Break function into smaller, focused functions"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\meta_planning.py",
      "line_number": 56,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function 'generate_intelligent_reorganization_plan' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\meta_planning.py",
      "line_number": 56,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function 'generate_intelligent_reorganization_plan' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\meta_planning.py",
      "line_number": 129,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_get_intelligent_target_path' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\meta_planning.py",
      "line_number": 143,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_extract_insights' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\meta_planning.py",
      "line_number": 143,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_extract_insights' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\meta_reorganizer.py",
      "line_number": 73,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_discover_intelligence_modules' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\meta_reorganizer_new.py",
      "line_number": 73,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_discover_intelligence_modules' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\pattern_core.py",
      "line_number": 1,
      "rule_number": 16,
      "rule_description": "Module size under 300 lines (500 max)",
      "severity": "high",
      "description": "Module exceeds recommended size limit (505 lines)",
      "suggestion": "Consider splitting into smaller modules"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\pattern_core.py",
      "line_number": 228,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function 'detect_patterns' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\pattern_core.py",
      "line_number": 279,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_detect_design_patterns' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\pattern_core.py",
      "line_number": 304,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_detect_architectural_patterns' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\pattern_core.py",
      "line_number": 329,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_detect_coding_patterns' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\pattern_core.py",
      "line_number": 354,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_calculate_pattern_confidence' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\pattern_core.py",
      "line_number": 397,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_collect_pattern_evidence' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\pattern_core.py",
      "line_number": 397,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_collect_pattern_evidence' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\pattern_core.py",
      "line_number": 413,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_get_pattern_recommendations' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\pattern_core.py",
      "line_number": 426,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_categorize_patterns' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\pattern_core.py",
      "line_number": 435,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_analyze_confidence_distribution' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\pattern_core.py",
      "line_number": 449,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function '_determine_architectural_style' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\pattern_core.py",
      "line_number": 464,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function '_determine_coding_style' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\pattern_core.py",
      "line_number": 479,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function '_generate_pattern_recommendations' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\pattern_core.py",
      "line_number": 479,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_generate_pattern_recommendations' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\pattern_detector.py",
      "line_number": 87,
      "rule_number": 4,
      "rule_description": "Functions limited to 60 lines max (including docstrings/comments)",
      "severity": "high",
      "description": "Function 'main' exceeds 60 line limit (101 lines)",
      "suggestion": "Break function into smaller, focused functions"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\pattern_detector.py",
      "line_number": 87,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function 'main' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\pattern_examples.py",
      "line_number": 79,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function 'demonstrate_patterns' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\pattern_examples.py",
      "line_number": 19,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function '__init__' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\pattern_examples.py",
      "line_number": 28,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function '__init__' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\pattern_examples.py",
      "line_number": 28,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function '__init__' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\pattern_examples.py",
      "line_number": 45,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function '__init__' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\pattern_examples.py",
      "line_number": 66,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function '__init__' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\pattern_examples.py",
      "line_number": 66,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function '__init__' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\pattern_examples.py",
      "line_number": 72,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function 'get_instance' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\perfect_compliance_launcher.py",
      "line_number": 1,
      "rule_number": 16,
      "rule_description": "Module size under 300 lines (500 max)",
      "severity": "medium",
      "description": "Module exceeds recommended size limit (304 lines)",
      "suggestion": "Consider splitting into smaller modules"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\refactor_analysis.py",
      "line_number": 105,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function 'suggest_function_name' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\refactor_analysis.py",
      "line_number": 105,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function 'suggest_function_name' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\refactor_functions.py",
      "line_number": 37,
      "rule_number": 4,
      "rule_description": "Functions limited to 60 lines max (including docstrings/comments)",
      "severity": "high",
      "description": "Function 'main' exceeds 60 line limit (61 lines)",
      "suggestion": "Break function into smaller, focused functions"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\refactor_generation.py",
      "line_number": 100,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function 'generate_refactored_function' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\refactor_generation.py",
      "line_number": 100,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function 'generate_refactored_function' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\relationship_analyzer.py",
      "line_number": 67,
      "rule_number": 4,
      "rule_description": "Functions limited to 60 lines max (including docstrings/comments)",
      "severity": "high",
      "description": "Function 'main' exceeds 60 line limit (67 lines)",
      "suggestion": "Break function into smaller, focused functions"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\relationship_analyzer.py",
      "line_number": 67,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function 'main' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\relationship_core.py",
      "line_number": 1,
      "rule_number": 16,
      "rule_description": "Module size under 300 lines (500 max)",
      "severity": "medium",
      "description": "Module exceeds recommended size limit (349 lines)",
      "suggestion": "Consider splitting into smaller modules"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\relationship_core.py",
      "line_number": 34,
      "rule_number": 4,
      "rule_description": "Functions limited to 60 lines max (including docstrings/comments)",
      "severity": "high",
      "description": "Function 'analyze_relationships' exceeds 60 line limit (71 lines)",
      "suggestion": "Break function into smaller, focused functions"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\relationship_core.py",
      "line_number": 106,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_analyze_import_relationships' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\relationship_core.py",
      "line_number": 133,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_analyze_class_relationships' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\relationship_core.py",
      "line_number": 200,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_analyze_data_relationships' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\relationship_core.py",
      "line_number": 225,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_build_relationship_graph' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\relationship_core.py",
      "line_number": 258,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function '_calculate_coupling_metrics' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\relationship_core.py",
      "line_number": 282,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_identify_relationship_clusters' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\relationship_core.py",
      "line_number": 305,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function '_generate_relationship_recommendations' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\relationship_core.py",
      "line_number": 305,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_generate_relationship_recommendations' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\relationship_ml.py",
      "line_number": 113,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function 'main' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\relationship_ml.py",
      "line_number": 20,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function 'load_data' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\relationship_ml.py",
      "line_number": 25,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function 'process_relationships' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\relationship_ml.py",
      "line_number": 38,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function 'train_model' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\relationship_ml.py",
      "line_number": 43,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function 'evaluate' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\relationship_ml.py",
      "line_number": 70,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function 'run_pipeline' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\relationship_ml.py",
      "line_number": 81,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function 'evaluate_model' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\relationship_ml.py",
      "line_number": 93,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function 'analyze_relationship_patterns' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganization_core.py",
      "line_number": 1,
      "rule_number": 16,
      "rule_description": "Module size under 300 lines (500 max)",
      "severity": "high",
      "description": "Module exceeds recommended size limit (525 lines)",
      "suggestion": "Consider splitting into smaller modules"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganization_core.py",
      "line_number": 43,
      "rule_number": 15,
      "rule_description": "Detailed docstrings and mandatory type hints",
      "severity": "medium",
      "description": "Function '__init__' lacks docstring",
      "suggestion": "Add comprehensive docstring with type hints"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganization_core.py",
      "line_number": 94,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function 'create_reorganization_plan' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganization_core.py",
      "line_number": 94,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function 'create_reorganization_plan' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganization_core.py",
      "line_number": 151,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_create_tasks_from_intelligence' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganization_core.py",
      "line_number": 361,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_create_task_batches' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganization_core.py",
      "line_number": 361,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_create_task_batches' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganization_core.py",
      "line_number": 410,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_create_batch_from_tasks' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganization_core.py",
      "line_number": 410,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_create_batch_from_tasks' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganization_core.py",
      "line_number": 440,
      "rule_number": 1,
      "rule_description": "Simple control flow: no recursion, avoid complex comprehensions",
      "severity": "medium",
      "description": "Function '_create_plan_summary' contains complex comprehensions",
      "suggestion": "Replace with explicit loops for clarity"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganization_planner.py",
      "line_number": 32,
      "rule_number": 7,
      "rule_description": "Parameter validation and return value checking",
      "severity": "low",
      "description": "Function 'main' lacks parameter validation",
      "suggestion": "Add type hints and parameter validation checks"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganizer.py",
      "line_number": 1,
      "rule_number": 16,
      "rule_description": "Module size under 300 lines (500 max)",
      "severity": "high",
      "description": "Module exceeds recommended size limit (868 lines)",
      "suggestion": "Consider splitting into smaller modules"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganizer.py",
      "line_number": 783,
      "rule_number": 4,
      "rule_description": "Functions limited to 60 lines max (including docstrings/comments)",
      "severity": "high",
      "description": "Function 'main' exceeds 60 line limit (82 lines)",
      "suggestion": "Break function into smaller, focused functions"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganizer.py",
      "line_number": 107,
      "rule_number": 4,
      "rule_description": "Functions limited to 60 lines max (including docstrings/comments)",
      "severity": "high",
      "description": "Function 'load_config' exceeds 60 line limit (83 lines)",
      "suggestion": "Break function into smaller, focused functions"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganizer.py",
      "line_number": 191,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_build_exclusion_patterns' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganizer.py",
      "line_number": 319,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_extract_imports' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganizer.py",
      "line_number": 338,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_extract_classes' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganizer.py",
      "line_number": 353,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_extract_functions' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganizer.py",
      "line_number": 386,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_categorize_file' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganizer.py",
      "line_number": 386,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_categorize_file' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganizer.py",
      "line_number": 435,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function 'analyze_codebase' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganizer.py",
      "line_number": 435,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function 'analyze_codebase' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganizer.py",
      "line_number": 474,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function 'generate_reorganization_plan' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganizer.py",
      "line_number": 514,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_get_target_path' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganizer.py",
      "line_number": 528,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_find_imports_to_update' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganizer.py",
      "line_number": 528,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_find_imports_to_update' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganizer.py",
      "line_number": 568,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_generate_summary' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganizer.py",
      "line_number": 588,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function 'execute_plan' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganizer.py",
      "line_number": 681,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_create_backup' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganizer.py",
      "line_number": 706,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_execute_moves' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganizer.py",
      "line_number": 725,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_create_symlinks' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganizer.py",
      "line_number": 747,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_update_imports' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\reorganizer_engine.py",
      "line_number": 1,
      "rule_number": 16,
      "rule_description": "Module size under 300 lines (500 max)",
      "severity": "high",
      "description": "Module exceeds recommended size limit (531 lines)",
      "suggestion": "Consider splitting into smaller modules"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\run_intelligence_system.py",
      "line_number": 1,
      "rule_number": 16,
      "rule_description": "Module size under 300 lines (500 max)",
      "severity": "high",
      "description": "Module exceeds recommended size limit (946 lines)",
      "suggestion": "Consider splitting into smaller modules"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\semantic_analyzer.py",
      "line_number": 1,
      "rule_number": 16,
      "rule_description": "Module size under 300 lines (500 max)",
      "severity": "high",
      "description": "Module exceeds recommended size limit (778 lines)",
      "suggestion": "Consider splitting into smaller modules"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\semantic_analyzer.py",
      "line_number": 101,
      "rule_number": 4,
      "rule_description": "Functions limited to 60 lines max (including docstrings/comments)",
      "severity": "high",
      "description": "Function 'analyze_semantics' exceeds 60 line limit (85 lines)",
      "suggestion": "Break function into smaller, focused functions"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\semantic_analyzer.py",
      "line_number": 241,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_analyze_classes' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\semantic_analyzer.py",
      "line_number": 281,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_analyze_functions' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\semantic_analyzer.py",
      "line_number": 371,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_extract_semantic_keywords' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\semantic_analyzer.py",
      "line_number": 371,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_extract_semantic_keywords' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\semantic_analyzer.py",
      "line_number": 422,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_determine_purpose' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\semantic_analyzer.py",
      "line_number": 422,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_determine_purpose' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\semantic_analyzer.py",
      "line_number": 481,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_calculate_functionality_score' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\semantic_analyzer.py",
      "line_number": 553,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_identify_code_patterns' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\semantic_analyzer.py",
      "line_number": 629,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_generate_categorization_hints' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\ultimate_perfect_launcher.py",
      "line_number": 56,
      "rule_number": 2,
      "rule_description": "Fixed upper bound loops: use for with ranges or known iterables",
      "severity": "high",
      "description": "Function '_find_files' contains loops without fixed upper bounds",
      "suggestion": "Ensure all loops have known iteration limits"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\ultimate_perfect_launcher.py",
      "line_number": 56,
      "rule_number": 3,
      "rule_description": "No dynamic object resizing after initialization",
      "severity": "medium",
      "description": "Function '_find_files' dynamically resizes objects",
      "suggestion": "Pre-allocate objects with known sizes"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\ultimate_refactor_launcher.py",
      "line_number": 1,
      "rule_number": 16,
      "rule_description": "Module size under 300 lines (500 max)",
      "severity": "medium",
      "description": "Module exceeds recommended size limit (474 lines)",
      "suggestion": "Consider splitting into smaller modules"
    },
    {
      "file_path": "C:\\Users\\kbass\\OneDrive\\Documents\\testmaster\\tools\\codebase_reorganizer\\validation_module.py",
      "line_number": 1,
      "rule_number": 16,
      "rule_description": "Module size under 300 lines (500 max)",
      "severity": "high",
      "description": "Module exceeds recommended size limit (651 lines)",
      "suggestion": "Consider splitting into smaller modules"
    }
  ]
}