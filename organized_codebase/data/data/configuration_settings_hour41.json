{
  "analysis_metadata": {
    "tool": "configuration_settings_analyzer",
    "version": "1.0",
    "agent": "Agent_C",
    "hours": "41-43",
    "phase": "Utility_Component_Extraction"
  },
  "analysis_results": {
    "files_analyzed": [
      {
        "file": "TestMaster\\accelerated_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\achieve_100_percent.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\agentic_test_monitor.py",
        "error": "f-string expression part cannot include a backslash (agentic_test_monitor.py, line 297)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\api_dependency_mapper.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\architecture_centralization_analysis.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\ARCHIVE_PROTECTION_SYSTEM.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\auto_readme_updater.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\batch_convert_broken_tests.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\class_inheritance_mapper.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\comprehensive_classical_analysis_methods.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\comprehensive_codebase_analysis.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\comprehensive_feature_audit.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\configuration_settings_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\contribution_analysis_detailed.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\convert_batch_small.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\convert_with_genai_sdk.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\convert_with_generativeai.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core_library_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\coupling_analysis_detailed.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\create_real_implementations.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\database_relationship_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\data_flow_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\debug_feature_flags.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\debug_integration_tests.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\DEMONSTRATION_OF_SUPERIORITY.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dependency_graph_analysis.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\design_pattern_recognizer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\documentation_cli.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\duplicate_code_detector.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\enable_deep_integration.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\enable_features.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\enhanced_context_aware_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\enhanced_incremental_ast_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\enhanced_intelligent_test_builder.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\enhanced_security_dashboard_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\enhanced_self_healing_verifier.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\enhance_analytics.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\enhance_auto_generated_tests.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\enhance_missing_robust_systems.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\event_flow_mapper.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\exhaustive_stub_analysis.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\finalize_module_splits.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\final_100_percent_fix.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\final_archive_sweep.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\final_integration_fix.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\find_all_stubs.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\find_critical_stubs.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\fix_all_integration_systems.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\fix_analytics_aggregator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\fix_backend_issues.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\fix_dashboard_imports.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\fix_enhanced_test_imports.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\fix_failing_tests.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\fix_final_four_systems.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\fix_final_issues.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\fix_integration_issues_final.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\fix_integration_tests.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\fix_integration_tests_simple.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\fix_syntax.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\fix_testmaster_imports.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\fix_tests_for_real_modules.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\fix_to_100_percent.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\fix_week2_test_imports.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\function_call_graph_builder.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\IMPLEMENTATION_STATUS_CHECK.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\implement_test_stubs.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\independent_test_verifier.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\integration_test_generator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\intelligent_test_builder.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\intelligent_test_builder_offline.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\intelligent_test_builder_v2.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\interface_analysis_detailed.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\layer3_integration_example.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\llm_analysis_monitor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\modularize_api_templates.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\modularize_coverage_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\monitor_progress.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\monitor_to_100.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\parallel_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\parallel_converter_fixed.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\pattern_analysis_detailed.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\performance_profiler.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\phase7_validation.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\quick_test_summary.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\realtime_metrics_collector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\refine_misc_tests.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\relationship_scanner.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\relationship_synthesizer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\replace_stubs_with_archive_implementations.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\restored_asyncio_4.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\restored_asyncio_5.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\restored_asyncio_6.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\restored_json_4.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\restored_json_5.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\restored_json_6.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\restored_logging_4.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\restored_logging_5.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\restored_logging_6.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\restored_os_6.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\restored_random_6.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\restored_sys_6.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\restored_threading_4.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\restored_threading_5.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\restored_threading_6.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\restored_time_4.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\restored_time_5.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\restored_time_6.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\restored_uuid_4.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\restored_uuid_5.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\restored_uuid_6.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\restore_missing_methods.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\restore_real_implementations.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\restore_robust_implementations.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\risk_based_test_targeter.py",
        "error": "invalid syntax. Perhaps you forgot a comma? (risk_based_test_targeter.py, line 393)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\run_debt_analysis.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\run_integration_test.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\run_intelligent_tests.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\run_security_scan.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\shared_component_identifier.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\simple_consolidation_test.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\simple_test.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\simple_test_runner.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\simple_web_monitor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\specialized_test_generators.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\split_massive_test_file.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\split_oversized_modules.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_100_percent_integration.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_advanced_telemetry_system.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_after_refactor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_agent_b_integrations.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_agent_qa_integration.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_agent_qa_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_analyzer_tab.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_api_functionality.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_async_processing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_backend_health.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_before_refactor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_classical_analysis.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_complexity_prioritizer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_comprehensive_analysis.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_config_intelligence.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_dependency_orderer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_dynamic_handoff_integration.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_enhanced_analysis.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_enhanced_core_integration.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_enhanced_server.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_enhancements.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_exhaustive_features.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_final_integration.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_flow_optimizer_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_graph_workflow_integration.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_hierarchical_planning_complete.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_integration_systems.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_intelligence_integration.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_llm_intelligence.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_multi_objective_optimization.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_our_implementations.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_performance_dashboard_integration.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_phase1_integration.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_phase1_simple.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_phase2_exhaustive_validation.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_phase2_integration.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_phase2_simple.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_phase2_simple_validation.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_phase3_complete.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_phase3_deployment.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_phase3_ui.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_reporting_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_routes.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_safe_consolidation.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_security_api_server.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_streaming_generation.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_streaming_simple.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_tot_integration.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_tracking_manager_integration.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_unified_integration.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_universal_ast_system.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\test_universal_language_detector.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\turbo_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\unified_converter.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\unified_orchestration_example.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\utility_analysis_report.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\utility_function_extractor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\validate_api_endpoints.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\validate_dashboard_core.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\validate_newton_destroyer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\validate_phase_1_7.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\web_monitor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\week_5_8_batch_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\week_7_8_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\write_real_tests.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\agents\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\agents\\roles\\base_role.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\agents\\roles\\quality_assurance.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\agents\\roles\\test_architect.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\agents\\roles\\test_coordinator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\agents\\roles\\test_engineer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\agents\\roles\\test_executor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\agents\\roles\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\agents\\supervisor\\testing_supervisor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\agents\\supervisor\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\agents\\team\\testing_team.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\agents\\team\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\anomaly_detection\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\business_analysis\\business_core_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\business_analysis\\business_domain_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\business_analysis\\business_rule_analysis_wrapper.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\business_analysis\\business_validation_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\business_analysis\\business_workflow_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\business_analysis\\_shared_utils.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\business_analysis\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\cognitive_load\\cognitive_load_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\cognitive_load\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\data_pipeline\\data_pipeline_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\data_pipeline\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\data_security\\data_leakage_detector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\data_security\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\debt_analysis\\debt_category_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\debt_analysis\\debt_core_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\debt_analysis\\debt_financial_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\debt_analysis\\technical_debt_analysis_wrapper.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\debt_analysis\\_shared_utils.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\debt_analysis\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\domain_modeling\\domain_model_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\domain_modeling\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\energy_analysis\\energy_algorithm_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\energy_analysis\\energy_carbon_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\energy_analysis\\energy_consumption_analysis_wrapper.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\energy_analysis\\energy_core_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\energy_analysis\\_shared_utils.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\energy_analysis\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\metaprog_analysis\\metaprogramming_analysis_wrapper.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_core_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_reflection_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\metaprog_analysis\\metaprog_security_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\metaprog_analysis\\_shared_utils.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\metaprog_analysis\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\ml_analysis\\ml_code_analysis_wrapper.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\ml_analysis\\ml_data_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\ml_analysis\\ml_tensor_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\ml_analysis\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\pattern_mining\\cross_repo_pattern_miner.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\pattern_mining\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\pattern_recognition\\ml_pattern_recognition.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\pattern_recognition\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\realtime_analysis\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\security_monitoring\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\semantic_analysis\\semantic_analysis_wrapper.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\semantic_analysis\\semantic_context_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\semantic_analysis\\semantic_core_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\semantic_analysis\\semantic_pattern_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\semantic_analysis\\_shared_utils.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\semantic_analysis\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\workflow_analysis\\workflow_pattern_detector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\workflow_analysis\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\analytics\\failure_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\api\\orchestration_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\api\\orchestration_flask.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\api\\phase2_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\api\\phase3_api.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\advanced_testing_intelligence.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\api_templates_original_2813_lines.py",
        "error": "invalid syntax. Perhaps you forgot a comma? (api_templates_original_2813_lines.py, line 749)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\archive\\architectural_decision_engine_original_2388_lines_20250821_130612.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\architectural_evolution_predictor_original_2410_lines_20250821_113953.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\archive_system.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\coverage_analyzer_original_2697_lines.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\from_subarchive_business_rule_analysis_original.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\from_subarchive_energy_consumption_analysis_original.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\from_subarchive_ml_code_analysis_original.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\from_subarchive_semantic_analysis_original.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\from_subarchive_technical_debt_analysis_original.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\integration_hub_original_20250820_220939.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\placeholder_replacement_20250820_011555_cross_system_communication.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\real_impl_backup_1755670819_distributed_task_queue.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\superseded_toplevel_energy_consumption_analysis.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\superseded_toplevel_ml_code_analysis.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\superseded_toplevel_technical_debt_analysis.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\test_misc_original_6141_lines.py",
        "error": "unexpected indent (test_misc_original_6141_lines.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\archive\\test_tot_output_original_18164_lines_20250821_040109.py",
        "error": "(unicode error) 'unicodeescape' codec can't decode bytes in position 25-26: truncated \\UXXXXXXXX escape (test_tot_output_original_18164_lines_20250821_040109.py, line 4)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\archive\\test_uncategorized_original_3557_lines_20250821_113530.py",
        "error": "unexpected indent (test_uncategorized_original_3557_lines_20250821_113530.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\archive\\20250818\\web_monitor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_aggregator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_anomaly_detector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_backup.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_batch_processor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_compressor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_correlator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_enhancer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_event_queue.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_flow_monitor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_health_monitor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_heartbeat_monitor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_metrics_collector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_normalizer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_monitor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_pipeline_health_monitor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quality_assurance.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_recovery_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_streaming.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_validator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\COMPLETE_REFACTOR_20250818_112844\\fix_enhanced_test_imports.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\COMPLETE_REFACTOR_20250818_112844\\fix_failing_tests.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\COMPLETE_REFACTOR_20250818_112844\\fix_syntax.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\COMPLETE_REFACTOR_20250818_112844\\fix_tests_for_real_modules.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\COMPLETE_REFACTOR_20250818_112844\\fix_week2_test_imports.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\automatic_scaling_system_robust.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\comprehensive_error_recovery_robust.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\cross_system_analytics_robust.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\cross_system_apis_robust.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\intelligent_caching_layer_robust.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\predictive_analytics_engine_robust.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\realtime_performance_monitoring_robust.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\workflow_execution_engine_robust.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\accelerated_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\achieve_100_percent.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\achieve_100_percent_coverage.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\agentic_test_monitor.py",
        "error": "f-string expression part cannot include a backslash (agentic_test_monitor.py, line 216)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\ai_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\automated_test_generation.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\batch_convert_broken_tests.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\batch_gemini_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\branch_coverage_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\check_what_needs_tests.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\comprehensive_test_framework.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\convert_batch_small.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\convert_with_genai_sdk.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\convert_with_generativeai.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\coverage_analysis.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\coverage_baseline.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\coverage_improver.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\data_flow_tests.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\diagnose_final_five.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\enhanced_self_healing_verifier.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\enhance_auto_generated_tests.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\fast_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\final_five_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\find_truly_missing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\fix_all_imports.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\fix_enhanced_test_imports.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\fix_failing_tests.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\fix_import_paths.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\fix_remaining_issues.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\fix_tests_for_real_modules.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\fix_test_infrastructure.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\fix_week2_test_imports.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\gemini_powered_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\gemini_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\generate_coverage_sequential.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\implement_test_stubs.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\independent_test_verifier.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\integration_test_generator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\integration_test_matrix.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\intelligent_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\intelligent_test_builder.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\intelligent_test_builder_offline.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\intelligent_test_builder_v2.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\measure_final_coverage.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\monitor_progress.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\monitor_to_100.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\parallel_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\parallel_converter_fixed.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\parallel_converter_working.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\parallel_coverage_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\quick_coverage_boost.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\quick_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\quick_test_summary.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\run_intelligent_tests.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\run_limited_coverage.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\self_healing_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\simple_100_percent.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\simple_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\simple_test_runner.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\smart_test_generator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\specialized_test_generators.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\systematic_coverage.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\testmaster_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\test_gemini_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\test_gemini_config.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\test_gemini_correct.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\test_single_api_call.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\test_single_generation.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\test_updated_prompt.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\turbo_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\week_5_8_batch_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\week_7_8_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\working_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\write_real_tests.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\modularization_20250820_222253\\testing_hub_original_1375_lines.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\modularization_20250821\\business_analyzer_original.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\modularization_20250821\\semantic_analyzer_original.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\modularization_integration\\integration_hub_original_1876_lines.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\accelerated_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\agentic_test_monitor.py",
        "error": "f-string expression part cannot include a backslash (agentic_test_monitor.py, line 216)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\archive\\original_backup\\batch_convert_broken_tests.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\convert_batch_small.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\convert_with_genai_sdk.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\convert_with_generativeai.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\enhanced_context_aware_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\enhanced_self_healing_verifier.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\enhance_auto_generated_tests.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\fix_enhanced_test_imports.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\fix_failing_tests.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\fix_import_paths.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\fix_tests_for_real_modules.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\fix_week2_test_imports.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\implement_test_stubs.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\independent_test_verifier.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\integration_test_generator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\intelligent_test_builder.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\intelligent_test_builder_offline.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\intelligent_test_builder_v2.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\monitor_progress.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\monitor_to_100.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\parallel_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\parallel_converter_fixed.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\quick_test_summary.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\run_intelligent_tests.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\simple_test_runner.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\specialized_test_generators.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\testmaster_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\turbo_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\week_5_8_batch_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\week_7_8_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\write_real_tests.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\analytics\\failure_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\cache\\intelligent_cache.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\dashboard\\quality_dashboard.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\deduplication\\test_deduplicator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\incremental\\dependency_tracker.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\optimization\\execution_optimizer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\achieve_100_percent.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\achieve_100_percent_coverage.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\ai_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\batch_gemini_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\branch_coverage_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\check_what_needs_tests.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\coverage_baseline.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\coverage_improver.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\diagnose_final_five.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\fast_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\final_five_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\find_truly_missing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\fix_all_imports.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\fix_remaining_issues.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\fix_test_infrastructure.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\gemini_powered_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\gemini_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\generate_coverage_sequential.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\intelligent_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\measure_final_coverage.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\parallel_converter_working.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\parallel_coverage_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\parallel_coverage_converter_fixed.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\quick_coverage_boost.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\quick_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\run_limited_coverage.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\self_healing_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\simple_100_percent.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\simple_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\smart_test_generator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\systematic_coverage.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\test_gemini_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\test_gemini_config.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\test_gemini_correct.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\test_single_api_call.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\test_single_generation.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\test_updated_prompt.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\working_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\src\\automated_test_generation.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\src\\comprehensive_test_framework.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\src\\coverage_analysis.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\src\\data_flow_tests.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\original_backup\\src\\integration_test_matrix.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\analysis\\business_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\api\\enterprise_integration_layer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\coordination\\agent_coordination_protocols.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\coordination\\resource_coordination_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\coordination\\unified_workflow_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\documentation\\revolutionary\\neo4j_dominator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\ml\\advanced\\delivery_optimizer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\ml\\advanced\\integrity_ml_guardian.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\ml\\advanced\\performance_optimizer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\ml\\advanced\\sla_ml_optimizer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\ml\\enterprise\\ml_infrastructure_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\monitoring\\performance_optimization_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\validation\\integration_test_suite.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\validation\\system_validation_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\agent_ops.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\async_state_manager.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\enhanced_monitor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\unified_monitor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\cross_module_tester.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\visual_workflow_designer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195114.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase4_archive\\replaced_code\\agent_ops_20250819_195132.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase4_archive\\replaced_code\\enhanced_monitor_20250819_195132.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase5_archive\\replaced_code\\agent_graph_20250819_195602.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase5_archive\\replaced_code\\enterprise_deployment_20250819_195602.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase5_archive\\replaced_code\\testing_team_20250819_195602.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase6_archive\\replaced_code\\agent_graph_20250819_200928.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase7_archive\\replaced_code\\enhanced_monitor_20250819_202006.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\phase7_archive\\replaced_code\\interactive_dashboard_20250819_202006.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\state_cache_consolidation_20250821_084236\\parallel_coverage_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\archive\\state_cache_consolidation_20250821_084236\\shared_state.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\cache\\intelligent_cache.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\config\\config_migration.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\config\\enhanced_unified_config.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\config\\hierarchical_config_coordinator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\config\\testmaster_config.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\config\\unified_config.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\config\\yaml_config_enhancer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\config\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\config\\modules\\api_config.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\config\\modules\\data_models.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\config\\modules\\infrastructure_config.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\config\\modules\\integration_config.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\config\\modules\\ml_config.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\config\\modules\\monitoring_config.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\config\\modules\\security_config.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\config\\modules\\testing_config.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\config\\modules\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\consolidation\\feature_discovery.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\ast_abstraction.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\async_state_manager.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\context_manager.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\feature_flags.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\framework_abstraction.stub_backup.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\language_detection.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\shared_state.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\tracking_manager.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\autonomous_decision_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination_protocol_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\cross_system_semantic_learner.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\cross_system_trend_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\intelligence_command_center.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\intelligent_resource_allocator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\predictive_intelligence_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ultimate_intelligence_nexus.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\advanced_pattern_recognizer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\business_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\business_analyzer_modular.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\business_base.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\business_constraint_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\business_rule_extractor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\business_workflow_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\debt_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\debt_analyzer_modular.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\debt_base.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\debt_code_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\debt_quantifier.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\debt_test_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\ml_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\semantic_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\semantic_analyzer_modular.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\semantic_base.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\semantic_intent_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\semantic_pattern_detector.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\semantic_relationship_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\technical_debt_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_analysis.py",
        "error": "unterminated triple-quoted string literal (detected at line 439) (business_analyzer_analysis.py, line 412)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\business_analyzer_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\debt_analyzer_modules\\debt_analyzer_analysis.py",
        "error": "unexpected indent (debt_analyzer_analysis.py, line 21)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\debt_analyzer_modules\\debt_analyzer_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 531) (debt_analyzer_core.py, line 525)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\debt_analyzer_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analytics\\adaptive_prediction_enhancer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analytics\\advanced_anomaly_detector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analytics\\analytics_anomaly_detector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analytics\\analytics_deduplication.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analytics\\analytics_hub.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analytics\\predictive_analytics_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analytics\\statistical_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analytics\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analytics\\advanced\\correlation_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analytics\\realtime\\streaming_analytics.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\app.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\endpoints.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\enterprise_integration_layer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\intelligence_api.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\intelligence_endpoints.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\ml_api.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\monitoring_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\orchestration_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\performance_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\qa_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\security_blueprint.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\serializers.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\testing_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\ultimate_nexus_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\unified_api_gateway.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\unified_intelligence_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\enterprise_integration_layer_modules\\enterprise_integration_layer_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 591) (enterprise_integration_layer_core.py, line 576)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\enterprise_integration_layer_modules\\enterprise_integration_layer_processing.py",
        "error": "unterminated triple-quoted string literal (detected at line 591) (enterprise_integration_layer_processing.py, line 553)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\enterprise_integration_layer_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\ml_api_modules\\ml_api_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 398) (ml_api_core.py, line 382)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\ml_api_modules\\ml_api_endpoints.py",
        "error": "unterminated triple-quoted string literal (detected at line 400) (ml_api_endpoints.py, line 393)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\ml_api_modules\\ml_api_monitoring.py",
        "error": "unterminated triple-quoted string literal (detected at line 398) (ml_api_monitoring.py, line 351)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\ml_api_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\base\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\caching\\distributed_smart_cache.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\communication\\unified_communication_service.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\communication\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\compatibility\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\agent_coordination_protocols.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\cross_agent_bridge.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\distributed_lock_manager.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\resource_coordination_system.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\service_discovery_registry.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\unified_coordination_service.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\unified_workflow_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\agent_coordination_protocols_modules\\agent_coordination_protocols_core.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\agent_coordination_protocols_modules\\agent_coordination_protocols_part1.py",
        "error": "unterminated triple-quoted string literal (detected at line 653) (agent_coordination_protocols_part1.py, line 642)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\agent_coordination_protocols_modules\\agent_coordination_protocols_part2.py",
        "error": "unterminated triple-quoted string literal (detected at line 653) (agent_coordination_protocols_part2.py, line 614)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\agent_coordination_protocols_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\resource_coordination_system_modules\\resource_coordination_system_core.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\resource_coordination_system_modules\\resource_coordination_system_part1.py",
        "error": "unterminated triple-quoted string literal (detected at line 509) (resource_coordination_system_part1.py, line 491)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\resource_coordination_system_modules\\resource_coordination_system_part2.py",
        "error": "unterminated triple-quoted string literal (detected at line 509) (resource_coordination_system_part2.py, line 498)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\resource_coordination_system_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\unified_workflow_orchestrator_modules\\unified_workflow_orchestrator_core.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\unified_workflow_orchestrator_modules\\unified_workflow_orchestrator_part1.py",
        "error": "unterminated triple-quoted string literal (detected at line 675) (unified_workflow_orchestrator_part1.py, line 637)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\unified_workflow_orchestrator_modules\\unified_workflow_orchestrator_part2.py",
        "error": "unterminated triple-quoted string literal (detected at line 675) (unified_workflow_orchestrator_part2.py, line 641)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\unified_workflow_orchestrator_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\correlation\\cross_system_analytics.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\dashboard\\intelligence_backend.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\data_pipeline\\advanced_data_pipeline.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\adaptive_template_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\agency_swarm_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\api_docs_extractor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\api_interface_validator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\api_validation_framework.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\architecture_validation_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\auto_api_docs_generator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\auto_generator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\bilingual_docs_processor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\comprehensive_visualization_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\cookbook_organization_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\cross_framework_integration.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\design_first_docs.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\diagram_creator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\docstring_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\docs_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\docs_testing_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\doc_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\enterprise_api_docs.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\example_docs_system.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\faq_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\hierarchical_docs_organizer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\intelligence_integration.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\intelligent_content_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\interactive_docs.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\interactive_docs_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\json_docs_processor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\knowledge_management_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\legacy_integration_framework.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\live_architecture.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\markdown_generator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\master_documentation_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\mdx_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\metrics_reporter.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\migration_guide_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\multilingual_docs.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\multimodal_recipe_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\multi_agent_pattern_docs.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\performance_quality_validator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\phase_1_7_integration.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\production_ready_docs.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\quality_assessment_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\recipe_based_learning.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\roadmap_generator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\service_oriented_arch_docs.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\swarms_auto_generation_adapter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\swarms_doc_intelligence_extractor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\swarms_navigation_intelligence.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\swarms_self_healing_docs.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\system_integration_validator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\tracking_integration_docs.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\tutorial_grid_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\tutorial_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\unified_doc_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\ux_excellence_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\workflow_recipe_docs.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\yaml_config_processor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\enterprise\\documentation_intelligence.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\enterprise\\documentation_validator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\enterprise\\enterprise_doc_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\enterprise\\workflow_automation.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\intelligence\\analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\intelligence\\metrics.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\intelligence\\optimizer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\intelligence\\project_coordinator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\intelligence\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\intelligence\\optimization\\content_enhancer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\intelligence\\optimization\\strategy_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\intelligence\\optimization\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\ai_documentation_synthesizer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\codesee_annihilator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\falkordb_obliterator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\interactive_chat_interface.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\living_documentation_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\neo4j_dominator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\newton_graph_destroyer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\neo4j_dominator_modules\\neo4j_dominator_core.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\neo4j_dominator_modules\\neo4j_dominator_part1.py",
        "error": "unterminated string literal (detected at line 25) (neo4j_dominator_part1.py, line 25)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\neo4j_dominator_modules\\neo4j_dominator_part2.py",
        "error": "unterminated string literal (detected at line 20) (neo4j_dominator_part2.py, line 20)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\neo4j_dominator_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\enterprise\\api_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\enterprise\\integration_validator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\enterprise\\reporting_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\enterprise\\api\\endpoint_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\enterprise\\api\\request_router.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\enterprise\\api\\service_registry.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\enterprise\\api\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\infrastructure\\unified_infrastructure_service.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\infrastructure\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\integration\\base.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\integration\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\integration\\components\\cross_system_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\integration\\components\\endpoint_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\integration\\components\\event_processor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\integration\\components\\performance_monitor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\knowledge_graph\\ai_code_explorer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\knowledge_graph\\code_knowledge_graph_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\knowledge_graph\\instant_graph_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\knowledge_graph\\multi_language_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\knowledge_graph\\predictive_code_intelligence.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\knowledge_graph\\visual_relationship_mapper.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\knowledge_graph\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced_models.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\anomaly_algorithms.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\correlation_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\explainability.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\feature_engineering.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\gpu_accelerator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\integration_analysis.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\ml_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\model_registry.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\online_learning.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\pattern_detector.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\self_optimizing_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\statistical_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\adaptive_configuration_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\adaptive_load_balancer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\anomaly_detection.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\batch_processor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\circuit_breaker_ml.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\delivery_optimizer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\distributed_ml_coordinator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\ensemble_meta_learner.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\integrity_ml_guardian.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\intelligent_data_pipeline.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\intelligent_resource_scheduler.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\ml_network_optimizer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\ml_security_guardian.py",
        "error": "unexpected character after line continuation character (ml_security_guardian.py, line 222)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\performance_execution_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\performance_ml_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\performance_optimizer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\predictive_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\predictive_maintenance_ai.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\sla_ml_optimizer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\smart_cache.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\telemetry_export_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\telemetry_ml_collector.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\telemetry_observability_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\watchdog_ml_monitor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\watchdog_process_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\watchdog_recovery_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\circuit_breaker_ml_modules\\circuit_breaker_ml_algorithms.py",
        "error": "unterminated triple-quoted string literal (detected at line 446) (circuit_breaker_ml_algorithms.py, line 425)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\circuit_breaker_ml_modules\\circuit_breaker_ml_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 445) (circuit_breaker_ml_core.py, line 406)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\circuit_breaker_ml_modules\\circuit_breaker_ml_management.py",
        "error": "unterminated triple-quoted string literal (detected at line 445) (circuit_breaker_ml_management.py, line 436)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\circuit_breaker_ml_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\delivery_optimizer_modules\\delivery_optimizer_algorithms.py",
        "error": "unterminated triple-quoted string literal (detected at line 440) (delivery_optimizer_algorithms.py, line 424)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\delivery_optimizer_modules\\delivery_optimizer_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 440) (delivery_optimizer_core.py, line 435)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\delivery_optimizer_modules\\delivery_optimizer_optimization.py",
        "error": "unterminated triple-quoted string literal (detected at line 440) (delivery_optimizer_optimization.py, line 438)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\delivery_optimizer_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\integrity_ml_guardian_modules\\integrity_ml_guardian_algorithms.py",
        "error": "unterminated triple-quoted string literal (detected at line 496) (integrity_ml_guardian_algorithms.py, line 486)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\integrity_ml_guardian_modules\\integrity_ml_guardian_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 496) (integrity_ml_guardian_core.py, line 471)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\integrity_ml_guardian_modules\\integrity_ml_guardian_models.py",
        "error": "unterminated triple-quoted string literal (detected at line 498) (integrity_ml_guardian_models.py, line 482)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\integrity_ml_guardian_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\performance_optimizer_modules\\performance_optimizer_algorithms.py",
        "error": "unterminated triple-quoted string literal (detected at line 397) (performance_optimizer_algorithms.py, line 380)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\performance_optimizer_modules\\performance_optimizer_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 396) (performance_optimizer_core.py, line 360)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\performance_optimizer_modules\\performance_optimizer_optimization.py",
        "error": "unterminated triple-quoted string literal (detected at line 396) (performance_optimizer_optimization.py, line 376)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\performance_optimizer_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\sla_ml_optimizer_algorithms.py",
        "error": "unterminated triple-quoted string literal (detected at line 557) (sla_ml_optimizer_algorithms.py, line 538)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\sla_ml_optimizer_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 556) (sla_ml_optimizer_core.py, line 546)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\sla_ml_optimizer_optimization.py",
        "error": "unterminated triple-quoted string literal (detected at line 556) (sla_ml_optimizer_optimization.py, line 538)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\enterprise\\ml_auto_scaling.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\ml_infrastructure_orchestrator_algorithms.py",
        "error": "unterminated triple-quoted string literal (detected at line 385) (ml_infrastructure_orchestrator_algorithms.py, line 360)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\ml_infrastructure_orchestrator_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 385) (ml_infrastructure_orchestrator_core.py, line 336)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\ml_infrastructure_orchestrator_models.py",
        "error": "unterminated triple-quoted string literal (detected at line 387) (ml_infrastructure_orchestrator_models.py, line 363)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\advanced_monitoring_coordinator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\agent_qa.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\agent_qa_modular.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\enterprise_performance_monitor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\pattern_detector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\performance_optimization_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\qa_base.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\qa_monitor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\qa_scorer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\unified_performance_hub.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\unified_qa_framework.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\agent_qa_modules\\agent_qa_core.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\agent_qa_modules\\agent_qa_part1.py",
        "error": "unterminated triple-quoted string literal (detected at line 701) (agent_qa_part1.py, line 662)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\agent_qa_modules\\agent_qa_part2.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\agent_qa_modules\\agent_qa_part2b.py",
        "error": "unexpected indent (agent_qa_part2b.py, line 1)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\agent_qa_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\performance_optimization_engine_modules\\performance_optimization_engine_analysis.py",
        "error": "unterminated triple-quoted string literal (detected at line 391) (performance_optimization_engine_analysis.py, line 383)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\performance_optimization_engine_modules\\performance_optimization_engine_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 391) (performance_optimization_engine_core.py, line 380)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\performance_optimization_engine_modules\\performance_optimization_engine_processing.py",
        "error": "unterminated triple-quoted string literal (detected at line 392) (performance_optimization_engine_processing.py, line 342)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\performance_optimization_engine_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\orchestration\\agent_coordinator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\orchestration\\cross_system_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\orchestration\\integration_hub.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\prediction\\forecaster.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\queuing\\express_priority_queue.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\reliability\\enterprise_error_recovery.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\reliability\\quantum_retry_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\reliability\\quantum_retry_strategies.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\reliability\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\advanced_security_intelligence.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\ai_security_integration.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\audit_logger.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\code_vulnerability_scanner.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\compliance_checker.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\dependency_scanner.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\knowledge_graph_integration.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\security_analytics.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\security_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\security_compliance_validator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\security_dashboard.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\threat_intelligence_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\threat_modeler.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\ultimate_security_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\unified_security_service.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\vulnerability_scanner.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\audit\\audit_events.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\audit\\audit_interface.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\audit\\audit_reporter.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\audit\\audit_storage.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\audit\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\enterprise\\compliance_automation.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\enterprise\\governance_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\enterprise\\security_intelligence.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\enterprise\\security_validator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\enterprise\\intelligence\\incident_responder.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\enterprise\\intelligence\\threat_detector.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\enterprise\\intelligence\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\enterprise\\validation\\compliance_validator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\enterprise\\validation\\integration_validator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\enterprise\\validation\\penetration_tester.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\streaming\\event_streaming_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\advanced_testing_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\automation_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\base.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\chaos_engineer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\contract_tester.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\flaky_test_detector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\fuzzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\load_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\mutation_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\property_tester.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\quality_dashboard.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\regression_detector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\security_fuzzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\testing_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\test_analytics.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\test_intelligence.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\test_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\test_quality_scorer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\test_selector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\advanced\\ml_test_optimizer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\advanced\\statistical_coverage_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\advanced\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\ai_generation\\claude_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\ai_generation\\universal_ai_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\ai_generation\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\automation\\continuous_testing_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\automation\\enterprise_test_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\automation\\test_maintenance_system.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\automation\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\components\\coverage_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\components\\execution_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\components\\integration_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\components\\ml_optimizer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\enterprise\\predictive_test_failure.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\enterprise\\quality_analytics_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\enterprise\\quality_gate_automation.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\enterprise\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\patterns\\agency_swarm_patterns.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\patterns\\agentscope_patterns.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\patterns\\crewai_patterns.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\patterns\\falkordb_patterns.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\security\\advanced_owasp_tester.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\security\\api_security_tester.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\security\\compliance_validator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\security\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\validation\\integration_test_suite.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\validation\\system_validation_framework.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\validation\\unified_validation_service.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\validation\\integration_test_suite_modules\\integration_test_suite_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 368) (integration_test_suite_core.py, line 368)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\validation\\integration_test_suite_modules\\integration_test_suite_processing.py",
        "error": "unterminated triple-quoted string literal (detected at line 368) (integration_test_suite_processing.py, line 368)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\validation\\integration_test_suite_modules\\integration_test_suite_validation.py",
        "error": "unterminated triple-quoted string literal (detected at line 370) (integration_test_suite_validation.py, line 346)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\validation\\integration_test_suite_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\validation\\system_validation_framework_modules\\system_validation_framework_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 657) (system_validation_framework_core.py, line 645)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\validation\\system_validation_framework_modules\\system_validation_framework_validation.py",
        "error": "unterminated triple-quoted string literal (detected at line 657) (system_validation_framework_validation.py, line 609)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\validation\\system_validation_framework_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\visualization\\agent_interface_systems.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\visualization\\dashboard_systems.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\visualization\\data_visualization_engines.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\visualization\\development_tools_ui.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\visualization\\interactive_visualizations.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\visualization\\observability_systems.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\visualization\\realtime_ui_components.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\visualization\\user_experience_frameworks.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\visualization\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\adaptive_fallback_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\adaptive_security_resilience.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\agent_communication_security.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\api_security_layer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\authentication_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\byzantine_consensus_security.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\circuit_breaker_matrix.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\cloud_event_security.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\code_generation_security.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\compliance_framework.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\configuration_security.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\container_security_validator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\data_integrity_guardian.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\distributed_agent_registry.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\distributed_communication_security.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\distributed_coordination_security.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\distributed_key_management_security.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\document_classification_security.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\enterprise_audit_logging.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\enterprise_authentication.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\enterprise_auth_gateway.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\enum_security.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\error_handler.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\error_isolation_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\error_recovery_framework.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\exception_monitoring.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\fault_tolerance_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\file_security_handler.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\flow_persistence_security.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\graceful_degradation_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\guardrail_security_system.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\health_monitoring_nexus.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\identity_validation_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\license_compliance_framework.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\message_context_security.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\multi_agent_access_control.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\multi_agent_evaluation_security.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\network_security_controls.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\operational_security.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\quantum_retry_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\rate_limiter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\resilience_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\retry_mechanism_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\secure_message_delivery.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\secure_performance_optimizer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\security_monitoring_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\self_healing_coordinator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\service_mesh_security.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\thread_safety_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\threat_intelligence_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\validation_security.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\vulnerability_detection_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\security\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\adaptive_testing_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\agent_reasoning_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\archive_intelligence_mining.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\async_sync_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\collaborative_testing_platform.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\communication_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\competitive_analysis_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\crew_thread_safety_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\distributed_test_coordinator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\enterprise_test_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\flow_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\formatter_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\graph_async_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\graph_constraints_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\graph_index_testing.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\graph_operations_testing.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\graph_performance_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\graph_vector_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\hallucination_guardrail_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\hook_testing.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\integration_test_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\intelligence_synthesis_framework.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\intelligent_test_generator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\langgraph_supervisor_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\mcp_testing.py",
        "error": "unmatched ')' (mcp_testing.py, line 93)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\multimodal_validation_testing.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\multi_modal_test_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\parallel_test_executor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\pattern_consolidation_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\performance_test_suite.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\pipeline_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\react_agent_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\repository_intelligence_aggregator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\response_validation_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\run_all_tests.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\session_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\supercharged_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\supercharged_test_generator.py_stub_backup_20250821_042438.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\task_guardrails_testing.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\testmaster_api_gateway.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\test_ai_code_exploration.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\test_coverage_optimizer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\test_evolution_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\test_integration_hub.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\test_intelligence_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\test_knowledge_graph_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\test_multi_language_superiority.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\test_quality_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\test_ui_interface_superiority.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\test_zero_setup_domination.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\thread_retry_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\tool_factory_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\tool_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\tracing_testing.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\unified_test_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\user_input_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\foundation\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\foundation\\abstractions\\ast_abstraction.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\foundation\\abstractions\\language_detection.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\foundation\\abstractions\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\foundation\\configuration\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\foundation\\configuration\\base\\config_base.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\foundation\\configuration\\base\\validation.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\foundation\\configuration\\base\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\foundation\\context\\tracking_manager.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\foundation\\context\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\foundation\\observability\\agent_ops_separate.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\foundation\\observability\\unified_monitor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\foundation\\observability\\unified_monitor_enhanced.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\foundation\\observability\\unified_monitor_enhanced.stub_backup.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\foundation\\shared\\context_manager.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\foundation\\shared\\feature_flags.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\foundation\\shared\\shared_state.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\foundation\\shared\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\integration\\foundations\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\integration\\foundations\\abstractions\\adapter_abstractions.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\integration\\foundations\\abstractions\\communication_context.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\integration\\foundations\\abstractions\\integration_base.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\integration\\foundations\\abstractions\\service_abstractions.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\integration\\foundations\\abstractions\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\architectural_decision_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\architectural_decision_engine_consolidated.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\architectural_evolution_predictor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\autonomous_decision_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\autonomous_governance_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\autonomous_replication_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\continuous_validation_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination_protocol_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\cross_system_semantic_learner.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\cross_system_trend_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\emergent_intelligence_detector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\final_validation_suite.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\intelligence_certification_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\intelligence_command_center.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\intelligence_integration_master.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\intelligence_perfection_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\intelligence_testing_framework.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\intelligent_resource_allocator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\intelligent_workflow_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\meta_intelligence_core.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\meta_intelligence_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\predictive_intelligence_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\prescriptive_intelligence_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\quantum_prediction_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\recursive_intelligence_optimizer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\semantic_code_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\temporal_intelligence_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ultimate_integration_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ultimate_intelligence_nexus.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\unified_architecture_intelligence.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\unified_architecture_intelligence_complete.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\unified_architecture_intelligence_part2.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\advanced_pattern_recognizer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\business_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\business_analyzer_modular.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\business_base.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\business_constraint_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\business_rule_extractor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\business_workflow_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\comprehensive_analysis_hub.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\debt_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\debt_analyzer_modular.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\debt_base.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\debt_code_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\debt_quantifier.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\debt_test_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\ml_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\safe_comprehensive_analysis_hub.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\semantic_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\semantic_analyzer_modular.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\semantic_base.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\semantic_intent_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\semantic_pattern_detector.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\semantic_relationship_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\technical_debt_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_analysis.py",
        "error": "unterminated triple-quoted string literal (detected at line 439) (business_analyzer_analysis.py, line 412)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_core.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\business_analyzer_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\debt_analyzer_modules\\debt_analyzer_analysis.py",
        "error": "unexpected indent (debt_analyzer_analysis.py, line 21)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\debt_analyzer_modules\\debt_analyzer_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 531) (debt_analyzer_core.py, line 525)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\debt_analyzer_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analytics\\adaptive_prediction_enhancer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analytics\\advanced_anomaly_detector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analytics\\analytics_anomaly_detector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analytics\\analytics_deduplication.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analytics\\analytics_hub.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analytics\\predictive_analytics_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analytics\\statistical_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analytics\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analytics\\advanced\\correlation_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\analytics\\realtime\\streaming_analytics.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\app.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\endpoints.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\enterprise_integration_layer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\intelligence_api.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\intelligence_endpoints.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\ml_api.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\monitoring_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\orchestration_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\performance_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\qa_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\security_blueprint.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\serializers.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\testing_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\ultimate_nexus_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\unified_api_gateway.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\unified_intelligence_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\enterprise_integration_layer_modules\\enterprise_integration_layer_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 591) (enterprise_integration_layer_core.py, line 576)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\enterprise_integration_layer_modules\\enterprise_integration_layer_processing.py",
        "error": "unterminated triple-quoted string literal (detected at line 591) (enterprise_integration_layer_processing.py, line 553)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\enterprise_integration_layer_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\ml_api_modules\\ml_api_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 398) (ml_api_core.py, line 382)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\ml_api_modules\\ml_api_endpoints.py",
        "error": "unterminated triple-quoted string literal (detected at line 400) (ml_api_endpoints.py, line 393)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\ml_api_modules\\ml_api_monitoring.py",
        "error": "unterminated triple-quoted string literal (detected at line 398) (ml_api_monitoring.py, line 351)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\ml_api_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\architectural_decision_modules\\data_models.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\architectural_decision_modules\\decision_scorer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\architectural_decision_modules\\microservice_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\architectural_decision_modules\\pattern_evolution_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\architectural_decision_modules\\performance_optimizer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\architectural_decision_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\architectural_evolution\\growth_modeler.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\architectural_evolution\\predictor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\architectural_evolution\\types_and_structures.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\architectural_evolution\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\architectural_evolution_modules\\data_models.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\architectural_evolution_modules\\scalability_forecaster.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\architectural_evolution_modules\\system_growth_modeler.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\architectural_evolution_modules\\technology_trend_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\architectural_evolution_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\archive\\architectural_evolution_predictor_original.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\base\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\caching\\distributed_smart_cache.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\communication\\unified_communication_service.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\communication\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\compatibility\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\agent_coordination_protocols.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\cross_agent_bridge.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\distributed_lock_manager.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\resource_coordination_system.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\service_discovery_registry.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\unified_coordination_service.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\unified_workflow_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\agent_coordination_protocols_modules\\agent_coordination_protocols_core.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\agent_coordination_protocols_modules\\agent_coordination_protocols_part1.py",
        "error": "unterminated triple-quoted string literal (detected at line 653) (agent_coordination_protocols_part1.py, line 642)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\agent_coordination_protocols_modules\\agent_coordination_protocols_part2.py",
        "error": "unterminated triple-quoted string literal (detected at line 653) (agent_coordination_protocols_part2.py, line 614)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\agent_coordination_protocols_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\resource_coordination_system_modules\\resource_coordination_system_core.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\resource_coordination_system_modules\\resource_coordination_system_part1.py",
        "error": "unterminated triple-quoted string literal (detected at line 509) (resource_coordination_system_part1.py, line 491)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\resource_coordination_system_modules\\resource_coordination_system_part2.py",
        "error": "unterminated triple-quoted string literal (detected at line 509) (resource_coordination_system_part2.py, line 498)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\resource_coordination_system_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\unified_workflow_orchestrator_modules\\unified_workflow_orchestrator_core.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\unified_workflow_orchestrator_modules\\unified_workflow_orchestrator_part1.py",
        "error": "unterminated triple-quoted string literal (detected at line 675) (unified_workflow_orchestrator_part1.py, line 637)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\unified_workflow_orchestrator_modules\\unified_workflow_orchestrator_part2.py",
        "error": "unterminated triple-quoted string literal (detected at line 675) (unified_workflow_orchestrator_part2.py, line 641)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\unified_workflow_orchestrator_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\correlation\\cross_system_analytics.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\dashboard\\intelligence_backend.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\data_pipeline\\advanced_data_pipeline.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\adaptive_template_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\agency_swarm_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\api_docs_extractor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\api_interface_validator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\api_validation_framework.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\architecture_validation_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\auto_api_docs_generator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\auto_generator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\bilingual_docs_processor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\comprehensive_visualization_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\cookbook_organization_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\cross_framework_integration.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\cross_system_dependency_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\design_first_docs.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\diagram_creator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\docstring_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\docs_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\docs_testing_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\documentation_api_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\doc_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\enterprise_api_docs.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\example_docs_system.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\faq_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\hierarchical_docs_organizer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\intelligence_integration.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\intelligent_content_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\interactive_docs.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\interactive_docs_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\json_docs_processor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\knowledge_management_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\legacy_integration_framework.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\live_architecture.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\markdown_generator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\master_documentation_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\mdx_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\metrics_reporter.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\migration_guide_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\multilingual_docs.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\multimodal_recipe_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\multi_agent_pattern_docs.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\performance_quality_validator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\phase_1_7_integration.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\production_ready_docs.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\quality_assessment_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\recipe_based_learning.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\roadmap_generator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\service_oriented_arch_docs.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\swarms_auto_generation_adapter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\swarms_doc_intelligence_extractor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\swarms_navigation_intelligence.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\swarms_self_healing_docs.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\system_integration_validator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\tracking_integration_docs.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\tutorial_grid_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\tutorial_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\unified_doc_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\ux_excellence_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\validation_dashboard_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\workflow_recipe_docs.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\yaml_config_processor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\enterprise\\documentation_intelligence.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\enterprise\\documentation_validator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\enterprise\\enterprise_doc_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\enterprise\\workflow_automation.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\intelligence\\analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\intelligence\\metrics.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\intelligence\\optimizer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\intelligence\\project_coordinator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\intelligence\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\intelligence\\optimization\\content_enhancer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\intelligence\\optimization\\strategy_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\intelligence\\optimization\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\revolutionary\\ai_documentation_synthesizer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\revolutionary\\codesee_annihilator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\revolutionary\\falkordb_obliterator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\revolutionary\\interactive_chat_interface.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\revolutionary\\living_documentation_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\revolutionary\\neo4j_dominator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\revolutionary\\newton_graph_destroyer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\revolutionary\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\revolutionary\\neo4j_dominator_modules\\neo4j_dominator_core.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\revolutionary\\neo4j_dominator_modules\\neo4j_dominator_part1.py",
        "error": "unterminated string literal (detected at line 25) (neo4j_dominator_part1.py, line 25)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\revolutionary\\neo4j_dominator_modules\\neo4j_dominator_part2.py",
        "error": "unterminated string literal (detected at line 20) (neo4j_dominator_part2.py, line 20)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\revolutionary\\neo4j_dominator_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\enterprise\\api_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\enterprise\\integration_validator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\enterprise\\reporting_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\enterprise\\api\\endpoint_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\enterprise\\api\\request_router.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\enterprise\\api\\service_registry.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\enterprise\\api\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\infrastructure\\unified_infrastructure_service.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\infrastructure\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\integration\\base.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\integration\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\integration\\components\\cross_system_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\integration\\components\\endpoint_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\integration\\components\\event_processor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\integration\\components\\performance_monitor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\knowledge_graph\\ai_code_explorer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\knowledge_graph\\code_knowledge_graph_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\knowledge_graph\\instant_graph_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\knowledge_graph\\multi_language_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\knowledge_graph\\predictive_code_intelligence.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\knowledge_graph\\visual_relationship_mapper.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\knowledge_graph\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced_models.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\anomaly_algorithms.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\correlation_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\explainability.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\feature_engineering.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\gpu_accelerator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\integration_analysis.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\ml_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\model_registry.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\online_learning.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\pattern_detector.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\self_optimizing_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\statistical_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\adaptive_configuration_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\adaptive_load_balancer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\anomaly_detection.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\batch_processor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\circuit_breaker_ml.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\delivery_optimizer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\distributed_ml_coordinator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\ensemble_meta_learner.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\integrity_ml_guardian.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\intelligent_data_pipeline.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\intelligent_resource_scheduler.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\ml_network_optimizer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\ml_security_guardian.py",
        "error": "unexpected character after line continuation character (ml_security_guardian.py, line 222)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\performance_execution_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\performance_ml_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\performance_optimizer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\predictive_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\predictive_maintenance_ai.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\sla_ml_optimizer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\smart_cache.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\telemetry_export_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\telemetry_ml_collector.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\telemetry_observability_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\watchdog_ml_monitor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\watchdog_process_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\watchdog_recovery_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\circuit_breaker_ml_modules\\circuit_breaker_ml_algorithms.py",
        "error": "unterminated triple-quoted string literal (detected at line 446) (circuit_breaker_ml_algorithms.py, line 425)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\circuit_breaker_ml_modules\\circuit_breaker_ml_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 445) (circuit_breaker_ml_core.py, line 406)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\circuit_breaker_ml_modules\\circuit_breaker_ml_management.py",
        "error": "unterminated triple-quoted string literal (detected at line 445) (circuit_breaker_ml_management.py, line 436)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\circuit_breaker_ml_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\delivery_optimizer_modules\\delivery_optimizer_algorithms.py",
        "error": "unterminated triple-quoted string literal (detected at line 440) (delivery_optimizer_algorithms.py, line 424)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\delivery_optimizer_modules\\delivery_optimizer_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 440) (delivery_optimizer_core.py, line 435)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\delivery_optimizer_modules\\delivery_optimizer_optimization.py",
        "error": "unterminated triple-quoted string literal (detected at line 440) (delivery_optimizer_optimization.py, line 438)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\delivery_optimizer_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\integrity_ml_guardian_modules\\integrity_ml_guardian_algorithms.py",
        "error": "unterminated triple-quoted string literal (detected at line 496) (integrity_ml_guardian_algorithms.py, line 486)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\integrity_ml_guardian_modules\\integrity_ml_guardian_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 496) (integrity_ml_guardian_core.py, line 471)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\integrity_ml_guardian_modules\\integrity_ml_guardian_models.py",
        "error": "unterminated triple-quoted string literal (detected at line 498) (integrity_ml_guardian_models.py, line 482)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\integrity_ml_guardian_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\performance_optimizer_modules\\performance_optimizer_algorithms.py",
        "error": "unterminated triple-quoted string literal (detected at line 397) (performance_optimizer_algorithms.py, line 380)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\performance_optimizer_modules\\performance_optimizer_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 396) (performance_optimizer_core.py, line 360)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\performance_optimizer_modules\\performance_optimizer_optimization.py",
        "error": "unterminated triple-quoted string literal (detected at line 396) (performance_optimizer_optimization.py, line 376)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\performance_optimizer_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\sla_ml_optimizer_algorithms.py",
        "error": "unterminated triple-quoted string literal (detected at line 557) (sla_ml_optimizer_algorithms.py, line 538)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\sla_ml_optimizer_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 556) (sla_ml_optimizer_core.py, line 546)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\sla_ml_optimizer_optimization.py",
        "error": "unterminated triple-quoted string literal (detected at line 556) (sla_ml_optimizer_optimization.py, line 538)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\enterprise\\ml_auto_scaling.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\ml_infrastructure_orchestrator_algorithms.py",
        "error": "unterminated triple-quoted string literal (detected at line 385) (ml_infrastructure_orchestrator_algorithms.py, line 360)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\ml_infrastructure_orchestrator_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 385) (ml_infrastructure_orchestrator_core.py, line 336)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\ml_infrastructure_orchestrator_models.py",
        "error": "unterminated triple-quoted string literal (detected at line 387) (ml_infrastructure_orchestrator_models.py, line 363)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\advanced_monitoring_coordinator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\agent_qa.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\agent_qa_modular.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\enterprise_performance_monitor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\pattern_detector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\performance_optimization_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\qa_base.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\qa_monitor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\qa_scorer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\unified_performance_hub.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\unified_qa_framework.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\agent_qa_modules\\agent_qa_core.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\agent_qa_modules\\agent_qa_part1.py",
        "error": "unterminated triple-quoted string literal (detected at line 701) (agent_qa_part1.py, line 662)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\agent_qa_modules\\agent_qa_part2.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\agent_qa_modules\\agent_qa_part2b.py",
        "error": "unexpected indent (agent_qa_part2b.py, line 1)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\agent_qa_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\performance_optimization_engine_modules\\performance_optimization_engine_analysis.py",
        "error": "unterminated triple-quoted string literal (detected at line 391) (performance_optimization_engine_analysis.py, line 383)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\performance_optimization_engine_modules\\performance_optimization_engine_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 391) (performance_optimization_engine_core.py, line 380)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\performance_optimization_engine_modules\\performance_optimization_engine_processing.py",
        "error": "unterminated triple-quoted string literal (detected at line 392) (performance_optimization_engine_processing.py, line 342)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\performance_optimization_engine_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\orchestration\\agent_coordinator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\orchestration\\cross_system_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\orchestration\\integration_hub.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\prediction\\forecaster.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\queuing\\express_priority_queue.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\reliability\\enterprise_error_recovery.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\reliability\\quantum_retry_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\reliability\\quantum_retry_strategies.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\reliability\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\advanced_security_intelligence.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\ai_security_integration.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\audit_logger.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\code_vulnerability_scanner.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\compliance_checker.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\dependency_scanner.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\knowledge_graph_integration.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\security_analytics.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\security_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\security_compliance_validator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\security_dashboard.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\threat_intelligence_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\threat_modeler.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\ultimate_security_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\unified_security_service.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\vulnerability_scanner.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\audit\\audit_events.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\audit\\audit_interface.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\audit\\audit_reporter.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\audit\\audit_storage.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\audit\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\enterprise\\compliance_automation.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\enterprise\\governance_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\enterprise\\security_intelligence.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\enterprise\\security_validator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\enterprise\\intelligence\\incident_responder.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\enterprise\\intelligence\\threat_detector.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\enterprise\\intelligence\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\enterprise\\validation\\compliance_validator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\enterprise\\validation\\integration_validator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\enterprise\\validation\\penetration_tester.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\streaming\\event_streaming_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\advanced_testing_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\automation_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\base.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\chaos_engineer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\contract_tester.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\flaky_test_detector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\fuzzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\load_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\mutation_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\property_tester.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\quality_dashboard.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\regression_detector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\security_fuzzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\testing_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\test_analytics.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\test_intelligence.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\test_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\test_quality_scorer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\test_selector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\advanced\\ml_test_optimizer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\advanced\\statistical_coverage_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\advanced\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\ai_generation\\claude_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\ai_generation\\universal_ai_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\ai_generation\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\automation\\continuous_testing_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\automation\\enterprise_test_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\automation\\test_maintenance_system.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\automation\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\components\\coverage_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\components\\execution_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\components\\integration_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\components\\ml_optimizer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\enterprise\\predictive_test_failure.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\enterprise\\quality_analytics_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\enterprise\\quality_gate_automation.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\enterprise\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\patterns\\agency_swarm_patterns.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\patterns\\agentscope_patterns.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\patterns\\crewai_patterns.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\patterns\\falkordb_patterns.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\security\\advanced_owasp_tester.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\security\\api_security_tester.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\security\\compliance_validator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\security\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\validation\\integration_test_suite.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\validation\\system_validation_framework.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\validation\\unified_validation_service.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\validation\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\validation\\integration_test_suite_modules\\integration_test_suite_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 368) (integration_test_suite_core.py, line 368)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\validation\\integration_test_suite_modules\\integration_test_suite_processing.py",
        "error": "unterminated triple-quoted string literal (detected at line 368) (integration_test_suite_processing.py, line 368)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\validation\\integration_test_suite_modules\\integration_test_suite_validation.py",
        "error": "unterminated triple-quoted string literal (detected at line 370) (integration_test_suite_validation.py, line 346)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\validation\\integration_test_suite_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\validation\\system_validation_framework_modules\\system_validation_framework_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 657) (system_validation_framework_core.py, line 645)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\validation\\system_validation_framework_modules\\system_validation_framework_validation.py",
        "error": "unterminated triple-quoted string literal (detected at line 657) (system_validation_framework_validation.py, line 609)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\validation\\system_validation_framework_modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\visualization\\agent_interface_systems.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\visualization\\dashboard_systems.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\visualization\\data_visualization_engines.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\visualization\\development_tools_ui.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\visualization\\interactive_visualizations.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\visualization\\observability_systems.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\visualization\\realtime_ui_components.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\visualization\\user_experience_frameworks.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\intelligence\\visualization\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\observability\\agent_ops_separate.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\observability\\unified_monitor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\observability\\unified_monitor_enhanced.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\observability\\unified_monitor_enhanced.stub_backup.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\observability\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\orchestration\\agent_graph.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\orchestration\\enhanced_agent_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\orchestration\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\orchestration\\configuration\\orchestration_config.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\orchestration\\configuration\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\orchestration\\coordination\\discovery\\orchestration_coordinator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\orchestration\\coordination\\master\\master_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\orchestration\\engines\\workflow\\workflow_orchestration_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\orchestration\\foundations\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\orchestration\\foundations\\abstractions\\agent_abstractions.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\orchestration\\foundations\\abstractions\\execution_context.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\orchestration\\foundations\\abstractions\\orchestrator_base.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\orchestration\\foundations\\abstractions\\task_abstractions.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\orchestration\\foundations\\abstractions\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\orchestration\\foundations\\patterns\\hybrid_patterns.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\orchestration\\foundations\\patterns\\intelligence_patterns.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\orchestration\\foundations\\patterns\\swarm_patterns.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\orchestration\\foundations\\patterns\\workflow_patterns.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\orchestration\\foundations\\patterns\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\orchestration\\foundations\\protocols\\communication_protocols.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\orchestration\\foundations\\protocols\\coordination_protocols.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\orchestration\\foundations\\protocols\\integration_protocols.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\orchestration\\foundations\\protocols\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\orchestration\\integration\\hub\\integration_hub.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\reliability\\emergency_backup_recovery.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\adaptive_fallback_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\adaptive_security_resilience.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\agent_communication_security.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\api_security_layer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\authentication_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\byzantine_consensus_security.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\circuit_breaker_matrix.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\cloud_event_security.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\code_generation_security.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\compliance_framework.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\configuration_security.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\container_security_validator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\data_integrity_guardian.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\deployment_pipeline_security.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\distributed_agent_registry.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\distributed_communication_security.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\distributed_coordination_security.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\distributed_key_management_security.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\document_classification_security.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\enterprise_audit_logging.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\enterprise_authentication.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\enterprise_auth_gateway.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\enum_security.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\error_handler.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\error_isolation_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\error_recovery_framework.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\exception_monitoring.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\fault_tolerance_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\file_security_handler.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\flow_persistence_security.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\graceful_degradation_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\guardrail_security_system.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\health_monitoring_nexus.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\identity_validation_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\license_compliance_framework.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\message_context_security.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\multi_agent_access_control.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\multi_agent_evaluation_security.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\network_security_controls.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\operational_security.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\quantum_retry_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\rate_limiter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\resilience_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\retry_mechanism_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\secure_message_delivery.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\secure_performance_optimizer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\security_monitoring_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\self_healing_coordinator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\service_mesh_security.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\thread_safety_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\threat_intelligence_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\validation_framework.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\validation_security.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\vulnerability_detection_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\security\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\services\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\state\\enhanced_state_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\adaptive_testing_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\agent_reasoning_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\archive_intelligence_mining.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\async_sync_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\collaborative_testing_platform.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\communication_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\competitive_analysis_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\crew_thread_safety_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\distributed_test_coordinator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\embedding_cache_testing.py",
        "error": "expected '(' (embedding_cache_testing.py, line 164)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\testing\\enterprise_test_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\flow_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\formatter_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\graph_async_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\graph_constraints_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\graph_index_testing.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\graph_operations_testing.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\graph_performance_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\graph_vector_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\hallucination_guardrail_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\hook_testing.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\integration_test_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\intelligence_synthesis_framework.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\intelligent_test_generator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\langgraph_supervisor_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\mcp_testing.py",
        "error": "unmatched ')' (mcp_testing.py, line 93)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\testing\\multimodal_validation_testing.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\multi_modal_test_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\parallel_test_executor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\pattern_consolidation_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\performance_test_suite.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\pipeline_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\react_agent_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\repository_intelligence_aggregator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\response_validation_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\run_all_tests.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\session_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\supercharged_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\supercharged_test_generator.py_stub_backup_20250821_042438.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\task_guardrails_testing.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\testmaster_api_gateway.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\test_ai_code_exploration.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\test_coverage_optimizer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\test_evolution_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\test_integration_hub.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\test_intelligence_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\test_knowledge_graph_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\test_multi_language_superiority.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\test_quality_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\test_ui_interface_superiority.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\test_zero_setup_domination.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\thread_retry_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\tool_factory_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\tool_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\tracing_testing.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\unified_test_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\testing\\user_input_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\tools\\type_safe_tools.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\core\\tools\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\automated_frontend_simulator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\automated_frontend_tester.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\comprehensive_frontend_test.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\comprehensive_frontend_validator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\debug_blueprints.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\demo_automated_frontend_testing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\discover_backend_features.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\frontend_display_validator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\gunicorn_config.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\integration_gap_analysis.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\quality_dashboard.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\quick_frontend_test.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\quick_integration_test.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\quick_validation.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\server.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\simple_robustness_test.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\test_all_features.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\test_analytics_import.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\test_api_endpoints.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\test_final_enhancements.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\test_frontend_automated.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\test_frontend_integration.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\test_frontend_without_browser.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\test_multi_agent_integration.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\test_new_robustness_features.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\test_new_visualization_apis.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\test_robustness_suite.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\test_robustness_verification.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\test_ultra_reliability.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\ultimate_frontend_validator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\validate_100_percent_real_data.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\validate_all_endpoints.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\wsgi.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\analytics.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\async_processing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\backend_health_monitor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\comprehensive_monitoring.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\coverage.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\crew_orchestration.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\enhanced_analytics.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\enhanced_telemetry.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\flow_optimization.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\frontend_data_contracts.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\health.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\intelligence.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\intelligence_integration.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\knowledge_graph.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\llm.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\monitoring.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\observability.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\orchestration_flask.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\performance.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\phase2_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\production_deployment.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\quality_assurance.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\real_codebase_scanner.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\real_codebase_scanner.stub_backup.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\refactor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\security.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\swarm_orchestration.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\telemetry.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\tests.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\test_generation.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\websocket_dashboard.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\workflow.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\api\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_aggregator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_anomaly_detector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_backup.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_batch_processor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_circuit_breaker.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_compressor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_connectivity_monitor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_correlator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_data_sanitizer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_dead_letter_queue.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_deduplication.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_deduplication_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_delivery_enhancer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_delivery_guarantee.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_delivery_verifier.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_error_recovery.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_event_queue.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_export_manager.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_fallback_system.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_flow_monitor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_health_monitor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_heartbeat_monitor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_integrity_guardian.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_integrity_verifier.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_metrics_collector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_normalizer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_performance_booster.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_performance_monitor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_performance_optimizer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_pipeline.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_pipeline_health_monitor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_priority_queue.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_quality_assurance.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_quantum_retry.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_rate_limiter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_receipt_tracker.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_recovery_orchestrator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_redundancy.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_retry_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_sla_tracker.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_smart_cache.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_streaming.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_telemetry.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_validator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_watchdog.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\cache.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\emergency_backup_recovery.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\error_handler.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\metrics_feed.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\monitor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\predictive_flow_optimizer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\realtime_analytics_tracker.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\real_data_extractor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\real_time_analytics.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\system_monitor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\system_observability_metrics.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\test_collector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\dashboard\\utils\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\deduplication\\test_deduplicator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\deployment\\enterprise_deployment.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\deployment\\service_registry.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\deployment\\swarm_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\deployment\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\documentation\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\documentation\\generators\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\incremental\\dependency_tracker.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\integration\\automatic_scaling_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\integration\\comprehensive_error_recovery.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\integration\\cross_system_analytics.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\integration\\cross_system_apis.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\integration\\cross_system_communication.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\integration\\distributed_task_queue.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\integration\\intelligent_caching_layer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\integration\\load_balancing_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\integration\\multi_environment_support.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\integration\\predictive_analytics_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\integration\\realtime_performance_monitoring.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\integration\\resource_optimization_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\integration\\service_mesh_integration.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\integration\\visual_workflow_designer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\integration\\workflow_execution_engine.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\integration\\workflow_framework.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\integration\\modules\\alert_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\integration\\modules\\health_monitor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\integration\\modules\\metric_collector.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\integration\\modules\\monitoring_models.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\integration\\modules\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\monitoring\\enhanced_monitor_separate.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\monitoring\\monitoring_agents.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\monitoring\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\observability\\unified_observability.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\observability\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\observability\\core\\conversational_interface.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\observability\\core\\cost_management.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\observability\\core\\event_monitoring.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\observability\\core\\multimodal_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\observability\\core\\session_tracking.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\observability\\replay\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\operational\\agent_integration_validator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\operational\\cross_agent_integration_framework.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\operational\\infrastructure_completion_report.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\operational\\infrastructure_validation_suite.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\operational\\perfected_state_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\operational\\streamlined_workflow_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\operational\\ultimate_perfection_validator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\optimization\\execution_optimizer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\orchestration\\swarm_router_enhancement.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\orchestration\\unified_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\orchestration\\modules\\data_models.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\orchestration\\modules\\graph_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\orchestration\\modules\\swarm_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\orchestration\\modules\\swarm_router.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\orchestration\\modules\\unified_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\orchestration\\modules\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\prioritization\\test_prioritizer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\achieve_100_percent.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\achieve_100_percent_coverage.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\ai_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\analyze_components.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\api_documenter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\batch_gemini_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\branch_coverage_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\check_what_needs_tests.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\coverage_baseline.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\coverage_improver.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\dependency_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\diagnose_final_five.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\fast_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\final_five_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\find_truly_missing.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\fix_all_imports.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\fix_remaining_issues.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\fix_test_infrastructure.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\gemini_powered_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\gemini_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\generate_coverage_sequential.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\intelligent_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\measure_final_coverage.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\quick_coverage_boost.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\quick_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\run_limited_coverage.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\self_healing_converter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\simple_100_percent.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\simple_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\smart_test_generator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\systematic_coverage.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\test_gemini_api.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\test_gemini_config.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\test_gemini_correct.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\test_single_api_call.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\test_single_generation.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\test_updated_prompt.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\scripts\\working_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\src\\automated_test_generation.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\src\\comprehensive_test_framework.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\src\\coverage_analysis.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\src\\data_flow_tests.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\src\\integration_test_matrix.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\state\\unified_state_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\layer2_integration.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\main.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\__main__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\agent_qa\\benchmarking_suite.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\agent_qa\\quality_inspector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\agent_qa\\quality_monitor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\agent_qa\\scoring_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\agent_qa\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\api_analysis.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\base_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\clone_detection.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\complexity_analysis.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\concurrency_analysis.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\coupling_cohesion.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\crypto_analysis.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\database_analysis.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\error_handling_analysis.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\evolution_analysis.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\graph_analysis.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\inheritance_polymorphism.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\main_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\memory_analysis.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\performance_analysis.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\quality_analysis.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\resource_io_analysis.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\security_analysis.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\software_metrics.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\statistical_analysis.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\structural_analysis.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\supply_chain_security.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\testing_analysis.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\coverage\\analyzer.py",
        "error": "unexpected indent (analyzer.py, line 5)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\coverage\\base.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\coverage\\codebase_analyzer.py",
        "error": "unexpected indent (codebase_analyzer.py, line 7)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\coverage\\dependency_mapper.py",
        "error": "unexpected indent (dependency_mapper.py, line 7)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\coverage\\health_assessment.py",
        "error": "unexpected indent (health_assessment.py, line 7)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\coverage\\interface.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\coverage\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\async_processing\\async_executor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\async_processing\\async_monitor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\async_processing\\concurrent_scheduler.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\async_processing\\thread_pool_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\async_processing\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\breaking\\failure_detector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\breaking\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\cli\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\communication\\claude_messenger.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\communication\\dynamic_handoff.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\communication\\message_queue.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\communication\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\converters\\base.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\converters\\batch.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\converters\\intelligent.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\converters\\parallel.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\converters\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\core\\ast_abstraction.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\core\\config.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\core\\context_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\core\\exceptions.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\core\\feature_flags.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\core\\language_detection.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\core\\layer_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\core\\monitoring_decorators.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\core\\orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\core\\tracking_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\core\\workflow_graph.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\core\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\core\\ast_abstraction\\language_parsers.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\core\\ast_abstraction\\universal_ast.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\core\\ast_abstraction\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\core\\framework_abstraction\\framework_adapters.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\core\\framework_abstraction\\test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\core\\framework_abstraction\\universal_test.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\core\\framework_abstraction\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\core\\language_detection\\universal_detector.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\core\\language_detection\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\execution\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\flow_optimizer\\dependency_resolver.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\flow_optimizer\\execution_router.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\flow_optimizer\\flow_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\flow_optimizer\\parallel_executor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\flow_optimizer\\resource_optimizer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\flow_optimizer\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\generators\\base.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\generators\\intelligent.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\generators\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\integration\\final_integration_test.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\integration\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\bridges\\event_monitoring_bridge.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\bridges\\protocol_communication_bridge.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\bridges\\session_tracking_bridge.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\bridges\\sop_workflow_bridge.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\bridges\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\consensus\\agent_coordination.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\consensus\\consensus_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\consensus\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\core\\context_builder.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\core\\doc_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\core\\llm_integration.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\core\\quality_assessor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\core\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\generators\\api_doc_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\generators\\architecture_doc_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\generators\\docstring_generator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\generators\\readme_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\generators\\tutorial_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\generators\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\integrations\\ci_cd_integration.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\integrations\\git_integration.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\integrations\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\quality\\completeness_checker.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\quality\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\templates\\docstring_templates.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\templates\\template_engine.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\templates\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\templates\\api\\base.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\templates\\api\\graphql_templates.py",
        "error": "invalid syntax. Perhaps you forgot a comma? (graphql_templates.py, line 33)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\templates\\api\\grpc_templates.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\templates\\api\\manager.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\templates\\api\\rest_templates.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\templates\\api\\webhook_templates.py",
        "error": "unterminated triple-quoted string literal (detected at line 110) (webhook_templates.py, line 63)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\templates\\api\\websocket_templates.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\templates\\api\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\templates\\readme_template_modules\\data_models.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\templates\\readme_template_modules\\generic_templates.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\hierarchical_planning\\htp_reasoning.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\hierarchical_planning\\llm_integration.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\hierarchical_planning\\test_plan_generator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\hierarchical_planning\\unified_integration.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\hierarchical_planning\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\integration\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\integration\\agents\\documentation_agent.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\integration\\agents\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\integration\\coordination\\analysis_coordinator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\integration\\coordination\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\integration\\events\\event_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\integration\\events\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\integration\\features\\feature_flags.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\integration\\features\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\integration\\layers\\layer_manager.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\integration\\layers\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\integration\\storage\\unified_storage.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\integration\\storage\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\llm_providers\\provider_implementations.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\llm_providers\\provider_optimization.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\llm_providers\\universal_llm_provider.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\llm_providers\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\monitoring\\adaptive_resource_bridge.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\monitoring\\bottleneck_detection_resolution_agent.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\monitoring\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\optimization\\multi_objective_optimizer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\optimization\\optimization_algorithms.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\optimization\\test_optimization_objectives.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\optimization\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\security\\security_intelligence_agent.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\security\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\tree_of_thought\\test_thought_generator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\tree_of_thought\\tot_reasoning.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\tree_of_thought\\universal_tot_integration.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\tree_of_thought\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\maintenance\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\mapping\\dependency_tracker.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\mapping\\mapping_cache.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\mapping\\test_mapper.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\mapping\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\monitoring\\file_watcher.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\monitoring\\idle_detector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\monitoring\\test_monitor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\monitoring\\test_scheduler.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\monitoring\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\orchestration\\framework_adapter.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\orchestration\\output_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\orchestration\\universal_orchestrator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\orchestration\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\orchestrator\\file_tagger.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\orchestrator\\handoff_manager.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\orchestrator\\investigator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\orchestrator\\work_distributor.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\orchestrator\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\overview\\coverage_intelligence.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\overview\\performance_dashboard.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\overview\\regression_tracker.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\overview\\structure_mapper.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\overview\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\refactoring\\hierarchical_analyzer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\reporting\\dashboard_builder.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\reporting\\data_collector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\reporting\\metrics_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\reporting\\report_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\reporting\\report_scheduler.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\reporting\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\security\\compliance_framework.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\security\\security_test_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\security\\universal_scanner.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\security\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\streaming\\collaborative_generator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\streaming\\incremental_enhancer.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\streaming\\live_feedback.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\streaming\\stream_generator.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\streaming\\stream_monitor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\streaming\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\telemetry\\flow_analyzer.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\telemetry\\performance_monitor.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\telemetry\\system_profiler.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\telemetry\\telemetry_collector.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\telemetry\\telemetry_dashboard.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\telemetry\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\ui\\alert_system.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\ui\\dashboard.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\ui\\metrics_display.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\ui\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\utils\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\verification\\base.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\verification\\quality.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\verification\\self_healing.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster\\verification\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\tests\\test_intelligence_ml.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\tests\\test_phase2_core_validation.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\tests\\test_phase2_e2e_validation.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\tests\\test_phase2_integration_validation.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\tests\\integration\\test_knowledge_graph_integration.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\tests\\integration\\test_knowledge_graph_simple.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_analysis.py",
        "error": "expected an indented block after function definition on line 12 (test_analysis.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_base.py",
        "error": "expected an indented block after function definition on line 12 (test_base.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_core.py",
        "error": "expected an indented block after function definition on line 12 (test_core.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_dashboard.py",
        "error": "unexpected indent (test_dashboard.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_execution.py",
        "error": "unexpected indent (test_execution.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_generation.py",
        "error": "expected an indented block after function definition on line 12 (test_generation.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_integration.py",
        "error": "expected an indented block after function definition on line 12 (test_integration.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_intelligence.py",
        "error": "expected an indented block after function definition on line 360 (test_intelligence.py, line 363)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_language.py",
        "error": "expected an indented block after function definition on line 12 (test_language.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_messaging.py",
        "error": "expected an indented block after function definition on line 12 (test_messaging.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_monitoring.py",
        "error": "unexpected indent (test_monitoring.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_performance.py",
        "error": "expected an indented block after function definition on line 12 (test_performance.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_quality.py",
        "error": "expected an indented block after function definition on line 12 (test_quality.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_reasoning.py",
        "error": "expected an indented block after function definition on line 12 (test_reasoning.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_reporting.py",
        "error": "expected an indented block after function definition on line 12 (test_reporting.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_self_healing.py",
        "error": "expected an indented block after function definition on line 12 (test_self_healing.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_streaming.py",
        "error": "expected an indented block after function definition on line 12 (test_streaming.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_tagging.py",
        "error": "expected an indented block after function definition on line 12 (test_tagging.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_telemetry.py",
        "error": "expected an indented block after function definition on line 12 (test_telemetry.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_workflow.py",
        "error": "expected an indented block after function definition on line 12 (test_workflow.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_builders.py",
        "error": "unexpected indent (test_builders.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_converters.py",
        "error": "unexpected indent (test_converters.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_engines.py",
        "error": "unexpected indent (test_engines.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_frameworks.py",
        "error": "unexpected indent (test_frameworks.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_handlers.py",
        "error": "unexpected indent (test_handlers.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_integrations.py",
        "error": "unexpected indent (test_integrations.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_layers.py",
        "error": "unexpected indent (test_layers.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_managers.py",
        "error": "unexpected indent (test_managers.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_parsers.py",
        "error": "unexpected indent (test_parsers.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_systems.py",
        "error": "unexpected indent (test_systems.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_trackers.py",
        "error": "unexpected indent (test_trackers.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_uncategorized.py",
        "error": "unexpected indent (test_uncategorized.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\archive\\test_uncategorized_original.py",
        "error": "unexpected indent (test_uncategorized_original.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\modules\\test_benchmarking_quality.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\modules\\test_communication.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\modules\\test_configuration.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\modules\\test_coverage_analysis.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\modules\\test_generation.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\modules\\test_infrastructure.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\modules\\test_quality_verification.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\modules\\test_thought_processing.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\modules\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\uncategorized\\test_batch_config.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\uncategorized\\test_benchmarking_quality.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\uncategorized\\test_comprehensive_remaining.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\uncategorized\\test_messaging_communication.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\uncategorized\\test_state_workflow.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\uncategorized\\test_tagging_ratelimiting.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\uncategorized\\__init__.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\tools\\migration\\analyze_legacy_code.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\ui\\nocode_enhancement.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\ui\\unified_dashboard.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\ui_ux\\agent_verse_ui.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\ui_ux\\interactive_dashboard.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\ui_ux\\studio_interface.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\ui_ux\\__init__.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\unified_tools\\coverage_analysis_master.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\unified_tools\\test_generation_master.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\validation\\phase_validator.py",
        "is_config_file": false,
        "analyzed": true
      },
      {
        "file": "TestMaster\\web_monitor\\core.py",
        "error": "expected an indented block after function definition on line 399 (core.py, line 399)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\web_monitor\\handlers.py",
        "error": "unexpected indent (handlers.py, line 1)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\web_monitor\\utils.py",
        "error": "unexpected indent (utils.py, line 1)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\web_monitor\\validators.py",
        "error": "unexpected indent (validators.py, line 1)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\workflow\\consolidation_workflow.py",
        "is_config_file": true,
        "analyzed": true
      },
      {
        "file": "TestMaster\\testmaster_config.yaml",
        "type": "yaml_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\TestMaster_Intelligence_API.yaml",
        "type": "yaml_config",
        "patterns": [
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\unified_testmaster_config.yaml",
        "type": "yaml_config",
        "patterns": [
          "secret_key",
          "debug_config"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\config\\profiles\\development.yaml",
        "type": "yaml_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\config\\profiles\\production.yaml",
        "type": "yaml_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\config\\templates\\complete_template.yaml",
        "type": "yaml_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\config\\templates\\deployment_template.yaml",
        "type": "yaml_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\config\\templates\\graph_template.yaml",
        "type": "yaml_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\config\\templates\\team_template.yaml",
        "type": "yaml_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\config\\templates\\workflow_template.yaml",
        "type": "yaml_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\api\\openapi_specification.yaml",
        "type": "yaml_config",
        "patterns": [
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\analytics_export.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\backend_health_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\cleanup_results.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\comprehensive_analysis_20250821_045021.json",
        "type": "json_config",
        "patterns": [
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\comprehensive_analysis_20250821_054005.json",
        "type": "json_config",
        "patterns": [
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\comprehensive_analysis_20250821_054151.json",
        "type": "json_config",
        "patterns": [
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\comprehensive_analysis_20250821_080659.json",
        "type": "json_config",
        "patterns": [
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\comprehensive_cleanup_data.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\comprehensive_feature_audit_results.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\contribution_analysis_results.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\coupling_analysis_results.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\exhaustive_stub_analysis_results.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\final_archive_sweep_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\IMPLEMENTATION_STATUS_REPORT.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\integration_systems_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\interface_analysis_results.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\metrics_test.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\pattern_analysis_results.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\phase1_api_documentation.json",
        "type": "json_config",
        "patterns": [
          "database_url",
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\phase1_component_analysis.json",
        "type": "json_config",
        "patterns": [
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\phase1_dependency_analysis.json",
        "type": "json_config",
        "patterns": [
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\phase7_validation_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\utility_analysis_detailed_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\archive\\archive_manifest.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\archive\\phase4_archive\\phase_c4_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\archive\\phase4_archive\\validation_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\archive\\phase5_archive\\validation_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\archive\\phase6_archive\\validation_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\config\\default.json",
        "type": "json_config",
        "patterns": [
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\consolidation\\discovery_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\backend_features.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\final_enhancements_test_results.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\frontend_integration_validation.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\frontend_simulation_results.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\backups\\backup_metadata.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165025.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165124.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165125.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165224.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165252.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165324.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165424.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165449.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165524.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165549.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165624.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165649.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165724.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165749.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165824.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165849.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165924.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165949.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170024.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170124.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170224.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170324.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170348.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170424.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170524.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170624.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170724.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170824.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170924.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_171024.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_171124.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_171224.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_171324.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_171424.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_171524.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_171624.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172218.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172316.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172335.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172416.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172516.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172603.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172616.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172716.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172726.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172816.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172826.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172916.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172926.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173016.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173026.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173116.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173126.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173216.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173226.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173316.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173326.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173416.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173426.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173516.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173526.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173616.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173626.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173716.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173726.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173816.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173826.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173916.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174016.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174116.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174125.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174216.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174225.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174316.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174325.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174416.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174425.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174516.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174525.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174616.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174625.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174716.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174725.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174816.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174825.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174916.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174925.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175016.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175025.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175116.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175125.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175216.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175225.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175316.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175325.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175416.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175517.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165124.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165125.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165224.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165252.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165324.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165424.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165449.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165524.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165549.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165624.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165649.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165724.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165749.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165824.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165849.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165924.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165949.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170024.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170124.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170224.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170324.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170348.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170424.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170524.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170624.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170724.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170824.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170924.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_171024.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_171124.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_171224.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_171324.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_171424.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_171524.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_171624.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172316.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172335.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172416.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172516.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172603.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172616.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172716.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172726.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172816.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172826.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172916.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172926.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173016.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173026.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173116.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173126.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173216.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173226.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173316.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173326.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173416.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173426.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173516.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173526.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173616.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173626.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173716.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173726.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173816.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173826.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173916.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174016.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174116.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174125.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174216.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174225.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174316.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174325.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174416.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174425.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174516.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174525.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174616.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174625.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174716.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174725.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174816.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174825.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174916.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174925.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175016.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175025.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175116.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175125.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175216.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175225.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175316.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175325.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175417.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175517.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\api\\api_summary.json",
        "type": "json_config",
        "patterns": [
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\api\\openapi_specification.json",
        "type": "json_config",
        "patterns": [
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\api_integration\\documentation_api_spec.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\api_integration\\integration_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\configuration\\configuration_inventory.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\knowledge\\knowledge_catalog.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\legacy\\compatibility_matrix.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\legacy\\integration_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\validation\\api_interface_validation_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\validation\\cross_system_dependencies_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\validation\\performance_quality_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\validation\\system_integration_validation_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\operational\\cross_agent_integration_report_20250821_165224.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\operational\\infrastructure_completion_report_20250821_163118.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\operational\\ultimate_perfection_certification_20250821_165612.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\operational\\validation_report_20250821_162742.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\operational\\validation_report_20250821_162844.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\operational\\validation_report_20250821_162942.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\phase_1_7_validation_results\\phase_1_7_summary.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\phase_1_7_validation_results\\validation_results.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\test_reports\\component_performance_20250817_035149_f5c472ee.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\test_reports\\component_performance_20250817_035208_8c19d9b4.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\test_sessions\\archives\\background_task_1755475344_cf67972c\\metadata.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\test_sessions\\archives\\workflow_execution_1755475344_9c5329c5\\metadata.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\test_sops\\test_generation_1755475557_ddcecdff.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\tools\\migration\\legacy_analysis.json",
        "type": "json_config",
        "patterns": [
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      }
    ],
    "total_files": 2504,
    "successful_analyses": 2360,
    "errors": [
      {
        "file": "TestMaster\\agentic_test_monitor.py",
        "error": "f-string expression part cannot include a backslash (agentic_test_monitor.py, line 297)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\risk_based_test_targeter.py",
        "error": "invalid syntax. Perhaps you forgot a comma? (risk_based_test_targeter.py, line 393)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\archive\\api_templates_original_2813_lines.py",
        "error": "invalid syntax. Perhaps you forgot a comma? (api_templates_original_2813_lines.py, line 749)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\archive\\test_misc_original_6141_lines.py",
        "error": "unexpected indent (test_misc_original_6141_lines.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\archive\\test_tot_output_original_18164_lines_20250821_040109.py",
        "error": "(unicode error) 'unicodeescape' codec can't decode bytes in position 25-26: truncated \\UXXXXXXXX escape (test_tot_output_original_18164_lines_20250821_040109.py, line 4)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\archive\\test_uncategorized_original_3557_lines_20250821_113530.py",
        "error": "unexpected indent (test_uncategorized_original_3557_lines_20250821_113530.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\agentic_test_monitor.py",
        "error": "f-string expression part cannot include a backslash (agentic_test_monitor.py, line 216)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\archive\\original_backup\\agentic_test_monitor.py",
        "error": "f-string expression part cannot include a backslash (agentic_test_monitor.py, line 216)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_analysis.py",
        "error": "unterminated triple-quoted string literal (detected at line 439) (business_analyzer_analysis.py, line 412)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\debt_analyzer_modules\\debt_analyzer_analysis.py",
        "error": "unexpected indent (debt_analyzer_analysis.py, line 21)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\debt_analyzer_modules\\debt_analyzer_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 531) (debt_analyzer_core.py, line 525)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\enterprise_integration_layer_modules\\enterprise_integration_layer_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 591) (enterprise_integration_layer_core.py, line 576)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\enterprise_integration_layer_modules\\enterprise_integration_layer_processing.py",
        "error": "unterminated triple-quoted string literal (detected at line 591) (enterprise_integration_layer_processing.py, line 553)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\ml_api_modules\\ml_api_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 398) (ml_api_core.py, line 382)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\ml_api_modules\\ml_api_endpoints.py",
        "error": "unterminated triple-quoted string literal (detected at line 400) (ml_api_endpoints.py, line 393)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\ml_api_modules\\ml_api_monitoring.py",
        "error": "unterminated triple-quoted string literal (detected at line 398) (ml_api_monitoring.py, line 351)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\agent_coordination_protocols_modules\\agent_coordination_protocols_part1.py",
        "error": "unterminated triple-quoted string literal (detected at line 653) (agent_coordination_protocols_part1.py, line 642)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\agent_coordination_protocols_modules\\agent_coordination_protocols_part2.py",
        "error": "unterminated triple-quoted string literal (detected at line 653) (agent_coordination_protocols_part2.py, line 614)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\resource_coordination_system_modules\\resource_coordination_system_part1.py",
        "error": "unterminated triple-quoted string literal (detected at line 509) (resource_coordination_system_part1.py, line 491)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\resource_coordination_system_modules\\resource_coordination_system_part2.py",
        "error": "unterminated triple-quoted string literal (detected at line 509) (resource_coordination_system_part2.py, line 498)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\unified_workflow_orchestrator_modules\\unified_workflow_orchestrator_part1.py",
        "error": "unterminated triple-quoted string literal (detected at line 675) (unified_workflow_orchestrator_part1.py, line 637)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\unified_workflow_orchestrator_modules\\unified_workflow_orchestrator_part2.py",
        "error": "unterminated triple-quoted string literal (detected at line 675) (unified_workflow_orchestrator_part2.py, line 641)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\neo4j_dominator_modules\\neo4j_dominator_part1.py",
        "error": "unterminated string literal (detected at line 25) (neo4j_dominator_part1.py, line 25)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\neo4j_dominator_modules\\neo4j_dominator_part2.py",
        "error": "unterminated string literal (detected at line 20) (neo4j_dominator_part2.py, line 20)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\ml_security_guardian.py",
        "error": "unexpected character after line continuation character (ml_security_guardian.py, line 222)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\circuit_breaker_ml_modules\\circuit_breaker_ml_algorithms.py",
        "error": "unterminated triple-quoted string literal (detected at line 446) (circuit_breaker_ml_algorithms.py, line 425)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\circuit_breaker_ml_modules\\circuit_breaker_ml_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 445) (circuit_breaker_ml_core.py, line 406)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\circuit_breaker_ml_modules\\circuit_breaker_ml_management.py",
        "error": "unterminated triple-quoted string literal (detected at line 445) (circuit_breaker_ml_management.py, line 436)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\delivery_optimizer_modules\\delivery_optimizer_algorithms.py",
        "error": "unterminated triple-quoted string literal (detected at line 440) (delivery_optimizer_algorithms.py, line 424)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\delivery_optimizer_modules\\delivery_optimizer_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 440) (delivery_optimizer_core.py, line 435)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\delivery_optimizer_modules\\delivery_optimizer_optimization.py",
        "error": "unterminated triple-quoted string literal (detected at line 440) (delivery_optimizer_optimization.py, line 438)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\integrity_ml_guardian_modules\\integrity_ml_guardian_algorithms.py",
        "error": "unterminated triple-quoted string literal (detected at line 496) (integrity_ml_guardian_algorithms.py, line 486)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\integrity_ml_guardian_modules\\integrity_ml_guardian_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 496) (integrity_ml_guardian_core.py, line 471)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\integrity_ml_guardian_modules\\integrity_ml_guardian_models.py",
        "error": "unterminated triple-quoted string literal (detected at line 498) (integrity_ml_guardian_models.py, line 482)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\performance_optimizer_modules\\performance_optimizer_algorithms.py",
        "error": "unterminated triple-quoted string literal (detected at line 397) (performance_optimizer_algorithms.py, line 380)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\performance_optimizer_modules\\performance_optimizer_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 396) (performance_optimizer_core.py, line 360)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\performance_optimizer_modules\\performance_optimizer_optimization.py",
        "error": "unterminated triple-quoted string literal (detected at line 396) (performance_optimizer_optimization.py, line 376)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\sla_ml_optimizer_algorithms.py",
        "error": "unterminated triple-quoted string literal (detected at line 557) (sla_ml_optimizer_algorithms.py, line 538)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\sla_ml_optimizer_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 556) (sla_ml_optimizer_core.py, line 546)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\sla_ml_optimizer_optimization.py",
        "error": "unterminated triple-quoted string literal (detected at line 556) (sla_ml_optimizer_optimization.py, line 538)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\ml_infrastructure_orchestrator_algorithms.py",
        "error": "unterminated triple-quoted string literal (detected at line 385) (ml_infrastructure_orchestrator_algorithms.py, line 360)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\ml_infrastructure_orchestrator_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 385) (ml_infrastructure_orchestrator_core.py, line 336)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\ml_infrastructure_orchestrator_models.py",
        "error": "unterminated triple-quoted string literal (detected at line 387) (ml_infrastructure_orchestrator_models.py, line 363)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\agent_qa_modules\\agent_qa_part1.py",
        "error": "unterminated triple-quoted string literal (detected at line 701) (agent_qa_part1.py, line 662)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\agent_qa_modules\\agent_qa_part2b.py",
        "error": "unexpected indent (agent_qa_part2b.py, line 1)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\performance_optimization_engine_modules\\performance_optimization_engine_analysis.py",
        "error": "unterminated triple-quoted string literal (detected at line 391) (performance_optimization_engine_analysis.py, line 383)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\performance_optimization_engine_modules\\performance_optimization_engine_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 391) (performance_optimization_engine_core.py, line 380)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\performance_optimization_engine_modules\\performance_optimization_engine_processing.py",
        "error": "unterminated triple-quoted string literal (detected at line 392) (performance_optimization_engine_processing.py, line 342)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\validation\\integration_test_suite_modules\\integration_test_suite_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 368) (integration_test_suite_core.py, line 368)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\validation\\integration_test_suite_modules\\integration_test_suite_processing.py",
        "error": "unterminated triple-quoted string literal (detected at line 368) (integration_test_suite_processing.py, line 368)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\validation\\integration_test_suite_modules\\integration_test_suite_validation.py",
        "error": "unterminated triple-quoted string literal (detected at line 370) (integration_test_suite_validation.py, line 346)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\validation\\system_validation_framework_modules\\system_validation_framework_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 657) (system_validation_framework_core.py, line 645)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\validation\\system_validation_framework_modules\\system_validation_framework_validation.py",
        "error": "unterminated triple-quoted string literal (detected at line 657) (system_validation_framework_validation.py, line 609)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\mcp_testing.py",
        "error": "unmatched ')' (mcp_testing.py, line 93)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\business_analyzer_modules\\business_analyzer_analysis.py",
        "error": "unterminated triple-quoted string literal (detected at line 439) (business_analyzer_analysis.py, line 412)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\debt_analyzer_modules\\debt_analyzer_analysis.py",
        "error": "unexpected indent (debt_analyzer_analysis.py, line 21)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\debt_analyzer_modules\\debt_analyzer_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 531) (debt_analyzer_core.py, line 525)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\enterprise_integration_layer_modules\\enterprise_integration_layer_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 591) (enterprise_integration_layer_core.py, line 576)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\enterprise_integration_layer_modules\\enterprise_integration_layer_processing.py",
        "error": "unterminated triple-quoted string literal (detected at line 591) (enterprise_integration_layer_processing.py, line 553)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\ml_api_modules\\ml_api_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 398) (ml_api_core.py, line 382)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\ml_api_modules\\ml_api_endpoints.py",
        "error": "unterminated triple-quoted string literal (detected at line 400) (ml_api_endpoints.py, line 393)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\ml_api_modules\\ml_api_monitoring.py",
        "error": "unterminated triple-quoted string literal (detected at line 398) (ml_api_monitoring.py, line 351)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\agent_coordination_protocols_modules\\agent_coordination_protocols_part1.py",
        "error": "unterminated triple-quoted string literal (detected at line 653) (agent_coordination_protocols_part1.py, line 642)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\agent_coordination_protocols_modules\\agent_coordination_protocols_part2.py",
        "error": "unterminated triple-quoted string literal (detected at line 653) (agent_coordination_protocols_part2.py, line 614)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\resource_coordination_system_modules\\resource_coordination_system_part1.py",
        "error": "unterminated triple-quoted string literal (detected at line 509) (resource_coordination_system_part1.py, line 491)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\resource_coordination_system_modules\\resource_coordination_system_part2.py",
        "error": "unterminated triple-quoted string literal (detected at line 509) (resource_coordination_system_part2.py, line 498)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\unified_workflow_orchestrator_modules\\unified_workflow_orchestrator_part1.py",
        "error": "unterminated triple-quoted string literal (detected at line 675) (unified_workflow_orchestrator_part1.py, line 637)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\unified_workflow_orchestrator_modules\\unified_workflow_orchestrator_part2.py",
        "error": "unterminated triple-quoted string literal (detected at line 675) (unified_workflow_orchestrator_part2.py, line 641)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\revolutionary\\neo4j_dominator_modules\\neo4j_dominator_part1.py",
        "error": "unterminated string literal (detected at line 25) (neo4j_dominator_part1.py, line 25)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\revolutionary\\neo4j_dominator_modules\\neo4j_dominator_part2.py",
        "error": "unterminated string literal (detected at line 20) (neo4j_dominator_part2.py, line 20)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\ml_security_guardian.py",
        "error": "unexpected character after line continuation character (ml_security_guardian.py, line 222)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\circuit_breaker_ml_modules\\circuit_breaker_ml_algorithms.py",
        "error": "unterminated triple-quoted string literal (detected at line 446) (circuit_breaker_ml_algorithms.py, line 425)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\circuit_breaker_ml_modules\\circuit_breaker_ml_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 445) (circuit_breaker_ml_core.py, line 406)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\circuit_breaker_ml_modules\\circuit_breaker_ml_management.py",
        "error": "unterminated triple-quoted string literal (detected at line 445) (circuit_breaker_ml_management.py, line 436)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\delivery_optimizer_modules\\delivery_optimizer_algorithms.py",
        "error": "unterminated triple-quoted string literal (detected at line 440) (delivery_optimizer_algorithms.py, line 424)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\delivery_optimizer_modules\\delivery_optimizer_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 440) (delivery_optimizer_core.py, line 435)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\delivery_optimizer_modules\\delivery_optimizer_optimization.py",
        "error": "unterminated triple-quoted string literal (detected at line 440) (delivery_optimizer_optimization.py, line 438)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\integrity_ml_guardian_modules\\integrity_ml_guardian_algorithms.py",
        "error": "unterminated triple-quoted string literal (detected at line 496) (integrity_ml_guardian_algorithms.py, line 486)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\integrity_ml_guardian_modules\\integrity_ml_guardian_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 496) (integrity_ml_guardian_core.py, line 471)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\integrity_ml_guardian_modules\\integrity_ml_guardian_models.py",
        "error": "unterminated triple-quoted string literal (detected at line 498) (integrity_ml_guardian_models.py, line 482)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\performance_optimizer_modules\\performance_optimizer_algorithms.py",
        "error": "unterminated triple-quoted string literal (detected at line 397) (performance_optimizer_algorithms.py, line 380)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\performance_optimizer_modules\\performance_optimizer_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 396) (performance_optimizer_core.py, line 360)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\performance_optimizer_modules\\performance_optimizer_optimization.py",
        "error": "unterminated triple-quoted string literal (detected at line 396) (performance_optimizer_optimization.py, line 376)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\sla_ml_optimizer_algorithms.py",
        "error": "unterminated triple-quoted string literal (detected at line 557) (sla_ml_optimizer_algorithms.py, line 538)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\sla_ml_optimizer_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 556) (sla_ml_optimizer_core.py, line 546)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\sla_ml_optimizer_optimization.py",
        "error": "unterminated triple-quoted string literal (detected at line 556) (sla_ml_optimizer_optimization.py, line 538)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\ml_infrastructure_orchestrator_algorithms.py",
        "error": "unterminated triple-quoted string literal (detected at line 385) (ml_infrastructure_orchestrator_algorithms.py, line 360)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\ml_infrastructure_orchestrator_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 385) (ml_infrastructure_orchestrator_core.py, line 336)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\ml_infrastructure_orchestrator_models.py",
        "error": "unterminated triple-quoted string literal (detected at line 387) (ml_infrastructure_orchestrator_models.py, line 363)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\agent_qa_modules\\agent_qa_part1.py",
        "error": "unterminated triple-quoted string literal (detected at line 701) (agent_qa_part1.py, line 662)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\agent_qa_modules\\agent_qa_part2b.py",
        "error": "unexpected indent (agent_qa_part2b.py, line 1)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\performance_optimization_engine_modules\\performance_optimization_engine_analysis.py",
        "error": "unterminated triple-quoted string literal (detected at line 391) (performance_optimization_engine_analysis.py, line 383)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\performance_optimization_engine_modules\\performance_optimization_engine_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 391) (performance_optimization_engine_core.py, line 380)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\performance_optimization_engine_modules\\performance_optimization_engine_processing.py",
        "error": "unterminated triple-quoted string literal (detected at line 392) (performance_optimization_engine_processing.py, line 342)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\validation\\integration_test_suite_modules\\integration_test_suite_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 368) (integration_test_suite_core.py, line 368)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\validation\\integration_test_suite_modules\\integration_test_suite_processing.py",
        "error": "unterminated triple-quoted string literal (detected at line 368) (integration_test_suite_processing.py, line 368)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\validation\\integration_test_suite_modules\\integration_test_suite_validation.py",
        "error": "unterminated triple-quoted string literal (detected at line 370) (integration_test_suite_validation.py, line 346)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\validation\\system_validation_framework_modules\\system_validation_framework_core.py",
        "error": "unterminated triple-quoted string literal (detected at line 657) (system_validation_framework_core.py, line 645)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\intelligence\\validation\\system_validation_framework_modules\\system_validation_framework_validation.py",
        "error": "unterminated triple-quoted string literal (detected at line 657) (system_validation_framework_validation.py, line 609)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\testing\\embedding_cache_testing.py",
        "error": "expected '(' (embedding_cache_testing.py, line 164)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\core\\testing\\mcp_testing.py",
        "error": "unmatched ')' (mcp_testing.py, line 93)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\coverage\\analyzer.py",
        "error": "unexpected indent (analyzer.py, line 5)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\coverage\\codebase_analyzer.py",
        "error": "unexpected indent (codebase_analyzer.py, line 7)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\coverage\\dependency_mapper.py",
        "error": "unexpected indent (dependency_mapper.py, line 7)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\coverage\\health_assessment.py",
        "error": "unexpected indent (health_assessment.py, line 7)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\templates\\api\\graphql_templates.py",
        "error": "invalid syntax. Perhaps you forgot a comma? (graphql_templates.py, line 33)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\templates\\api\\webhook_templates.py",
        "error": "unterminated triple-quoted string literal (detected at line 110) (webhook_templates.py, line 63)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_analysis.py",
        "error": "expected an indented block after function definition on line 12 (test_analysis.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_base.py",
        "error": "expected an indented block after function definition on line 12 (test_base.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_core.py",
        "error": "expected an indented block after function definition on line 12 (test_core.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_dashboard.py",
        "error": "unexpected indent (test_dashboard.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_execution.py",
        "error": "unexpected indent (test_execution.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_generation.py",
        "error": "expected an indented block after function definition on line 12 (test_generation.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_integration.py",
        "error": "expected an indented block after function definition on line 12 (test_integration.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_intelligence.py",
        "error": "expected an indented block after function definition on line 360 (test_intelligence.py, line 363)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_language.py",
        "error": "expected an indented block after function definition on line 12 (test_language.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_messaging.py",
        "error": "expected an indented block after function definition on line 12 (test_messaging.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_monitoring.py",
        "error": "unexpected indent (test_monitoring.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_performance.py",
        "error": "expected an indented block after function definition on line 12 (test_performance.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_quality.py",
        "error": "expected an indented block after function definition on line 12 (test_quality.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_reasoning.py",
        "error": "expected an indented block after function definition on line 12 (test_reasoning.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_reporting.py",
        "error": "expected an indented block after function definition on line 12 (test_reporting.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_self_healing.py",
        "error": "expected an indented block after function definition on line 12 (test_self_healing.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_streaming.py",
        "error": "expected an indented block after function definition on line 12 (test_streaming.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_tagging.py",
        "error": "expected an indented block after function definition on line 12 (test_tagging.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_telemetry.py",
        "error": "expected an indented block after function definition on line 12 (test_telemetry.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\test_workflow.py",
        "error": "expected an indented block after function definition on line 12 (test_workflow.py, line 15)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_builders.py",
        "error": "unexpected indent (test_builders.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_converters.py",
        "error": "unexpected indent (test_converters.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_engines.py",
        "error": "unexpected indent (test_engines.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_frameworks.py",
        "error": "unexpected indent (test_frameworks.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_handlers.py",
        "error": "unexpected indent (test_handlers.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_integrations.py",
        "error": "unexpected indent (test_integrations.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_layers.py",
        "error": "unexpected indent (test_layers.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_managers.py",
        "error": "unexpected indent (test_managers.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_parsers.py",
        "error": "unexpected indent (test_parsers.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_systems.py",
        "error": "unexpected indent (test_systems.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_trackers.py",
        "error": "unexpected indent (test_trackers.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_uncategorized.py",
        "error": "unexpected indent (test_uncategorized.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\archive\\test_uncategorized_original.py",
        "error": "unexpected indent (test_uncategorized_original.py, line 9)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\web_monitor\\core.py",
        "error": "expected an indented block after function definition on line 399 (core.py, line 399)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\web_monitor\\handlers.py",
        "error": "unexpected indent (handlers.py, line 1)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\web_monitor\\utils.py",
        "error": "unexpected indent (utils.py, line 1)",
        "analyzed": false
      },
      {
        "file": "TestMaster\\web_monitor\\validators.py",
        "error": "unexpected indent (validators.py, line 1)",
        "analyzed": false
      }
    ]
  },
  "summary": {
    "configuration_statistics": {
      "total_config_files": 1382,
      "settings_classes": 292,
      "environment_variables": 5,
      "hardcoded_values": 678,
      "config_patterns": {
        "environment_variables": 99,
        "config_dictionaries": 198,
        "config_todos": 2
      },
      "config_usage_patterns": {
        "f.read": 646,
        "file_categorization.get": 5,
        "architecture_analysis.get": 1,
        "json.load": 140,
        "report.get": 1,
        "inheritance_graph.get": 1,
        "halstead.get": 13,
        "mccabe.get": 4,
        "sloc.get": 17,
        "severity_map.get": 5,
        "analysis.get": 188,
        "hardcoded.get": 1,
        "function_calls": 595,
        "importance_scores.get": 1,
        "results.get": 53,
        "framework_counts.get": 2,
        "field_info.get": 9,
        "ports.get": 1,
        "cache.set": 21,
        "cache.get": 29,
        "predictions.get": 12,
        "betweenness.get": 2,
        "pagerank.get": 2,
        "suggestions.get": 8,
        "pattern_specific.get": 1,
        "complexity.get": 13,
        "dependencies.get": 5,
        "dep.get": 33,
        "ext_map.get": 1,
        "shared_state.set": 8,
        "shared_state.get": 5,
        "status.get": 51,
        "stats.get": 72,
        "metrics.get": 197,
        "ai_analysis.get": 2,
        "factor.get": 1,
        "data.get": 995,
        "scan_options.get": 7,
        "a.get": 26,
        "x.get": 6,
        "enhanced.get": 5,
        "suite.get": 10,
        "active_streams.get": 1,
        "quality_stats.get": 3,
        "risk_dashboard.get": 2,
        "alert.get": 12,
        "s.get": 10,
        "m.get": 55,
        "metric.get": 18,
        "test_data.get": 59,
        "issues.get": 7,
        "feature.get": 1,
        "basic_metrics.get": 3,
        "cls.get": 15,
        "recommendations.get": 11,
        "impact_matrix.get": 1,
        "analysis_data.get": 18,
        "call.get": 12,
        "flow.get": 13,
        "event.get": 47,
        "type_counts.get": 17,
        "category_colors.get": 1,
        "session_config.get": 14,
        "config.get": 244,
        "workflow_definition.get": 16,
        "task_config.get": 31,
        "session.get": 11,
        "configs.get": 3,
        "auto_scale_config.get": 3,
        "task.get": 78,
        "result.get": 384,
        "step_result.get": 8,
        "coordinator_result.get": 8,
        "expert_analysis.get": 8,
        "vote_result.get": 8,
        "majority_result.get": 8,
        "record.get": 24,
        "arch_usage.get": 8,
        "components_status.get": 5,
        "report_data.get": 5,
        "summary.get": 95,
        "strategies.get": 1,
        "module_names.get": 1,
        "type_mappings.get": 3,
        "plans.get": 1,
        "task_data.get": 11,
        "trends.get": 17,
        "flow_stats.get": 6,
        "system_stats.get": 3,
        "dashboard_data.get": 8,
        "dash_stats.get": 2,
        "benchmark_comparison.get": 1,
        "overall_status.get": 1,
        "requests.get": 121,
        "state.set": 8,
        "state.get": 32,
        "rec.get": 16,
        "complexity_result.get": 4,
        "dep_result.get": 3,
        "complexity_data.get": 2,
        "dependency_data.get": 2,
        "history.get": 8,
        "overview.get": 10,
        "v.get": 25,
        "identifiers.get": 8,
        "profile_info.get": 2,
        "config.set": 6,
        "nodes.get": 1,
        "priority_map.get": 6,
        "node.get": 29,
        "dev_config.get": 1,
        "prod_config.get": 1,
        "validation.get": 6,
        "test.get": 13,
        "serialized.get": 2,
        "profile_data.get": 1,
        "client.get": 4,
        "metrics_data.get": 12,
        "components_data.get": 2,
        "health_data.get": 9,
        "final_stats.get": 2,
        "language_stats.get": 1,
        "func_info.get": 21,
        "endpoint_test.get": 1,
        "compliance.get": 1,
        "contents.get": 12,
        "languages.get": 1,
        "codebase_analysis.get": 8,
        "requirements.get": 164,
        "design.get": 21,
        "frameworks.get": 2,
        "infrastructure.get": 5,
        "reporting.get": 2,
        "ci_cd.get": 2,
        "layer.get": 3,
        "constraints.get": 17,
        "project.get": 7,
        "architecture.get": 11,
        "module_analysis.get": 32,
        "coverage_data.get": 99,
        "file_data.get": 56,
        "file_review.get": 1,
        "review.get": 1,
        "issue_counts.get": 12,
        "review_result.get": 2,
        "perf.get": 6,
        "metadata.get": 29,
        "final_metrics.get": 2,
        "phase.get": 10,
        "pattern.get": 26,
        "barrier.get": 1,
        "source_counts.get": 1,
        "transformation_counts.get": 1,
        "impact_estimates.get": 1,
        "objects_by_type.get": 1,
        "issues_by_severity.get": 6,
        "core_results.get": 3,
        "tensor_results.get": 6,
        "model_results.get": 6,
        "data_results.get": 5,
        "i.get": 23,
        "p.get": 11,
        "issue.get": 23,
        "pattern_info.get": 8,
        "pattern_checks.get": 1,
        "example.get": 17,
        "similar_patterns.get": 1,
        "patterns_by_type.get": 4,
        "patterns_by_confidence.get": 1,
        "graph.get": 15,
        "outgoing_count.get": 1,
        "workflow_types.get": 1,
        "correlations.get": 8,
        "daily_counts.get": 4,
        "router.get": 10,
        "params.get": 21,
        "ep.get": 3,
        "coverage_results.get": 15,
        "quality_results.get": 5,
        "t.get": 26,
        "service.get": 100,
        "size_metrics.get": 3,
        "comm.get": 8,
        "deployment.get": 9,
        "risks.get": 3,
        "option_scores.get": 6,
        "option_scores_dict.get": 3,
        "steps_map.get": 3,
        "optimization.get": 4,
        "growth_rates.get": 28,
        "weights.get": 10,
        "predicted_load.get": 12,
        "impact_map.get": 6,
        "r.get": 70,
        "trend_info.get": 9,
        "timeline_map.get": 5,
        "current_stack.get": 12,
        "migration_complexity.get": 3,
        "relevance_scores.get": 3,
        "base_timeline.get": 2,
        "b.get": 10,
        "growth_predictions.get": 4,
        "challenge.get": 2,
        "c.get": 12,
        "totals.get": 23,
        "shape_op.get": 4,
        "broadcast_check.get": 4,
        "loader_info.get": 4,
        "loop.get": 4,
        "preprocessing_order.get": 2,
        "impacts.get": 2,
        "violation.get": 4,
        "gap.get": 4,
        "debt_patterns.get": 10,
        "severity_weights.get": 11,
        "categories.get": 14,
        "retry_config.get": 9,
        "event_analysis.get": 2,
        "auth_config.get": 14,
        "rate_limits.get": 12,
        "response.get": 42,
        "metrics1.get": 8,
        "metrics2.get": 8,
        "processor_config.get": 4,
        "current_metrics.get": 29,
        "response_stats.get": 8,
        "analytics.get": 149,
        "finished.set": 7,
        "frequency.get": 2,
        "data_stream.read": 2,
        "package.get": 2,
        "insights.get": 10,
        "current.get": 25,
        "primary_duplicate.get": 2,
        "existing_record.get": 2,
        "flow_data.get": 2,
        "txn.get": 2,
        "heartbeat_data.get": 2,
        "delivery.get": 2,
        "fallback_chain.get": 2,
        "method_map.get": 2,
        "severity_impact.get": 2,
        "health_result.get": 10,
        "latest.get": 9,
        "context.get": 201,
        "endpoint_info.get": 8,
        "original_data.get": 2,
        "current_data.get": 2,
        "original.get": 2,
        "current_checksums.get": 2,
        "self.set": 23,
        "resource_usage.get": 12,
        "before_metrics.get": 6,
        "after_metrics.get": 6,
        "before.get": 11,
        "after.get": 11,
        "test_metrics.get": 8,
        "workflow_metrics.get": 6,
        "assessment.get": 6,
        "delivery_priority_map.get": 2,
        "failure.get": 5,
        "priority_order.get": 9,
        "request_item.get": 4,
        "limiter.get": 6,
        "status_counts.get": 28,
        "severity_levels.get": 2,
        "system_metrics.get": 30,
        "message.get": 53,
        "process_info.get": 14,
        "metric_value.get": 4,
        "execution_result.get": 21,
        "category_strategies.get": 5,
        "fallback_systems.get": 3,
        "self.get": 43,
        "request.get": 28,
        "cache_perf.get": 4,
        "step_executions.get": 10,
        "cls_info.get": 6,
        "coverage.get": 18,
        "param.get": 83,
        "test_types.get": 3,
        "file_coverage.get": 7,
        "item.get": 45,
        "handler_info.get": 3,
        "branch_info.get": 3,
        "improved.get": 3,
        "subdirs.get": 2,
        "class_info.get": 12,
        "structure.get": 68,
        "optimization_analysis.get": 8,
        "integration_analysis.get": 8,
        "coverage_analysis.get": 9,
        "tests_by_module.get": 2,
        "category_estimates.get": 2,
        "row.get": 2,
        "rules.get": 17,
        "step.get": 85,
        "compensation.get": 3,
        "schema.load": 2,
        "req.get": 6,
        "strategy_map.get": 1,
        "protocol_handlers.get": 1,
        "payload.get": 35,
        "step_def.get": 15,
        "relationship.get": 3,
        "logic.get": 2,
        "failure_mapping.get": 1,
        "worker_perf.get": 1,
        "base_frequencies.get": 1,
        "verification_results.get": 3,
        "metric_data.get": 11,
        "delivery_info.get": 7,
        "thresholds.get": 6,
        "baselines.get": 5,
        "risk_multipliers.get": 1,
        "tracking_data.get": 1,
        "severity_scores.get": 6,
        "baseline.get": 9,
        "bottleneck.get": 4,
        "performance_summary.get": 3,
        "analysis_result.get": 8,
        "health_response.get": 1,
        "auth_response.get": 1,
        "workflow_result.get": 3,
        "rule.get": 31,
        "check.get": 2,
        "security_result.get": 15,
        "suite_result.get": 2,
        "rule_result.get": 6,
        "compliance_result.get": 4,
        "session_states.get": 3,
        "task_states.get": 2,
        "context_states.get": 2,
        "cached.get": 3,
        "timeline.get": 8,
        "mapping.get": 5,
        "node_positions.get": 2,
        "yaml_dict.get": 32,
        "var_dict.get": 20,
        "step_dict.get": 28,
        "layout_data.get": 8,
        "widget_data.get": 8,
        "category_mappings.get": 1,
        "config_data.get": 34,
        "team_config.get": 5,
        "deploy_config.get": 4,
        "graph_config.get": 4,
        "workflow_config.get": 4,
        "targets.get": 7,
        "priorities.get": 1,
        "layer_config.get": 3,
        "practices.get": 1,
        "adaptations.get": 1,
        "op.get": 19,
        "criteria_weights.get": 2,
        "template.get": 12,
        "value_map.get": 2,
        "tolerances.get": 2,
        "flow_info.get": 14,
        "module_info.get": 11,
        "system_data.get": 14,
        "analytics_data.get": 25,
        "e.get": 16,
        "ml_data.get": 5,
        "module.get": 2,
        "api_data.get": 2,
        "pattern_data.get": 20,
        "task_multipliers.get": 2,
        "multipliers.get": 2,
        "remaining.get": 2,
        "request_allocations.get": 8,
        "allocations.get": 6,
        "allocation_result.get": 2,
        "allocated_resources.get": 4,
        "batch_result.get": 2,
        "kwargs.get": 52,
        "test_status.get": 2,
        "monitor_status.get": 2,
        "perf_summary.get": 3,
        "qa_summary.get": 2,
        "fused_intelligence.get": 8,
        "patterns.get": 12,
        "evolution_metrics.get": 2,
        "current_perf.get": 2,
        "current_quality.get": 10,
        "rollback_info.get": 6,
        "opp.get": 4,
        "ml_insights.get": 2,
        "impact_factors.get": 2,
        "features.get": 4,
        "element_map.get": 4,
        "debt_by_type.get": 6,
        "debt_summary.get": 2,
        "executive_summary.get": 2,
        "business_summary.get": 2,
        "doc_quality.get": 2,
        "validation_results.get": 72,
        "type_map.get": 5,
        "analysis_request.get": 4,
        "req_data.get": 8,
        "validation_result.get": 12,
        "severity_priority.get": 2,
        "bottleneck_counts.get": 2,
        "level_counts.get": 8,
        "descriptions.get": 13,
        "request_data.get": 71,
        "full_data.get": 4,
        "level_capabilities.get": 2,
        "confidence_values.get": 2,
        "bucket_info.get": 6,
        "rate_limit_result.get": 2,
        "rate_info.get": 2,
        "debt_result.get": 6,
        "ml_result.get": 5,
        "coverage_result.get": 2,
        "legacy_metric.get": 8,
        "system_mapping.get": 2,
        "coverage_info.get": 10,
        "security_config.get": 4,
        "protocol_result.get": 4,
        "ch.get": 2,
        "task_def.get": 8,
        "agent_info.get": 2,
        "proposal_data.get": 2,
        "orchestrator_status.get": 5,
        "type_keywords.get": 2,
        "docs_json.get": 6,
        "tab.get": 2,
        "group.get": 6,
        "spec.get": 47,
        "components.get": 18,
        "operation.get": 44,
        "request_body.get": 6,
        "schema_info.get": 2,
        "response_info.get": 6,
        "example_info.get": 4,
        "schema_def.get": 10,
        "api_spec.get": 18,
        "info.get": 33,
        "server.get": 8,
        "prop_info.get": 8,
        "method_spec.get": 16,
        "method_counts.get": 5,
        "param_info.get": 16,
        "prop.get": 4,
        "func.get": 18,
        "translations.get": 2,
        "chart_config.get": 2,
        "realtime_config.get": 2,
        "completion_data.get": 2,
        "perf_data.get": 15,
        "type_complexity.get": 4,
        "guides.get": 2,
        "guide_info.get": 8,
        "names.get": 2,
        "architecture_patterns.get": 4,
        "doc_styles.get": 4,
        "framework_benefits.get": 2,
        "criteria.get": 9,
        "complexity_weights.get": 2,
        "complexity_efforts.get": 2,
        "complexity_weeks.get": 2,
        "interface.get": 4,
        "event_type.get": 6,
        "handler.get": 6,
        "alt.get": 6,
        "shapes.get": 2,
        "arrows.get": 4,
        "section.get": 11,
        "collection_info.get": 8,
        "titles.get": 5,
        "base_minutes.get": 3,
        "expected_topics.get": 2,
        "testing.get": 4,
        "security.get": 5,
        "ml.get": 4,
        "project_context.get": 6,
        "file_config.get": 2,
        "tag.get": 6,
        "processed.get": 50,
        "var.get": 4,
        "edge.get": 6,
        "strategy_specific_steps.get": 2,
        "breakdown.get": 4,
        "health_counts.get": 2,
        "method.get": 5,
        "ux_analysis.get": 2,
        "framework_recommendations.get": 2,
        "framework_modules.get": 18,
        "quality_complexity.get": 2,
        "viz_data.get": 2,
        "accordion.get": 2,
        "card.get": 6,
        "component_map.get": 2,
        "change_data.get": 54,
        "section_title.get": 2,
        "handlers.get": 5,
        "scenario.get": 17,
        "scores.get": 8,
        "line_counts.get": 2,
        "db.get": 6,
        "dashboard.get": 9,
        "healthcheck.get": 10,
        "feedback_map.get": 2,
        "section_mappings.get": 2,
        "indicators.get": 6,
        "path_descriptions.get": 2,
        "feature_data.get": 14,
        "network.get": 2,
        "variables.get": 8,
        "gen.get": 2,
        "integration_by_type.get": 2,
        "component_types.get": 2,
        "integration_types.get": 2,
        "code_analysis.get": 44,
        "h.get": 4,
        "content_structure.get": 4,
        "persona_priorities.get": 2,
        "accessibility.get": 2,
        "k8s_metadata.get": 6,
        "schema.get": 20,
        "service_config.get": 22,
        "navigation.get": 2,
        "processed_data.get": 14,
        "doc.get": 8,
        "api_results.get": 16,
        "integration_results.get": 8,
        "provider_preferences.get": 2,
        "task_template.get": 8,
        "section_map.get": 2,
        "metric_map.get": 2,
        "word_freq.get": 2,
        "weight_map.get": 2,
        "required_sections_map.get": 2,
        "api.get": 8,
        "routing_result.get": 4,
        "processing_result.get": 4,
        "service_info.get": 6,
        "endpoint_config.get": 8,
        "system.get": 12,
        "mesh_results.get": 4,
        "flow_results.get": 2,
        "section_config.get": 4,
        "deployment_config.get": 6,
        "cost_optimization.get": 2,
        "optimization_results.get": 4,
        "event_statistics.get": 2,
        "kg_result.get": 2,
        "file_analysis.get": 12,
        "element.get": 8,
        "relationship_data.get": 2,
        "quality_metrics.get": 14,
        "intent_analysis.get": 2,
        "codebase_data.get": 10,
        "func_data.get": 4,
        "dep_info.get": 6,
        "type_importance.get": 2,
        "models.get": 2,
        "gpu_array.get": 2,
        "flow_status.get": 10,
        "module_status.get": 8,
        "job_info.get": 2,
        "parameters.get": 35,
        "quality_scores.get": 8,
        "context_data.get": 6,
        "o.get": 2,
        "strategy_mapping.get": 2,
        "f_in.read": 2,
        "component_events.get": 2,
        "component_spans.get": 2,
        "component_metrics.get": 4,
        "severity_icon.get": 2,
        "perf_metrics.get": 5,
        "system_health.get": 13,
        "current_performance.get": 2,
        "performance_metrics.get": 9,
        "performance_forecast.get": 4,
        "detectors.get": 2,
        "category_metrics.get": 2,
        "metric_dict.get": 10,
        "qa_metrics.get": 6,
        "dimension_scores.get": 2,
        "action_map.get": 2,
        "conditions.get": 2,
        "loop_config.get": 2,
        "pattern_factors.get": 2,
        "pattern_strategies.get": 2,
        "threat_multipliers.get": 2,
        "finding.get": 10,
        "f.get": 15,
        "supported_extensions.get": 2,
        "risk_weights.get": 6,
        "counts.get": 16,
        "policies.get": 2,
        "control_data.get": 14,
        "code_data.get": 16,
        "intelligence.get": 8,
        "threat_landscape.get": 2,
        "exception_data.get": 2,
        "details.get": 6,
        "security_report.get": 8,
        "compliance_report.get": 8,
        "query_params.get": 10,
        "stakeholder_map.get": 2,
        "deadline_map.get": 2,
        "approval_chains.get": 2,
        "threat_results.get": 8,
        "threat.get": 22,
        "incident_result.get": 2,
        "threat_intelligence.get": 6,
        "response_metrics.get": 6,
        "threat_trends.get": 2,
        "response_effectiveness.get": 2,
        "threat_patterns.get": 4,
        "incident_stats.get": 4,
        "pen_test_results.get": 4,
        "framework_result.get": 4,
        "target_system.get": 4,
        "pen_result.get": 2,
        "integration_result.get": 2,
        "test_results.get": 43,
        "pen_results.get": 2,
        "incident_data.get": 12,
        "action.get": 3,
        "severity_order.get": 2,
        "action_results.get": 2,
        "entity_prediction.get": 2,
        "risk_assessment.get": 2,
        "prediction.get": 2,
        "minimization_result.get": 4,
        "consent_result.get": 4,
        "retention_result.get": 4,
        "encryption_result.get": 4,
        "anonymization_result.get": 4,
        "data_flow.get": 22,
        "segregation_result.get": 4,
        "audit_trail_result.get": 4,
        "access_control_result.get": 4,
        "change_mgmt_result.get": 4,
        "documentation_result.get": 4,
        "financial_system.get": 12,
        "version_result.get": 4,
        "schema_result.get": 4,
        "endpoint_result.get": 4,
        "auth_result.get": 4,
        "connectivity_result.get": 4,
        "performance_result.get": 4,
        "observability_result.get": 4,
        "consistency_result.get": 4,
        "transformation_result.get": 4,
        "error_handling_result.get": 4,
        "target_config.get": 4,
        "web_config.get": 2,
        "api_config.get": 2,
        "vuln.get": 18,
        "queue.get": 3,
        "quality_summary.get": 2,
        "system_analysis.get": 2,
        "stored_info.get": 4,
        "pattern_scores.get": 2,
        "by_type.get": 12,
        "alert_rules.get": 2,
        "security_results.get": 6,
        "mutation_results.get": 6,
        "flaky_results.get": 4,
        "perf_results.get": 6,
        "by_severity.get": 2,
        "remediations.get": 2,
        "automation_status.get": 8,
        "historical_data.get": 8,
        "optimizations.get": 3,
        "opt.get": 2,
        "execution_data.get": 4,
        "source_analysis.get": 22,
        "insights_data.get": 18,
        "instructions.get": 2,
        "complexity_bonus.get": 2,
        "schedule_config.get": 4,
        "stage_config.get": 12,
        "int_config.get": 6,
        "issue_types.get": 2,
        "severity_counts.get": 10,
        "d.get": 4,
        "node_data.get": 13,
        "corr.get": 2,
        "data_mapping.get": 2,
        "definition.get": 6,
        "field_config.get": 6,
        "msg_data.get": 6,
        "test_case.get": 13,
        "task_output.get": 10,
        "content.get": 14,
        "rule_config.get": 10,
        "target_data.get": 10,
        "severity_mapping.get": 2,
        "base_scores.get": 2,
        "category_modifiers.get": 2,
        "cwe_mapping.get": 2,
        "remediation_map.get": 3,
        "category_urls.get": 2,
        "category_counts.get": 2,
        "mutations.get": 2,
        "advice.get": 2,
        "category_keywords.get": 2,
        "performance_results.get": 14,
        "health.get": 6,
        "functionality.get": 6,
        "deployment_result.get": 2,
        "dataset.get": 10,
        "conn_info.get": 4,
        "layout_config.get": 4,
        "bp_config.get": 4,
        "message_counts.get": 2,
        "headers.get": 6,
        "response_data.get": 6,
        "secured_request.get": 2,
        "event_counts.get": 2,
        "agents.get": 6,
        "language_counts.get": 5,
        "assessment_context.get": 2,
        "accessor_counts.get": 2,
        "custom_params.get": 8,
        "security_level_counts.get": 6,
        "clearance_hierarchy.get": 4,
        "classification_counts.get": 2,
        "sensitivity_counts.get": 2,
        "role_distribution.get": 2,
        "base_permissions.get": 2,
        "current_context.get": 2,
        "enum_event_counts.get": 2,
        "strategy_counts.get": 7,
        "error_type_counts.get": 2,
        "comp_info.get": 8,
        "operation_counts.get": 2,
        "error_counts.get": 4,
        "feature_config.get": 6,
        "cache_settings.get": 2,
        "component_info.get": 11,
        "all_licenses.get": 2,
        "policy.get": 2,
        "type_distribution.get": 2,
        "decision_counts.get": 4,
        "crit.get": 10,
        "connection_info.get": 2,
        "proc_info.get": 4,
        "attempt_distribution.get": 2,
        "request_context.get": 9,
        "security_levels.get": 2,
        "policy_distribution.get": 2,
        "indicator_data.get": 2,
        "span_data.get": 4,
        "span.get": 4,
        "span_attributes.get": 10,
        "agentops_attrs.get": 2,
        "span_attrs.get": 2,
        "attributes.get": 2,
        "gen_ai_attrs.get": 4,
        "flag_counts.get": 2,
        "defaults.get": 2,
        "reasoning_result.get": 2,
        "redundancy_tracker.get": 2,
        "ast_data.get": 4,
        "prefs.get": 4,
        "level_values.get": 4,
        "activity_counts.get": 4,
        "collaboration_types.get": 2,
        "job.get": 8,
        "result_data.get": 4,
        "status_data.get": 2,
        "compliance_map.get": 2,
        "node_props.get": 2,
        "edge_props.get": 2,
        "statistics.get": 6,
        "event_data.get": 14,
        "opp_data.get": 16,
        "item_data.get": 8,
        "risk_mapping.get": 2,
        "coverage_multipliers.get": 2,
        "tool_call.get": 2,
        "agent_response.get": 4,
        "msg.get": 4,
        "commands.get": 3,
        "framework_indicators.get": 2,
        "package_data.get": 4,
        "result1.get": 4,
        "scenario_result.get": 2,
        "performance.get": 11,
        "value.get": 6,
        "session_data.get": 2,
        "agent_data.get": 7,
        "agent_config.get": 2,
        "actual_metadata.get": 2,
        "extension_map.get": 3,
        "unverified.get": 2,
        "endpoint_counts.get": 2,
        "changes.get": 2,
        "type_class_patterns.get": 2,
        "mock_analysis_time.get": 2,
        "file_metrics.get": 2,
        "quality_distribution.get": 2,
        "smell_frequency.get": 2,
        "quality_dist.get": 4,
        "smell_freq.get": 6,
        "device.get": 2,
        "by_status.get": 2,
        "by_function.get": 2,
        "val.get": 2,
        "phase_counts.get": 2,
        "provider_pricing.get": 8,
        "source_data.get": 1,
        "model_data.get": 1,
        "forecasted_metrics.get": 2,
        "locations.get": 1,
        "status_emoji.get": 1,
        "system_state.get": 1,
        "standard_info.get": 1,
        "requirement_checks.get": 1,
        "hazard_info.get": 2,
        "assessment_methods.get": 1,
        "criteria_scores.get": 1,
        "safety_multipliers.get": 1,
        "verification.get": 1,
        "type_multipliers.get": 2,
        "current_allocation.get": 4,
        "consciousness_results.get": 1,
        "consciousness.get": 2,
        "quality.get": 2,
        "complexity_multipliers.get": 1,
        "dependency_rules.get": 1,
        "priority_mapping.get": 1,
        "improvement_factors.get": 1,
        "complex_workflow_req.get": 1,
        "attention_focus.get": 1,
        "conscious_experience.get": 1,
        "experience.get": 1,
        "thought.get": 4,
        "thought_analysis.get": 7,
        "elevation_result.get": 1,
        "deep_result.get": 1,
        "system_info.get": 4,
        "edge_data.get": 4,
        "failure_types.get": 1,
        "performance_patterns.get": 2,
        "behavioral_traits.get": 2,
        "optimal_conditions.get": 1,
        "failure_patterns.get": 1,
        "perf1.get": 2,
        "perf2.get": 2,
        "environment.get": 5,
        "avg_scores.get": 1,
        "env_state.get": 3,
        "current_state.get": 7,
        "actual_outcome.get": 3,
        "amplification_result.get": 2,
        "learning.get": 1,
        "amplification.get": 1,
        "evolution.get": 1,
        "genome.get": 2,
        "method_complexity.get": 1,
        "granger.get": 3,
        "dependency_metrics.get": 4,
        "debt_data.get": 1,
        "business_data.get": 1,
        "semantic_data.get": 1,
        "criticality_counts.get": 1,
        "event_mapping.get": 1,
        "hour_achievements.get": 1,
        "mode_specific.get": 1,
        "execution.get": 1,
        "lb_config.get": 1,
        "hub_config.get": 1,
        "performance_data.get": 25,
        "perf_reqs.get": 2,
        "available.get": 1,
        "state_analysis.get": 4,
        "workload.get": 2,
        "resources.get": 5,
        "resource_constraints.get": 2,
        "decision.get": 1,
        "available_resources.get": 2,
        "prediction_data.get": 1,
        "workload_pred.get": 2,
        "confidence_scores.get": 1,
        "issues_pred.get": 1,
        "action_data.get": 13,
        "sync_data.get": 5,
        "subscription_config.get": 2,
        "legacy_response.get": 3,
        "settings.get": 5,
        "env_distribution.get": 1,
        "ultra_reliability.get": 1,
        "realtime.get": 1,
        "completeness.get": 1,
        "json_data.get": 1,
        "new_status.get": 1,
        "ultra_results.get": 1,
        "d1.get": 1,
        "d2.get": 1,
        "sanitizer.get": 3,
        "dedup.get": 3,
        "rate_limiter.get": 3,
        "integrity.get": 3,
        "error_recovery.get": 3,
        "connectivity.get": 3,
        "processing_info.get": 1,
        "fallback.get": 1,
        "compression.get": 2,
        "dlq.get": 2,
        "batch.get": 3,
        "heartbeat.get": 2,
        "monitoring.get": 11,
        "hb.get": 1,
        "fb.get": 1,
        "bp.get": 1,
        "redundancy.get": 3,
        "watchdog.get": 3,
        "telemetry.get": 3,
        "optimizer.get": 3,
        "comp.get": 1,
        "comp_data.get": 3,
        "violations.get": 2,
        "sla_summary.get": 1,
        "sla_compliance.get": 3,
        "circuit_summary.get": 2,
        "receipt_summary.get": 1,
        "queue_status.get": 1,
        "queue_health.get": 1,
        "routes_data.get": 2,
        "timeout_map.get": 1,
        "robustness.get": 9,
        "journey.get": 1,
        "flow_summary.get": 12,
        "transaction.get": 1,
        "metric_summary.get": 1,
        "analytics_result.get": 1,
        "real_coverage.get": 8,
        "module_data.get": 9,
        "real_quality.get": 1,
        "crew_config.get": 5,
        "consensus_result.get": 2,
        "role_contributions.get": 1,
        "n.get": 1,
        "workflow_data.get": 14,
        "health_summary.get": 1,
        "stream_stats.get": 2,
        "persistence_stats.get": 2,
        "cache_stats.get": 2,
        "pipeline_stats.get": 2,
        "real_agents_data.get": 5,
        "agent.get": 11,
        "activity.get": 1,
        "system_status.get": 1,
        "usage.get": 19,
        "proc.get": 5,
        "quality_data.get": 13,
        "benchmarks.get": 2,
        "scan_result.get": 9,
        "business_metrics.get": 3,
        "coverage_report.get": 7,
        "heartbeat_status.get": 2,
        "batch_status.get": 6,
        "dlq_stats.get": 3,
        "fallback_status.get": 2,
        "compression_stats.get": 2,
        "previous.get": 1,
        "zipf.read": 2,
        "backup_data.get": 3,
        "tracker_summary.get": 1,
        "delivery_stats.get": 1,
        "agg_metrics.get": 2,
        "perf_stats.get": 2,
        "health_map.get": 1,
        "retry_stats.get": 2,
        "testsuite.get": 5,
        "root.get": 2,
        "class_elem.get": 3,
        "vulns.get": 4,
        "store.set": 1,
        "store.get": 1,
        "loads.get": 1,
        "response_times.get": 1,
        "category_risks.get": 1,
        "history_data.get": 1,
        "priority_counts.get": 2,
        "service_data.get": 6,
        "imported_configs.get": 3,
        "priority_item.get": 2,
        "ignore_item.get": 2,
        "test_pref.get": 2,
        "mode_mapping.get": 1,
        "units.get": 1,
        "agent_baselines.get": 1,
        "category_mapping.get": 1,
        "metric_weights.get": 1,
        "custom_weights.get": 1,
        "endpoint.get": 3,
        "rest_apis.get": 3,
        "graphql_data.get": 2,
        "resolver.get": 1,
        "graphql.get": 2,
        "signatures.get": 2,
        "interfaces.get": 2,
        "loc.get": 1,
        "clone.get": 1,
        "ssl_config.get": 4,
        "cert_analysis.get": 5,
        "key_mgmt.get": 2,
        "ssl_analysis.get": 2,
        "random_analysis.get": 2,
        "tx.get": 1,
        "class_hierarchy.get": 3,
        "class_parents.get": 1,
        "conventions_map.get": 1,
        "qf.get": 6,
        "sm.get": 6,
        "cc.get": 3,
        "cm.get": 2,
        "leaks.get": 6,
        "gc_pressure.get": 2,
        "gc_analysis.get": 3,
        "indicator.get": 1,
        "toml.load": 1,
        "common_licenses.get": 1,
        "latest_versions.get": 1,
        "pyramid.get": 1,
        "handoff_result.get": 2,
        "directive_data.get": 8,
        "ack_data.get": 2,
        "shared_stats.get": 6,
        "fallback_result.get": 1,
        "message_data.get": 3,
        "deliverable_map.get": 1,
        "agent_performance.get": 1,
        "agent_counts.get": 1,
        "msg_dict.get": 10,
        "compressed_context.get": 1,
        "preservation_info.get": 1,
        "parent_data.get": 1,
        "layer_data.get": 3,
        "condition_map.get": 1,
        "node_type_map.get": 1,
        "dependency_graph.get": 2,
        "extensions.get": 2,
        "assertion_map.get": 5,
        "lang_extensions.get": 1,
        "framework_lookup.get": 1,
        "language_dist.get": 1,
        "resource.get": 9,
        "selected_resource.get": 2,
        "best_resource.get": 12,
        "actual_performance.get": 2,
        "total_resource_req.get": 1,
        "analysis_dict.get": 8,
        "loaded_state.get": 2,
        "security_analysis.get": 7,
        "optimization_result.get": 5,
        "bottleneck_analysis.get": 2,
        "external_event.get": 4,
        "metadata_dict.get": 2,
        "sop_data.get": 1,
        "step_data.get": 13,
        "sop_context.get": 1,
        "choice_weights.get": 1,
        "choice_counts.get": 1,
        "analysis_results.get": 13,
        "preferences.get": 1,
        "custom_section.get": 1,
        "coverage_by_type.get": 3,
        "template_data.get": 3,
        "strategy.get": 7,
        "evaluation_data.get": 6,
        "final_plan.get": 3,
        "level.get": 3,
        "plan.get": 13,
        "quality_map.get": 1,
        "strategy_values.get": 1,
        "htp_enhancements.get": 3,
        "llm_enhancements.get": 2,
        "flag_data.get": 5,
        "cond_data.get": 1,
        "choice.get": 2,
        "provider_metrics.get": 5,
        "agent_util.get": 1,
        "agent_metrics.get": 1,
        "resource_request.get": 3,
        "agent_decision.get": 1,
        "optimizer_decision.get": 1,
        "parallelism_analysis.get": 4,
        "telemetry_stats.get": 7,
        "objective_scores.get": 12,
        "test_plan.get": 16,
        "optimization_plan.get": 4,
        "best_solution.get": 4,
        "best.get": 2,
        "plan_content.get": 1,
        "strategy_scores.get": 1,
        "scan_results.get": 1,
        "tc.get": 4,
        "callback_map.get": 1,
        "templates.get": 1,
        "language_config.get": 7,
        "assertion_templates.get": 1,
        "idle_info.get": 2,
        "type_priorities.get": 1,
        "status_priorities.get": 1,
        "type_scores.get": 1,
        "investigation_results.get": 4,
        "work_item.get": 12,
        "item_content.get": 1,
        "priority_scores.get": 1,
        "urgency_scores.get": 1,
        "category_multipliers.get": 1,
        "call_counts.get": 1,
        "assertion_template.get": 1,
        "ext_mapping.get": 1,
        "feedback_by_type.get": 1,
        "buffer.get": 1,
        "event_types.get": 2,
        "profiler_stats.get": 3,
        "flow_analysis.get": 9,
        "telemetry_data.get": 7,
        "alert_data.get": 15,
        "suggestion_counts.get": 1,
        "final_structure.get": 2,
        "mock_app.get": 2,
        "query_result.get": 2,
        "widget_config.get": 2,
        "customizations.get": 3,
        "widget.get": 5,
        "pos.get": 2,
        "row_data.get": 1,
        "branch_data.get": 3,
        "archived_feature.get": 2,
        "entry.get": 1,
        "discovery_report.get": 1,
        "group_data.get": 8,
        "consolidation.get": 1
      }
    },
    "security_analysis": {
      "security_concerns": 135,
      "hardcoded_secrets": 135,
      "unencrypted_config_values": 60
    },
    "consolidation_analysis": {
      "duplicate_env_vars": 4,
      "scattered_configs": 2,
      "hardcoded_consolidation": 15,
      "config_file_spread": 1382
    },
    "consolidation_opportunities": {
      "duplicate_env_vars": [
        {
          "env_var": "GOOGLE_API_KEY",
          "file_count": 83,
          "files": [
            "TestMaster\\archive\\original_backup\\accelerated_converter.py",
            "TestMaster\\scripts\\achieve_100_percent.py",
            "TestMaster\\scripts\\test_single_generation.py",
            "TestMaster\\archive\\legacy_scripts\\test_single_api_call.py",
            "TestMaster\\archive\\legacy_scripts\\self_healing_converter.py",
            "TestMaster\\scripts\\test_gemini_correct.py",
            "TestMaster\\archive\\original_backup\\scripts\\test_gemini_correct.py",
            "TestMaster\\archive\\legacy_scripts\\parallel_coverage_converter.py",
            "TestMaster\\archive\\legacy_scripts\\parallel_converter.py",
            "TestMaster\\archive\\original_backup\\scripts\\working_test_generator.py",
            "TestMaster\\week_5_8_batch_converter.py",
            "TestMaster\\archive\\original_backup\\scripts\\parallel_converter_working.py",
            "TestMaster\\archive\\legacy_scripts\\working_test_generator.py",
            "TestMaster\\archive\\original_backup\\scripts\\self_healing_converter.py",
            "TestMaster\\archive\\original_backup\\parallel_converter_fixed.py",
            "TestMaster\\archive\\legacy_scripts\\week_7_8_converter.py",
            "TestMaster\\archive\\legacy_scripts\\parallel_converter_fixed.py",
            "TestMaster\\archive\\legacy_scripts\\independent_test_verifier.py",
            "TestMaster\\scripts\\diagnose_final_five.py",
            "TestMaster\\archive\\original_backup\\scripts\\parallel_coverage_converter_fixed.py",
            "TestMaster\\archive\\original_backup\\scripts\\test_single_api_call.py",
            "TestMaster\\archive\\state_cache_consolidation_20250821_084236\\parallel_coverage_converter.py",
            "TestMaster\\enhanced_self_healing_verifier.py",
            "TestMaster\\scripts\\working_test_generator.py",
            "TestMaster\\archive\\legacy_scripts\\week_5_8_batch_converter.py",
            "TestMaster\\archive\\legacy_scripts\\achieve_100_percent_coverage.py",
            "TestMaster\\enhanced_context_aware_test_generator.py",
            "TestMaster\\archive\\original_backup\\scripts\\test_updated_prompt.py",
            "TestMaster\\scripts\\gemini_powered_test_generator.py",
            "TestMaster\\archive\\original_backup\\enhanced_context_aware_test_generator.py",
            "TestMaster\\archive\\legacy_scripts\\parallel_converter_working.py",
            "TestMaster\\archive\\original_backup\\scripts\\gemini_powered_test_generator.py",
            "TestMaster\\scripts\\self_healing_converter.py",
            "TestMaster\\archive\\original_backup\\week_5_8_batch_converter.py",
            "TestMaster\\archive\\legacy_scripts\\test_gemini_config.py",
            "TestMaster\\archive\\original_backup\\scripts\\parallel_coverage_converter.py",
            "TestMaster\\scripts\\achieve_100_percent_coverage.py",
            "TestMaster\\archive\\legacy_scripts\\gemini_powered_test_generator.py",
            "TestMaster\\archive\\legacy_scripts\\turbo_converter.py",
            "TestMaster\\core\\testing\\supercharged_test_generator.py",
            "TestMaster\\archive\\original_backup\\scripts\\test_gemini_api.py",
            "TestMaster\\turbo_converter.py",
            "TestMaster\\scripts\\generate_coverage_sequential.py",
            "TestMaster\\archive\\legacy_scripts\\generate_coverage_sequential.py",
            "TestMaster\\archive\\original_backup\\scripts\\diagnose_final_five.py",
            "TestMaster\\accelerated_converter.py",
            "TestMaster\\archive\\legacy_scripts\\test_updated_prompt.py",
            "TestMaster\\archive\\original_backup\\week_7_8_converter.py",
            "TestMaster\\core\\domains\\testing\\supercharged_test_generator.py",
            "TestMaster\\archive\\legacy_scripts\\test_single_generation.py",
            "TestMaster\\archive\\original_backup\\turbo_converter.py",
            "TestMaster\\archive\\original_backup\\scripts\\intelligent_converter.py",
            "TestMaster\\independent_test_verifier.py",
            "TestMaster\\archive\\original_backup\\scripts\\generate_coverage_sequential.py",
            "TestMaster\\archive\\legacy_scripts\\accelerated_converter.py",
            "TestMaster\\archive\\legacy_scripts\\test_gemini_correct.py",
            "TestMaster\\archive\\original_backup\\scripts\\achieve_100_percent_coverage.py",
            "TestMaster\\scripts\\final_five_converter.py",
            "TestMaster\\scripts\\test_updated_prompt.py",
            "TestMaster\\archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
            "TestMaster\\archive\\legacy_scripts\\simple_test_generator.py",
            "TestMaster\\archive\\original_backup\\scripts\\simple_test_generator.py",
            "TestMaster\\archive\\legacy_scripts\\intelligent_converter.py",
            "TestMaster\\archive\\original_backup\\scripts\\test_single_generation.py",
            "TestMaster\\scripts\\test_single_api_call.py",
            "TestMaster\\archive\\legacy_scripts\\enhanced_self_healing_verifier.py",
            "TestMaster\\archive\\legacy_scripts\\achieve_100_percent.py",
            "TestMaster\\parallel_converter.py",
            "TestMaster\\scripts\\intelligent_converter.py",
            "TestMaster\\scripts\\test_gemini_config.py",
            "TestMaster\\week_7_8_converter.py",
            "TestMaster\\archive\\original_backup\\independent_test_verifier.py",
            "TestMaster\\archive\\legacy_scripts\\diagnose_final_five.py",
            "TestMaster\\archive\\original_backup\\enhanced_self_healing_verifier.py",
            "TestMaster\\parallel_converter_fixed.py",
            "TestMaster\\scripts\\simple_test_generator.py",
            "TestMaster\\archive\\original_backup\\scripts\\test_gemini_config.py",
            "TestMaster\\archive\\original_backup\\scripts\\final_five_converter.py",
            "TestMaster\\archive\\legacy_scripts\\final_five_converter.py",
            "TestMaster\\archive\\original_backup\\scripts\\achieve_100_percent.py",
            "TestMaster\\archive\\original_backup\\parallel_converter.py",
            "TestMaster\\scripts\\test_gemini_api.py",
            "TestMaster\\archive\\legacy_scripts\\test_gemini_api.py"
          ],
          "consolidation_benefit": "centralize_env_var_access"
        },
        {
          "env_var": "KEY",
          "file_count": 7,
          "files": [
            "TestMaster\\core\\domains\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
            "TestMaster\\core\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_performance_booster.py",
            "TestMaster\\archive\\oversized_modules_20250821_042018\\coordination\\agent_coordination_protocols.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
            "TestMaster\\dashboard\\api\\health.py",
            "TestMaster\\analysis\\comprehensive_analysis\\domain_modeling\\domain_model_analyzer.py"
          ],
          "consolidation_benefit": "centralize_env_var_access"
        },
        {
          "env_var": "SECRET",
          "file_count": 2,
          "files": [
            "TestMaster\\core\\intelligence\\testing\\security\\api_security_tester.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\security\\api_security_tester.py"
          ],
          "consolidation_benefit": "centralize_env_var_access"
        },
        {
          "env_var": "PASSWORD",
          "file_count": 2,
          "files": [
            "TestMaster\\core\\security\\enterprise_authentication.py",
            "TestMaster\\core\\domains\\security\\enterprise_authentication.py"
          ],
          "consolidation_benefit": "centralize_env_var_access"
        }
      ],
      "scattered_configs": [
        {
          "config_type": "config_dictionaries",
          "file_count": 121,
          "total_instances": 198,
          "files": [
            "TestMaster\\core\\intelligence\\documentation\\interactive_docs_system.py",
            "TestMaster\\archive\\phase5_archive\\replaced_code\\enterprise_deployment_20250819_195602.py",
            "TestMaster\\testmaster_orchestrator.py",
            "TestMaster\\configuration_settings_analyzer.py",
            "TestMaster\\test_intelligence_integration.py",
            "TestMaster\\core\\domains\\intelligence\\api\\ultimate_nexus_api.py",
            "TestMaster\\enhanced_security_dashboard_api.py",
            "TestMaster\\core\\testing\\langgraph_supervisor_testing.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\telemetry_export_manager.py",
            "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\error_handling_analysis.py"
          ],
          "consolidation_benefit": "centralize_config_dictionaries"
        },
        {
          "config_type": "environment_variables",
          "file_count": 95,
          "total_instances": 99,
          "files": [
            "TestMaster\\archive\\original_backup\\accelerated_converter.py",
            "TestMaster\\scripts\\achieve_100_percent.py",
            "TestMaster\\scripts\\test_single_generation.py",
            "TestMaster\\archive\\legacy_scripts\\test_single_api_call.py",
            "TestMaster\\archive\\legacy_scripts\\self_healing_converter.py",
            "TestMaster\\scripts\\test_gemini_correct.py",
            "TestMaster\\dashboard\\api\\health.py",
            "TestMaster\\archive\\original_backup\\scripts\\test_gemini_correct.py",
            "TestMaster\\archive\\legacy_scripts\\parallel_coverage_converter.py",
            "TestMaster\\archive\\legacy_scripts\\parallel_converter.py"
          ],
          "consolidation_benefit": "centralize_environment_variables"
        }
      ],
      "hardcoded_consolidation": [
        {
          "value": "0",
          "instance_count": 55,
          "files": [
            "TestMaster\\core\\intelligence\\documentation\\doc_orchestrator.py",
            "TestMaster\\core\\intelligence\\architectural_evolution_modules\\system_growth_modeler.py",
            "TestMaster\\operational\\infrastructure_validation_suite.py",
            "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\quality_analysis.py",
            "TestMaster\\archive\\from_subarchive_energy_consumption_analysis_original.py",
            "TestMaster\\core\\intelligence\\architectural_evolution\\growth_modeler.py",
            "TestMaster\\archive\\advanced_testing_intelligence.py",
            "TestMaster\\core\\intelligence\\archive\\architectural_evolution_predictor_original.py",
            "TestMaster\\archive\\coverage_analyzer_original_2697_lines.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
            "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\complexity_analysis.py",
            "TestMaster\\core\\intelligence\\testing\\components\\integration_generator.py",
            "TestMaster\\testmaster\\orchestrator\\file_tagger.py",
            "TestMaster\\testmaster\\overview\\coverage_intelligence.py",
            "TestMaster\\dashboard\\dashboard_core\\real_data_extractor.py",
            "TestMaster\\final_archive_sweep.py",
            "TestMaster\\core\\intelligence\\semantic_code_analyzer.py",
            "TestMaster\\testmaster\\verification\\quality.py",
            "TestMaster\\comprehensive_classical_analysis_methods.py",
            "TestMaster\\analysis\\comprehensive_analysis\\pattern_mining\\cross_repo_pattern_miner.py",
            "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\statistical_analysis.py",
            "TestMaster\\analysis\\comprehensive_analysis\\cognitive_load\\cognitive_load_analyzer.py",
            "TestMaster\\core\\intelligence\\prescriptive_intelligence_engine.py",
            "TestMaster\\enhanced_incremental_ast_engine.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\components\\integration_generator.py",
            "TestMaster\\exhaustive_stub_analysis.py",
            "TestMaster\\realtime_metrics_collector.py",
            "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\evolution_analysis.py",
            "TestMaster\\event_flow_mapper.py",
            "TestMaster\\testmaster\\converters\\intelligent.py",
            "TestMaster\\pattern_analysis_detailed.py",
            "TestMaster\\find_all_stubs.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\doc_orchestrator.py",
            "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\graph_analysis.py",
            "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
            "TestMaster\\refine_misc_tests.py",
            "TestMaster\\analysis\\comprehensive_analysis\\pattern_recognition\\ml_pattern_recognition.py",
            "TestMaster\\archive\\superseded_toplevel_energy_consumption_analysis.py",
            "TestMaster\\split_massive_test_file.py",
            "TestMaster\\testmaster\\refactoring\\hierarchical_analyzer.py",
            "TestMaster\\archive\\architectural_evolution_predictor_original_2410_lines_20250821_113953.py",
            "TestMaster\\database_relationship_analyzer.py"
          ],
          "variables": [
            "max_depth",
            "max_diameter",
            "port",
            "max_depth",
            "max_depth",
            "total_files",
            "existing_files",
            "total_archived_files",
            "total_consolidated_files",
            "total_files",
            "config_score",
            "open_files",
            "files_created",
            "files_created",
            "max_depth",
            "total_files",
            "max_depth",
            "test_files_analyzed",
            "max_slope",
            "max_base_depth",
            "import_count",
            "max_depth",
            "max_depth",
            "max_base_depth",
            "import_count",
            "documented_files",
            "file_count",
            "import_index",
            "path_value",
            "max_depth",
            "max_slope",
            "max_slope",
            "max_slope",
            "documented_files",
            "file_count",
            "import_index",
            "files_analyzed",
            "config_count",
            "file_total_complexity",
            "imports",
            "max_depth",
            "files_changed",
            "max_depth",
            "file_functions",
            "file_docstring_functions",
            "file_classes",
            "file_docstring_classes",
            "max_depth",
            "import_count",
            "import_count",
            "imports",
            "max_depth",
            "path_id",
            "imports_in_methods",
            "max_depth"
          ],
          "consolidation_benefit": "extract_to_constant"
        },
        {
          "value": "timeout",
          "instance_count": 43,
          "files": [
            "TestMaster\\testmaster\\overview\\regression_tracker.py",
            "TestMaster\\core\\tools\\type_safe_tools.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\workflow_recipe_docs.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_circuit_breaker.py",
            "TestMaster\\core\\intelligence\\orchestration\\cross_system_orchestrator.py",
            "TestMaster\\core\\domains\\security\\enum_security.py",
            "TestMaster\\core\\orchestration\\foundations\\abstractions\\task_abstractions.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
            "TestMaster\\core\\intelligence\\testing\\chaos_engineer.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\components\\ml_optimizer.py",
            "TestMaster\\testmaster\\monitoring\\test_scheduler.py",
            "TestMaster\\core\\intelligence\\intelligence_testing_framework.py",
            "TestMaster\\core\\security\\error_recovery_framework.py",
            "TestMaster\\core\\intelligence\\documentation\\api_validation_framework.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_dead_letter_queue.py",
            "TestMaster\\core\\intelligence\\testing\\components\\ml_optimizer.py",
            "TestMaster\\core\\testing\\adaptive_testing_framework.py",
            "TestMaster\\core\\security\\enum_security.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_flow_monitor.py",
            "TestMaster\\core\\domains\\security\\error_recovery_framework.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_delivery_verifier.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\api_validation_framework.py",
            "TestMaster\\core\\security\\guardrail_security_system.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_fallback_system.py",
            "TestMaster\\core\\security\\circuit_breaker_matrix.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\chaos_engineer.py",
            "TestMaster\\core\\intelligence\\documentation\\workflow_recipe_docs.py",
            "TestMaster\\core\\domains\\security\\circuit_breaker_matrix.py",
            "TestMaster\\core\\security\\adaptive_fallback_orchestrator.py",
            "TestMaster\\core\\domains\\testing\\adaptive_testing_framework.py",
            "TestMaster\\core\\security\\byzantine_consensus_security.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_flow_monitor.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
            "TestMaster\\testmaster\\async_processing\\async_monitor.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
            "TestMaster\\core\\domains\\security\\byzantine_consensus_security.py",
            "TestMaster\\archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
            "TestMaster\\core\\orchestration\\foundations\\protocols\\integration_protocols.py",
            "TestMaster\\core\\domains\\security\\guardrail_security_system.py",
            "TestMaster\\core\\domains\\intelligence\\orchestration\\cross_system_orchestrator.py",
            "TestMaster\\core\\domains\\security\\adaptive_fallback_orchestrator.py",
            "TestMaster\\core\\orchestration\\engines\\workflow\\workflow_orchestration_engine.py"
          ],
          "variables": [
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT",
            "TIMEOUT"
          ],
          "consolidation_benefit": "extract_to_constant"
        },
        {
          "value": "configuration",
          "instance_count": 31,
          "files": [
            "TestMaster\\core\\domains\\intelligence\\documentation\\faq_system.py",
            "TestMaster\\core\\intelligence\\documentation\\json_docs_processor.py",
            "TestMaster\\core\\security\\fault_tolerance_engine.py",
            "TestMaster\\core\\intelligence\\documentation\\faq_system.py",
            "TestMaster\\core\\intelligence\\unified_architecture_intelligence_complete.py",
            "TestMaster\\core\\domains\\security\\document_classification_security.py",
            "TestMaster\\core\\security\\document_classification_security.py",
            "TestMaster\\core\\domains\\intelligence\\analysis\\semantic_analyzer.py",
            "TestMaster\\core\\intelligence\\semantic_code_analyzer.py",
            "TestMaster\\core\\domains\\intelligence\\analysis\\semantic_base.py",
            "TestMaster\\archive\\modularization_20250821\\semantic_analyzer_original.py",
            "TestMaster\\core\\security\\exception_monitoring.py",
            "TestMaster\\core\\security\\vulnerability_detection_framework.py",
            "TestMaster\\core\\security\\circuit_breaker_matrix.py",
            "TestMaster\\archive\\from_subarchive_semantic_analysis_original.py",
            "TestMaster\\core\\domains\\security\\fault_tolerance_engine.py",
            "TestMaster\\core\\domains\\security\\exception_monitoring.py",
            "TestMaster\\core\\domains\\security\\circuit_breaker_matrix.py",
            "TestMaster\\core\\security\\adaptive_fallback_orchestrator.py",
            "TestMaster\\core\\intelligence\\testing\\security\\api_security_tester.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\json_docs_processor.py",
            "TestMaster\\core\\domains\\security\\vulnerability_detection_framework.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\knowledge_management_framework.py",
            "TestMaster\\core\\intelligence\\analysis\\semantic_base.py",
            "TestMaster\\core\\intelligence\\analysis\\semantic_analyzer.py",
            "TestMaster\\testmaster\\overview\\structure_mapper.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\security\\api_security_tester.py",
            "TestMaster\\core\\intelligence\\unified_architecture_intelligence.py",
            "TestMaster\\core\\intelligence\\documentation\\knowledge_management_framework.py",
            "TestMaster\\core\\domains\\security\\adaptive_fallback_orchestrator.py"
          ],
          "variables": [
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION",
            "CONFIGURATION"
          ],
          "consolidation_benefit": "extract_to_constant"
        },
        {
          "value": "api_key",
          "instance_count": 19,
          "files": [
            "TestMaster\\core\\domains\\security\\enterprise_auth_gateway.py",
            "TestMaster\\testmaster\\intelligence\\documentation\\templates\\api\\base.py",
            "TestMaster\\core\\intelligence\\documentation\\enterprise_api_docs.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\enterprise_api_docs.py",
            "TestMaster\\core\\intelligence\\api\\unified_api_gateway.py",
            "TestMaster\\core\\security\\enterprise_auth_gateway.py",
            "TestMaster\\core\\security\\enterprise_authentication.py",
            "TestMaster\\core\\domains\\security\\distributed_key_management_security.py",
            "TestMaster\\core\\domains\\testing\\testmaster_api_gateway.py",
            "TestMaster\\core\\testing\\testmaster_api_gateway.py",
            "TestMaster\\core\\domains\\intelligence\\api\\unified_api_gateway.py",
            "TestMaster\\core\\domains\\security\\enterprise_authentication.py",
            "TestMaster\\core\\integration\\foundations\\abstractions\\service_abstractions.py",
            "TestMaster\\config\\modules\\security_config.py",
            "TestMaster\\core\\security\\distributed_key_management_security.py"
          ],
          "variables": [
            "API_KEY",
            "API_KEY",
            "API_KEY",
            "API_KEY",
            "API_KEY",
            "API_KEY",
            "API_KEY",
            "API_KEY",
            "API_KEY",
            "API_KEY",
            "API_KEY",
            "API_KEY",
            "API_KEY",
            "API_KEY",
            "API_KEY",
            "API_KEY",
            "API_KEY",
            "API_KEY",
            "API_KEY"
          ],
          "consolidation_benefit": "extract_to_constant"
        },
        {
          "value": "http://localhost:5000",
          "instance_count": 16,
          "files": [
            "TestMaster\\dashboard\\quick_integration_test.py",
            "TestMaster\\dashboard\\validate_all_endpoints.py",
            "TestMaster\\dashboard\\integration_gap_analysis.py",
            "TestMaster\\dashboard\\test_api_endpoints.py",
            "TestMaster\\dashboard\\quick_frontend_test.py",
            "TestMaster\\dashboard\\test_new_robustness_features.py",
            "TestMaster\\dashboard\\test_frontend_without_browser.py",
            "TestMaster\\dashboard\\test_all_features.py",
            "TestMaster\\dashboard\\comprehensive_frontend_test.py",
            "TestMaster\\dashboard\\demo_automated_frontend_testing.py",
            "TestMaster\\dashboard\\validate_100_percent_real_data.py",
            "TestMaster\\dashboard\\quick_validation.py",
            "TestMaster\\dashboard\\test_robustness_suite.py",
            "TestMaster\\dashboard\\test_new_visualization_apis.py",
            "TestMaster\\dashboard\\test_robustness_verification.py"
          ],
          "variables": [
            "base_url",
            "base_url",
            "base_url",
            "base_url",
            "base_url",
            "base_url",
            "BASE_URL",
            "base_url",
            "base_url",
            "base_url",
            "base_url",
            "base_url",
            "BASE_URL",
            "base_url",
            "base_url",
            "base_url"
          ],
          "consolidation_benefit": "extract_to_constant"
        },
        {
          "value": "0.0",
          "instance_count": 11,
          "files": [
            "TestMaster\\core\\intelligence\\analytics\\analytics_deduplication.py",
            "TestMaster\\testmaster\\intelligence\\documentation\\core\\quality_assessor.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
            "TestMaster\\core\\domains\\intelligence\\analytics\\analytics_deduplication.py",
            "TestMaster\\core\\intelligence\\orchestration\\cross_system_orchestrator.py",
            "TestMaster\\core\\intelligence\\emergent_intelligence_detector.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_deduplication.py",
            "TestMaster\\testmaster\\flow_optimizer\\dependency_resolver.py",
            "TestMaster\\testmaster\\intelligence\\optimization\\optimization_algorithms.py",
            "TestMaster\\core\\domains\\intelligence\\orchestration\\cross_system_orchestrator.py"
          ],
          "variables": [
            "key_similarity",
            "key_similarity",
            "max_duration",
            "max_proximity",
            "key_similarity",
            "max_duration",
            "key_similarity",
            "level_max_duration",
            "max_score",
            "max_score",
            "max_val"
          ],
          "consolidation_benefit": "extract_to_constant"
        },
        {
          "value": "10",
          "instance_count": 9,
          "files": [
            "TestMaster\\batch_convert_broken_tests.py",
            "TestMaster\\archive\\original_backup\\batch_convert_broken_tests.py",
            "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\workflow_execution_engine_robust.py",
            "TestMaster\\integration\\workflow_execution_engine.py",
            "TestMaster\\archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
            "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
            "TestMaster\\core\\intelligence\\recursive_intelligence_optimizer.py",
            "TestMaster\\archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
            "TestMaster\\archive\\legacy_scripts\\batch_convert_broken_tests.py"
          ],
          "variables": [
            "max_count",
            "max_batch",
            "max_count",
            "max_count",
            "max_batch",
            "max_batch",
            "max_batch",
            "max_iterations",
            "max_batch"
          ],
          "consolidation_benefit": "extract_to_constant"
        },
        {
          "value": "3",
          "instance_count": 9,
          "files": [
            "TestMaster\\week_7_8_converter.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
            "TestMaster\\core\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
            "TestMaster\\core\\testing\\flow_testing.py",
            "TestMaster\\archive\\original_backup\\week_7_8_converter.py",
            "TestMaster\\archive\\legacy_scripts\\week_7_8_converter.py",
            "TestMaster\\core\\domains\\testing\\flow_testing.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_error_recovery.py"
          ],
          "variables": [
            "max_batches",
            "max_retries",
            "max_batches",
            "max_batches",
            "max_retries",
            "max_iterations",
            "max_retries",
            "max_iterations",
            "max_retries"
          ],
          "consolidation_benefit": "extract_to_constant"
        },
        {
          "value": "reporting",
          "instance_count": 9,
          "files": [
            "TestMaster\\core\\domains\\testing\\enterprise_test_framework.py",
            "TestMaster\\core\\domains\\intelligence\\enterprise\\api\\endpoint_manager.py",
            "TestMaster\\core\\tools\\type_safe_tools.py",
            "TestMaster\\agents\\roles\\base_role.py",
            "TestMaster\\core\\intelligence\\enterprise\\api\\endpoint_manager.py",
            "TestMaster\\config\\modules\\data_models.py",
            "TestMaster\\core\\testing\\enterprise_test_framework.py",
            "TestMaster\\config\\testmaster_config.py",
            "TestMaster\\config\\enhanced_unified_config.py"
          ],
          "variables": [
            "REPORTING",
            "REPORTING",
            "REPORTING",
            "REPORTING",
            "REPORTING",
            "REPORTING",
            "REPORTING",
            "REPORTING",
            "REPORTING"
          ],
          "consolidation_benefit": "extract_to_constant"
        },
        {
          "value": "configuration_update",
          "instance_count": 8,
          "files": [
            "TestMaster\\core\\intelligence\\orchestration\\integration_hub.py",
            "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\cross_system_apis_robust.py",
            "TestMaster\\integration\\cross_system_apis.py",
            "TestMaster\\integration\\cross_system_communication.py",
            "TestMaster\\core\\orchestration\\integration\\hub\\integration_hub.py",
            "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
            "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
            "TestMaster\\core\\domains\\intelligence\\orchestration\\integration_hub.py"
          ],
          "variables": [
            "CONFIGURATION_UPDATE",
            "CONFIGURATION_UPDATE",
            "CONFIGURATION_UPDATE",
            "CONFIGURATION_UPDATE",
            "CONFIGURATION_UPDATE",
            "CONFIGURATION_UPDATE",
            "CONFIGURATION_UPDATE",
            "CONFIGURATION_UPDATE"
          ],
          "consolidation_benefit": "extract_to_constant"
        },
        {
          "value": "configuration_change",
          "instance_count": 8,
          "files": [
            "TestMaster\\core\\domains\\intelligence\\documentation\\migration_guide_generator.py",
            "TestMaster\\core\\domains\\security\\security_monitoring_system.py",
            "TestMaster\\core\\security\\security_monitoring_system.py",
            "TestMaster\\core\\domains\\intelligence\\autonomous_decision_engine.py",
            "TestMaster\\core\\intelligence\\autonomous_decision_engine.py",
            "TestMaster\\core\\intelligence\\documentation\\migration_guide_generator.py",
            "TestMaster\\core\\domains\\intelligence\\streaming\\event_streaming_engine.py",
            "TestMaster\\core\\intelligence\\streaming\\event_streaming_engine.py"
          ],
          "variables": [
            "CONFIGURATION_CHANGE",
            "CONFIGURATION_CHANGE",
            "CONFIGURATION_CHANGE",
            "CONFIGURATION_CHANGE",
            "CONFIGURATION_CHANGE",
            "CONFIGURATION_CHANGE",
            "CONFIGURATION_CHANGE",
            "CONFIGURATION_CHANGE"
          ],
          "consolidation_benefit": "extract_to_constant"
        },
        {
          "value": "False",
          "instance_count": 7,
          "files": [
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_aggregator.py",
            "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
            "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\performance_analysis.py",
            "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\memory_analysis.py",
            "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\resource_io_analysis.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_aggregator.py",
            "TestMaster\\database_relationship_analyzer.py"
          ],
          "variables": [
            "is_primary_key",
            "rate_limiter_available",
            "rate_limiter_available",
            "file_has_comments",
            "has_maxsize",
            "has_limit",
            "has_timeout"
          ],
          "consolidation_benefit": "extract_to_constant"
        },
        {
          "value": "secret",
          "instance_count": 7,
          "files": [
            "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
            "TestMaster\\core\\domains\\security\\secure_message_delivery.py",
            "TestMaster\\core\\security\\secure_message_delivery.py",
            "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
            "TestMaster\\core\\security\\configuration_security.py",
            "TestMaster\\core\\domains\\security\\configuration_security.py",
            "TestMaster\\config\\modules\\security_config.py"
          ],
          "variables": [
            "SECRET",
            "SECRET",
            "SECRET",
            "SECRET",
            "SECRET",
            "SECRET",
            "SECRET"
          ],
          "consolidation_benefit": "extract_to_constant"
        },
        {
          "value": "stable",
          "instance_count": 7,
          "files": [
            "TestMaster\\core\\intelligence\\security\\security_analytics.py",
            "TestMaster\\core\\intelligence\\cross_system_trend_analyzer.py",
            "TestMaster\\core\\domains\\intelligence\\cross_system_trend_analyzer.py",
            "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\evolution_analysis.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\enterprise\\quality_analytics_engine.py",
            "TestMaster\\core\\domains\\intelligence\\security\\security_analytics.py",
            "TestMaster\\core\\intelligence\\testing\\enterprise\\quality_analytics_engine.py"
          ],
          "variables": [
            "direction",
            "direction",
            "direction",
            "direction",
            "direction",
            "direction",
            "trend_direction"
          ],
          "consolidation_benefit": "extract_to_constant"
        },
        {
          "value": "True",
          "instance_count": 6,
          "files": [
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_aggregator.py",
            "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
            "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\memory_analysis.py",
            "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\resource_io_analysis.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_aggregator.py",
            "TestMaster\\database_relationship_analyzer.py"
          ],
          "variables": [
            "is_primary_key",
            "rate_limiter_available",
            "rate_limiter_available",
            "file_has_comments",
            "has_maxsize",
            "has_timeout"
          ],
          "consolidation_benefit": "extract_to_constant"
        }
      ],
      "config_file_consolidation": {
        "config_file_types": {
          "environment_config": [
            "TestMaster\\accelerated_converter.py",
            "TestMaster\\convert_batch_small.py",
            "TestMaster\\convert_with_genai_sdk.py",
            "TestMaster\\convert_with_generativeai.py",
            "TestMaster\\enhanced_context_aware_test_generator.py",
            "TestMaster\\enhanced_intelligent_test_builder.py",
            "TestMaster\\enhanced_self_healing_verifier.py",
            "TestMaster\\fix_all_integration_systems.py",
            "TestMaster\\independent_test_verifier.py",
            "TestMaster\\intelligent_test_builder.py",
            "TestMaster\\intelligent_test_builder_v2.py",
            "TestMaster\\layer3_integration_example.py",
            "TestMaster\\llm_analysis_monitor.py",
            "TestMaster\\parallel_converter.py",
            "TestMaster\\restore_missing_methods.py",
            "TestMaster\\risk_based_test_targeter.py",
            "TestMaster\\test_enhanced_core_integration.py",
            "TestMaster\\test_integration_systems.py",
            "TestMaster\\turbo_converter.py",
            "TestMaster\\unified_orchestration_example.py",
            "TestMaster\\week_5_8_batch_converter.py",
            "TestMaster\\week_7_8_converter.py",
            "TestMaster\\agents\\roles\\test_engineer.py",
            "TestMaster\\analysis\\comprehensive_analysis\\domain_modeling\\domain_model_analyzer.py",
            "TestMaster\\analysis\\comprehensive_analysis\\ml_analysis\\ml_data_analyzer.py",
            "TestMaster\\analytics\\failure_analyzer.py",
            "TestMaster\\archive\\api_templates_original_2813_lines.py",
            "TestMaster\\archive\\architectural_decision_engine_original_2388_lines_20250821_130612.py",
            "TestMaster\\archive\\from_subarchive_semantic_analysis_original.py",
            "TestMaster\\archive\\from_subarchive_technical_debt_analysis_original.py",
            "TestMaster\\archive\\superseded_toplevel_technical_debt_analysis.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_aggregator.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
            "TestMaster\\archive\\legacy_scripts\\accelerated_converter.py",
            "TestMaster\\archive\\legacy_scripts\\achieve_100_percent.py",
            "TestMaster\\archive\\legacy_scripts\\achieve_100_percent_coverage.py",
            "TestMaster\\archive\\legacy_scripts\\ai_test_generator.py",
            "TestMaster\\archive\\legacy_scripts\\batch_gemini_generator.py",
            "TestMaster\\archive\\legacy_scripts\\convert_batch_small.py",
            "TestMaster\\archive\\legacy_scripts\\convert_with_genai_sdk.py",
            "TestMaster\\archive\\legacy_scripts\\convert_with_generativeai.py",
            "TestMaster\\archive\\legacy_scripts\\diagnose_final_five.py",
            "TestMaster\\archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
            "TestMaster\\archive\\legacy_scripts\\enhanced_self_healing_verifier.py",
            "TestMaster\\archive\\legacy_scripts\\fast_converter.py",
            "TestMaster\\archive\\legacy_scripts\\final_five_converter.py",
            "TestMaster\\archive\\legacy_scripts\\gemini_powered_test_generator.py",
            "TestMaster\\archive\\legacy_scripts\\gemini_test_generator.py",
            "TestMaster\\archive\\legacy_scripts\\generate_coverage_sequential.py",
            "TestMaster\\archive\\legacy_scripts\\independent_test_verifier.py",
            "TestMaster\\archive\\legacy_scripts\\intelligent_converter.py",
            "TestMaster\\archive\\legacy_scripts\\intelligent_test_builder.py",
            "TestMaster\\archive\\legacy_scripts\\intelligent_test_builder_v2.py",
            "TestMaster\\archive\\legacy_scripts\\parallel_converter.py",
            "TestMaster\\archive\\legacy_scripts\\parallel_converter_fixed.py",
            "TestMaster\\archive\\legacy_scripts\\parallel_converter_working.py",
            "TestMaster\\archive\\legacy_scripts\\parallel_coverage_converter.py",
            "TestMaster\\archive\\legacy_scripts\\quick_test_generator.py",
            "TestMaster\\archive\\legacy_scripts\\self_healing_converter.py",
            "TestMaster\\archive\\legacy_scripts\\simple_test_generator.py",
            "TestMaster\\archive\\legacy_scripts\\test_gemini_api.py",
            "TestMaster\\archive\\legacy_scripts\\test_gemini_config.py",
            "TestMaster\\archive\\legacy_scripts\\test_gemini_correct.py",
            "TestMaster\\archive\\legacy_scripts\\test_single_api_call.py",
            "TestMaster\\archive\\legacy_scripts\\test_single_generation.py",
            "TestMaster\\archive\\legacy_scripts\\test_updated_prompt.py",
            "TestMaster\\archive\\legacy_scripts\\turbo_converter.py",
            "TestMaster\\archive\\legacy_scripts\\week_5_8_batch_converter.py",
            "TestMaster\\archive\\legacy_scripts\\week_7_8_converter.py",
            "TestMaster\\archive\\legacy_scripts\\working_test_generator.py",
            "TestMaster\\archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
            "TestMaster\\archive\\modularization_20250821\\semantic_analyzer_original.py",
            "TestMaster\\archive\\original_backup\\accelerated_converter.py",
            "TestMaster\\archive\\original_backup\\convert_batch_small.py",
            "TestMaster\\archive\\original_backup\\convert_with_genai_sdk.py",
            "TestMaster\\archive\\original_backup\\convert_with_generativeai.py",
            "TestMaster\\archive\\original_backup\\enhanced_context_aware_test_generator.py",
            "TestMaster\\archive\\original_backup\\enhanced_self_healing_verifier.py",
            "TestMaster\\archive\\original_backup\\independent_test_verifier.py",
            "TestMaster\\archive\\original_backup\\intelligent_test_builder.py",
            "TestMaster\\archive\\original_backup\\intelligent_test_builder_v2.py",
            "TestMaster\\archive\\original_backup\\parallel_converter.py",
            "TestMaster\\archive\\original_backup\\parallel_converter_fixed.py",
            "TestMaster\\archive\\original_backup\\turbo_converter.py",
            "TestMaster\\archive\\original_backup\\week_5_8_batch_converter.py",
            "TestMaster\\archive\\original_backup\\week_7_8_converter.py",
            "TestMaster\\archive\\original_backup\\analytics\\failure_analyzer.py",
            "TestMaster\\archive\\original_backup\\scripts\\achieve_100_percent.py",
            "TestMaster\\archive\\original_backup\\scripts\\achieve_100_percent_coverage.py",
            "TestMaster\\archive\\original_backup\\scripts\\ai_test_generator.py",
            "TestMaster\\archive\\original_backup\\scripts\\batch_gemini_generator.py",
            "TestMaster\\archive\\original_backup\\scripts\\diagnose_final_five.py",
            "TestMaster\\archive\\original_backup\\scripts\\fast_converter.py",
            "TestMaster\\archive\\original_backup\\scripts\\final_five_converter.py",
            "TestMaster\\archive\\original_backup\\scripts\\gemini_powered_test_generator.py",
            "TestMaster\\archive\\original_backup\\scripts\\gemini_test_generator.py",
            "TestMaster\\archive\\original_backup\\scripts\\generate_coverage_sequential.py",
            "TestMaster\\archive\\original_backup\\scripts\\intelligent_converter.py",
            "TestMaster\\archive\\original_backup\\scripts\\parallel_converter_working.py",
            "TestMaster\\archive\\original_backup\\scripts\\parallel_coverage_converter.py",
            "TestMaster\\archive\\original_backup\\scripts\\parallel_coverage_converter_fixed.py",
            "TestMaster\\archive\\original_backup\\scripts\\quick_test_generator.py",
            "TestMaster\\archive\\original_backup\\scripts\\self_healing_converter.py",
            "TestMaster\\archive\\original_backup\\scripts\\simple_test_generator.py",
            "TestMaster\\archive\\original_backup\\scripts\\test_gemini_api.py",
            "TestMaster\\archive\\original_backup\\scripts\\test_gemini_config.py",
            "TestMaster\\archive\\original_backup\\scripts\\test_gemini_correct.py",
            "TestMaster\\archive\\original_backup\\scripts\\test_single_api_call.py",
            "TestMaster\\archive\\original_backup\\scripts\\test_single_generation.py",
            "TestMaster\\archive\\original_backup\\scripts\\test_updated_prompt.py",
            "TestMaster\\archive\\original_backup\\scripts\\working_test_generator.py",
            "TestMaster\\archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
            "TestMaster\\archive\\oversized_modules_20250821_042018\\coordination\\agent_coordination_protocols.py",
            "TestMaster\\archive\\oversized_modules_20250821_042018\\coordination\\unified_workflow_orchestrator.py",
            "TestMaster\\archive\\oversized_modules_20250821_042018\\ml\\enterprise\\ml_infrastructure_orchestrator.py",
            "TestMaster\\archive\\state_cache_consolidation_20250821_084236\\parallel_coverage_converter.py",
            "TestMaster\\core\\domains\\intelligence\\analysis\\advanced_pattern_recognizer.py",
            "TestMaster\\core\\domains\\intelligence\\analysis\\semantic_analyzer.py",
            "TestMaster\\core\\domains\\intelligence\\api\\orchestration_api.py",
            "TestMaster\\core\\domains\\intelligence\\coordination\\cross_agent_bridge.py",
            "TestMaster\\core\\domains\\intelligence\\coordination\\service_discovery_registry.py",
            "TestMaster\\core\\domains\\intelligence\\coordination\\agent_coordination_protocols_modules\\agent_coordination_protocols_part1.py",
            "TestMaster\\core\\domains\\intelligence\\coordination\\unified_workflow_orchestrator_modules\\unified_workflow_orchestrator_part1.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\adaptive_template_system.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\enterprise_api_docs.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\interactive_docs_system.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\migration_guide_generator.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\multimodal_recipe_engine.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\swarms_navigation_intelligence.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\tracking_integration_docs.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\interactive_chat_interface.py",
            "TestMaster\\core\\domains\\intelligence\\infrastructure\\unified_infrastructure_service.py",
            "TestMaster\\core\\domains\\intelligence\\infrastructure\\__init__.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\watchdog_process_manager.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\ml_infrastructure_orchestrator_algorithms.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\ml_infrastructure_orchestrator_core.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\ml_infrastructure_orchestrator_models.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\ai_generation\\claude_test_generator.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\automation\\enterprise_test_orchestrator.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\components\\ml_optimizer.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\security\\api_security_tester.py",
            "TestMaster\\core\\domains\\intelligence\\validation\\unified_validation_service.py",
            "TestMaster\\core\\domains\\intelligence\\visualization\\__init__.py",
            "TestMaster\\core\\domains\\security\\enterprise_authentication.py",
            "TestMaster\\core\\domains\\security\\vulnerability_detection_framework.py",
            "TestMaster\\core\\domains\\testing\\adaptive_testing_framework.py",
            "TestMaster\\core\\domains\\testing\\competitive_analysis_framework.py",
            "TestMaster\\core\\domains\\testing\\enterprise_test_framework.py",
            "TestMaster\\core\\domains\\testing\\graph_index_testing.py",
            "TestMaster\\core\\domains\\testing\\graph_operations_testing.py",
            "TestMaster\\core\\domains\\testing\\hook_testing.py",
            "TestMaster\\core\\domains\\testing\\integration_test_framework.py",
            "TestMaster\\core\\domains\\testing\\mcp_testing.py",
            "TestMaster\\core\\domains\\testing\\multimodal_validation_testing.py",
            "TestMaster\\core\\domains\\testing\\supercharged_test_generator.py",
            "TestMaster\\core\\domains\\testing\\testmaster_api_gateway.py",
            "TestMaster\\core\\domains\\testing\\test_zero_setup_domination.py",
            "TestMaster\\core\\domains\\testing\\tracing_testing.py",
            "TestMaster\\core\\intelligence\\architectural_decision_engine.py",
            "TestMaster\\core\\intelligence\\autonomous_governance_engine.py",
            "TestMaster\\core\\intelligence\\analysis\\advanced_pattern_recognizer.py",
            "TestMaster\\core\\intelligence\\analysis\\semantic_analyzer.py",
            "TestMaster\\core\\intelligence\\api\\orchestration_api.py",
            "TestMaster\\core\\intelligence\\coordination\\cross_agent_bridge.py",
            "TestMaster\\core\\intelligence\\coordination\\service_discovery_registry.py",
            "TestMaster\\core\\intelligence\\coordination\\agent_coordination_protocols_modules\\agent_coordination_protocols_part1.py",
            "TestMaster\\core\\intelligence\\coordination\\unified_workflow_orchestrator_modules\\unified_workflow_orchestrator_part1.py",
            "TestMaster\\core\\intelligence\\documentation\\adaptive_template_system.py",
            "TestMaster\\core\\intelligence\\documentation\\enterprise_api_docs.py",
            "TestMaster\\core\\intelligence\\documentation\\interactive_docs_system.py",
            "TestMaster\\core\\intelligence\\documentation\\migration_guide_generator.py",
            "TestMaster\\core\\intelligence\\documentation\\multimodal_recipe_engine.py",
            "TestMaster\\core\\intelligence\\documentation\\swarms_navigation_intelligence.py",
            "TestMaster\\core\\intelligence\\documentation\\tracking_integration_docs.py",
            "TestMaster\\core\\intelligence\\documentation\\validation_dashboard_system.py",
            "TestMaster\\core\\intelligence\\documentation\\revolutionary\\interactive_chat_interface.py",
            "TestMaster\\core\\intelligence\\infrastructure\\unified_infrastructure_service.py",
            "TestMaster\\core\\intelligence\\infrastructure\\__init__.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\watchdog_process_manager.py",
            "TestMaster\\core\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\ml_infrastructure_orchestrator_algorithms.py",
            "TestMaster\\core\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\ml_infrastructure_orchestrator_core.py",
            "TestMaster\\core\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\ml_infrastructure_orchestrator_models.py",
            "TestMaster\\core\\intelligence\\testing\\ai_generation\\claude_test_generator.py",
            "TestMaster\\core\\intelligence\\testing\\automation\\enterprise_test_orchestrator.py",
            "TestMaster\\core\\intelligence\\testing\\components\\ml_optimizer.py",
            "TestMaster\\core\\intelligence\\testing\\security\\api_security_tester.py",
            "TestMaster\\core\\intelligence\\validation\\unified_validation_service.py",
            "TestMaster\\core\\intelligence\\visualization\\__init__.py",
            "TestMaster\\core\\orchestration\\foundations\\abstractions\\execution_context.py",
            "TestMaster\\core\\orchestration\\foundations\\abstractions\\task_abstractions.py",
            "TestMaster\\core\\security\\enterprise_authentication.py",
            "TestMaster\\core\\security\\vulnerability_detection_framework.py",
            "TestMaster\\core\\testing\\adaptive_testing_framework.py",
            "TestMaster\\core\\testing\\competitive_analysis_framework.py",
            "TestMaster\\core\\testing\\enterprise_test_framework.py",
            "TestMaster\\core\\testing\\graph_index_testing.py",
            "TestMaster\\core\\testing\\graph_operations_testing.py",
            "TestMaster\\core\\testing\\hook_testing.py",
            "TestMaster\\core\\testing\\integration_test_framework.py",
            "TestMaster\\core\\testing\\mcp_testing.py",
            "TestMaster\\core\\testing\\multimodal_validation_testing.py",
            "TestMaster\\core\\testing\\supercharged_test_generator.py",
            "TestMaster\\core\\testing\\testmaster_api_gateway.py",
            "TestMaster\\core\\testing\\test_zero_setup_domination.py",
            "TestMaster\\core\\testing\\tracing_testing.py",
            "TestMaster\\dashboard\\gunicorn_config.py",
            "TestMaster\\dashboard\\wsgi.py",
            "TestMaster\\dashboard\\api\\health.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_aggregator.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_performance_booster.py",
            "TestMaster\\dashboard\\dashboard_core\\error_handler.py",
            "TestMaster\\scripts\\achieve_100_percent.py",
            "TestMaster\\scripts\\achieve_100_percent_coverage.py",
            "TestMaster\\scripts\\ai_test_generator.py",
            "TestMaster\\scripts\\batch_gemini_generator.py",
            "TestMaster\\scripts\\diagnose_final_five.py",
            "TestMaster\\scripts\\fast_converter.py",
            "TestMaster\\scripts\\final_five_converter.py",
            "TestMaster\\scripts\\gemini_powered_test_generator.py",
            "TestMaster\\scripts\\gemini_test_generator.py",
            "TestMaster\\scripts\\generate_coverage_sequential.py",
            "TestMaster\\scripts\\intelligent_converter.py",
            "TestMaster\\scripts\\quick_test_generator.py",
            "TestMaster\\scripts\\self_healing_converter.py",
            "TestMaster\\scripts\\simple_test_generator.py",
            "TestMaster\\scripts\\test_gemini_api.py",
            "TestMaster\\scripts\\test_gemini_config.py",
            "TestMaster\\scripts\\test_gemini_correct.py",
            "TestMaster\\scripts\\test_single_api_call.py",
            "TestMaster\\scripts\\test_single_generation.py",
            "TestMaster\\scripts\\test_updated_prompt.py",
            "TestMaster\\scripts\\working_test_generator.py",
            "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\crypto_analysis.py",
            "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\security_analysis.py",
            "TestMaster\\testmaster\\converters\\intelligent.py",
            "TestMaster\\testmaster\\generators\\intelligent.py",
            "TestMaster\\testmaster\\intelligence\\documentation\\templates\\api\\rest_templates.py",
            "TestMaster\\testmaster\\intelligence\\integration\\features\\feature_flags.py",
            "TestMaster\\testmaster\\intelligence\\monitoring\\bottleneck_detection_resolution_agent.py",
            "TestMaster\\testmaster\\intelligence\\security\\security_intelligence_agent.py",
            "TestMaster\\testmaster\\orchestrator\\file_tagger.py",
            "TestMaster\\testmaster\\overview\\regression_tracker.py",
            "TestMaster\\testmaster\\telemetry\\__init__.py",
            "TestMaster\\testmaster\\verification\\quality.py",
            "TestMaster\\testmaster\\verification\\self_healing.py"
          ],
          "python_config": [
            "TestMaster\\architecture_centralization_analysis.py",
            "TestMaster\\auto_readme_updater.py",
            "TestMaster\\comprehensive_classical_analysis_methods.py",
            "TestMaster\\comprehensive_codebase_analysis.py",
            "TestMaster\\duplicate_code_detector.py",
            "TestMaster\\enable_deep_integration.py",
            "TestMaster\\enhanced_incremental_ast_engine.py",
            "TestMaster\\enhanced_security_dashboard_api.py",
            "TestMaster\\enhance_analytics.py",
            "TestMaster\\enhance_auto_generated_tests.py",
            "TestMaster\\enhance_missing_robust_systems.py",
            "TestMaster\\final_archive_sweep.py",
            "TestMaster\\fix_enhanced_test_imports.py",
            "TestMaster\\fix_tests_for_real_modules.py",
            "TestMaster\\modularize_api_templates.py",
            "TestMaster\\performance_profiler.py",
            "TestMaster\\replace_stubs_with_archive_implementations.py",
            "TestMaster\\restored_asyncio_4.py",
            "TestMaster\\restored_asyncio_5.py",
            "TestMaster\\restored_json_4.py",
            "TestMaster\\restored_json_6.py",
            "TestMaster\\restored_logging_4.py",
            "TestMaster\\restored_logging_5.py",
            "TestMaster\\restored_logging_6.py",
            "TestMaster\\restored_os_6.py",
            "TestMaster\\restored_sys_6.py",
            "TestMaster\\restored_threading_5.py",
            "TestMaster\\restored_threading_6.py",
            "TestMaster\\restored_time_4.py",
            "TestMaster\\restored_time_5.py",
            "TestMaster\\restored_time_6.py",
            "TestMaster\\restored_uuid_4.py",
            "TestMaster\\restored_uuid_5.py",
            "TestMaster\\simple_web_monitor.py",
            "TestMaster\\testmaster_orchestrator.py",
            "TestMaster\\test_agent_qa_integration.py",
            "TestMaster\\test_agent_qa_system.py",
            "TestMaster\\test_before_refactor.py",
            "TestMaster\\test_complexity_prioritizer.py",
            "TestMaster\\test_config_intelligence.py",
            "TestMaster\\test_dependency_orderer.py",
            "TestMaster\\test_enhanced_server.py",
            "TestMaster\\test_enhancements.py",
            "TestMaster\\test_exhaustive_features.py",
            "TestMaster\\test_flow_optimizer_system.py",
            "TestMaster\\test_performance_dashboard_integration.py",
            "TestMaster\\test_phase2_exhaustive_validation.py",
            "TestMaster\\test_phase2_integration.py",
            "TestMaster\\test_reporting_system.py",
            "TestMaster\\test_tot_integration.py",
            "TestMaster\\test_unified_integration.py",
            "TestMaster\\test_universal_language_detector.py",
            "TestMaster\\utility_analysis_report.py",
            "TestMaster\\utility_function_extractor.py",
            "TestMaster\\validate_api_endpoints.py",
            "TestMaster\\validate_phase_1_7.py",
            "TestMaster\\web_monitor.py",
            "TestMaster\\agents\\__init__.py",
            "TestMaster\\agents\\team\\__init__.py",
            "TestMaster\\analysis\\comprehensive_analysis\\pattern_mining\\cross_repo_pattern_miner.py",
            "TestMaster\\api\\phase2_api.py",
            "TestMaster\\archive\\advanced_testing_intelligence.py",
            "TestMaster\\archive\\architectural_evolution_predictor_original_2410_lines_20250821_113953.py",
            "TestMaster\\archive\\coverage_analyzer_original_2697_lines.py",
            "TestMaster\\archive\\from_subarchive_ml_code_analysis_original.py",
            "TestMaster\\archive\\integration_hub_original_20250820_220939.py",
            "TestMaster\\archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
            "TestMaster\\archive\\superseded_toplevel_ml_code_analysis.py",
            "TestMaster\\archive\\20250818\\web_monitor.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_compressor.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
            "TestMaster\\archive\\COMPLETE_REFACTOR_20250818_112844\\fix_enhanced_test_imports.py",
            "TestMaster\\archive\\COMPLETE_REFACTOR_20250818_112844\\fix_tests_for_real_modules.py",
            "TestMaster\\archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
            "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\automatic_scaling_system_robust.py",
            "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\comprehensive_error_recovery_robust.py",
            "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\cross_system_analytics_robust.py",
            "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\cross_system_apis_robust.py",
            "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\predictive_analytics_engine_robust.py",
            "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\realtime_performance_monitoring_robust.py",
            "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\workflow_execution_engine_robust.py",
            "TestMaster\\archive\\legacy_scripts\\data_flow_tests.py",
            "TestMaster\\archive\\legacy_scripts\\enhance_auto_generated_tests.py",
            "TestMaster\\archive\\legacy_scripts\\fix_enhanced_test_imports.py",
            "TestMaster\\archive\\legacy_scripts\\fix_tests_for_real_modules.py",
            "TestMaster\\archive\\legacy_scripts\\integration_test_matrix.py",
            "TestMaster\\archive\\legacy_scripts\\run_limited_coverage.py",
            "TestMaster\\archive\\legacy_scripts\\testmaster_orchestrator.py",
            "TestMaster\\archive\\modularization_integration\\integration_hub_original_1876_lines.py",
            "TestMaster\\archive\\original_backup\\enhance_auto_generated_tests.py",
            "TestMaster\\archive\\original_backup\\fix_enhanced_test_imports.py",
            "TestMaster\\archive\\original_backup\\fix_tests_for_real_modules.py",
            "TestMaster\\archive\\original_backup\\testmaster_orchestrator.py",
            "TestMaster\\archive\\original_backup\\scripts\\run_limited_coverage.py",
            "TestMaster\\archive\\original_backup\\src\\data_flow_tests.py",
            "TestMaster\\archive\\original_backup\\src\\integration_test_matrix.py",
            "TestMaster\\archive\\oversized_modules_20250821_042018\\api\\enterprise_integration_layer.py",
            "TestMaster\\archive\\oversized_modules_20250821_042018\\coordination\\resource_coordination_system.py",
            "TestMaster\\archive\\oversized_modules_20250821_042018\\documentation\\revolutionary\\neo4j_dominator.py",
            "TestMaster\\archive\\oversized_modules_20250821_042018\\ml\\advanced\\delivery_optimizer.py",
            "TestMaster\\archive\\oversized_modules_20250821_042018\\ml\\advanced\\integrity_ml_guardian.py",
            "TestMaster\\archive\\oversized_modules_20250821_042018\\ml\\advanced\\performance_optimizer.py",
            "TestMaster\\archive\\oversized_modules_20250821_042018\\monitoring\\performance_optimization_engine.py",
            "TestMaster\\archive\\oversized_modules_20250821_042018\\validation\\system_validation_framework.py",
            "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
            "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\enhanced_monitor.py",
            "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
            "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
            "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
            "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
            "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
            "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
            "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
            "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
            "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
            "TestMaster\\archive\\phase4_archive\\replaced_code\\enhanced_monitor_20250819_195132.py",
            "TestMaster\\archive\\phase5_archive\\replaced_code\\agent_graph_20250819_195602.py",
            "TestMaster\\archive\\phase6_archive\\replaced_code\\agent_graph_20250819_200928.py",
            "TestMaster\\archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
            "TestMaster\\archive\\phase7_archive\\replaced_code\\enhanced_monitor_20250819_202006.py",
            "TestMaster\\archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
            "TestMaster\\archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
            "TestMaster\\archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
            "TestMaster\\archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
            "TestMaster\\archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
            "TestMaster\\archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
            "TestMaster\\cache\\intelligent_cache.py",
            "TestMaster\\config\\modules\\__init__.py",
            "TestMaster\\core\\feature_flags.py",
            "TestMaster\\core\\framework_abstraction.stub_backup.py",
            "TestMaster\\core\\shared_state.py",
            "TestMaster\\core\\domains\\intelligence\\autonomous_decision_engine.py",
            "TestMaster\\core\\domains\\intelligence\\cross_system_semantic_learner.py",
            "TestMaster\\core\\domains\\intelligence\\cross_system_trend_analyzer.py",
            "TestMaster\\core\\domains\\intelligence\\intelligence_command_center.py",
            "TestMaster\\core\\domains\\intelligence\\intelligent_resource_allocator.py",
            "TestMaster\\core\\domains\\intelligence\\predictive_intelligence_engine.py",
            "TestMaster\\core\\domains\\intelligence\\ultimate_intelligence_nexus.py",
            "TestMaster\\core\\domains\\intelligence\\analysis\\business_analyzer_modular.py",
            "TestMaster\\core\\domains\\intelligence\\analysis\\business_constraint_analyzer.py",
            "TestMaster\\core\\domains\\intelligence\\analysis\\business_rule_extractor.py",
            "TestMaster\\core\\domains\\intelligence\\analysis\\business_workflow_analyzer.py",
            "TestMaster\\core\\domains\\intelligence\\analysis\\debt_analyzer_modular.py",
            "TestMaster\\core\\domains\\intelligence\\analysis\\debt_code_analyzer.py",
            "TestMaster\\core\\domains\\intelligence\\analysis\\debt_quantifier.py",
            "TestMaster\\core\\domains\\intelligence\\analysis\\debt_test_analyzer.py",
            "TestMaster\\core\\domains\\intelligence\\analysis\\ml_analyzer.py",
            "TestMaster\\core\\domains\\intelligence\\analysis\\semantic_analyzer_modular.py",
            "TestMaster\\core\\domains\\intelligence\\analysis\\semantic_intent_analyzer.py",
            "TestMaster\\core\\domains\\intelligence\\analysis\\semantic_pattern_detector.py",
            "TestMaster\\core\\domains\\intelligence\\analysis\\semantic_relationship_analyzer.py",
            "TestMaster\\core\\domains\\intelligence\\analysis\\technical_debt_analyzer.py",
            "TestMaster\\core\\domains\\intelligence\\analysis\\__init__.py",
            "TestMaster\\core\\domains\\intelligence\\analysis\\debt_analyzer_modules\\debt_analyzer_core.py",
            "TestMaster\\core\\domains\\intelligence\\analytics\\adaptive_prediction_enhancer.py",
            "TestMaster\\core\\domains\\intelligence\\analytics\\analytics_deduplication.py",
            "TestMaster\\core\\domains\\intelligence\\analytics\\analytics_hub.py",
            "TestMaster\\core\\domains\\intelligence\\analytics\\predictive_analytics_engine.py",
            "TestMaster\\core\\domains\\intelligence\\analytics\\advanced\\correlation_engine.py",
            "TestMaster\\core\\domains\\intelligence\\api\\app.py",
            "TestMaster\\core\\domains\\intelligence\\api\\endpoints.py",
            "TestMaster\\core\\domains\\intelligence\\api\\monitoring_api.py",
            "TestMaster\\core\\domains\\intelligence\\api\\performance_api.py",
            "TestMaster\\core\\domains\\intelligence\\api\\qa_api.py",
            "TestMaster\\core\\domains\\intelligence\\api\\testing_api.py",
            "TestMaster\\core\\domains\\intelligence\\api\\ultimate_nexus_api.py",
            "TestMaster\\core\\domains\\intelligence\\api\\unified_api_gateway.py",
            "TestMaster\\core\\domains\\intelligence\\api\\unified_intelligence_api.py",
            "TestMaster\\core\\domains\\intelligence\\api\\__init__.py",
            "TestMaster\\core\\domains\\intelligence\\api\\enterprise_integration_layer_modules\\enterprise_integration_layer_core.py",
            "TestMaster\\core\\domains\\intelligence\\api\\enterprise_integration_layer_modules\\enterprise_integration_layer_processing.py",
            "TestMaster\\core\\domains\\intelligence\\api\\ml_api_modules\\ml_api_core.py",
            "TestMaster\\core\\domains\\intelligence\\api\\ml_api_modules\\ml_api_endpoints.py",
            "TestMaster\\core\\domains\\intelligence\\base\\__init__.py",
            "TestMaster\\core\\domains\\intelligence\\caching\\distributed_smart_cache.py",
            "TestMaster\\core\\domains\\intelligence\\communication\\unified_communication_service.py",
            "TestMaster\\core\\domains\\intelligence\\compatibility\\__init__.py",
            "TestMaster\\core\\domains\\intelligence\\coordination\\resource_coordination_system_modules\\resource_coordination_system_part1.py",
            "TestMaster\\core\\domains\\intelligence\\coordination\\unified_workflow_orchestrator_modules\\unified_workflow_orchestrator_part2.py",
            "TestMaster\\core\\domains\\intelligence\\correlation\\cross_system_analytics.py",
            "TestMaster\\core\\domains\\intelligence\\data_pipeline\\advanced_data_pipeline.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\bilingual_docs_processor.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\comprehensive_visualization_engine.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\cookbook_organization_manager.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\design_first_docs.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\docs_api.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\docs_testing_framework.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\faq_system.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\hierarchical_docs_organizer.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\json_docs_processor.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\knowledge_management_framework.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\mdx_generator.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\multi_agent_pattern_docs.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\performance_quality_validator.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\phase_1_7_integration.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\recipe_based_learning.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\swarms_auto_generation_adapter.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\swarms_doc_intelligence_extractor.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\swarms_self_healing_docs.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\tutorial_grid_system.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\tutorial_system.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\unified_doc_generator.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\ux_excellence_framework.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\workflow_recipe_docs.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\enterprise\\documentation_validator.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\enterprise\\enterprise_doc_orchestrator.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\enterprise\\workflow_automation.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\intelligence\\metrics.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\intelligence\\optimizer.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\ai_documentation_synthesizer.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\neo4j_dominator_modules\\neo4j_dominator_part1.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\neo4j_dominator_modules\\neo4j_dominator_part2.py",
            "TestMaster\\core\\domains\\intelligence\\enterprise\\api_orchestrator.py",
            "TestMaster\\core\\domains\\intelligence\\enterprise\\integration_validator.py",
            "TestMaster\\core\\domains\\intelligence\\enterprise\\api\\endpoint_manager.py",
            "TestMaster\\core\\domains\\intelligence\\enterprise\\api\\request_router.py",
            "TestMaster\\core\\domains\\intelligence\\integration\\base.py",
            "TestMaster\\core\\domains\\intelligence\\integration\\__init__.py",
            "TestMaster\\core\\domains\\intelligence\\integration\\components\\cross_system_analyzer.py",
            "TestMaster\\core\\domains\\intelligence\\integration\\components\\endpoint_manager.py",
            "TestMaster\\core\\domains\\intelligence\\integration\\components\\performance_monitor.py",
            "TestMaster\\core\\domains\\intelligence\\knowledge_graph\\visual_relationship_mapper.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\integration_analysis.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\ml_orchestrator.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\pattern_detector.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\self_optimizing_orchestrator.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\adaptive_load_balancer.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\batch_processor.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\distributed_ml_coordinator.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\intelligent_resource_scheduler.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\ml_network_optimizer.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\ml_security_guardian.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\performance_execution_manager.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\performance_ml_engine.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\predictive_engine.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\predictive_maintenance_ai.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\smart_cache.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\telemetry_ml_collector.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\telemetry_observability_engine.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\watchdog_ml_monitor.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\watchdog_recovery_system.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\delivery_optimizer_modules\\delivery_optimizer_algorithms.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\delivery_optimizer_modules\\delivery_optimizer_core.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\integrity_ml_guardian_modules\\integrity_ml_guardian_core.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\integrity_ml_guardian_modules\\integrity_ml_guardian_models.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\performance_optimizer_modules\\performance_optimizer_algorithms.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\performance_optimizer_modules\\performance_optimizer_core.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\performance_optimizer_modules\\performance_optimizer_optimization.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\sla_ml_optimizer_algorithms.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\sla_ml_optimizer_optimization.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\enterprise\\ml_auto_scaling.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
            "TestMaster\\core\\domains\\intelligence\\monitoring\\advanced_monitoring_coordinator.py",
            "TestMaster\\core\\domains\\intelligence\\monitoring\\qa_base.py",
            "TestMaster\\core\\domains\\intelligence\\monitoring\\agent_qa_modules\\agent_qa_part1.py",
            "TestMaster\\core\\domains\\intelligence\\monitoring\\agent_qa_modules\\agent_qa_part2b.py",
            "TestMaster\\core\\domains\\intelligence\\monitoring\\performance_optimization_engine_modules\\performance_optimization_engine_core.py",
            "TestMaster\\core\\domains\\intelligence\\orchestration\\integration_hub.py",
            "TestMaster\\core\\domains\\intelligence\\queuing\\express_priority_queue.py",
            "TestMaster\\core\\domains\\intelligence\\reliability\\enterprise_error_recovery.py",
            "TestMaster\\core\\domains\\intelligence\\security\\advanced_security_intelligence.py",
            "TestMaster\\core\\domains\\intelligence\\security\\audit_logger.py",
            "TestMaster\\core\\domains\\intelligence\\security\\compliance_checker.py",
            "TestMaster\\core\\domains\\intelligence\\security\\security_api.py",
            "TestMaster\\core\\domains\\intelligence\\security\\audit\\audit_storage.py",
            "TestMaster\\core\\domains\\intelligence\\security\\enterprise\\compliance_automation.py",
            "TestMaster\\core\\domains\\intelligence\\security\\enterprise\\governance_framework.py",
            "TestMaster\\core\\domains\\intelligence\\security\\enterprise\\security_validator.py",
            "TestMaster\\core\\domains\\intelligence\\security\\enterprise\\intelligence\\threat_detector.py",
            "TestMaster\\core\\domains\\intelligence\\security\\enterprise\\validation\\compliance_validator.py",
            "TestMaster\\core\\domains\\intelligence\\security\\enterprise\\validation\\integration_validator.py",
            "TestMaster\\core\\domains\\intelligence\\security\\enterprise\\validation\\penetration_tester.py",
            "TestMaster\\core\\domains\\intelligence\\streaming\\event_streaming_engine.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\security_fuzzer.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\testing_api.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\__init__.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\automation\\continuous_testing_engine.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\enterprise\\quality_gate_automation.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\patterns\\agentscope_patterns.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\security\\advanced_owasp_tester.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\security\\compliance_validator.py",
            "TestMaster\\core\\domains\\intelligence\\validation\\system_validation_framework_modules\\system_validation_framework_core.py",
            "TestMaster\\core\\domains\\intelligence\\validation\\system_validation_framework_modules\\system_validation_framework_validation.py",
            "TestMaster\\core\\domains\\intelligence\\visualization\\agent_interface_systems.py",
            "TestMaster\\core\\domains\\intelligence\\visualization\\user_experience_frameworks.py",
            "TestMaster\\core\\domains\\security\\adaptive_security_resilience.py",
            "TestMaster\\core\\domains\\security\\agent_communication_security.py",
            "TestMaster\\core\\domains\\security\\byzantine_consensus_security.py",
            "TestMaster\\core\\domains\\security\\data_integrity_guardian.py",
            "TestMaster\\core\\domains\\security\\distributed_agent_registry.py",
            "TestMaster\\core\\domains\\security\\distributed_communication_security.py",
            "TestMaster\\core\\domains\\security\\distributed_key_management_security.py",
            "TestMaster\\core\\domains\\security\\document_classification_security.py",
            "TestMaster\\core\\domains\\security\\enterprise_audit_logging.py",
            "TestMaster\\core\\domains\\security\\enterprise_auth_gateway.py",
            "TestMaster\\core\\domains\\security\\error_isolation_system.py",
            "TestMaster\\core\\domains\\security\\exception_monitoring.py",
            "TestMaster\\core\\domains\\security\\fault_tolerance_engine.py",
            "TestMaster\\core\\domains\\security\\graceful_degradation_manager.py",
            "TestMaster\\core\\domains\\security\\health_monitoring_nexus.py",
            "TestMaster\\core\\domains\\security\\identity_validation_system.py",
            "TestMaster\\core\\domains\\security\\multi_agent_access_control.py",
            "TestMaster\\core\\domains\\security\\multi_agent_evaluation_security.py",
            "TestMaster\\core\\domains\\security\\quantum_retry_engine.py",
            "TestMaster\\core\\domains\\security\\resilience_orchestrator.py",
            "TestMaster\\core\\domains\\security\\secure_message_delivery.py",
            "TestMaster\\core\\domains\\security\\secure_performance_optimizer.py",
            "TestMaster\\core\\domains\\security\\security_monitoring_system.py",
            "TestMaster\\core\\domains\\security\\self_healing_coordinator.py",
            "TestMaster\\core\\domains\\security\\threat_intelligence_system.py",
            "TestMaster\\core\\domains\\security\\__init__.py",
            "TestMaster\\core\\domains\\testing\\collaborative_testing_platform.py",
            "TestMaster\\core\\domains\\testing\\parallel_test_executor.py",
            "TestMaster\\core\\domains\\testing\\performance_test_suite.py",
            "TestMaster\\core\\domains\\testing\\task_guardrails_testing.py",
            "TestMaster\\core\\foundation\\configuration\\__init__.py",
            "TestMaster\\core\\foundation\\configuration\\base\\__init__.py",
            "TestMaster\\core\\foundation\\observability\\unified_monitor_enhanced.stub_backup.py",
            "TestMaster\\core\\foundation\\shared\\feature_flags.py",
            "TestMaster\\core\\foundation\\shared\\shared_state.py",
            "TestMaster\\core\\integration\\foundations\\__init__.py",
            "TestMaster\\core\\integration\\foundations\\abstractions\\service_abstractions.py",
            "TestMaster\\core\\integration\\foundations\\abstractions\\__init__.py",
            "TestMaster\\core\\intelligence\\autonomous_decision_engine.py",
            "TestMaster\\core\\intelligence\\autonomous_replication_engine.py",
            "TestMaster\\core\\intelligence\\cross_system_semantic_learner.py",
            "TestMaster\\core\\intelligence\\cross_system_trend_analyzer.py",
            "TestMaster\\core\\intelligence\\intelligence_command_center.py",
            "TestMaster\\core\\intelligence\\intelligence_integration_master.py",
            "TestMaster\\core\\intelligence\\intelligent_resource_allocator.py",
            "TestMaster\\core\\intelligence\\predictive_intelligence_engine.py",
            "TestMaster\\core\\intelligence\\semantic_code_analyzer.py",
            "TestMaster\\core\\intelligence\\ultimate_intelligence_nexus.py",
            "TestMaster\\core\\intelligence\\unified_architecture_intelligence.py",
            "TestMaster\\core\\intelligence\\unified_architecture_intelligence_complete.py",
            "TestMaster\\core\\intelligence\\unified_architecture_intelligence_part2.py",
            "TestMaster\\core\\intelligence\\analysis\\business_analyzer_modular.py",
            "TestMaster\\core\\intelligence\\analysis\\business_constraint_analyzer.py",
            "TestMaster\\core\\intelligence\\analysis\\business_rule_extractor.py",
            "TestMaster\\core\\intelligence\\analysis\\business_workflow_analyzer.py",
            "TestMaster\\core\\intelligence\\analysis\\debt_analyzer_modular.py",
            "TestMaster\\core\\intelligence\\analysis\\debt_code_analyzer.py",
            "TestMaster\\core\\intelligence\\analysis\\debt_quantifier.py",
            "TestMaster\\core\\intelligence\\analysis\\debt_test_analyzer.py",
            "TestMaster\\core\\intelligence\\analysis\\ml_analyzer.py",
            "TestMaster\\core\\intelligence\\analysis\\semantic_analyzer_modular.py",
            "TestMaster\\core\\intelligence\\analysis\\semantic_intent_analyzer.py",
            "TestMaster\\core\\intelligence\\analysis\\semantic_pattern_detector.py",
            "TestMaster\\core\\intelligence\\analysis\\semantic_relationship_analyzer.py",
            "TestMaster\\core\\intelligence\\analysis\\technical_debt_analyzer.py",
            "TestMaster\\core\\intelligence\\analysis\\__init__.py",
            "TestMaster\\core\\intelligence\\analysis\\debt_analyzer_modules\\debt_analyzer_core.py",
            "TestMaster\\core\\intelligence\\analytics\\adaptive_prediction_enhancer.py",
            "TestMaster\\core\\intelligence\\analytics\\analytics_deduplication.py",
            "TestMaster\\core\\intelligence\\analytics\\analytics_hub.py",
            "TestMaster\\core\\intelligence\\analytics\\predictive_analytics_engine.py",
            "TestMaster\\core\\intelligence\\analytics\\advanced\\correlation_engine.py",
            "TestMaster\\core\\intelligence\\api\\app.py",
            "TestMaster\\core\\intelligence\\api\\endpoints.py",
            "TestMaster\\core\\intelligence\\api\\monitoring_api.py",
            "TestMaster\\core\\intelligence\\api\\performance_api.py",
            "TestMaster\\core\\intelligence\\api\\qa_api.py",
            "TestMaster\\core\\intelligence\\api\\testing_api.py",
            "TestMaster\\core\\intelligence\\api\\ultimate_nexus_api.py",
            "TestMaster\\core\\intelligence\\api\\unified_api_gateway.py",
            "TestMaster\\core\\intelligence\\api\\unified_intelligence_api.py",
            "TestMaster\\core\\intelligence\\api\\__init__.py",
            "TestMaster\\core\\intelligence\\api\\enterprise_integration_layer_modules\\enterprise_integration_layer_core.py",
            "TestMaster\\core\\intelligence\\api\\enterprise_integration_layer_modules\\enterprise_integration_layer_processing.py",
            "TestMaster\\core\\intelligence\\api\\ml_api_modules\\ml_api_core.py",
            "TestMaster\\core\\intelligence\\api\\ml_api_modules\\ml_api_endpoints.py",
            "TestMaster\\core\\intelligence\\architectural_decision_modules\\microservice_analyzer.py",
            "TestMaster\\core\\intelligence\\archive\\architectural_evolution_predictor_original.py",
            "TestMaster\\core\\intelligence\\base\\__init__.py",
            "TestMaster\\core\\intelligence\\caching\\distributed_smart_cache.py",
            "TestMaster\\core\\intelligence\\communication\\unified_communication_service.py",
            "TestMaster\\core\\intelligence\\compatibility\\__init__.py",
            "TestMaster\\core\\intelligence\\coordination\\resource_coordination_system_modules\\resource_coordination_system_part1.py",
            "TestMaster\\core\\intelligence\\coordination\\unified_workflow_orchestrator_modules\\unified_workflow_orchestrator_part2.py",
            "TestMaster\\core\\intelligence\\correlation\\cross_system_analytics.py",
            "TestMaster\\core\\intelligence\\data_pipeline\\advanced_data_pipeline.py",
            "TestMaster\\core\\intelligence\\documentation\\bilingual_docs_processor.py",
            "TestMaster\\core\\intelligence\\documentation\\comprehensive_visualization_engine.py",
            "TestMaster\\core\\intelligence\\documentation\\cookbook_organization_manager.py",
            "TestMaster\\core\\intelligence\\documentation\\design_first_docs.py",
            "TestMaster\\core\\intelligence\\documentation\\docs_api.py",
            "TestMaster\\core\\intelligence\\documentation\\docs_testing_framework.py",
            "TestMaster\\core\\intelligence\\documentation\\documentation_api_framework.py",
            "TestMaster\\core\\intelligence\\documentation\\faq_system.py",
            "TestMaster\\core\\intelligence\\documentation\\hierarchical_docs_organizer.py",
            "TestMaster\\core\\intelligence\\documentation\\json_docs_processor.py",
            "TestMaster\\core\\intelligence\\documentation\\knowledge_management_framework.py",
            "TestMaster\\core\\intelligence\\documentation\\mdx_generator.py",
            "TestMaster\\core\\intelligence\\documentation\\multi_agent_pattern_docs.py",
            "TestMaster\\core\\intelligence\\documentation\\performance_quality_validator.py",
            "TestMaster\\core\\intelligence\\documentation\\phase_1_7_integration.py",
            "TestMaster\\core\\intelligence\\documentation\\recipe_based_learning.py",
            "TestMaster\\core\\intelligence\\documentation\\swarms_auto_generation_adapter.py",
            "TestMaster\\core\\intelligence\\documentation\\swarms_doc_intelligence_extractor.py",
            "TestMaster\\core\\intelligence\\documentation\\swarms_self_healing_docs.py",
            "TestMaster\\core\\intelligence\\documentation\\tutorial_grid_system.py",
            "TestMaster\\core\\intelligence\\documentation\\tutorial_system.py",
            "TestMaster\\core\\intelligence\\documentation\\unified_doc_generator.py",
            "TestMaster\\core\\intelligence\\documentation\\ux_excellence_framework.py",
            "TestMaster\\core\\intelligence\\documentation\\workflow_recipe_docs.py",
            "TestMaster\\core\\intelligence\\documentation\\enterprise\\documentation_validator.py",
            "TestMaster\\core\\intelligence\\documentation\\enterprise\\enterprise_doc_orchestrator.py",
            "TestMaster\\core\\intelligence\\documentation\\enterprise\\workflow_automation.py",
            "TestMaster\\core\\intelligence\\documentation\\intelligence\\metrics.py",
            "TestMaster\\core\\intelligence\\documentation\\intelligence\\optimizer.py",
            "TestMaster\\core\\intelligence\\documentation\\revolutionary\\ai_documentation_synthesizer.py",
            "TestMaster\\core\\intelligence\\documentation\\revolutionary\\neo4j_dominator_modules\\neo4j_dominator_part1.py",
            "TestMaster\\core\\intelligence\\documentation\\revolutionary\\neo4j_dominator_modules\\neo4j_dominator_part2.py",
            "TestMaster\\core\\intelligence\\enterprise\\api_orchestrator.py",
            "TestMaster\\core\\intelligence\\enterprise\\integration_validator.py",
            "TestMaster\\core\\intelligence\\enterprise\\api\\endpoint_manager.py",
            "TestMaster\\core\\intelligence\\enterprise\\api\\request_router.py",
            "TestMaster\\core\\intelligence\\integration\\base.py",
            "TestMaster\\core\\intelligence\\integration\\__init__.py",
            "TestMaster\\core\\intelligence\\integration\\components\\cross_system_analyzer.py",
            "TestMaster\\core\\intelligence\\integration\\components\\endpoint_manager.py",
            "TestMaster\\core\\intelligence\\integration\\components\\performance_monitor.py",
            "TestMaster\\core\\intelligence\\knowledge_graph\\visual_relationship_mapper.py",
            "TestMaster\\core\\intelligence\\ml\\integration_analysis.py",
            "TestMaster\\core\\intelligence\\ml\\ml_orchestrator.py",
            "TestMaster\\core\\intelligence\\ml\\pattern_detector.py",
            "TestMaster\\core\\intelligence\\ml\\self_optimizing_orchestrator.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\adaptive_load_balancer.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\batch_processor.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\distributed_ml_coordinator.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\intelligent_resource_scheduler.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\ml_network_optimizer.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\ml_security_guardian.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\performance_execution_manager.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\performance_ml_engine.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\predictive_engine.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\predictive_maintenance_ai.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\smart_cache.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\telemetry_ml_collector.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\telemetry_observability_engine.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\watchdog_ml_monitor.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\watchdog_recovery_system.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\delivery_optimizer_modules\\delivery_optimizer_algorithms.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\delivery_optimizer_modules\\delivery_optimizer_core.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\integrity_ml_guardian_modules\\integrity_ml_guardian_core.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\integrity_ml_guardian_modules\\integrity_ml_guardian_models.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\performance_optimizer_modules\\performance_optimizer_algorithms.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\performance_optimizer_modules\\performance_optimizer_core.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\performance_optimizer_modules\\performance_optimizer_optimization.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\sla_ml_optimizer_algorithms.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\sla_ml_optimizer_optimization.py",
            "TestMaster\\core\\intelligence\\ml\\enterprise\\ml_auto_scaling.py",
            "TestMaster\\core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
            "TestMaster\\core\\intelligence\\monitoring\\advanced_monitoring_coordinator.py",
            "TestMaster\\core\\intelligence\\monitoring\\qa_base.py",
            "TestMaster\\core\\intelligence\\monitoring\\agent_qa_modules\\agent_qa_part1.py",
            "TestMaster\\core\\intelligence\\monitoring\\agent_qa_modules\\agent_qa_part2b.py",
            "TestMaster\\core\\intelligence\\monitoring\\performance_optimization_engine_modules\\performance_optimization_engine_core.py",
            "TestMaster\\core\\intelligence\\orchestration\\integration_hub.py",
            "TestMaster\\core\\intelligence\\queuing\\express_priority_queue.py",
            "TestMaster\\core\\intelligence\\reliability\\enterprise_error_recovery.py",
            "TestMaster\\core\\intelligence\\security\\advanced_security_intelligence.py",
            "TestMaster\\core\\intelligence\\security\\audit_logger.py",
            "TestMaster\\core\\intelligence\\security\\compliance_checker.py",
            "TestMaster\\core\\intelligence\\security\\security_api.py",
            "TestMaster\\core\\intelligence\\security\\audit\\audit_storage.py",
            "TestMaster\\core\\intelligence\\security\\enterprise\\compliance_automation.py",
            "TestMaster\\core\\intelligence\\security\\enterprise\\governance_framework.py",
            "TestMaster\\core\\intelligence\\security\\enterprise\\security_validator.py",
            "TestMaster\\core\\intelligence\\security\\enterprise\\intelligence\\threat_detector.py",
            "TestMaster\\core\\intelligence\\security\\enterprise\\validation\\compliance_validator.py",
            "TestMaster\\core\\intelligence\\security\\enterprise\\validation\\integration_validator.py",
            "TestMaster\\core\\intelligence\\security\\enterprise\\validation\\penetration_tester.py",
            "TestMaster\\core\\intelligence\\streaming\\event_streaming_engine.py",
            "TestMaster\\core\\intelligence\\testing\\security_fuzzer.py",
            "TestMaster\\core\\intelligence\\testing\\testing_api.py",
            "TestMaster\\core\\intelligence\\testing\\__init__.py",
            "TestMaster\\core\\intelligence\\testing\\automation\\continuous_testing_engine.py",
            "TestMaster\\core\\intelligence\\testing\\enterprise\\quality_gate_automation.py",
            "TestMaster\\core\\intelligence\\testing\\patterns\\agentscope_patterns.py",
            "TestMaster\\core\\intelligence\\testing\\security\\advanced_owasp_tester.py",
            "TestMaster\\core\\intelligence\\testing\\security\\compliance_validator.py",
            "TestMaster\\core\\intelligence\\validation\\system_validation_framework_modules\\system_validation_framework_core.py",
            "TestMaster\\core\\intelligence\\validation\\system_validation_framework_modules\\system_validation_framework_validation.py",
            "TestMaster\\core\\intelligence\\visualization\\agent_interface_systems.py",
            "TestMaster\\core\\intelligence\\visualization\\user_experience_frameworks.py",
            "TestMaster\\core\\observability\\unified_monitor_enhanced.stub_backup.py",
            "TestMaster\\core\\orchestration\\agent_graph.py",
            "TestMaster\\core\\orchestration\\configuration\\__init__.py",
            "TestMaster\\core\\orchestration\\coordination\\master\\master_orchestrator.py",
            "TestMaster\\core\\orchestration\\foundations\\__init__.py",
            "TestMaster\\core\\orchestration\\foundations\\abstractions\\orchestrator_base.py",
            "TestMaster\\core\\orchestration\\foundations\\protocols\\communication_protocols.py",
            "TestMaster\\core\\orchestration\\foundations\\protocols\\integration_protocols.py",
            "TestMaster\\core\\orchestration\\integration\\hub\\integration_hub.py",
            "TestMaster\\core\\reliability\\emergency_backup_recovery.py",
            "TestMaster\\core\\security\\adaptive_security_resilience.py",
            "TestMaster\\core\\security\\agent_communication_security.py",
            "TestMaster\\core\\security\\byzantine_consensus_security.py",
            "TestMaster\\core\\security\\data_integrity_guardian.py",
            "TestMaster\\core\\security\\distributed_agent_registry.py",
            "TestMaster\\core\\security\\distributed_communication_security.py",
            "TestMaster\\core\\security\\distributed_key_management_security.py",
            "TestMaster\\core\\security\\document_classification_security.py",
            "TestMaster\\core\\security\\enterprise_audit_logging.py",
            "TestMaster\\core\\security\\enterprise_auth_gateway.py",
            "TestMaster\\core\\security\\error_isolation_system.py",
            "TestMaster\\core\\security\\exception_monitoring.py",
            "TestMaster\\core\\security\\fault_tolerance_engine.py",
            "TestMaster\\core\\security\\graceful_degradation_manager.py",
            "TestMaster\\core\\security\\health_monitoring_nexus.py",
            "TestMaster\\core\\security\\identity_validation_system.py",
            "TestMaster\\core\\security\\multi_agent_access_control.py",
            "TestMaster\\core\\security\\multi_agent_evaluation_security.py",
            "TestMaster\\core\\security\\quantum_retry_engine.py",
            "TestMaster\\core\\security\\resilience_orchestrator.py",
            "TestMaster\\core\\security\\secure_message_delivery.py",
            "TestMaster\\core\\security\\secure_performance_optimizer.py",
            "TestMaster\\core\\security\\security_monitoring_system.py",
            "TestMaster\\core\\security\\self_healing_coordinator.py",
            "TestMaster\\core\\security\\threat_intelligence_system.py",
            "TestMaster\\core\\security\\__init__.py",
            "TestMaster\\core\\testing\\collaborative_testing_platform.py",
            "TestMaster\\core\\testing\\parallel_test_executor.py",
            "TestMaster\\core\\testing\\performance_test_suite.py",
            "TestMaster\\core\\testing\\task_guardrails_testing.py",
            "TestMaster\\dashboard\\comprehensive_frontend_test.py",
            "TestMaster\\dashboard\\server.py",
            "TestMaster\\dashboard\\test_api_endpoints.py",
            "TestMaster\\dashboard\\test_new_robustness_features.py",
            "TestMaster\\dashboard\\test_robustness_verification.py",
            "TestMaster\\dashboard\\ultimate_frontend_validator.py",
            "TestMaster\\dashboard\\validate_all_endpoints.py",
            "TestMaster\\dashboard\\api\\backend_health_monitor.py",
            "TestMaster\\dashboard\\api\\comprehensive_monitoring.py",
            "TestMaster\\dashboard\\api\\crew_orchestration.py",
            "TestMaster\\dashboard\\api\\enhanced_analytics.py",
            "TestMaster\\dashboard\\api\\enhanced_telemetry.py",
            "TestMaster\\dashboard\\api\\flow_optimization.py",
            "TestMaster\\dashboard\\api\\intelligence.py",
            "TestMaster\\dashboard\\api\\phase2_api.py",
            "TestMaster\\dashboard\\api\\real_codebase_scanner.stub_backup.py",
            "TestMaster\\dashboard\\api\\security.py",
            "TestMaster\\dashboard\\api\\swarm_orchestration.py",
            "TestMaster\\dashboard\\api\\websocket_dashboard.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_compressor.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_connectivity_monitor.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_deduplication.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_delivery_guarantee.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_delivery_verifier.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_integrity_guardian.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_integrity_verifier.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_performance_optimizer.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_priority_queue.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_quantum_retry.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_rate_limiter.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_receipt_tracker.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_redundancy.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_smart_cache.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_telemetry.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_watchdog.py",
            "TestMaster\\dashboard\\dashboard_core\\emergency_backup_recovery.py",
            "TestMaster\\dashboard\\dashboard_core\\predictive_flow_optimizer.py",
            "TestMaster\\integration\\automatic_scaling_system.py",
            "TestMaster\\integration\\comprehensive_error_recovery.py",
            "TestMaster\\integration\\cross_system_analytics.py",
            "TestMaster\\integration\\cross_system_apis.py",
            "TestMaster\\integration\\cross_system_communication.py",
            "TestMaster\\integration\\load_balancing_system.py",
            "TestMaster\\integration\\predictive_analytics_engine.py",
            "TestMaster\\integration\\realtime_performance_monitoring.py",
            "TestMaster\\integration\\service_mesh_integration.py",
            "TestMaster\\integration\\workflow_execution_engine.py",
            "TestMaster\\integration\\workflow_framework.py",
            "TestMaster\\integration\\modules\\alert_manager.py",
            "TestMaster\\integration\\modules\\health_monitor.py",
            "TestMaster\\integration\\modules\\metric_collector.py",
            "TestMaster\\integration\\modules\\monitoring_models.py",
            "TestMaster\\monitoring\\enhanced_monitor_separate.py",
            "TestMaster\\observability\\__init__.py",
            "TestMaster\\operational\\infrastructure_completion_report.py",
            "TestMaster\\operational\\infrastructure_validation_suite.py",
            "TestMaster\\operational\\perfected_state_manager.py",
            "TestMaster\\operational\\ultimate_perfection_validator.py",
            "TestMaster\\orchestration\\modules\\unified_orchestrator.py",
            "TestMaster\\orchestration\\modules\\__init__.py",
            "TestMaster\\scripts\\api_documenter.py",
            "TestMaster\\scripts\\run_limited_coverage.py",
            "TestMaster\\src\\data_flow_tests.py",
            "TestMaster\\src\\integration_test_matrix.py",
            "TestMaster\\testmaster\\main.py",
            "TestMaster\\testmaster\\__init__.py",
            "TestMaster\\testmaster\\agent_qa\\scoring_system.py",
            "TestMaster\\testmaster\\agent_qa\\__init__.py",
            "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\database_analysis.py",
            "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\error_handling_analysis.py",
            "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
            "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\resource_io_analysis.py",
            "TestMaster\\testmaster\\analysis\\coverage\\codebase_analyzer.py",
            "TestMaster\\testmaster\\communication\\dynamic_handoff.py",
            "TestMaster\\testmaster\\converters\\batch.py",
            "TestMaster\\testmaster\\converters\\parallel.py",
            "TestMaster\\testmaster\\core\\context_manager.py",
            "TestMaster\\testmaster\\core\\feature_flags.py",
            "TestMaster\\testmaster\\core\\monitoring_decorators.py",
            "TestMaster\\testmaster\\core\\tracking_manager.py",
            "TestMaster\\testmaster\\core\\framework_abstraction\\universal_test.py",
            "TestMaster\\testmaster\\flow_optimizer\\execution_router.py",
            "TestMaster\\testmaster\\flow_optimizer\\__init__.py",
            "TestMaster\\testmaster\\intelligence\\bridges\\event_monitoring_bridge.py",
            "TestMaster\\testmaster\\intelligence\\bridges\\protocol_communication_bridge.py",
            "TestMaster\\testmaster\\intelligence\\documentation\\__init__.py",
            "TestMaster\\testmaster\\intelligence\\documentation\\templates\\api\\base.py",
            "TestMaster\\testmaster\\intelligence\\integration\\__init__.py",
            "TestMaster\\testmaster\\intelligence\\integration\\agents\\documentation_agent.py",
            "TestMaster\\testmaster\\intelligence\\integration\\coordination\\analysis_coordinator.py",
            "TestMaster\\testmaster\\intelligence\\integration\\events\\event_system.py",
            "TestMaster\\testmaster\\intelligence\\integration\\features\\__init__.py",
            "TestMaster\\testmaster\\intelligence\\integration\\layers\\__init__.py",
            "TestMaster\\testmaster\\intelligence\\llm_providers\\provider_implementations.py",
            "TestMaster\\testmaster\\intelligence\\monitoring\\__init__.py",
            "TestMaster\\testmaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
            "TestMaster\\testmaster\\monitoring\\file_watcher.py",
            "TestMaster\\testmaster\\orchestrator\\work_distributor.py",
            "TestMaster\\testmaster\\orchestrator\\__init__.py",
            "TestMaster\\testmaster\\overview\\performance_dashboard.py",
            "TestMaster\\testmaster\\overview\\structure_mapper.py",
            "TestMaster\\testmaster\\refactoring\\hierarchical_analyzer.py",
            "TestMaster\\testmaster\\streaming\\incremental_enhancer.py",
            "TestMaster\\testmaster\\ui\\alert_system.py",
            "TestMaster\\testmaster\\ui\\metrics_display.py",
            "TestMaster\\tests\\test_phase2_core_validation.py",
            "TestMaster\\tests\\test_phase2_e2e_validation.py",
            "TestMaster\\tests\\test_phase2_integration_validation.py",
            "TestMaster\\tests\\modularized\\misc_split\\modules\\__init__.py",
            "TestMaster\\tests\\modularized\\misc_split\\uncategorized\\__init__.py",
            "TestMaster\\ui\\nocode_enhancement.py",
            "TestMaster\\ui\\unified_dashboard.py",
            "TestMaster\\ui_ux\\agent_verse_ui.py",
            "TestMaster\\ui_ux\\studio_interface.py",
            "TestMaster\\web_monitor\\handlers.py",
            "TestMaster\\web_monitor\\utils.py",
            "TestMaster\\workflow\\consolidation_workflow.py"
          ],
          "django_settings": [
            "TestMaster\\configuration_settings_analyzer.py"
          ],
          "fastapi_config": [
            "TestMaster\\contribution_analysis_detailed.py",
            "TestMaster\\api\\orchestration_api.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\api_interface_validator.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\architecture_validation_framework.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\system_integration_validator.py",
            "TestMaster\\core\\domains\\security\\api_security_layer.py",
            "TestMaster\\core\\domains\\security\\authentication_system.py",
            "TestMaster\\core\\domains\\security\\rate_limiter.py",
            "TestMaster\\core\\intelligence\\documentation\\api_interface_validator.py",
            "TestMaster\\core\\intelligence\\documentation\\architecture_validation_framework.py",
            "TestMaster\\core\\intelligence\\documentation\\cross_system_dependency_analyzer.py",
            "TestMaster\\core\\intelligence\\documentation\\system_integration_validator.py",
            "TestMaster\\core\\security\\api_security_layer.py",
            "TestMaster\\core\\security\\authentication_system.py",
            "TestMaster\\core\\security\\rate_limiter.py",
            "TestMaster\\scripts\\dependency_analyzer.py",
            "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\api_analysis.py",
            "TestMaster\\testmaster\\core\\language_detection\\universal_detector.py",
            "TestMaster\\testmaster\\intelligence\\documentation\\generators\\architecture_doc_generator.py"
          ],
          "class_based_config": [
            "TestMaster\\documentation_cli.py",
            "TestMaster\\parallel_converter_fixed.py",
            "TestMaster\\pattern_analysis_detailed.py",
            "TestMaster\\restored_asyncio_6.py",
            "TestMaster\\restored_json_5.py",
            "TestMaster\\restored_random_6.py",
            "TestMaster\\restored_uuid_6.py",
            "TestMaster\\specialized_test_generators.py",
            "TestMaster\\write_real_tests.py",
            "TestMaster\\agents\\team\\testing_team.py",
            "TestMaster\\archive\\test_misc_original_6141_lines.py",
            "TestMaster\\archive\\test_tot_output_original_18164_lines_20250821_040109.py",
            "TestMaster\\archive\\test_uncategorized_original_3557_lines_20250821_113530.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
            "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
            "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\intelligent_caching_layer_robust.py",
            "TestMaster\\archive\\legacy_scripts\\specialized_test_generators.py",
            "TestMaster\\archive\\legacy_scripts\\write_real_tests.py",
            "TestMaster\\archive\\original_backup\\specialized_test_generators.py",
            "TestMaster\\archive\\original_backup\\write_real_tests.py",
            "TestMaster\\archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
            "TestMaster\\archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
            "TestMaster\\archive\\oversized_modules_20250821_042018\\ml\\advanced\\sla_ml_optimizer.py",
            "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
            "TestMaster\\archive\\phase5_archive\\replaced_code\\enterprise_deployment_20250819_195602.py",
            "TestMaster\\archive\\phase5_archive\\replaced_code\\testing_team_20250819_195602.py",
            "TestMaster\\archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
            "TestMaster\\config\\config_migration.py",
            "TestMaster\\config\\enhanced_unified_config.py",
            "TestMaster\\config\\hierarchical_config_coordinator.py",
            "TestMaster\\config\\testmaster_config.py",
            "TestMaster\\config\\unified_config.py",
            "TestMaster\\config\\yaml_config_enhancer.py",
            "TestMaster\\config\\__init__.py",
            "TestMaster\\config\\modules\\api_config.py",
            "TestMaster\\config\\modules\\data_models.py",
            "TestMaster\\config\\modules\\infrastructure_config.py",
            "TestMaster\\config\\modules\\integration_config.py",
            "TestMaster\\config\\modules\\ml_config.py",
            "TestMaster\\config\\modules\\monitoring_config.py",
            "TestMaster\\config\\modules\\security_config.py",
            "TestMaster\\config\\modules\\testing_config.py",
            "TestMaster\\core\\domains\\intelligence\\coordination_protocol_manager.py",
            "TestMaster\\core\\domains\\intelligence\\__init__.py",
            "TestMaster\\core\\domains\\intelligence\\analysis\\business_base.py",
            "TestMaster\\core\\domains\\intelligence\\analysis\\debt_base.py",
            "TestMaster\\core\\domains\\intelligence\\analysis\\semantic_base.py",
            "TestMaster\\core\\domains\\intelligence\\analytics\\__init__.py",
            "TestMaster\\core\\domains\\intelligence\\api\\ml_api_modules\\ml_api_monitoring.py",
            "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\multilingual_docs.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\production_ready_docs.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\service_oriented_arch_docs.py",
            "TestMaster\\core\\domains\\intelligence\\documentation\\yaml_config_processor.py",
            "TestMaster\\core\\domains\\intelligence\\knowledge_graph\\instant_graph_engine.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\adaptive_configuration_manager.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\anomaly_detection.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\ensemble_meta_learner.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\intelligent_data_pipeline.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\telemetry_export_manager.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\circuit_breaker_ml_modules\\circuit_breaker_ml_core.py",
            "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\sla_ml_optimizer_core.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\load_generator.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\test_orchestrator.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\ai_generation\\universal_ai_generator.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\components\\integration_generator.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\patterns\\agency_swarm_patterns.py",
            "TestMaster\\core\\domains\\intelligence\\testing\\patterns\\crewai_patterns.py",
            "TestMaster\\core\\domains\\intelligence\\visualization\\data_visualization_engines.py",
            "TestMaster\\core\\domains\\intelligence\\visualization\\development_tools_ui.py",
            "TestMaster\\core\\domains\\security\\adaptive_fallback_orchestrator.py",
            "TestMaster\\core\\domains\\security\\circuit_breaker_matrix.py",
            "TestMaster\\core\\domains\\security\\configuration_security.py",
            "TestMaster\\core\\domains\\security\\container_security_validator.py",
            "TestMaster\\core\\domains\\security\\flow_persistence_security.py",
            "TestMaster\\core\\domains\\security\\network_security_controls.py",
            "TestMaster\\core\\domains\\security\\retry_mechanism_system.py",
            "TestMaster\\core\\domains\\security\\service_mesh_security.py",
            "TestMaster\\core\\domains\\security\\thread_safety_manager.py",
            "TestMaster\\core\\domains\\testing\\multi_modal_test_engine.py",
            "TestMaster\\core\\domains\\testing\\supercharged_test_generator.py_stub_backup_20250821_042438.py",
            "TestMaster\\core\\domains\\testing\\test_integration_hub.py",
            "TestMaster\\core\\foundation\\configuration\\base\\config_base.py",
            "TestMaster\\core\\foundation\\configuration\\base\\validation.py",
            "TestMaster\\core\\integration\\foundations\\abstractions\\adapter_abstractions.py",
            "TestMaster\\core\\integration\\foundations\\abstractions\\integration_base.py",
            "TestMaster\\core\\intelligence\\coordination_protocol_manager.py",
            "TestMaster\\core\\intelligence\\__init__.py",
            "TestMaster\\core\\intelligence\\analysis\\business_base.py",
            "TestMaster\\core\\intelligence\\analysis\\debt_base.py",
            "TestMaster\\core\\intelligence\\analysis\\semantic_base.py",
            "TestMaster\\core\\intelligence\\analytics\\__init__.py",
            "TestMaster\\core\\intelligence\\api\\ml_api_modules\\ml_api_monitoring.py",
            "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
            "TestMaster\\core\\intelligence\\documentation\\multilingual_docs.py",
            "TestMaster\\core\\intelligence\\documentation\\production_ready_docs.py",
            "TestMaster\\core\\intelligence\\documentation\\service_oriented_arch_docs.py",
            "TestMaster\\core\\intelligence\\documentation\\yaml_config_processor.py",
            "TestMaster\\core\\intelligence\\knowledge_graph\\instant_graph_engine.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\adaptive_configuration_manager.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\anomaly_detection.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\ensemble_meta_learner.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\intelligent_data_pipeline.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\telemetry_export_manager.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\circuit_breaker_ml_modules\\circuit_breaker_ml_core.py",
            "TestMaster\\core\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\sla_ml_optimizer_core.py",
            "TestMaster\\core\\intelligence\\testing\\load_generator.py",
            "TestMaster\\core\\intelligence\\testing\\test_orchestrator.py",
            "TestMaster\\core\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
            "TestMaster\\core\\intelligence\\testing\\ai_generation\\universal_ai_generator.py",
            "TestMaster\\core\\intelligence\\testing\\components\\integration_generator.py",
            "TestMaster\\core\\intelligence\\testing\\patterns\\agency_swarm_patterns.py",
            "TestMaster\\core\\intelligence\\testing\\patterns\\crewai_patterns.py",
            "TestMaster\\core\\intelligence\\visualization\\data_visualization_engines.py",
            "TestMaster\\core\\intelligence\\visualization\\development_tools_ui.py",
            "TestMaster\\core\\orchestration\\configuration\\orchestration_config.py",
            "TestMaster\\core\\orchestration\\foundations\\abstractions\\agent_abstractions.py",
            "TestMaster\\core\\security\\adaptive_fallback_orchestrator.py",
            "TestMaster\\core\\security\\circuit_breaker_matrix.py",
            "TestMaster\\core\\security\\configuration_security.py",
            "TestMaster\\core\\security\\container_security_validator.py",
            "TestMaster\\core\\security\\deployment_pipeline_security.py",
            "TestMaster\\core\\security\\flow_persistence_security.py",
            "TestMaster\\core\\security\\network_security_controls.py",
            "TestMaster\\core\\security\\retry_mechanism_system.py",
            "TestMaster\\core\\security\\service_mesh_security.py",
            "TestMaster\\core\\security\\thread_safety_manager.py",
            "TestMaster\\core\\state\\enhanced_state_manager.py",
            "TestMaster\\core\\testing\\multi_modal_test_engine.py",
            "TestMaster\\core\\testing\\supercharged_test_generator.py_stub_backup_20250821_042438.py",
            "TestMaster\\core\\testing\\test_integration_hub.py",
            "TestMaster\\core\\tools\\type_safe_tools.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_circuit_breaker.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_retry_manager.py",
            "TestMaster\\dashboard\\dashboard_core\\analytics_sla_tracker.py",
            "TestMaster\\deployment\\enterprise_deployment.py",
            "TestMaster\\deployment\\swarm_orchestrator.py",
            "TestMaster\\integration\\intelligent_caching_layer.py",
            "TestMaster\\integration\\multi_environment_support.py",
            "TestMaster\\orchestration\\unified_orchestrator.py",
            "TestMaster\\orchestration\\modules\\data_models.py",
            "TestMaster\\state\\unified_state_manager.py",
            "TestMaster\\testmaster\\async_processing\\concurrent_scheduler.py",
            "TestMaster\\testmaster\\async_processing\\thread_pool_manager.py",
            "TestMaster\\testmaster\\converters\\base.py",
            "TestMaster\\testmaster\\core\\config.py",
            "TestMaster\\testmaster\\core\\exceptions.py",
            "TestMaster\\testmaster\\core\\layer_manager.py",
            "TestMaster\\testmaster\\core\\orchestrator.py",
            "TestMaster\\testmaster\\core\\framework_abstraction\\test_generator.py",
            "TestMaster\\testmaster\\generators\\base.py",
            "TestMaster\\testmaster\\intelligence\\consensus\\agent_coordination.py",
            "TestMaster\\testmaster\\intelligence\\documentation\\core\\doc_generator.py",
            "TestMaster\\testmaster\\intelligence\\documentation\\core\\llm_integration.py",
            "TestMaster\\testmaster\\intelligence\\documentation\\generators\\api_doc_generator.py",
            "TestMaster\\testmaster\\intelligence\\documentation\\generators\\readme_generator.py",
            "TestMaster\\testmaster\\intelligence\\documentation\\generators\\tutorial_generator.py",
            "TestMaster\\testmaster\\intelligence\\documentation\\integrations\\ci_cd_integration.py",
            "TestMaster\\testmaster\\intelligence\\hierarchical_planning\\llm_integration.py",
            "TestMaster\\testmaster\\intelligence\\hierarchical_planning\\unified_integration.py",
            "TestMaster\\testmaster\\intelligence\\integration\\layers\\layer_manager.py",
            "TestMaster\\testmaster\\intelligence\\integration\\storage\\unified_storage.py",
            "TestMaster\\testmaster\\intelligence\\llm_providers\\universal_llm_provider.py",
            "TestMaster\\testmaster\\intelligence\\monitoring\\adaptive_resource_bridge.py",
            "TestMaster\\testmaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
            "TestMaster\\testmaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
            "TestMaster\\testmaster\\intelligence\\optimization\\multi_objective_optimizer.py",
            "TestMaster\\testmaster\\intelligence\\tree_of_thought\\universal_tot_integration.py",
            "TestMaster\\testmaster\\orchestration\\framework_adapter.py",
            "TestMaster\\testmaster\\orchestration\\output_system.py",
            "TestMaster\\testmaster\\orchestration\\universal_orchestrator.py",
            "TestMaster\\testmaster\\reporting\\dashboard_builder.py",
            "TestMaster\\testmaster\\reporting\\report_generator.py",
            "TestMaster\\testmaster\\reporting\\report_scheduler.py",
            "TestMaster\\testmaster\\security\\security_test_generator.py",
            "TestMaster\\testmaster\\security\\universal_scanner.py",
            "TestMaster\\testmaster\\streaming\\stream_generator.py",
            "TestMaster\\testmaster\\telemetry\\telemetry_dashboard.py",
            "TestMaster\\testmaster\\ui\\dashboard.py",
            "TestMaster\\testmaster\\verification\\base.py",
            "TestMaster\\tests\\modularized\\misc_split\\test_handlers.py",
            "TestMaster\\tests\\modularized\\misc_split\\test_layers.py",
            "TestMaster\\tests\\modularized\\misc_split\\test_uncategorized.py",
            "TestMaster\\tests\\modularized\\misc_split\\archive\\test_uncategorized_original.py",
            "TestMaster\\tests\\modularized\\misc_split\\modules\\test_configuration.py",
            "TestMaster\\tests\\modularized\\misc_split\\modules\\test_generation.py",
            "TestMaster\\tests\\modularized\\misc_split\\modules\\test_thought_processing.py",
            "TestMaster\\tests\\modularized\\misc_split\\uncategorized\\test_batch_config.py",
            "TestMaster\\tests\\modularized\\misc_split\\uncategorized\\test_comprehensive_remaining.py",
            "TestMaster\\unified_tools\\coverage_analysis_master.py",
            "TestMaster\\unified_tools\\test_generation_master.py"
          ],
          "yaml_config": [
            "TestMaster\\testmaster_config.yaml",
            "TestMaster\\TestMaster_Intelligence_API.yaml",
            "TestMaster\\unified_testmaster_config.yaml",
            "TestMaster\\config\\profiles\\development.yaml",
            "TestMaster\\config\\profiles\\production.yaml",
            "TestMaster\\config\\templates\\complete_template.yaml",
            "TestMaster\\config\\templates\\deployment_template.yaml",
            "TestMaster\\config\\templates\\graph_template.yaml",
            "TestMaster\\config\\templates\\team_template.yaml",
            "TestMaster\\config\\templates\\workflow_template.yaml",
            "TestMaster\\docs\\api\\openapi_specification.yaml"
          ],
          "json_config": [
            "TestMaster\\analytics_export.json",
            "TestMaster\\backend_health_report.json",
            "TestMaster\\cleanup_results.json",
            "TestMaster\\comprehensive_analysis_20250821_045021.json",
            "TestMaster\\comprehensive_analysis_20250821_054005.json",
            "TestMaster\\comprehensive_analysis_20250821_054151.json",
            "TestMaster\\comprehensive_analysis_20250821_080659.json",
            "TestMaster\\comprehensive_cleanup_data.json",
            "TestMaster\\comprehensive_feature_audit_results.json",
            "TestMaster\\contribution_analysis_results.json",
            "TestMaster\\coupling_analysis_results.json",
            "TestMaster\\exhaustive_stub_analysis_results.json",
            "TestMaster\\final_archive_sweep_report.json",
            "TestMaster\\IMPLEMENTATION_STATUS_REPORT.json",
            "TestMaster\\integration_systems_report.json",
            "TestMaster\\interface_analysis_results.json",
            "TestMaster\\metrics_test.json",
            "TestMaster\\pattern_analysis_results.json",
            "TestMaster\\phase1_api_documentation.json",
            "TestMaster\\phase1_component_analysis.json",
            "TestMaster\\phase1_dependency_analysis.json",
            "TestMaster\\phase7_validation_report.json",
            "TestMaster\\utility_analysis_detailed_report.json",
            "TestMaster\\archive\\archive_manifest.json",
            "TestMaster\\archive\\phase4_archive\\phase_c4_report.json",
            "TestMaster\\archive\\phase4_archive\\validation_report.json",
            "TestMaster\\archive\\phase5_archive\\validation_report.json",
            "TestMaster\\archive\\phase6_archive\\validation_report.json",
            "TestMaster\\config\\default.json",
            "TestMaster\\consolidation\\discovery_report.json",
            "TestMaster\\dashboard\\backend_features.json",
            "TestMaster\\dashboard\\final_enhancements_test_results.json",
            "TestMaster\\dashboard\\frontend_integration_validation.json",
            "TestMaster\\dashboard\\frontend_simulation_results.json",
            "TestMaster\\dashboard\\backups\\backup_metadata.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165025.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165124.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165125.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165224.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165252.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165324.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165424.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165449.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165524.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165549.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165624.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165649.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165724.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165749.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165824.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165849.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165924.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165949.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170024.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170124.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170224.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170324.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170348.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170424.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170524.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170624.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170724.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170824.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170924.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_171024.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_171124.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_171224.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_171324.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_171424.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_171524.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_171624.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172218.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172316.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172335.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172416.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172516.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172603.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172616.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172716.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172726.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172816.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172826.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172916.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172926.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173016.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173026.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173116.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173126.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173216.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173226.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173316.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173326.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173416.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173426.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173516.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173526.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173616.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173626.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173716.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173726.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173816.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173826.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173916.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174016.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174116.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174125.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174216.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174225.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174316.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174325.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174416.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174425.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174516.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174525.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174616.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174625.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174716.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174725.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174816.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174825.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174916.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174925.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175016.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175025.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175116.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175125.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175216.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175225.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175316.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175325.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175416.json",
            "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175517.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165124.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165125.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165224.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165252.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165324.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165424.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165449.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165524.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165549.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165624.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165649.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165724.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165749.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165824.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165849.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165924.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165949.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170024.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170124.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170224.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170324.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170348.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170424.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170524.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170624.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170724.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170824.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170924.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_171024.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_171124.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_171224.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_171324.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_171424.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_171524.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_171624.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172316.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172335.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172416.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172516.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172603.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172616.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172716.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172726.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172816.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172826.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172916.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172926.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173016.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173026.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173116.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173126.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173216.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173226.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173316.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173326.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173416.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173426.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173516.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173526.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173616.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173626.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173716.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173726.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173816.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173826.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173916.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174016.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174116.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174125.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174216.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174225.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174316.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174325.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174416.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174425.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174516.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174525.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174616.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174625.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174716.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174725.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174816.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174825.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174916.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174925.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175016.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175025.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175116.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175125.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175216.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175225.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175316.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175325.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175417.json",
            "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175517.json",
            "TestMaster\\docs\\api\\api_summary.json",
            "TestMaster\\docs\\api\\openapi_specification.json",
            "TestMaster\\docs\\api_integration\\documentation_api_spec.json",
            "TestMaster\\docs\\api_integration\\integration_report.json",
            "TestMaster\\docs\\configuration\\configuration_inventory.json",
            "TestMaster\\docs\\knowledge\\knowledge_catalog.json",
            "TestMaster\\docs\\legacy\\compatibility_matrix.json",
            "TestMaster\\docs\\legacy\\integration_report.json",
            "TestMaster\\docs\\validation\\api_interface_validation_report.json",
            "TestMaster\\docs\\validation\\cross_system_dependencies_report.json",
            "TestMaster\\docs\\validation\\performance_quality_report.json",
            "TestMaster\\docs\\validation\\system_integration_validation_report.json",
            "TestMaster\\operational\\cross_agent_integration_report_20250821_165224.json",
            "TestMaster\\operational\\infrastructure_completion_report_20250821_163118.json",
            "TestMaster\\operational\\ultimate_perfection_certification_20250821_165612.json",
            "TestMaster\\operational\\validation_report_20250821_162742.json",
            "TestMaster\\operational\\validation_report_20250821_162844.json",
            "TestMaster\\operational\\validation_report_20250821_162942.json",
            "TestMaster\\phase_1_7_validation_results\\phase_1_7_summary.json",
            "TestMaster\\phase_1_7_validation_results\\validation_results.json",
            "TestMaster\\test_reports\\component_performance_20250817_035149_f5c472ee.json",
            "TestMaster\\test_reports\\component_performance_20250817_035208_8c19d9b4.json",
            "TestMaster\\test_sessions\\archives\\background_task_1755475344_cf67972c\\metadata.json",
            "TestMaster\\test_sessions\\archives\\workflow_execution_1755475344_9c5329c5\\metadata.json",
            "TestMaster\\test_sops\\test_generation_1755475557_ddcecdff.json",
            "TestMaster\\tools\\migration\\legacy_analysis.json"
          ]
        },
        "total_config_files": 1382,
        "consolidation_recommendation": [
          "Consider consolidating to fewer configuration file types",
          "Centralize environment variable handling",
          "High number of config files - consider configuration hierarchy"
        ]
      },
      "security_improvements": [
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\comprehensive_classical_analysis_methods.py",
          "line": 469,
          "content": "r'password\\s*=\\s*[\"\\'][^\"\\']+[\"\\']',"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\comprehensive_classical_analysis_methods.py",
          "line": 471,
          "content": "r'secret\\s*=\\s*[\"\\'][^\"\\']+[\"\\']'"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\configuration_settings_analyzer.py",
          "line": 327,
          "content": "if re.search(r'password.*=.*[\\'\"][^\\'\"]*[\\'\"]', line_stripped, re.IGNORECASE):"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\configuration_settings_analyzer.py",
          "line": 335,
          "content": "if re.search(r'secret.*=.*[\\'\"][^\\'\"]*[\\'\"]', line_stripped, re.IGNORECASE):"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\unified_orchestration_example.py",
          "line": 249,
          "content": "if username == \"admin\" and password == \"admin123\":"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\archive\\coverage_analyzer_original_2697_lines.py",
          "line": 1015,
          "content": "r'password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']',"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\archive\\coverage_analyzer_original_2697_lines.py",
          "line": 1017,
          "content": "r'secret\\s*=\\s*[\"\\'][^\"\\']{10,}[\"\\']'"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\archive\\integration_hub_original_20250820_220939.py",
          "line": 1041,
          "content": "password = auth_config.get('password')"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_aggregator.py",
          "line": 234,
          "content": "secret_key = os.getenv('KEY')"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
          "line": 104,
          "content": "self.secret_key = secret_key or \"default_analytics_key\""
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "line": 1015,
          "content": "r'password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']',"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
          "line": 1017,
          "content": "r'secret\\s*=\\s*[\"\\'][^\"\\']{10,}[\"\\']'"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "line": 1283,
          "content": "(r'password\\s*=\\s*[\"\\'][^\"\\']+[\"\\']', 'password'),"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
          "line": 1285,
          "content": "(r'secret\\s*=\\s*[\"\\'][^\"\\']+[\"\\']', 'secret')"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "line": 1041,
          "content": "password = auth_config.get('password')"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
          "line": 1283,
          "content": "(r'password\\s*=\\s*[\"\\'][^\"\\']+[\"\\']', 'password'),"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
          "line": 1285,
          "content": "(r'secret\\s*=\\s*[\"\\'][^\"\\']+[\"\\']', 'secret')"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\config\\modules\\security_config.py",
          "line": 45,
          "content": "SECRET = \"secret\""
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\domains\\intelligence\\analysis\\technical_debt_analyzer.py",
          "line": 361,
          "content": "r'password\\s*=\\s*[\"\\'][^\"\\']*[\"\\']',  # Hardcoded passwords"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\intelligence\\analysis\\technical_debt_analyzer.py",
          "line": 362,
          "content": "r'secret\\s*=\\s*[\"\\'][^\"\\']*[\"\\']',    # Hardcoded secrets"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\intelligence\\api\\unified_api_gateway.py",
          "line": 474,
          "content": "self.jwt_secrets: Dict[str, str] = {\"default\": \"your-secret-key\"}"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
          "line": 63,
          "content": "SECRET = \"secret\""
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
          "line": 64,
          "content": "TOP_SECRET = \"top_secret\""
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
          "line": 152,
          "content": "password: str = \"\""
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
          "line": 171,
          "content": "password: str = \"\""
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\architecture_validation_framework.py",
          "line": 375,
          "content": "r'password\\s*=\\s*[\\'\"][^\\'\"]+[\\'\"]',"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\architecture_validation_framework.py",
          "line": 377,
          "content": "r'secret\\s*=\\s*[\\'\"][^\\'\"]+[\\'\"]',"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
          "line": 144,
          "content": "self.web_app.config['SECRET_KEY'] = 'ml_dashboard_secret'"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\intelligence\\security\\advanced_security_intelligence.py",
          "line": 148,
          "content": "self.secret_key = self.config.get('secret_key', 'default_secret_key_change_in_production')"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\domains\\intelligence\\security\\code_vulnerability_scanner.py",
          "line": 280,
          "content": "('password.*=.*[\"\\']', 'Hardcoded Credentials', 'critical'),"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\domains\\intelligence\\security\\code_vulnerability_scanner.py",
          "line": 497,
          "content": "'pattern': r'(password|secret|key|token)\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']',"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\intelligence\\security\\code_vulnerability_scanner.py",
          "line": 497,
          "content": "'pattern': r'(password|secret|key|token)\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']',"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\domains\\intelligence\\security\\vulnerability_scanner.py",
          "line": 204,
          "content": "(r'[\"\\'](?:password|passwd|pwd)[\"\\']?\\s*[=:]\\s*[\"\\'][^\"\\']+[\"\\']', \"password\"),"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\intelligence\\security\\vulnerability_scanner.py",
          "line": 206,
          "content": "(r'[\"\\'](?:secret|token)[\"\\']?\\s*[=:]\\s*[\"\\'][^\"\\']+[\"\\']', \"secret/token\"),"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\domains\\intelligence\\testing\\security\\advanced_owasp_tester.py",
          "line": 137,
          "content": "\"password=admin\", \"Weak password transmission\","
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\domains\\intelligence\\testing\\security\\advanced_owasp_tester.py",
          "line": 262,
          "content": "\"password=password\", \"Weak password\","
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\intelligence\\testing\\security\\advanced_owasp_tester.py",
          "line": 354,
          "content": "{\"pattern\": r\"SECRET.*=.*[a-zA-Z0-9]{20,}\", \"severity\": \"high\", \"description\": \"Secret key exposed\"}"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\intelligence\\testing\\security\\api_security_tester.py",
          "line": 222,
          "content": "weak_secret = os.getenv('SECRET')"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\security\\agent_communication_security.py",
          "line": 105,
          "content": "self.secret_key = secret_key or \"default_secret\"  # Should be configured properly"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\security\\authentication_system.py",
          "line": 45,
          "content": "def __init__(self, secret_key: Optional[str] = None, algorithm: str = \"HS256\"):"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\security\\authentication_system.py",
          "line": 46,
          "content": "self.secret_key = secret_key or os.getenv(\"JWT_SECRET_KEY\", secrets.token_urlsafe(32))"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\security\\code_generation_security.py",
          "line": 54,
          "content": "HARDCODED_SECRETS = \"hardcoded_secrets\""
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\security\\configuration_security.py",
          "line": 24,
          "content": "SECRET = \"secret\""
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\security\\distributed_communication_security.py",
          "line": 293,
          "content": "self.secret_key = secret_key or \"default_secret\""
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\security\\document_classification_security.py",
          "line": 26,
          "content": "TOP_SECRET = \"top_secret\""
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\domains\\security\\document_classification_security.py",
          "line": 227,
          "content": "regex_pattern=r'(?i)(password|pwd|pass)[\\'\"\\s]*[:=][\\'\"\\s]*([^\\s\\'\"]{8,})',"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\security\\document_classification_security.py",
          "line": 270,
          "content": "regex_pattern=r'(?i)(secret[_-]?key|secretkey)[\\'\"\\s]*[:=][\\'\"\\s]*([a-zA-Z0-9+/]{16,})',"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\domains\\security\\enterprise_authentication.py",
          "line": 32,
          "content": "PASSWORD = \"password\""
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\domains\\security\\enterprise_authentication.py",
          "line": 146,
          "content": "password_bytes = password.encode('utf-8')"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\domains\\security\\enterprise_authentication.py",
          "line": 166,
          "content": "password_bytes = password.encode('utf-8')"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\domains\\security\\enterprise_authentication.py",
          "line": 232,
          "content": "common_passwords = ['password', '123456', 'admin', 'welcome', 'letmein']"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\domains\\security\\enterprise_authentication.py",
          "line": 724,
          "content": "admin_password = os.getenv('PASSWORD')  # Should be changed immediately in production"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\security\\enterprise_auth_gateway.py",
          "line": 161,
          "content": "def __init__(self, secret_key: str, algorithm: str = \"HS256\"):"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\security\\secure_message_delivery.py",
          "line": 48,
          "content": "SECRET = \"secret\""
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\security\\secure_message_delivery.py",
          "line": 49,
          "content": "TOP_SECRET = \"top_secret\""
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\security\\secure_message_delivery.py",
          "line": 179,
          "content": "def __init__(self, secret_key: str = \"default_secret_key\"):"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\security\\validation_security.py",
          "line": 538,
          "content": "secret_patterns = ['password', 'secret', 'private_key', 'bearer']"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\domains\\security\\vulnerability_detection_framework.py",
          "line": 339,
          "content": "(r'password\\s*=\\s*[\"\\'][^\"\\']{1,8}[\"\\']', \"Weak password detected\"),"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\domains\\security\\vulnerability_detection_framework.py",
          "line": 372,
          "content": "(r'[\"\\'](?:password|passwd|pwd)[\"\\']?\\s*[=:]\\s*[\"\\'][^\"\\']+[\"\\']', \"Password exposure\"),"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\security\\vulnerability_detection_framework.py",
          "line": 373,
          "content": "(r'[\"\\'](?:secret|token)[\"\\']?\\s*[=:]\\s*[\"\\'][^\"\\']+[\"\\']', \"Secret token exposure\"),"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\testing\\testmaster_api_gateway.py",
          "line": 147,
          "content": "payload = jwt.decode(token, user.jwt_secret, algorithms=[\"HS256\"])"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\domains\\testing\\testmaster_api_gateway.py",
          "line": 172,
          "content": "token = jwt.encode(payload, user.jwt_secret, algorithm=\"HS256\")"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\domains\\testing\\testmaster_api_gateway.py",
          "line": 693,
          "content": "password = request.body.get(\"password\") if request.body else None"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\intelligence\\semantic_code_analyzer.py",
          "line": 1111,
          "content": "'hardcoded_secrets': r'password\\s*=\\s*[\"\\'][^\"\\']+[\"\\']|api_key\\s*=\\s*[\"\\'][^\"\\']+[\"\\']'"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\intelligence\\semantic_code_analyzer.py",
          "line": 1111,
          "content": "'hardcoded_secrets': r'password\\s*=\\s*[\"\\'][^\"\\']+[\"\\']|api_key\\s*=\\s*[\"\\'][^\"\\']+[\"\\']'"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\intelligence\\analysis\\technical_debt_analyzer.py",
          "line": 361,
          "content": "r'password\\s*=\\s*[\"\\'][^\"\\']*[\"\\']',  # Hardcoded passwords"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\intelligence\\analysis\\technical_debt_analyzer.py",
          "line": 362,
          "content": "r'secret\\s*=\\s*[\"\\'][^\"\\']*[\"\\']',    # Hardcoded secrets"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\intelligence\\api\\unified_api_gateway.py",
          "line": 474,
          "content": "self.jwt_secrets: Dict[str, str] = {\"default\": \"your-secret-key\"}"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
          "line": 63,
          "content": "SECRET = \"secret\""
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
          "line": 64,
          "content": "TOP_SECRET = \"top_secret\""
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
          "line": 152,
          "content": "password: str = \"\""
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
          "line": 171,
          "content": "password: str = \"\""
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\intelligence\\documentation\\architecture_validation_framework.py",
          "line": 375,
          "content": "r'password\\s*=\\s*[\\'\"][^\\'\"]+[\\'\"]',"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\intelligence\\documentation\\architecture_validation_framework.py",
          "line": 377,
          "content": "r'secret\\s*=\\s*[\\'\"][^\\'\"]+[\\'\"]',"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
          "line": 144,
          "content": "self.web_app.config['SECRET_KEY'] = 'ml_dashboard_secret'"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\intelligence\\security\\advanced_security_intelligence.py",
          "line": 148,
          "content": "self.secret_key = self.config.get('secret_key', 'default_secret_key_change_in_production')"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\intelligence\\security\\code_vulnerability_scanner.py",
          "line": 280,
          "content": "('password.*=.*[\"\\']', 'Hardcoded Credentials', 'critical'),"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\intelligence\\security\\code_vulnerability_scanner.py",
          "line": 497,
          "content": "'pattern': r'(password|secret|key|token)\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']',"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\intelligence\\security\\code_vulnerability_scanner.py",
          "line": 497,
          "content": "'pattern': r'(password|secret|key|token)\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']',"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\intelligence\\security\\vulnerability_scanner.py",
          "line": 204,
          "content": "(r'[\"\\'](?:password|passwd|pwd)[\"\\']?\\s*[=:]\\s*[\"\\'][^\"\\']+[\"\\']', \"password\"),"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\intelligence\\security\\vulnerability_scanner.py",
          "line": 206,
          "content": "(r'[\"\\'](?:secret|token)[\"\\']?\\s*[=:]\\s*[\"\\'][^\"\\']+[\"\\']', \"secret/token\"),"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\intelligence\\testing\\security\\advanced_owasp_tester.py",
          "line": 137,
          "content": "\"password=admin\", \"Weak password transmission\","
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\intelligence\\testing\\security\\advanced_owasp_tester.py",
          "line": 262,
          "content": "\"password=password\", \"Weak password\","
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\intelligence\\testing\\security\\advanced_owasp_tester.py",
          "line": 354,
          "content": "{\"pattern\": r\"SECRET.*=.*[a-zA-Z0-9]{20,}\", \"severity\": \"high\", \"description\": \"Secret key exposed\"}"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\intelligence\\testing\\security\\api_security_tester.py",
          "line": 222,
          "content": "weak_secret = os.getenv('SECRET')"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\security\\agent_communication_security.py",
          "line": 105,
          "content": "self.secret_key = secret_key or \"default_secret\"  # Should be configured properly"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\security\\authentication_system.py",
          "line": 45,
          "content": "def __init__(self, secret_key: Optional[str] = None, algorithm: str = \"HS256\"):"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\security\\authentication_system.py",
          "line": 46,
          "content": "self.secret_key = secret_key or os.getenv(\"JWT_SECRET_KEY\", secrets.token_urlsafe(32))"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\security\\code_generation_security.py",
          "line": 54,
          "content": "HARDCODED_SECRETS = \"hardcoded_secrets\""
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\security\\configuration_security.py",
          "line": 24,
          "content": "SECRET = \"secret\""
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\security\\deployment_pipeline_security.py",
          "line": 39,
          "content": "SECRET_DETECTION = \"secret_detection\""
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\security\\deployment_pipeline_security.py",
          "line": 147,
          "content": "secret_key = f\"{environment.value}:{secret_name}\""
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\security\\deployment_pipeline_security.py",
          "line": 163,
          "content": "secret_key = f\"{environment.value}:{secret_name}\""
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\security\\deployment_pipeline_security.py",
          "line": 185,
          "content": "secret_key = f\"{environment.value}:{secret_name}\""
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\security\\deployment_pipeline_security.py",
          "line": 250,
          "content": "'pattern': r'(?i)password[\\'\"\\s]*[:=][\\'\"\\s]*([^\\s\\'\"]{8,})',"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\security\\deployment_pipeline_security.py",
          "line": 255,
          "content": "'pattern': r'(?i)secret[\\'\"\\s]*[:=][\\'\"\\s]*([a-zA-Z0-9]{16,})',"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\security\\deployment_pipeline_security.py",
          "line": 465,
          "content": "'pattern': r'(?i)(password|secret|key)\\s*=\\s*[\\'\"][^\\'\\\"]{8,}[\\'\"]',"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\security\\deployment_pipeline_security.py",
          "line": 465,
          "content": "'pattern': r'(?i)(password|secret|key)\\s*=\\s*[\\'\"][^\\'\\\"]{8,}[\\'\"]',"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\security\\distributed_communication_security.py",
          "line": 293,
          "content": "self.secret_key = secret_key or \"default_secret\""
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\security\\document_classification_security.py",
          "line": 26,
          "content": "TOP_SECRET = \"top_secret\""
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\security\\document_classification_security.py",
          "line": 227,
          "content": "regex_pattern=r'(?i)(password|pwd|pass)[\\'\"\\s]*[:=][\\'\"\\s]*([^\\s\\'\"]{8,})',"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\security\\document_classification_security.py",
          "line": 270,
          "content": "regex_pattern=r'(?i)(secret[_-]?key|secretkey)[\\'\"\\s]*[:=][\\'\"\\s]*([a-zA-Z0-9+/]{16,})',"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\security\\enterprise_authentication.py",
          "line": 32,
          "content": "PASSWORD = \"password\""
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\security\\enterprise_authentication.py",
          "line": 146,
          "content": "password_bytes = password.encode('utf-8')"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\security\\enterprise_authentication.py",
          "line": 166,
          "content": "password_bytes = password.encode('utf-8')"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\security\\enterprise_authentication.py",
          "line": 232,
          "content": "common_passwords = ['password', '123456', 'admin', 'welcome', 'letmein']"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\security\\enterprise_authentication.py",
          "line": 724,
          "content": "admin_password = os.getenv('PASSWORD')  # Should be changed immediately in production"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\security\\enterprise_auth_gateway.py",
          "line": 161,
          "content": "def __init__(self, secret_key: str, algorithm: str = \"HS256\"):"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\security\\secure_message_delivery.py",
          "line": 48,
          "content": "SECRET = \"secret\""
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\security\\secure_message_delivery.py",
          "line": 49,
          "content": "TOP_SECRET = \"top_secret\""
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\security\\secure_message_delivery.py",
          "line": 179,
          "content": "def __init__(self, secret_key: str = \"default_secret_key\"):"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\security\\validation_security.py",
          "line": 538,
          "content": "secret_patterns = ['password', 'secret', 'private_key', 'bearer']"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\security\\vulnerability_detection_framework.py",
          "line": 339,
          "content": "(r'password\\s*=\\s*[\"\\'][^\"\\']{1,8}[\"\\']', \"Weak password detected\"),"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\security\\vulnerability_detection_framework.py",
          "line": 372,
          "content": "(r'[\"\\'](?:password|passwd|pwd)[\"\\']?\\s*[=:]\\s*[\"\\'][^\"\\']+[\"\\']', \"Password exposure\"),"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\security\\vulnerability_detection_framework.py",
          "line": 373,
          "content": "(r'[\"\\'](?:secret|token)[\"\\']?\\s*[=:]\\s*[\"\\'][^\"\\']+[\"\\']', \"Secret token exposure\"),"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\testing\\testmaster_api_gateway.py",
          "line": 147,
          "content": "payload = jwt.decode(token, user.jwt_secret, algorithms=[\"HS256\"])"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\core\\testing\\testmaster_api_gateway.py",
          "line": 172,
          "content": "token = jwt.encode(payload, user.jwt_secret, algorithm=\"HS256\")"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\core\\testing\\testmaster_api_gateway.py",
          "line": 693,
          "content": "password = request.body.get(\"password\") if request.body else None"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\dashboard\\wsgi.py",
          "line": 56,
          "content": "SECRET_KEY=os.environ.get('SECRET_KEY', 'prod-secret-key-change-me'),"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\dashboard\\dashboard_core\\analytics_aggregator.py",
          "line": 234,
          "content": "secret_key = os.getenv('KEY')"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\dashboard\\dashboard_core\\analytics_integrity_verifier.py",
          "line": 104,
          "content": "self.secret_key = secret_key or \"default_analytics_key\""
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\dashboard\\dashboard_core\\real_data_extractor.py",
          "line": 196,
          "content": "'hardcoded_secrets': r'(password|secret|key|token)\\s*=\\s*[\"\\']',"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\dashboard\\dashboard_core\\real_data_extractor.py",
          "line": 196,
          "content": "'hardcoded_secrets': r'(password|secret|key|token)\\s*=\\s*[\"\\']',"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\crypto_analysis.py",
          "line": 186,
          "content": "r'password\\s*=\\s*[\"\\'][^\"\\']+[\"\\']',"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\crypto_analysis.py",
          "line": 187,
          "content": "r'secret\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']',"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\security_analysis.py",
          "line": 67,
          "content": "r'password.*=.*[\"\\'][^\"\\']{1,8}[\"\\']',  # Short passwords"
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\security_analysis.py",
          "line": 135,
          "content": "r'SECRET_KEY.*=.*[\"\\'][^\"\\']{1,20}[\"\\']',  # Short secret key"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\security_analysis.py",
          "line": 158,
          "content": "r'password.*=.*[\"\\'][^\"\\']{1,6}[\"\\']',  # Very short passwords"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\security_analysis.py",
          "line": 201,
          "content": "r'if.*password.*==.*[\"\\'].*[\"\\']',  # Hardcoded password checks"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\security_analysis.py",
          "line": 486,
          "content": "r'password.*==.*[\"\\']',  # Plain text password comparison"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\testmaster\\intelligence\\security\\security_intelligence_agent.py",
          "line": 885,
          "content": "query = f\"SELECT * FROM users WHERE username = '{username}' AND password = os.getenv('PASSWORD')\""
        },
        {
          "type": "hardcoded_secret",
          "file": "TestMaster\\testmaster\\overview\\performance_dashboard.py",
          "line": 152,
          "content": "self.flask_app.config['SECRET_KEY'] = 'testmaster_dashboard'"
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\testmaster\\security\\security_test_generator.py",
          "line": 368,
          "content": "test_function=f\"# Test weak password rejection\\\\nresult = {func.name}('user', '123')\","
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\testmaster\\security\\security_test_generator.py",
          "line": 381,
          "content": "test_function=f\"# Test account lockout after failed attempts\\\\nfor i in range(6):\\\\n    {func.name}("
        },
        {
          "type": "hardcoded_password",
          "file": "TestMaster\\testmaster\\security\\universal_scanner.py",
          "line": 647,
          "content": "'pattern': r'password\\s*=\\s*[\"\\'][^\"\\']{3,}[\"\\']',"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\database_relationship_analyzer.py",
          "line": 429,
          "variable": "is_primary_key",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\database_relationship_analyzer.py",
          "line": 430,
          "variable": "foreign_key",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\database_relationship_analyzer.py",
          "line": 443,
          "variable": "is_primary_key",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
          "line": 577,
          "variable": "key_similarity",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
          "line": 26,
          "variable": "TOKEN_BUCKET",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\config\\modules\\security_config.py",
          "line": 21,
          "variable": "API_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\config\\modules\\security_config.py",
          "line": 45,
          "variable": "SECRET",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\intelligence\\analytics\\analytics_deduplication.py",
          "line": 513,
          "variable": "key_similarity",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\intelligence\\api\\unified_api_gateway.py",
          "line": 48,
          "variable": "API_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\intelligence\\api\\unified_api_gateway.py",
          "line": 59,
          "variable": "API_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
          "line": 63,
          "variable": "SECRET",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
          "line": 64,
          "variable": "TOP_SECRET",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\enterprise_api_docs.py",
          "line": 19,
          "variable": "API_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\enterprise_api_docs.py",
          "line": 20,
          "variable": "BEARER_TOKEN",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\intelligence\\streaming\\event_streaming_engine.py",
          "line": 58,
          "variable": "KEY_BASED",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\security\\agent_communication_security.py",
          "line": 40,
          "variable": "key_pattern",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\security\\code_generation_security.py",
          "line": 54,
          "variable": "HARDCODED_SECRETS",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\security\\configuration_security.py",
          "line": 24,
          "variable": "SECRET",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\security\\distributed_key_management_security.py",
          "line": 31,
          "variable": "API_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\security\\distributed_key_management_security.py",
          "line": 32,
          "variable": "ACCESS_TOKEN",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\security\\distributed_key_management_security.py",
          "line": 33,
          "variable": "REFRESH_TOKEN",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\security\\distributed_key_management_security.py",
          "line": 34,
          "variable": "SYMMETRIC_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\security\\distributed_key_management_security.py",
          "line": 35,
          "variable": "PUBLIC_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\security\\distributed_key_management_security.py",
          "line": 36,
          "variable": "PRIVATE_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\security\\distributed_key_management_security.py",
          "line": 37,
          "variable": "MASTER_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\security\\distributed_key_management_security.py",
          "line": 396,
          "variable": "key_value",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\security\\document_classification_security.py",
          "line": 26,
          "variable": "TOP_SECRET",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\security\\enterprise_authentication.py",
          "line": 33,
          "variable": "JWT_TOKEN",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\security\\enterprise_authentication.py",
          "line": 34,
          "variable": "API_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\security\\enterprise_auth_gateway.py",
          "line": 77,
          "variable": "API_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\security\\enterprise_auth_gateway.py",
          "line": 92,
          "variable": "ID_TOKEN",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\security\\enterprise_auth_gateway.py",
          "line": 93,
          "variable": "API_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\security\\enterprise_auth_gateway.py",
          "line": 100,
          "variable": "TOKEN_ISSUED",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\security\\enterprise_auth_gateway.py",
          "line": 101,
          "variable": "TOKEN_REVOKED",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\security\\enum_security.py",
          "line": 67,
          "variable": "TOKEN_EXPIRED",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\security\\secure_message_delivery.py",
          "line": 48,
          "variable": "SECRET",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\security\\secure_message_delivery.py",
          "line": 49,
          "variable": "TOP_SECRET",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\security\\threat_intelligence_system.py",
          "line": 151,
          "variable": "REGISTRY_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\domains\\testing\\testmaster_api_gateway.py",
          "line": 41,
          "variable": "API_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\integration\\foundations\\abstractions\\service_abstractions.py",
          "line": 69,
          "variable": "BEARER_TOKEN",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\integration\\foundations\\abstractions\\service_abstractions.py",
          "line": 70,
          "variable": "API_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\intelligence\\analytics\\analytics_deduplication.py",
          "line": 513,
          "variable": "key_similarity",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\intelligence\\api\\unified_api_gateway.py",
          "line": 48,
          "variable": "API_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\intelligence\\api\\unified_api_gateway.py",
          "line": 59,
          "variable": "API_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
          "line": 63,
          "variable": "SECRET",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
          "line": 64,
          "variable": "TOP_SECRET",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\intelligence\\documentation\\enterprise_api_docs.py",
          "line": 19,
          "variable": "API_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\intelligence\\documentation\\enterprise_api_docs.py",
          "line": 20,
          "variable": "BEARER_TOKEN",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\intelligence\\streaming\\event_streaming_engine.py",
          "line": 58,
          "variable": "KEY_BASED",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\security\\agent_communication_security.py",
          "line": 40,
          "variable": "key_pattern",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\security\\code_generation_security.py",
          "line": 54,
          "variable": "HARDCODED_SECRETS",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\security\\configuration_security.py",
          "line": 24,
          "variable": "SECRET",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\security\\deployment_pipeline_security.py",
          "line": 39,
          "variable": "SECRET_DETECTION",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\security\\distributed_key_management_security.py",
          "line": 31,
          "variable": "API_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\security\\distributed_key_management_security.py",
          "line": 32,
          "variable": "ACCESS_TOKEN",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\security\\distributed_key_management_security.py",
          "line": 33,
          "variable": "REFRESH_TOKEN",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\security\\distributed_key_management_security.py",
          "line": 34,
          "variable": "SYMMETRIC_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\security\\distributed_key_management_security.py",
          "line": 35,
          "variable": "PUBLIC_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\security\\distributed_key_management_security.py",
          "line": 36,
          "variable": "PRIVATE_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\security\\distributed_key_management_security.py",
          "line": 37,
          "variable": "MASTER_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\security\\distributed_key_management_security.py",
          "line": 396,
          "variable": "key_value",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\security\\document_classification_security.py",
          "line": 26,
          "variable": "TOP_SECRET",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\security\\enterprise_authentication.py",
          "line": 33,
          "variable": "JWT_TOKEN",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\security\\enterprise_authentication.py",
          "line": 34,
          "variable": "API_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\security\\enterprise_auth_gateway.py",
          "line": 77,
          "variable": "API_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\security\\enterprise_auth_gateway.py",
          "line": 92,
          "variable": "ID_TOKEN",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\security\\enterprise_auth_gateway.py",
          "line": 93,
          "variable": "API_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\security\\enterprise_auth_gateway.py",
          "line": 100,
          "variable": "TOKEN_ISSUED",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\security\\enterprise_auth_gateway.py",
          "line": 101,
          "variable": "TOKEN_REVOKED",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\security\\enum_security.py",
          "line": 67,
          "variable": "TOKEN_EXPIRED",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\security\\secure_message_delivery.py",
          "line": 48,
          "variable": "SECRET",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\security\\secure_message_delivery.py",
          "line": 49,
          "variable": "TOP_SECRET",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\security\\threat_intelligence_system.py",
          "line": 151,
          "variable": "REGISTRY_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\core\\testing\\testmaster_api_gateway.py",
          "line": 41,
          "variable": "API_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\dashboard\\api\\llm.py",
          "line": 305,
          "variable": "cost_per_token",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\dashboard\\dashboard_core\\analytics_deduplication.py",
          "line": 577,
          "variable": "key_similarity",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\dashboard\\dashboard_core\\analytics_rate_limiter.py",
          "line": 26,
          "variable": "TOKEN_BUCKET",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\testmaster\\intelligence\\documentation\\core\\llm_integration.py",
          "line": 498,
          "variable": "completion_tokens",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\testmaster\\intelligence\\documentation\\core\\llm_integration.py",
          "line": 501,
          "variable": "completion_tokens",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\testmaster\\intelligence\\documentation\\core\\llm_integration.py",
          "line": 503,
          "variable": "completion_tokens",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\testmaster\\intelligence\\documentation\\templates\\api\\base.py",
          "line": 24,
          "variable": "API_KEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\testmaster\\intelligence\\documentation\\templates\\api\\base.py",
          "line": 25,
          "variable": "BEARER_TOKEN",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\testmaster\\intelligence\\llm_providers\\universal_llm_provider.py",
          "line": 261,
          "variable": "cost_per_1k_tokens",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\ui\\unified_dashboard.py",
          "line": 60,
          "variable": "SANKEY",
          "recommendation": "Move to environment variable or secure vault"
        },
        {
          "type": "unencrypted_secret",
          "file": "TestMaster\\ui_ux\\studio_interface.py",
          "line": 40,
          "variable": "SANKEY",
          "recommendation": "Move to environment variable or secure vault"
        }
      ]
    },
    "configuration_health_score": 32.5,
    "recommendations": [
      "Address 135 security concerns in configuration",
      "Consider extracting hardcoded values to configuration files",
      "Consider consolidating configuration files"
    ]
  },
  "raw_data": {
    "config_patterns": {
      "environment_variables": [
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\accelerated_converter.py",
          "line": 29,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\enhanced_context_aware_test_generator.py",
          "line": 22,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\enhanced_self_healing_verifier.py",
          "line": 41,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\independent_test_verifier.py",
          "line": 29,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\parallel_converter.py",
          "line": 57,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\parallel_converter_fixed.py",
          "line": 38,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\turbo_converter.py",
          "line": 28,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\week_5_8_batch_converter.py",
          "line": 33,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\week_7_8_converter.py",
          "line": 27,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "KEY",
          "file": "TestMaster\\analysis\\comprehensive_analysis\\domain_modeling\\domain_model_analyzer.py",
          "line": 667,
          "assigned_to": "context_key",
          "default_value": null
        },
        {
          "env_var": "KEY",
          "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "line": 243,
          "assigned_to": "cache_key",
          "default_value": null
        },
        {
          "env_var": "KEY",
          "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "line": 325,
          "assigned_to": "cache_key",
          "default_value": null
        },
        {
          "env_var": "KEY",
          "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
          "line": 353,
          "assigned_to": "cache_key",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\accelerated_converter.py",
          "line": 29,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\achieve_100_percent.py",
          "line": 25,
          "assigned_to": null,
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\achieve_100_percent_coverage.py",
          "line": 401,
          "assigned_to": "api_key",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\diagnose_final_five.py",
          "line": 23,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
          "line": 22,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\enhanced_self_healing_verifier.py",
          "line": 41,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\final_five_converter.py",
          "line": 23,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\gemini_powered_test_generator.py",
          "line": 330,
          "assigned_to": "api_key",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\generate_coverage_sequential.py",
          "line": 38,
          "assigned_to": null,
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\independent_test_verifier.py",
          "line": 29,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\intelligent_converter.py",
          "line": 29,
          "assigned_to": null,
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\parallel_converter.py",
          "line": 31,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\parallel_converter_fixed.py",
          "line": 31,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\parallel_converter_working.py",
          "line": 30,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\parallel_coverage_converter.py",
          "line": 32,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\self_healing_converter.py",
          "line": 31,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\simple_test_generator.py",
          "line": 25,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\test_gemini_api.py",
          "line": 25,
          "assigned_to": "api_key",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\test_gemini_config.py",
          "line": 46,
          "assigned_to": "api_key",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\test_gemini_correct.py",
          "line": 25,
          "assigned_to": "api_key",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\test_single_api_call.py",
          "line": 22,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\test_single_generation.py",
          "line": 37,
          "assigned_to": "api_key",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\test_updated_prompt.py",
          "line": 23,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\turbo_converter.py",
          "line": 28,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\week_5_8_batch_converter.py",
          "line": 33,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\week_7_8_converter.py",
          "line": 27,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\legacy_scripts\\working_test_generator.py",
          "line": 32,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\accelerated_converter.py",
          "line": 29,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\enhanced_context_aware_test_generator.py",
          "line": 22,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\enhanced_self_healing_verifier.py",
          "line": 41,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\independent_test_verifier.py",
          "line": 29,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\parallel_converter.py",
          "line": 31,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\parallel_converter_fixed.py",
          "line": 31,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\turbo_converter.py",
          "line": 28,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\week_5_8_batch_converter.py",
          "line": 33,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\week_7_8_converter.py",
          "line": 27,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\scripts\\achieve_100_percent.py",
          "line": 25,
          "assigned_to": null,
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\scripts\\achieve_100_percent_coverage.py",
          "line": 401,
          "assigned_to": "api_key",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\scripts\\diagnose_final_five.py",
          "line": 23,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\scripts\\final_five_converter.py",
          "line": 23,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\scripts\\gemini_powered_test_generator.py",
          "line": 330,
          "assigned_to": "api_key",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\scripts\\generate_coverage_sequential.py",
          "line": 38,
          "assigned_to": null,
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\scripts\\intelligent_converter.py",
          "line": 29,
          "assigned_to": null,
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\scripts\\parallel_converter_working.py",
          "line": 30,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\scripts\\parallel_coverage_converter.py",
          "line": 32,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\scripts\\parallel_coverage_converter_fixed.py",
          "line": 32,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\scripts\\self_healing_converter.py",
          "line": 31,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\scripts\\simple_test_generator.py",
          "line": 25,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\scripts\\test_gemini_api.py",
          "line": 25,
          "assigned_to": "api_key",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\scripts\\test_gemini_config.py",
          "line": 46,
          "assigned_to": "api_key",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\scripts\\test_gemini_correct.py",
          "line": 25,
          "assigned_to": "api_key",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\scripts\\test_single_api_call.py",
          "line": 22,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\scripts\\test_single_generation.py",
          "line": 37,
          "assigned_to": "api_key",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\scripts\\test_updated_prompt.py",
          "line": 23,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\original_backup\\scripts\\working_test_generator.py",
          "line": 32,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "KEY",
          "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\coordination\\agent_coordination_protocols.py",
          "line": 350,
          "assigned_to": null,
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\archive\\state_cache_consolidation_20250821_084236\\parallel_coverage_converter.py",
          "line": 32,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "KEY",
          "file": "TestMaster\\core\\domains\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
          "line": 98,
          "assigned_to": null,
          "default_value": null
        },
        {
          "env_var": "SECRET",
          "file": "TestMaster\\core\\domains\\intelligence\\testing\\security\\api_security_tester.py",
          "line": 222,
          "assigned_to": "weak_secret",
          "default_value": null
        },
        {
          "env_var": "PASSWORD",
          "file": "TestMaster\\core\\domains\\security\\enterprise_authentication.py",
          "line": 724,
          "assigned_to": "admin_password",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\core\\domains\\testing\\supercharged_test_generator.py",
          "line": 37,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "KEY",
          "file": "TestMaster\\core\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
          "line": 98,
          "assigned_to": null,
          "default_value": null
        },
        {
          "env_var": "SECRET",
          "file": "TestMaster\\core\\intelligence\\testing\\security\\api_security_tester.py",
          "line": 222,
          "assigned_to": "weak_secret",
          "default_value": null
        },
        {
          "env_var": "PASSWORD",
          "file": "TestMaster\\core\\security\\enterprise_authentication.py",
          "line": 724,
          "assigned_to": "admin_password",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\core\\testing\\supercharged_test_generator.py",
          "line": 37,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "KEY",
          "file": "TestMaster\\dashboard\\api\\health.py",
          "line": 350,
          "assigned_to": "cache_key",
          "default_value": null
        },
        {
          "env_var": "KEY",
          "file": "TestMaster\\dashboard\\dashboard_core\\analytics_performance_booster.py",
          "line": 243,
          "assigned_to": "cache_key",
          "default_value": null
        },
        {
          "env_var": "KEY",
          "file": "TestMaster\\dashboard\\dashboard_core\\analytics_performance_booster.py",
          "line": 325,
          "assigned_to": "cache_key",
          "default_value": null
        },
        {
          "env_var": "KEY",
          "file": "TestMaster\\dashboard\\dashboard_core\\analytics_performance_booster.py",
          "line": 353,
          "assigned_to": "cache_key",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\scripts\\achieve_100_percent.py",
          "line": 25,
          "assigned_to": null,
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\scripts\\achieve_100_percent_coverage.py",
          "line": 401,
          "assigned_to": "api_key",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\scripts\\diagnose_final_five.py",
          "line": 23,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\scripts\\final_five_converter.py",
          "line": 23,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\scripts\\gemini_powered_test_generator.py",
          "line": 330,
          "assigned_to": "api_key",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\scripts\\generate_coverage_sequential.py",
          "line": 38,
          "assigned_to": null,
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\scripts\\intelligent_converter.py",
          "line": 29,
          "assigned_to": null,
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\scripts\\self_healing_converter.py",
          "line": 31,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\scripts\\simple_test_generator.py",
          "line": 25,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\scripts\\test_gemini_api.py",
          "line": 25,
          "assigned_to": "api_key",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\scripts\\test_gemini_config.py",
          "line": 46,
          "assigned_to": "api_key",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\scripts\\test_gemini_correct.py",
          "line": 25,
          "assigned_to": "api_key",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\scripts\\test_single_api_call.py",
          "line": 22,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\scripts\\test_single_generation.py",
          "line": 37,
          "assigned_to": "api_key",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\scripts\\test_updated_prompt.py",
          "line": 23,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "GOOGLE_API_KEY",
          "file": "TestMaster\\scripts\\working_test_generator.py",
          "line": 32,
          "assigned_to": "API_KEY",
          "default_value": null
        },
        {
          "env_var": "TESTMASTER_PROFILE",
          "file": "TestMaster\\testmaster\\core\\config.py",
          "line": 308,
          "assigned_to": "env_profile",
          "default_value": null
        }
      ],
      "config_dictionaries": [
        {
          "variable": "config_info",
          "file": "TestMaster\\configuration_settings_analyzer.py",
          "line": 418,
          "key_count": 5
        },
        {
          "variable": "config",
          "file": "TestMaster\\enhanced_incremental_ast_engine.py",
          "line": 731,
          "key_count": 4
        },
        {
          "variable": "config",
          "file": "TestMaster\\enhanced_security_dashboard_api.py",
          "line": 80,
          "key_count": 4
        },
        {
          "variable": "config",
          "file": "TestMaster\\enhanced_security_dashboard_api.py",
          "line": 602,
          "key_count": 4
        },
        {
          "variable": "CONFIGS",
          "file": "TestMaster\\parallel_converter_fixed.py",
          "line": 69,
          "key_count": 2
        },
        {
          "variable": "configs",
          "file": "TestMaster\\restored_json_5.py",
          "line": 130,
          "key_count": 5
        },
        {
          "variable": "default_config",
          "file": "TestMaster\\testmaster_orchestrator.py",
          "line": 410,
          "key_count": 8
        },
        {
          "variable": "config",
          "file": "TestMaster\\test_intelligence_integration.py",
          "line": 86,
          "key_count": 1
        },
        {
          "variable": "session_config",
          "file": "TestMaster\\test_phase1_integration.py",
          "line": 184,
          "key_count": 3
        },
        {
          "variable": "params",
          "file": "TestMaster\\archive\\from_subarchive_ml_code_analysis_original.py",
          "line": 1155,
          "key_count": 0
        },
        {
          "variable": "processor_config",
          "file": "TestMaster\\archive\\integration_hub_original_20250820_220939.py",
          "line": 710,
          "key_count": 3
        },
        {
          "variable": "pool_config",
          "file": "TestMaster\\archive\\integration_hub_original_20250820_220939.py",
          "line": 1019,
          "key_count": 3
        },
        {
          "variable": "limiter_config",
          "file": "TestMaster\\archive\\integration_hub_original_20250820_220939.py",
          "line": 1056,
          "key_count": 3
        },
        {
          "variable": "cb_config",
          "file": "TestMaster\\archive\\integration_hub_original_20250820_220939.py",
          "line": 1070,
          "key_count": 7
        },
        {
          "variable": "params",
          "file": "TestMaster\\archive\\superseded_toplevel_ml_code_analysis.py",
          "line": 1155,
          "key_count": 0
        },
        {
          "variable": "degradation_config",
          "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\comprehensive_error_recovery_robust.py",
          "line": 843,
          "key_count": 2
        },
        {
          "variable": "system_configs",
          "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\cross_system_apis_robust.py",
          "line": 430,
          "key_count": 4
        },
        {
          "variable": "default_config",
          "file": "TestMaster\\archive\\legacy_scripts\\testmaster_orchestrator.py",
          "line": 161,
          "key_count": 8
        },
        {
          "variable": "processor_config",
          "file": "TestMaster\\archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "line": 710,
          "key_count": 3
        },
        {
          "variable": "pool_config",
          "file": "TestMaster\\archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "line": 1019,
          "key_count": 3
        },
        {
          "variable": "limiter_config",
          "file": "TestMaster\\archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "line": 1056,
          "key_count": 3
        },
        {
          "variable": "cb_config",
          "file": "TestMaster\\archive\\modularization_integration\\integration_hub_original_1876_lines.py",
          "line": 1070,
          "key_count": 7
        },
        {
          "variable": "default_config",
          "file": "TestMaster\\archive\\original_backup\\testmaster_orchestrator.py",
          "line": 161,
          "key_count": 8
        },
        {
          "variable": "config_data",
          "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
          "line": 614,
          "key_count": 3
        },
        {
          "variable": "system_configs",
          "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
          "line": 430,
          "key_count": 4
        },
        {
          "variable": "degradation_config",
          "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
          "line": 843,
          "key_count": 2
        },
        {
          "variable": "system_configs",
          "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
          "line": 430,
          "key_count": 4
        },
        {
          "variable": "configs",
          "file": "TestMaster\\archive\\phase5_archive\\replaced_code\\enterprise_deployment_20250819_195602.py",
          "line": 130,
          "key_count": 5
        },
        {
          "variable": "unified_config",
          "file": "TestMaster\\config\\hierarchical_config_coordinator.py",
          "line": 211,
          "key_count": 0
        },
        {
          "variable": "yaml_config",
          "file": "TestMaster\\config\\yaml_config_enhancer.py",
          "line": 385,
          "key_count": 2
        },
        {
          "variable": "yaml_config",
          "file": "TestMaster\\config\\yaml_config_enhancer.py",
          "line": 409,
          "key_count": 2
        },
        {
          "variable": "config",
          "file": "TestMaster\\config\\modules\\api_config.py",
          "line": 111,
          "key_count": 4
        },
        {
          "variable": "analytics_config",
          "file": "TestMaster\\core\\domains\\intelligence\\__init__.py",
          "line": 223,
          "key_count": 3
        },
        {
          "variable": "testing_config",
          "file": "TestMaster\\core\\domains\\intelligence\\__init__.py",
          "line": 239,
          "key_count": 2
        },
        {
          "variable": "integration_config",
          "file": "TestMaster\\core\\domains\\intelligence\\__init__.py",
          "line": 254,
          "key_count": 2
        },
        {
          "variable": "params",
          "file": "TestMaster\\core\\domains\\intelligence\\analysis\\ml_analyzer.py",
          "line": 682,
          "key_count": 0
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\domains\\intelligence\\analysis\\ml_analyzer.py",
          "line": 689,
          "key_count": 2
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\domains\\intelligence\\api\\orchestration_api.py",
          "line": 49,
          "key_count": 4
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\domains\\intelligence\\api\\orchestration_api.py",
          "line": 63,
          "key_count": 3
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\domains\\intelligence\\api\\performance_api.py",
          "line": 46,
          "key_count": 4
        },
        {
          "variable": "config_data",
          "file": "TestMaster\\core\\domains\\intelligence\\api\\performance_api.py",
          "line": 523,
          "key_count": 4
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\domains\\intelligence\\api\\qa_api.py",
          "line": 43,
          "key_count": 3
        },
        {
          "variable": "config_data",
          "file": "TestMaster\\core\\domains\\intelligence\\api\\qa_api.py",
          "line": 736,
          "key_count": 5
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\domains\\intelligence\\api\\ultimate_nexus_api.py",
          "line": 46,
          "key_count": 5
        },
        {
          "variable": "DEFAULT_CONFIG",
          "file": "TestMaster\\core\\domains\\intelligence\\api\\__init__.py",
          "line": 32,
          "key_count": 6
        },
        {
          "variable": "queue_config",
          "file": "TestMaster\\core\\domains\\intelligence\\communication\\unified_communication_service.py",
          "line": 615,
          "key_count": 3
        },
        {
          "variable": "stream_config",
          "file": "TestMaster\\core\\domains\\intelligence\\communication\\unified_communication_service.py",
          "line": 632,
          "key_count": 3
        },
        {
          "variable": "config_dict",
          "file": "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
          "line": 728,
          "key_count": 8
        },
        {
          "variable": "default_config",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\api_interface_validator.py",
          "line": 117,
          "key_count": 5
        },
        {
          "variable": "default_config",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\architecture_validation_framework.py",
          "line": 54,
          "key_count": 7
        },
        {
          "variable": "switcher_config",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\hierarchical_docs_organizer.py",
          "line": 237,
          "key_count": 4
        },
        {
          "variable": "platform_config",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\hierarchical_docs_organizer.py",
          "line": 246,
          "key_count": 7
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\hierarchical_docs_organizer.py",
          "line": 608,
          "key_count": 3
        },
        {
          "variable": "wizard_config",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\interactive_docs_system.py",
          "line": 158,
          "key_count": 3
        },
        {
          "variable": "step_config",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\interactive_docs_system.py",
          "line": 165,
          "key_count": 6
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\interactive_docs_system.py",
          "line": 716,
          "key_count": 9
        },
        {
          "variable": "default_config",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\performance_quality_validator.py",
          "line": 70,
          "key_count": 5
        },
        {
          "variable": "service_config",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\production_ready_docs.py",
          "line": 298,
          "key_count": 8
        },
        {
          "variable": "cloud_run_config",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\production_ready_docs.py",
          "line": 511,
          "key_count": 4
        },
        {
          "variable": "service_config",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\service_oriented_arch_docs.py",
          "line": 257,
          "key_count": 3
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\service_oriented_arch_docs.py",
          "line": 392,
          "key_count": 4
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\swarms_auto_generation_adapter.py",
          "line": 237,
          "key_count": 4
        },
        {
          "variable": "system_config",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\swarms_auto_generation_adapter.py",
          "line": 306,
          "key_count": 8
        },
        {
          "variable": "default_config",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\system_integration_validator.py",
          "line": 70,
          "key_count": 5
        },
        {
          "variable": "config_components",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\system_integration_validator.py",
          "line": 244,
          "key_count": 0
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\tracking_integration_docs.py",
          "line": 506,
          "key_count": 3
        },
        {
          "variable": "path_config",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\tutorial_grid_system.py",
          "line": 612,
          "key_count": 5
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\tutorial_grid_system.py",
          "line": 691,
          "key_count": 3
        },
        {
          "variable": "interactive_config",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\tutorial_system.py",
          "line": 241,
          "key_count": 8
        },
        {
          "variable": "step_config",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\tutorial_system.py",
          "line": 253,
          "key_count": 6
        },
        {
          "variable": "example_config",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\tutorial_system.py",
          "line": 266,
          "key_count": 5
        },
        {
          "variable": "monitoring_config",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\living_documentation_engine.py",
          "line": 204,
          "key_count": 4
        },
        {
          "variable": "maintenance_config",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\living_documentation_engine.py",
          "line": 304,
          "key_count": 6
        },
        {
          "variable": "quality_config",
          "file": "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\living_documentation_engine.py",
          "line": 327,
          "key_count": 5
        },
        {
          "variable": "pool_config",
          "file": "TestMaster\\core\\domains\\intelligence\\integration\\components\\endpoint_manager.py",
          "line": 341,
          "key_count": 3
        },
        {
          "variable": "limiter_config",
          "file": "TestMaster\\core\\domains\\intelligence\\integration\\components\\endpoint_manager.py",
          "line": 362,
          "key_count": 3
        },
        {
          "variable": "cb_config",
          "file": "TestMaster\\core\\domains\\intelligence\\integration\\components\\endpoint_manager.py",
          "line": 376,
          "key_count": 7
        },
        {
          "variable": "processor_config",
          "file": "TestMaster\\core\\domains\\intelligence\\integration\\components\\event_processor.py",
          "line": 137,
          "key_count": 4
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\domains\\intelligence\\ml\\pattern_detector.py",
          "line": 185,
          "key_count": 0
        },
        {
          "variable": "config_status",
          "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\telemetry_export_manager.py",
          "line": 572,
          "key_count": 0
        },
        {
          "variable": "old_config",
          "file": "TestMaster\\core\\domains\\intelligence\\ml\\enterprise\\ml_auto_scaling.py",
          "line": 556,
          "key_count": 3
        },
        {
          "variable": "new_config",
          "file": "TestMaster\\core\\domains\\intelligence\\ml\\enterprise\\ml_auto_scaling.py",
          "line": 565,
          "key_count": 3
        },
        {
          "variable": "degradation_config",
          "file": "TestMaster\\core\\domains\\intelligence\\reliability\\enterprise_error_recovery.py",
          "line": 659,
          "key_count": 2
        },
        {
          "variable": "config_data",
          "file": "TestMaster\\core\\domains\\intelligence\\testing\\enterprise\\quality_gate_automation.py",
          "line": 702,
          "key_count": 4
        },
        {
          "variable": "safe_config",
          "file": "TestMaster\\core\\domains\\security\\configuration_security.py",
          "line": 352,
          "key_count": 0
        },
        {
          "variable": "team_config",
          "file": "TestMaster\\core\\domains\\security\\multi_agent_access_control.py",
          "line": 156,
          "key_count": 8
        },
        {
          "variable": "vector_config",
          "file": "TestMaster\\core\\domains\\testing\\graph_index_testing.py",
          "line": 150,
          "key_count": 2
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\domains\\testing\\langgraph_supervisor_testing.py",
          "line": 498,
          "key_count": 1
        },
        {
          "variable": "configs",
          "file": "TestMaster\\core\\domains\\testing\\multi_modal_test_engine.py",
          "line": 461,
          "key_count": 0
        },
        {
          "variable": "params",
          "file": "TestMaster\\core\\domains\\testing\\multi_modal_test_engine.py",
          "line": 721,
          "key_count": 0
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\domains\\testing\\test_integration_hub.py",
          "line": 546,
          "key_count": 2
        },
        {
          "variable": "our_config",
          "file": "TestMaster\\core\\domains\\testing\\test_zero_setup_domination.py",
          "line": 216,
          "key_count": 5
        },
        {
          "variable": "competitor_configs",
          "file": "TestMaster\\core\\domains\\testing\\test_zero_setup_domination.py",
          "line": 224,
          "key_count": 2
        },
        {
          "variable": "merged_config",
          "file": "TestMaster\\core\\foundation\\configuration\\base\\config_base.py",
          "line": 174,
          "key_count": 2
        },
        {
          "variable": "config_dict",
          "file": "TestMaster\\core\\foundation\\configuration\\base\\config_base.py",
          "line": 185,
          "key_count": 1
        },
        {
          "variable": "query_params",
          "file": "TestMaster\\core\\integration\\foundations\\abstractions\\service_abstractions.py",
          "line": 167,
          "key_count": 1
        },
        {
          "variable": "analytics_config",
          "file": "TestMaster\\core\\intelligence\\__init__.py",
          "line": 396,
          "key_count": 3
        },
        {
          "variable": "testing_config",
          "file": "TestMaster\\core\\intelligence\\__init__.py",
          "line": 412,
          "key_count": 2
        },
        {
          "variable": "integration_config",
          "file": "TestMaster\\core\\intelligence\\__init__.py",
          "line": 427,
          "key_count": 2
        },
        {
          "variable": "params",
          "file": "TestMaster\\core\\intelligence\\analysis\\ml_analyzer.py",
          "line": 682,
          "key_count": 0
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\intelligence\\analysis\\ml_analyzer.py",
          "line": 689,
          "key_count": 2
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\intelligence\\api\\orchestration_api.py",
          "line": 49,
          "key_count": 4
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\intelligence\\api\\orchestration_api.py",
          "line": 63,
          "key_count": 3
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\intelligence\\api\\performance_api.py",
          "line": 46,
          "key_count": 4
        },
        {
          "variable": "config_data",
          "file": "TestMaster\\core\\intelligence\\api\\performance_api.py",
          "line": 523,
          "key_count": 4
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\intelligence\\api\\qa_api.py",
          "line": 43,
          "key_count": 3
        },
        {
          "variable": "config_data",
          "file": "TestMaster\\core\\intelligence\\api\\qa_api.py",
          "line": 736,
          "key_count": 5
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\intelligence\\api\\ultimate_nexus_api.py",
          "line": 46,
          "key_count": 5
        },
        {
          "variable": "DEFAULT_CONFIG",
          "file": "TestMaster\\core\\intelligence\\api\\__init__.py",
          "line": 205,
          "key_count": 6
        },
        {
          "variable": "queue_config",
          "file": "TestMaster\\core\\intelligence\\communication\\unified_communication_service.py",
          "line": 615,
          "key_count": 3
        },
        {
          "variable": "stream_config",
          "file": "TestMaster\\core\\intelligence\\communication\\unified_communication_service.py",
          "line": 632,
          "key_count": 3
        },
        {
          "variable": "config_dict",
          "file": "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
          "line": 728,
          "key_count": 8
        },
        {
          "variable": "default_config",
          "file": "TestMaster\\core\\intelligence\\documentation\\api_interface_validator.py",
          "line": 117,
          "key_count": 5
        },
        {
          "variable": "default_config",
          "file": "TestMaster\\core\\intelligence\\documentation\\architecture_validation_framework.py",
          "line": 54,
          "key_count": 7
        },
        {
          "variable": "default_config",
          "file": "TestMaster\\core\\intelligence\\documentation\\cross_system_dependency_analyzer.py",
          "line": 81,
          "key_count": 6
        },
        {
          "variable": "switcher_config",
          "file": "TestMaster\\core\\intelligence\\documentation\\hierarchical_docs_organizer.py",
          "line": 237,
          "key_count": 4
        },
        {
          "variable": "platform_config",
          "file": "TestMaster\\core\\intelligence\\documentation\\hierarchical_docs_organizer.py",
          "line": 246,
          "key_count": 7
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\intelligence\\documentation\\hierarchical_docs_organizer.py",
          "line": 608,
          "key_count": 3
        },
        {
          "variable": "wizard_config",
          "file": "TestMaster\\core\\intelligence\\documentation\\interactive_docs_system.py",
          "line": 158,
          "key_count": 3
        },
        {
          "variable": "step_config",
          "file": "TestMaster\\core\\intelligence\\documentation\\interactive_docs_system.py",
          "line": 165,
          "key_count": 6
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\intelligence\\documentation\\interactive_docs_system.py",
          "line": 716,
          "key_count": 9
        },
        {
          "variable": "default_config",
          "file": "TestMaster\\core\\intelligence\\documentation\\performance_quality_validator.py",
          "line": 70,
          "key_count": 5
        },
        {
          "variable": "service_config",
          "file": "TestMaster\\core\\intelligence\\documentation\\production_ready_docs.py",
          "line": 298,
          "key_count": 8
        },
        {
          "variable": "cloud_run_config",
          "file": "TestMaster\\core\\intelligence\\documentation\\production_ready_docs.py",
          "line": 511,
          "key_count": 4
        },
        {
          "variable": "service_config",
          "file": "TestMaster\\core\\intelligence\\documentation\\service_oriented_arch_docs.py",
          "line": 257,
          "key_count": 3
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\intelligence\\documentation\\service_oriented_arch_docs.py",
          "line": 392,
          "key_count": 4
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\intelligence\\documentation\\swarms_auto_generation_adapter.py",
          "line": 237,
          "key_count": 4
        },
        {
          "variable": "system_config",
          "file": "TestMaster\\core\\intelligence\\documentation\\swarms_auto_generation_adapter.py",
          "line": 306,
          "key_count": 8
        },
        {
          "variable": "default_config",
          "file": "TestMaster\\core\\intelligence\\documentation\\system_integration_validator.py",
          "line": 70,
          "key_count": 5
        },
        {
          "variable": "config_components",
          "file": "TestMaster\\core\\intelligence\\documentation\\system_integration_validator.py",
          "line": 244,
          "key_count": 0
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\intelligence\\documentation\\tracking_integration_docs.py",
          "line": 506,
          "key_count": 3
        },
        {
          "variable": "path_config",
          "file": "TestMaster\\core\\intelligence\\documentation\\tutorial_grid_system.py",
          "line": 612,
          "key_count": 5
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\intelligence\\documentation\\tutorial_grid_system.py",
          "line": 691,
          "key_count": 3
        },
        {
          "variable": "interactive_config",
          "file": "TestMaster\\core\\intelligence\\documentation\\tutorial_system.py",
          "line": 241,
          "key_count": 8
        },
        {
          "variable": "step_config",
          "file": "TestMaster\\core\\intelligence\\documentation\\tutorial_system.py",
          "line": 253,
          "key_count": 6
        },
        {
          "variable": "example_config",
          "file": "TestMaster\\core\\intelligence\\documentation\\tutorial_system.py",
          "line": 266,
          "key_count": 5
        },
        {
          "variable": "monitoring_config",
          "file": "TestMaster\\core\\intelligence\\documentation\\revolutionary\\living_documentation_engine.py",
          "line": 204,
          "key_count": 4
        },
        {
          "variable": "maintenance_config",
          "file": "TestMaster\\core\\intelligence\\documentation\\revolutionary\\living_documentation_engine.py",
          "line": 304,
          "key_count": 6
        },
        {
          "variable": "quality_config",
          "file": "TestMaster\\core\\intelligence\\documentation\\revolutionary\\living_documentation_engine.py",
          "line": 327,
          "key_count": 5
        },
        {
          "variable": "pool_config",
          "file": "TestMaster\\core\\intelligence\\integration\\components\\endpoint_manager.py",
          "line": 341,
          "key_count": 3
        },
        {
          "variable": "limiter_config",
          "file": "TestMaster\\core\\intelligence\\integration\\components\\endpoint_manager.py",
          "line": 362,
          "key_count": 3
        },
        {
          "variable": "cb_config",
          "file": "TestMaster\\core\\intelligence\\integration\\components\\endpoint_manager.py",
          "line": 376,
          "key_count": 7
        },
        {
          "variable": "processor_config",
          "file": "TestMaster\\core\\intelligence\\integration\\components\\event_processor.py",
          "line": 137,
          "key_count": 4
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\intelligence\\ml\\pattern_detector.py",
          "line": 185,
          "key_count": 0
        },
        {
          "variable": "config_status",
          "file": "TestMaster\\core\\intelligence\\ml\\advanced\\telemetry_export_manager.py",
          "line": 572,
          "key_count": 0
        },
        {
          "variable": "old_config",
          "file": "TestMaster\\core\\intelligence\\ml\\enterprise\\ml_auto_scaling.py",
          "line": 556,
          "key_count": 3
        },
        {
          "variable": "new_config",
          "file": "TestMaster\\core\\intelligence\\ml\\enterprise\\ml_auto_scaling.py",
          "line": 565,
          "key_count": 3
        },
        {
          "variable": "degradation_config",
          "file": "TestMaster\\core\\intelligence\\reliability\\enterprise_error_recovery.py",
          "line": 659,
          "key_count": 2
        },
        {
          "variable": "config_data",
          "file": "TestMaster\\core\\intelligence\\testing\\enterprise\\quality_gate_automation.py",
          "line": 702,
          "key_count": 4
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\orchestration\\configuration\\orchestration_config.py",
          "line": 126,
          "key_count": 8
        },
        {
          "variable": "config_data",
          "file": "TestMaster\\core\\reliability\\emergency_backup_recovery.py",
          "line": 627,
          "key_count": 4
        },
        {
          "variable": "safe_config",
          "file": "TestMaster\\core\\security\\configuration_security.py",
          "line": 352,
          "key_count": 0
        },
        {
          "variable": "team_config",
          "file": "TestMaster\\core\\security\\multi_agent_access_control.py",
          "line": 156,
          "key_count": 8
        },
        {
          "variable": "vector_config",
          "file": "TestMaster\\core\\testing\\graph_index_testing.py",
          "line": 150,
          "key_count": 2
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\testing\\langgraph_supervisor_testing.py",
          "line": 498,
          "key_count": 1
        },
        {
          "variable": "configs",
          "file": "TestMaster\\core\\testing\\multi_modal_test_engine.py",
          "line": 461,
          "key_count": 0
        },
        {
          "variable": "params",
          "file": "TestMaster\\core\\testing\\multi_modal_test_engine.py",
          "line": 721,
          "key_count": 0
        },
        {
          "variable": "config",
          "file": "TestMaster\\core\\testing\\test_integration_hub.py",
          "line": 546,
          "key_count": 2
        },
        {
          "variable": "our_config",
          "file": "TestMaster\\core\\testing\\test_zero_setup_domination.py",
          "line": 216,
          "key_count": 5
        },
        {
          "variable": "competitor_configs",
          "file": "TestMaster\\core\\testing\\test_zero_setup_domination.py",
          "line": 224,
          "key_count": 2
        },
        {
          "variable": "crew_config",
          "file": "TestMaster\\dashboard\\test_multi_agent_integration.py",
          "line": 162,
          "key_count": 5
        },
        {
          "variable": "task_config",
          "file": "TestMaster\\dashboard\\test_multi_agent_integration.py",
          "line": 222,
          "key_count": 4
        },
        {
          "variable": "swarm_config",
          "file": "TestMaster\\dashboard\\test_multi_agent_integration.py",
          "line": 283,
          "key_count": 7
        },
        {
          "variable": "swarm_config",
          "file": "TestMaster\\dashboard\\test_multi_agent_integration.py",
          "line": 352,
          "key_count": 6
        },
        {
          "variable": "task_config",
          "file": "TestMaster\\dashboard\\test_multi_agent_integration.py",
          "line": 412,
          "key_count": 6
        },
        {
          "variable": "task_config",
          "file": "TestMaster\\dashboard\\test_multi_agent_integration.py",
          "line": 715,
          "key_count": 3
        },
        {
          "variable": "configs",
          "file": "TestMaster\\deployment\\enterprise_deployment.py",
          "line": 130,
          "key_count": 5
        },
        {
          "variable": "degradation_config",
          "file": "TestMaster\\integration\\comprehensive_error_recovery.py",
          "line": 846,
          "key_count": 2
        },
        {
          "variable": "system_configs",
          "file": "TestMaster\\integration\\cross_system_apis.py",
          "line": 430,
          "key_count": 4
        },
        {
          "variable": "default_configs",
          "file": "TestMaster\\integration\\multi_environment_support.py",
          "line": 113,
          "key_count": 5
        },
        {
          "variable": "config",
          "file": "TestMaster\\testmaster\\agent_qa\\__init__.py",
          "line": 82,
          "key_count": 4
        },
        {
          "variable": "config",
          "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\crypto_analysis.py",
          "line": 696,
          "key_count": 1
        },
        {
          "variable": "config",
          "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\crypto_analysis.py",
          "line": 699,
          "key_count": 3
        },
        {
          "variable": "config",
          "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\crypto_analysis.py",
          "line": 706,
          "key_count": 3
        },
        {
          "variable": "pool_config",
          "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\database_analysis.py",
          "line": 532,
          "key_count": 0
        },
        {
          "variable": "config",
          "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\error_handling_analysis.py",
          "line": 810,
          "key_count": 0
        },
        {
          "variable": "default_configs",
          "file": "TestMaster\\testmaster\\async_processing\\thread_pool_manager.py",
          "line": 127,
          "key_count": 4
        },
        {
          "variable": "flat_config",
          "file": "TestMaster\\testmaster\\core\\config.py",
          "line": 405,
          "key_count": 0
        },
        {
          "variable": "config_dict",
          "file": "TestMaster\\testmaster\\core\\config.py",
          "line": 544,
          "key_count": 0
        },
        {
          "variable": "config_data",
          "file": "TestMaster\\testmaster\\core\\layer_manager.py",
          "line": 248,
          "key_count": 3
        },
        {
          "variable": "config_dict",
          "file": "TestMaster\\testmaster\\core\\layer_manager.py",
          "line": 554,
          "key_count": 1
        },
        {
          "variable": "config_data",
          "file": "TestMaster\\testmaster\\core\\layer_manager.py",
          "line": 635,
          "key_count": 4
        },
        {
          "variable": "config_patterns",
          "file": "TestMaster\\testmaster\\core\\language_detection\\universal_detector.py",
          "line": 453,
          "key_count": 9
        },
        {
          "variable": "config",
          "file": "TestMaster\\testmaster\\flow_optimizer\\__init__.py",
          "line": 84,
          "key_count": 4
        },
        {
          "variable": "common_params",
          "file": "TestMaster\\testmaster\\intelligence\\bridges\\sop_workflow_bridge.py",
          "line": 285,
          "key_count": 0
        },
        {
          "variable": "merged_params",
          "file": "TestMaster\\testmaster\\intelligence\\bridges\\sop_workflow_bridge.py",
          "line": 380,
          "key_count": 2
        },
        {
          "variable": "config",
          "file": "TestMaster\\testmaster\\intelligence\\documentation\\integrations\\ci_cd_integration.py",
          "line": 79,
          "key_count": 3
        },
        {
          "variable": "config",
          "file": "TestMaster\\testmaster\\intelligence\\documentation\\integrations\\ci_cd_integration.py",
          "line": 140,
          "key_count": 5
        },
        {
          "variable": "config",
          "file": "TestMaster\\testmaster\\intelligence\\documentation\\integrations\\ci_cd_integration.py",
          "line": 245,
          "key_count": 4
        },
        {
          "variable": "config",
          "file": "TestMaster\\testmaster\\intelligence\\documentation\\integrations\\ci_cd_integration.py",
          "line": 276,
          "key_count": 3
        },
        {
          "variable": "docstring_config",
          "file": "TestMaster\\testmaster\\intelligence\\integration\\agents\\documentation_agent.py",
          "line": 382,
          "key_count": 5
        },
        {
          "variable": "readme_config",
          "file": "TestMaster\\testmaster\\intelligence\\integration\\agents\\documentation_agent.py",
          "line": 399,
          "key_count": 6
        },
        {
          "variable": "api_config",
          "file": "TestMaster\\testmaster\\intelligence\\integration\\agents\\documentation_agent.py",
          "line": 417,
          "key_count": 5
        },
        {
          "variable": "arch_config",
          "file": "TestMaster\\testmaster\\intelligence\\integration\\agents\\documentation_agent.py",
          "line": 434,
          "key_count": 5
        },
        {
          "variable": "tutorial_config",
          "file": "TestMaster\\testmaster\\intelligence\\integration\\agents\\documentation_agent.py",
          "line": 451,
          "key_count": 4
        },
        {
          "variable": "params",
          "file": "TestMaster\\testmaster\\intelligence\\integration\\coordination\\analysis_coordinator.py",
          "line": 718,
          "key_count": 2
        },
        {
          "variable": "shared_config",
          "file": "TestMaster\\tests\\test_phase2_integration_validation.py",
          "line": 609,
          "key_count": 3
        },
        {
          "variable": "base_config",
          "file": "TestMaster\\ui\\unified_dashboard.py",
          "line": 311,
          "key_count": 3
        }
      ],
      "config_todos": [
        {
          "file": "TestMaster\\configuration_settings_analyzer.py",
          "line": 343,
          "content": "# Check for TODO/FIXME in config"
        },
        {
          "file": "TestMaster\\configuration_settings_analyzer.py",
          "line": 344,
          "content": "if re.search(r'(TODO|FIXME|HACK).*config', line_stripped, re.IGNORECASE):"
        }
      ]
    },
    "environment_variables": {
      "GOOGLE_API_KEY": [
        "TestMaster\\archive\\original_backup\\accelerated_converter.py",
        "TestMaster\\scripts\\achieve_100_percent.py",
        "TestMaster\\scripts\\test_single_generation.py",
        "TestMaster\\archive\\legacy_scripts\\test_single_api_call.py",
        "TestMaster\\archive\\legacy_scripts\\self_healing_converter.py",
        "TestMaster\\scripts\\test_gemini_correct.py",
        "TestMaster\\archive\\original_backup\\scripts\\test_gemini_correct.py",
        "TestMaster\\archive\\legacy_scripts\\parallel_coverage_converter.py",
        "TestMaster\\archive\\legacy_scripts\\parallel_converter.py",
        "TestMaster\\archive\\original_backup\\scripts\\working_test_generator.py",
        "TestMaster\\week_5_8_batch_converter.py",
        "TestMaster\\archive\\original_backup\\scripts\\parallel_converter_working.py",
        "TestMaster\\archive\\legacy_scripts\\working_test_generator.py",
        "TestMaster\\archive\\original_backup\\scripts\\self_healing_converter.py",
        "TestMaster\\archive\\original_backup\\parallel_converter_fixed.py",
        "TestMaster\\archive\\legacy_scripts\\week_7_8_converter.py",
        "TestMaster\\archive\\legacy_scripts\\parallel_converter_fixed.py",
        "TestMaster\\archive\\legacy_scripts\\independent_test_verifier.py",
        "TestMaster\\scripts\\diagnose_final_five.py",
        "TestMaster\\archive\\original_backup\\scripts\\parallel_coverage_converter_fixed.py",
        "TestMaster\\archive\\original_backup\\scripts\\test_single_api_call.py",
        "TestMaster\\archive\\state_cache_consolidation_20250821_084236\\parallel_coverage_converter.py",
        "TestMaster\\enhanced_self_healing_verifier.py",
        "TestMaster\\scripts\\working_test_generator.py",
        "TestMaster\\archive\\legacy_scripts\\week_5_8_batch_converter.py",
        "TestMaster\\archive\\legacy_scripts\\achieve_100_percent_coverage.py",
        "TestMaster\\enhanced_context_aware_test_generator.py",
        "TestMaster\\archive\\original_backup\\scripts\\test_updated_prompt.py",
        "TestMaster\\scripts\\gemini_powered_test_generator.py",
        "TestMaster\\archive\\original_backup\\enhanced_context_aware_test_generator.py",
        "TestMaster\\archive\\legacy_scripts\\parallel_converter_working.py",
        "TestMaster\\archive\\original_backup\\scripts\\gemini_powered_test_generator.py",
        "TestMaster\\scripts\\self_healing_converter.py",
        "TestMaster\\archive\\original_backup\\week_5_8_batch_converter.py",
        "TestMaster\\archive\\legacy_scripts\\test_gemini_config.py",
        "TestMaster\\archive\\original_backup\\scripts\\parallel_coverage_converter.py",
        "TestMaster\\scripts\\achieve_100_percent_coverage.py",
        "TestMaster\\archive\\legacy_scripts\\gemini_powered_test_generator.py",
        "TestMaster\\archive\\legacy_scripts\\turbo_converter.py",
        "TestMaster\\core\\testing\\supercharged_test_generator.py",
        "TestMaster\\archive\\original_backup\\scripts\\test_gemini_api.py",
        "TestMaster\\turbo_converter.py",
        "TestMaster\\scripts\\generate_coverage_sequential.py",
        "TestMaster\\archive\\legacy_scripts\\generate_coverage_sequential.py",
        "TestMaster\\archive\\original_backup\\scripts\\diagnose_final_five.py",
        "TestMaster\\accelerated_converter.py",
        "TestMaster\\archive\\legacy_scripts\\test_updated_prompt.py",
        "TestMaster\\archive\\original_backup\\week_7_8_converter.py",
        "TestMaster\\core\\domains\\testing\\supercharged_test_generator.py",
        "TestMaster\\archive\\legacy_scripts\\test_single_generation.py",
        "TestMaster\\archive\\original_backup\\turbo_converter.py",
        "TestMaster\\archive\\original_backup\\scripts\\intelligent_converter.py",
        "TestMaster\\independent_test_verifier.py",
        "TestMaster\\archive\\original_backup\\scripts\\generate_coverage_sequential.py",
        "TestMaster\\archive\\legacy_scripts\\accelerated_converter.py",
        "TestMaster\\archive\\legacy_scripts\\test_gemini_correct.py",
        "TestMaster\\archive\\original_backup\\scripts\\achieve_100_percent_coverage.py",
        "TestMaster\\scripts\\final_five_converter.py",
        "TestMaster\\scripts\\test_updated_prompt.py",
        "TestMaster\\archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
        "TestMaster\\archive\\legacy_scripts\\simple_test_generator.py",
        "TestMaster\\archive\\original_backup\\scripts\\simple_test_generator.py",
        "TestMaster\\archive\\legacy_scripts\\intelligent_converter.py",
        "TestMaster\\archive\\original_backup\\scripts\\test_single_generation.py",
        "TestMaster\\scripts\\test_single_api_call.py",
        "TestMaster\\archive\\legacy_scripts\\enhanced_self_healing_verifier.py",
        "TestMaster\\archive\\legacy_scripts\\achieve_100_percent.py",
        "TestMaster\\parallel_converter.py",
        "TestMaster\\scripts\\intelligent_converter.py",
        "TestMaster\\scripts\\test_gemini_config.py",
        "TestMaster\\week_7_8_converter.py",
        "TestMaster\\archive\\original_backup\\independent_test_verifier.py",
        "TestMaster\\archive\\legacy_scripts\\diagnose_final_five.py",
        "TestMaster\\archive\\original_backup\\enhanced_self_healing_verifier.py",
        "TestMaster\\parallel_converter_fixed.py",
        "TestMaster\\scripts\\simple_test_generator.py",
        "TestMaster\\archive\\original_backup\\scripts\\test_gemini_config.py",
        "TestMaster\\archive\\original_backup\\scripts\\final_five_converter.py",
        "TestMaster\\archive\\legacy_scripts\\final_five_converter.py",
        "TestMaster\\archive\\original_backup\\scripts\\achieve_100_percent.py",
        "TestMaster\\archive\\original_backup\\parallel_converter.py",
        "TestMaster\\scripts\\test_gemini_api.py",
        "TestMaster\\archive\\legacy_scripts\\test_gemini_api.py"
      ],
      "KEY": [
        "TestMaster\\core\\domains\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
        "TestMaster\\core\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
        "TestMaster\\dashboard\\dashboard_core\\analytics_performance_booster.py",
        "TestMaster\\archive\\oversized_modules_20250821_042018\\coordination\\agent_coordination_protocols.py",
        "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
        "TestMaster\\dashboard\\api\\health.py",
        "TestMaster\\analysis\\comprehensive_analysis\\domain_modeling\\domain_model_analyzer.py"
      ],
      "SECRET": [
        "TestMaster\\core\\intelligence\\testing\\security\\api_security_tester.py",
        "TestMaster\\core\\domains\\intelligence\\testing\\security\\api_security_tester.py"
      ],
      "PASSWORD": [
        "TestMaster\\core\\security\\enterprise_authentication.py",
        "TestMaster\\core\\domains\\security\\enterprise_authentication.py"
      ],
      "TESTMASTER_PROFILE": [
        "TestMaster\\testmaster\\core\\config.py"
      ]
    },
    "config_files": [
      {
        "file": "TestMaster\\accelerated_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\architecture_centralization_analysis.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\auto_readme_updater.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\comprehensive_classical_analysis_methods.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\comprehensive_codebase_analysis.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\configuration_settings_analyzer.py",
        "type": "django_settings",
        "patterns": [
          "database_url",
          "secret_key",
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\contribution_analysis_detailed.py",
        "type": "fastapi_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\convert_batch_small.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\convert_with_genai_sdk.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\convert_with_generativeai.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\documentation_cli.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\duplicate_code_detector.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\enable_deep_integration.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\enhanced_context_aware_test_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\enhanced_incremental_ast_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\enhanced_intelligent_test_builder.py",
        "type": "environment_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\enhanced_security_dashboard_api.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\enhanced_self_healing_verifier.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\enhance_analytics.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\enhance_auto_generated_tests.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\enhance_missing_robust_systems.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\final_archive_sweep.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\fix_all_integration_systems.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\fix_enhanced_test_imports.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\fix_tests_for_real_modules.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\independent_test_verifier.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\intelligent_test_builder.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\intelligent_test_builder_v2.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\layer3_integration_example.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\llm_analysis_monitor.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "getenv:GEMINI_API_KEY",
          "getenv:GOOGLE_API_KEY",
          "getenv:GEMINI_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\modularize_api_templates.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\parallel_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\parallel_converter_fixed.py",
        "type": "class_based_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\pattern_analysis_detailed.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\performance_profiler.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\replace_stubs_with_archive_implementations.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\restored_asyncio_4.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\restored_asyncio_5.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\restored_asyncio_6.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\restored_json_4.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\restored_json_5.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\restored_json_6.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\restored_logging_4.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\restored_logging_5.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\restored_logging_6.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\restored_os_6.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\restored_random_6.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\restored_sys_6.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\restored_threading_5.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\restored_threading_6.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\restored_time_4.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\restored_time_5.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\restored_time_6.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\restored_uuid_4.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\restored_uuid_5.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\restored_uuid_6.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\restore_missing_methods.py",
        "type": "environment_config",
        "patterns": [
          "database_url",
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\risk_based_test_targeter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:PASSWORD",
          "getenv:KEY",
          "getenv:SECRET",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\simple_web_monitor.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\specialized_test_generators.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster_orchestrator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\test_agent_qa_integration.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\test_agent_qa_system.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\test_before_refactor.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\test_complexity_prioritizer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\test_config_intelligence.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\test_dependency_orderer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\test_enhanced_core_integration.py",
        "type": "environment_config",
        "patterns": [
          "getenv:KEY"
        ]
      },
      {
        "file": "TestMaster\\test_enhanced_server.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\test_enhancements.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\test_exhaustive_features.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\test_flow_optimizer_system.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\test_integration_systems.py",
        "type": "environment_config",
        "patterns": [
          "database_url",
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\test_performance_dashboard_integration.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\test_phase2_exhaustive_validation.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\test_phase2_integration.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\test_reporting_system.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\test_tot_integration.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\test_unified_integration.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\test_universal_language_detector.py",
        "type": "python_config",
        "patterns": [
          "secret_key",
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\turbo_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\unified_orchestration_example.py",
        "type": "environment_config",
        "patterns": [
          "getenv:KEY",
          "secret_key",
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\utility_analysis_report.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\utility_function_extractor.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\validate_api_endpoints.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\validate_phase_1_7.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\web_monitor.py",
        "type": "python_config",
        "patterns": [
          "secret_key",
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\week_5_8_batch_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\week_7_8_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\write_real_tests.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\agents\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\agents\\roles\\test_engineer.py",
        "type": "environment_config",
        "patterns": [
          "env_var:TESTING"
        ]
      },
      {
        "file": "TestMaster\\agents\\team\\testing_team.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\agents\\team\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\domain_modeling\\domain_model_analyzer.py",
        "type": "environment_config",
        "patterns": [
          "getenv:KEY"
        ]
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\ml_analysis\\ml_data_analyzer.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\analysis\\comprehensive_analysis\\pattern_mining\\cross_repo_pattern_miner.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\analytics\\failure_analyzer.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\api\\orchestration_api.py",
        "type": "fastapi_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\api\\phase2_api.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\advanced_testing_intelligence.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\api_templates_original_2813_lines.py",
        "type": "environment_config",
        "patterns": [
          "getenv:KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\architectural_decision_engine_original_2388_lines_20250821_130612.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\architectural_evolution_predictor_original_2410_lines_20250821_113953.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\coverage_analyzer_original_2697_lines.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\from_subarchive_ml_code_analysis_original.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\from_subarchive_semantic_analysis_original.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\from_subarchive_technical_debt_analysis_original.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\integration_hub_original_20250820_220939.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\placeholder_replacement_20250820_011704_predictive_analytics_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\superseded_toplevel_ml_code_analysis.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\superseded_toplevel_technical_debt_analysis.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\test_misc_original_6141_lines.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\test_tot_output_original_18164_lines_20250821_040109.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\test_uncategorized_original_3557_lines_20250821_113530.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\20250818\\web_monitor.py",
        "type": "python_config",
        "patterns": [
          "secret_key",
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_aggregator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_compressor.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_connectivity_monitor.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_guarantee.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_guardian.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_booster.py",
        "type": "environment_config",
        "patterns": [
          "getenv:KEY",
          "getenv:KEY",
          "getenv:KEY"
        ]
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_performance_optimizer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_priority_queue.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_quantum_retry.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_receipt_tracker.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_redundancy.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_smart_cache.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_watchdog.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\cross_system_analytics.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\predictive_analytics_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\COMPLETE_REFACTOR_20250818_112844\\fix_enhanced_test_imports.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\COMPLETE_REFACTOR_20250818_112844\\fix_tests_for_real_modules.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
        "type": "python_config",
        "patterns": [
          "secret_key",
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\automatic_scaling_system_robust.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\comprehensive_error_recovery_robust.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\cross_system_analytics_robust.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\cross_system_apis_robust.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\intelligent_caching_layer_robust.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\predictive_analytics_engine_robust.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\realtime_performance_monitoring_robust.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\workflow_execution_engine_robust.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\accelerated_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\achieve_100_percent.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\achieve_100_percent_coverage.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\ai_test_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:ANTHROPIC_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\batch_gemini_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\convert_batch_small.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\convert_with_genai_sdk.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\convert_with_generativeai.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\data_flow_tests.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\diagnose_final_five.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\enhanced_context_aware_test_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\enhanced_self_healing_verifier.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\enhance_auto_generated_tests.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\fast_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\final_five_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\fix_enhanced_test_imports.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\fix_tests_for_real_modules.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\gemini_powered_test_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\gemini_test_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\generate_coverage_sequential.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\independent_test_verifier.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\integration_test_matrix.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\intelligent_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\intelligent_test_builder.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\intelligent_test_builder_v2.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\parallel_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\parallel_converter_fixed.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\parallel_converter_working.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\parallel_coverage_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\quick_test_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\run_limited_coverage.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\self_healing_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\simple_test_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\specialized_test_generators.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\testmaster_orchestrator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\test_gemini_api.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\test_gemini_config.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\test_gemini_correct.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\test_single_api_call.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key",
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\test_single_generation.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\test_updated_prompt.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\turbo_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\week_5_8_batch_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\week_7_8_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\working_test_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\legacy_scripts\\write_real_tests.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
        "type": "environment_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\modularization_20250821\\semantic_analyzer_original.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\modularization_integration\\integration_hub_original_1876_lines.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\accelerated_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\convert_batch_small.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\convert_with_genai_sdk.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\convert_with_generativeai.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\enhanced_context_aware_test_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\enhanced_self_healing_verifier.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\enhance_auto_generated_tests.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\original_backup\\fix_enhanced_test_imports.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\original_backup\\fix_tests_for_real_modules.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\independent_test_verifier.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\intelligent_test_builder.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\intelligent_test_builder_v2.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\parallel_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\parallel_converter_fixed.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\specialized_test_generators.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\original_backup\\testmaster_orchestrator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\original_backup\\turbo_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\week_5_8_batch_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\week_7_8_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\write_real_tests.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\original_backup\\analytics\\failure_analyzer.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\achieve_100_percent.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\achieve_100_percent_coverage.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\ai_test_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:ANTHROPIC_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\batch_gemini_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\diagnose_final_five.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\fast_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\final_five_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\gemini_powered_test_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\gemini_test_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\generate_coverage_sequential.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\intelligent_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\parallel_converter_working.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\parallel_coverage_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\parallel_coverage_converter_fixed.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\quick_test_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\run_limited_coverage.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\self_healing_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\simple_test_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\test_gemini_api.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\test_gemini_config.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\test_gemini_correct.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\test_single_api_call.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key",
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\test_single_generation.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\test_updated_prompt.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\scripts\\working_test_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\original_backup\\src\\data_flow_tests.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\original_backup\\src\\integration_test_matrix.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
        "type": "environment_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\api\\enterprise_integration_layer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\coordination\\agent_coordination_protocols.py",
        "type": "environment_config",
        "patterns": [
          "getenv:KEY"
        ]
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\coordination\\resource_coordination_system.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\coordination\\unified_workflow_orchestrator.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\documentation\\revolutionary\\neo4j_dominator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\ml\\advanced\\delivery_optimizer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\ml\\advanced\\integrity_ml_guardian.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\ml\\advanced\\performance_optimizer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\ml\\advanced\\sla_ml_optimizer.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\ml\\enterprise\\ml_infrastructure_orchestrator.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\monitoring\\performance_optimization_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\validation\\system_validation_framework.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\enhanced_monitor.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\shared_state.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_analytics.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\predictive_analytics_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\realtime_performance_monitoring.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_framework.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\phase4_archive\\replaced_code\\enhanced_monitor_20250819_195132.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\phase5_archive\\replaced_code\\agent_graph_20250819_195602.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\phase5_archive\\replaced_code\\enterprise_deployment_20250819_195602.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\phase5_archive\\replaced_code\\testing_team_20250819_195602.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\phase6_archive\\replaced_code\\agent_graph_20250819_200928.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\phase6_archive\\replaced_code\\swarm_orchestration_20250819_200929.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\phase7_archive\\replaced_code\\enhanced_monitor_20250819_202006.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\placeholder_backups_20250820_011745\\integration\\predictive_analytics_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\placeholder_backups_20250820_011745\\integration\\workflow_framework.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\placeholder_backups_20250820_011817\\integration\\predictive_analytics_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\placeholder_backups_20250820_011817\\integration\\workflow_framework.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\archive\\state_cache_consolidation_20250821_084236\\parallel_coverage_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\cache\\intelligent_cache.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\config\\config_migration.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\config\\enhanced_unified_config.py",
        "type": "class_based_config",
        "patterns": [
          "env_var:TESTMASTER_ENV"
        ]
      },
      {
        "file": "TestMaster\\config\\hierarchical_config_coordinator.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\config\\testmaster_config.py",
        "type": "class_based_config",
        "patterns": [
          "env_var:TESTMASTER_ENV",
          "getenv:GEMINI_API_KEY",
          "getenv:GOOGLE_API_KEY",
          "getenv:OPENAI_API_KEY",
          "getenv:ANTHROPIC_API_KEY",
          "getenv:TESTMASTER_ENV",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\config\\unified_config.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\config\\yaml_config_enhancer.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\config\\__init__.py",
        "type": "class_based_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\config\\modules\\api_config.py",
        "type": "class_based_config",
        "patterns": [
          "getenv:GEMINI_API_KEY",
          "getenv:GOOGLE_API_KEY",
          "getenv:OPENAI_API_KEY",
          "getenv:ANTHROPIC_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\config\\modules\\data_models.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\config\\modules\\infrastructure_config.py",
        "type": "class_based_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\config\\modules\\integration_config.py",
        "type": "class_based_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\config\\modules\\ml_config.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\config\\modules\\monitoring_config.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\config\\modules\\security_config.py",
        "type": "class_based_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\config\\modules\\testing_config.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\config\\modules\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\feature_flags.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\framework_abstraction.stub_backup.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\shared_state.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\autonomous_decision_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination_protocol_manager.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\cross_system_semantic_learner.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\cross_system_trend_analyzer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\intelligence_command_center.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\intelligent_resource_allocator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\predictive_intelligence_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ultimate_intelligence_nexus.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\__init__.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\advanced_pattern_recognizer.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\business_analyzer_modular.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\business_base.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\business_constraint_analyzer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\business_rule_extractor.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\business_workflow_analyzer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\debt_analyzer_modular.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\debt_base.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\debt_code_analyzer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\debt_quantifier.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\debt_test_analyzer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\ml_analyzer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\semantic_analyzer.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\semantic_analyzer_modular.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\semantic_base.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\semantic_intent_analyzer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\semantic_pattern_detector.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\semantic_relationship_analyzer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\technical_debt_analyzer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\debt_analyzer_modules\\debt_analyzer_core.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analytics\\adaptive_prediction_enhancer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analytics\\analytics_deduplication.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analytics\\analytics_hub.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analytics\\predictive_analytics_engine.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analytics\\__init__.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\analytics\\advanced\\correlation_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\app.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\endpoints.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\monitoring_api.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\orchestration_api.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\performance_api.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\qa_api.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\testing_api.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\ultimate_nexus_api.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\unified_api_gateway.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\unified_intelligence_api.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\enterprise_integration_layer_modules\\enterprise_integration_layer_core.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\enterprise_integration_layer_modules\\enterprise_integration_layer_processing.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\ml_api_modules\\ml_api_core.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\ml_api_modules\\ml_api_endpoints.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\api\\ml_api_modules\\ml_api_monitoring.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\base\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\caching\\distributed_smart_cache.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\communication\\unified_communication_service.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\compatibility\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
        "type": "class_based_config",
        "patterns": [
          "getenv:TESTMASTER_ENV",
          "getenv:HOSTNAME",
          "secret_key",
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\cross_agent_bridge.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\service_discovery_registry.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\agent_coordination_protocols_modules\\agent_coordination_protocols_part1.py",
        "type": "environment_config",
        "patterns": [
          "getenv:KEY"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\resource_coordination_system_modules\\resource_coordination_system_part1.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\unified_workflow_orchestrator_modules\\unified_workflow_orchestrator_part1.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\coordination\\unified_workflow_orchestrator_modules\\unified_workflow_orchestrator_part2.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\correlation\\cross_system_analytics.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\data_pipeline\\advanced_data_pipeline.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\adaptive_template_system.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\api_interface_validator.py",
        "type": "fastapi_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\architecture_validation_framework.py",
        "type": "fastapi_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\bilingual_docs_processor.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\comprehensive_visualization_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\cookbook_organization_manager.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\design_first_docs.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\docs_api.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\docs_testing_framework.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\enterprise_api_docs.py",
        "type": "environment_config",
        "patterns": [
          "getenv:KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\faq_system.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\hierarchical_docs_organizer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\interactive_docs_system.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\json_docs_processor.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\knowledge_management_framework.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\mdx_generator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\migration_guide_generator.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\multilingual_docs.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\multimodal_recipe_engine.py",
        "type": "environment_config",
        "patterns": [
          "getenv:KEY"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\multi_agent_pattern_docs.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\performance_quality_validator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\phase_1_7_integration.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\production_ready_docs.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\recipe_based_learning.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\service_oriented_arch_docs.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\swarms_auto_generation_adapter.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\swarms_doc_intelligence_extractor.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\swarms_navigation_intelligence.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\swarms_self_healing_docs.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\system_integration_validator.py",
        "type": "fastapi_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\tracking_integration_docs.py",
        "type": "environment_config",
        "patterns": [
          "getenv:KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\tutorial_grid_system.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\tutorial_system.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\unified_doc_generator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\ux_excellence_framework.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\workflow_recipe_docs.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\yaml_config_processor.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\enterprise\\documentation_validator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\enterprise\\enterprise_doc_orchestrator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\enterprise\\workflow_automation.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\intelligence\\metrics.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\intelligence\\optimizer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\ai_documentation_synthesizer.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\interactive_chat_interface.py",
        "type": "environment_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\neo4j_dominator_modules\\neo4j_dominator_part1.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\neo4j_dominator_modules\\neo4j_dominator_part2.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\enterprise\\api_orchestrator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\enterprise\\integration_validator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\enterprise\\api\\endpoint_manager.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\enterprise\\api\\request_router.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\infrastructure\\unified_infrastructure_service.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\infrastructure\\__init__.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\integration\\base.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\integration\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\integration\\components\\cross_system_analyzer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\integration\\components\\endpoint_manager.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\integration\\components\\performance_monitor.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\knowledge_graph\\instant_graph_engine.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\knowledge_graph\\visual_relationship_mapper.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\integration_analysis.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\ml_orchestrator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\pattern_detector.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\self_optimizing_orchestrator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\adaptive_configuration_manager.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\adaptive_load_balancer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\anomaly_detection.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\batch_processor.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\distributed_ml_coordinator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\ensemble_meta_learner.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\intelligent_data_pipeline.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\intelligent_resource_scheduler.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\ml_network_optimizer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\ml_security_guardian.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\performance_execution_manager.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\performance_ml_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\predictive_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\predictive_maintenance_ai.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\smart_cache.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\telemetry_export_manager.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\telemetry_ml_collector.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\telemetry_observability_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\watchdog_ml_monitor.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\watchdog_process_manager.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\watchdog_recovery_system.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\circuit_breaker_ml_modules\\circuit_breaker_ml_core.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\delivery_optimizer_modules\\delivery_optimizer_algorithms.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\delivery_optimizer_modules\\delivery_optimizer_core.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\integrity_ml_guardian_modules\\integrity_ml_guardian_core.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\integrity_ml_guardian_modules\\integrity_ml_guardian_models.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\performance_optimizer_modules\\performance_optimizer_algorithms.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\performance_optimizer_modules\\performance_optimizer_core.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\performance_optimizer_modules\\performance_optimizer_optimization.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\sla_ml_optimizer_algorithms.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\sla_ml_optimizer_core.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\sla_ml_optimizer_optimization.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\enterprise\\ml_auto_scaling.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
        "type": "python_config",
        "patterns": [
          "secret_key",
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\ml_infrastructure_orchestrator_algorithms.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\ml_infrastructure_orchestrator_core.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\ml_infrastructure_orchestrator_models.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\advanced_monitoring_coordinator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\qa_base.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\agent_qa_modules\\agent_qa_part1.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\agent_qa_modules\\agent_qa_part2b.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\monitoring\\performance_optimization_engine_modules\\performance_optimization_engine_core.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\orchestration\\integration_hub.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\queuing\\express_priority_queue.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\reliability\\enterprise_error_recovery.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\advanced_security_intelligence.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\audit_logger.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\compliance_checker.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\security_api.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\audit\\audit_storage.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\enterprise\\compliance_automation.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\enterprise\\governance_framework.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\enterprise\\security_validator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\enterprise\\intelligence\\threat_detector.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\enterprise\\validation\\compliance_validator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\enterprise\\validation\\integration_validator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\security\\enterprise\\validation\\penetration_tester.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\streaming\\event_streaming_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\load_generator.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\security_fuzzer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\testing_api.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\test_orchestrator.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\ai_generation\\claude_test_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:ANTHROPIC_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
        "type": "class_based_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "getenv:GEMINI_API_KEY",
          "getenv:GENAI_API_KEY",
          "getenv:KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\ai_generation\\universal_ai_generator.py",
        "type": "class_based_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\automation\\continuous_testing_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\automation\\enterprise_test_orchestrator.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\components\\integration_generator.py",
        "type": "class_based_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\components\\ml_optimizer.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\enterprise\\quality_gate_automation.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\patterns\\agency_swarm_patterns.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\patterns\\agentscope_patterns.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\patterns\\crewai_patterns.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\security\\advanced_owasp_tester.py",
        "type": "python_config",
        "patterns": [
          "secret_key",
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\security\\api_security_tester.py",
        "type": "environment_config",
        "patterns": [
          "getenv:SECRET",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\security\\compliance_validator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\validation\\unified_validation_service.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\validation\\system_validation_framework_modules\\system_validation_framework_core.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\validation\\system_validation_framework_modules\\system_validation_framework_validation.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\visualization\\agent_interface_systems.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\visualization\\data_visualization_engines.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\visualization\\development_tools_ui.py",
        "type": "class_based_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\visualization\\user_experience_frameworks.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\intelligence\\visualization\\__init__.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\security\\adaptive_fallback_orchestrator.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\security\\adaptive_security_resilience.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\security\\agent_communication_security.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\security\\api_security_layer.py",
        "type": "fastapi_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\security\\authentication_system.py",
        "type": "fastapi_config",
        "patterns": [
          "getenv:JWT_SECRET_KEY",
          "getenv:APP_TOKEN",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\security\\byzantine_consensus_security.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\security\\circuit_breaker_matrix.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\security\\configuration_security.py",
        "type": "class_based_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\security\\container_security_validator.py",
        "type": "class_based_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\security\\data_integrity_guardian.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\security\\distributed_agent_registry.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\security\\distributed_communication_security.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\security\\distributed_key_management_security.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\security\\document_classification_security.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\security\\enterprise_audit_logging.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\security\\enterprise_authentication.py",
        "type": "environment_config",
        "patterns": [
          "getenv:PASSWORD",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\security\\enterprise_auth_gateway.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\security\\error_isolation_system.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\security\\exception_monitoring.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\security\\fault_tolerance_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\security\\flow_persistence_security.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\security\\graceful_degradation_manager.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\security\\health_monitoring_nexus.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\security\\identity_validation_system.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\security\\multi_agent_access_control.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\security\\multi_agent_evaluation_security.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\security\\network_security_controls.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\security\\quantum_retry_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\security\\rate_limiter.py",
        "type": "fastapi_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\security\\resilience_orchestrator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\security\\retry_mechanism_system.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\security\\secure_message_delivery.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\security\\secure_performance_optimizer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\security\\security_monitoring_system.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\security\\self_healing_coordinator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\security\\service_mesh_security.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\security\\thread_safety_manager.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\security\\threat_intelligence_system.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\security\\vulnerability_detection_framework.py",
        "type": "environment_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\security\\__init__.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\adaptive_testing_framework.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\collaborative_testing_platform.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\competitive_analysis_framework.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\enterprise_test_framework.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\graph_index_testing.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\graph_operations_testing.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\hook_testing.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\integration_test_framework.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\mcp_testing.py",
        "type": "environment_config",
        "patterns": [
          "getenv:PASSWORD"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\multimodal_validation_testing.py",
        "type": "environment_config",
        "patterns": [
          "getenv:KEY",
          "getenv:KEY",
          "getenv:OPENAI_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\multi_modal_test_engine.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\parallel_test_executor.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\performance_test_suite.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\supercharged_test_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\supercharged_test_generator.py_stub_backup_20250821_042438.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\task_guardrails_testing.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\testmaster_api_gateway.py",
        "type": "environment_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\test_integration_hub.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\test_zero_setup_domination.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\domains\\testing\\tracing_testing.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\foundation\\configuration\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\foundation\\configuration\\base\\config_base.py",
        "type": "class_based_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\foundation\\configuration\\base\\validation.py",
        "type": "class_based_config",
        "patterns": [
          "getenv:KEY",
          "getenv:KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\foundation\\configuration\\base\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\foundation\\observability\\unified_monitor_enhanced.stub_backup.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\foundation\\shared\\feature_flags.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\foundation\\shared\\shared_state.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\integration\\foundations\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\integration\\foundations\\abstractions\\adapter_abstractions.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\integration\\foundations\\abstractions\\integration_base.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\integration\\foundations\\abstractions\\service_abstractions.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\integration\\foundations\\abstractions\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\architectural_decision_engine.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\autonomous_decision_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\autonomous_governance_engine.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\autonomous_replication_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination_protocol_manager.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\cross_system_semantic_learner.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\cross_system_trend_analyzer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\intelligence_command_center.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\intelligence_integration_master.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\intelligent_resource_allocator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\predictive_intelligence_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\semantic_code_analyzer.py",
        "type": "python_config",
        "patterns": [
          "secret_key",
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\ultimate_intelligence_nexus.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\unified_architecture_intelligence.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\unified_architecture_intelligence_complete.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\unified_architecture_intelligence_part2.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\__init__.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\advanced_pattern_recognizer.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\business_analyzer_modular.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\business_base.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\business_constraint_analyzer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\business_rule_extractor.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\business_workflow_analyzer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\debt_analyzer_modular.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\debt_base.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\debt_code_analyzer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\debt_quantifier.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\debt_test_analyzer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\ml_analyzer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\semantic_analyzer.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\semantic_analyzer_modular.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\semantic_base.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\semantic_intent_analyzer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\semantic_pattern_detector.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\semantic_relationship_analyzer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\technical_debt_analyzer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\analysis\\debt_analyzer_modules\\debt_analyzer_core.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\analytics\\adaptive_prediction_enhancer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\analytics\\analytics_deduplication.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\analytics\\analytics_hub.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\analytics\\predictive_analytics_engine.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\analytics\\__init__.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\analytics\\advanced\\correlation_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\app.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\endpoints.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\monitoring_api.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\orchestration_api.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\performance_api.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\qa_api.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\testing_api.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\ultimate_nexus_api.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\unified_api_gateway.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\unified_intelligence_api.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\enterprise_integration_layer_modules\\enterprise_integration_layer_core.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\enterprise_integration_layer_modules\\enterprise_integration_layer_processing.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\ml_api_modules\\ml_api_core.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\ml_api_modules\\ml_api_endpoints.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\api\\ml_api_modules\\ml_api_monitoring.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\architectural_decision_modules\\microservice_analyzer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\archive\\architectural_evolution_predictor_original.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\base\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\caching\\distributed_smart_cache.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\communication\\unified_communication_service.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\compatibility\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
        "type": "class_based_config",
        "patterns": [
          "getenv:TESTMASTER_ENV",
          "getenv:HOSTNAME",
          "secret_key",
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\cross_agent_bridge.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\service_discovery_registry.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\agent_coordination_protocols_modules\\agent_coordination_protocols_part1.py",
        "type": "environment_config",
        "patterns": [
          "getenv:KEY"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\resource_coordination_system_modules\\resource_coordination_system_part1.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\unified_workflow_orchestrator_modules\\unified_workflow_orchestrator_part1.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\coordination\\unified_workflow_orchestrator_modules\\unified_workflow_orchestrator_part2.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\correlation\\cross_system_analytics.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\data_pipeline\\advanced_data_pipeline.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\adaptive_template_system.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\api_interface_validator.py",
        "type": "fastapi_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\architecture_validation_framework.py",
        "type": "fastapi_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\bilingual_docs_processor.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\comprehensive_visualization_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\cookbook_organization_manager.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\cross_system_dependency_analyzer.py",
        "type": "fastapi_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\design_first_docs.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\docs_api.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\docs_testing_framework.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\documentation_api_framework.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\enterprise_api_docs.py",
        "type": "environment_config",
        "patterns": [
          "getenv:KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\faq_system.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\hierarchical_docs_organizer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\interactive_docs_system.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\json_docs_processor.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\knowledge_management_framework.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\mdx_generator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\migration_guide_generator.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\multilingual_docs.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\multimodal_recipe_engine.py",
        "type": "environment_config",
        "patterns": [
          "getenv:KEY"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\multi_agent_pattern_docs.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\performance_quality_validator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\phase_1_7_integration.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\production_ready_docs.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\recipe_based_learning.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\service_oriented_arch_docs.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\swarms_auto_generation_adapter.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\swarms_doc_intelligence_extractor.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\swarms_navigation_intelligence.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\swarms_self_healing_docs.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\system_integration_validator.py",
        "type": "fastapi_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\tracking_integration_docs.py",
        "type": "environment_config",
        "patterns": [
          "getenv:KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\tutorial_grid_system.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\tutorial_system.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\unified_doc_generator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\ux_excellence_framework.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\validation_dashboard_system.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\workflow_recipe_docs.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\yaml_config_processor.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\enterprise\\documentation_validator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\enterprise\\enterprise_doc_orchestrator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\enterprise\\workflow_automation.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\intelligence\\metrics.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\intelligence\\optimizer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\revolutionary\\ai_documentation_synthesizer.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\revolutionary\\interactive_chat_interface.py",
        "type": "environment_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\revolutionary\\neo4j_dominator_modules\\neo4j_dominator_part1.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\documentation\\revolutionary\\neo4j_dominator_modules\\neo4j_dominator_part2.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\enterprise\\api_orchestrator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\enterprise\\integration_validator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\enterprise\\api\\endpoint_manager.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\enterprise\\api\\request_router.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\infrastructure\\unified_infrastructure_service.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\infrastructure\\__init__.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\integration\\base.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\integration\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\integration\\components\\cross_system_analyzer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\integration\\components\\endpoint_manager.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\integration\\components\\performance_monitor.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\knowledge_graph\\instant_graph_engine.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\knowledge_graph\\visual_relationship_mapper.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\integration_analysis.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\ml_orchestrator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\pattern_detector.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\self_optimizing_orchestrator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\adaptive_configuration_manager.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\adaptive_load_balancer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\anomaly_detection.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\batch_processor.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\distributed_ml_coordinator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\ensemble_meta_learner.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\intelligent_data_pipeline.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\intelligent_resource_scheduler.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\ml_network_optimizer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\ml_security_guardian.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\performance_execution_manager.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\performance_ml_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\predictive_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\predictive_maintenance_ai.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\smart_cache.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\telemetry_export_manager.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\telemetry_ml_collector.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\telemetry_observability_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\watchdog_ml_monitor.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\watchdog_process_manager.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\watchdog_recovery_system.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\circuit_breaker_ml_modules\\circuit_breaker_ml_core.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\delivery_optimizer_modules\\delivery_optimizer_algorithms.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\delivery_optimizer_modules\\delivery_optimizer_core.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\integrity_ml_guardian_modules\\integrity_ml_guardian_core.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\integrity_ml_guardian_modules\\integrity_ml_guardian_models.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\performance_optimizer_modules\\performance_optimizer_algorithms.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\performance_optimizer_modules\\performance_optimizer_core.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\performance_optimizer_modules\\performance_optimizer_optimization.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\sla_ml_optimizer_algorithms.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\sla_ml_optimizer_core.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\sla_ml_optimizer_modules\\sla_ml_optimizer_optimization.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\enterprise\\ml_auto_scaling.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
        "type": "python_config",
        "patterns": [
          "secret_key",
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\ml_infrastructure_orchestrator_algorithms.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\ml_infrastructure_orchestrator_core.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\ml\\enterprise\\ml_infrastructure_orchestrator_modules\\ml_infrastructure_orchestrator_models.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\advanced_monitoring_coordinator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\qa_base.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\agent_qa_modules\\agent_qa_part1.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\agent_qa_modules\\agent_qa_part2b.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\monitoring\\performance_optimization_engine_modules\\performance_optimization_engine_core.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\orchestration\\integration_hub.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\queuing\\express_priority_queue.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\reliability\\enterprise_error_recovery.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\advanced_security_intelligence.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\audit_logger.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\compliance_checker.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\security_api.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\audit\\audit_storage.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\enterprise\\compliance_automation.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\enterprise\\governance_framework.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\enterprise\\security_validator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\enterprise\\intelligence\\threat_detector.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\enterprise\\validation\\compliance_validator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\enterprise\\validation\\integration_validator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\security\\enterprise\\validation\\penetration_tester.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\streaming\\event_streaming_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\load_generator.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\security_fuzzer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\testing_api.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\test_orchestrator.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\ai_generation\\claude_test_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:ANTHROPIC_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
        "type": "class_based_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "getenv:GEMINI_API_KEY",
          "getenv:GENAI_API_KEY",
          "getenv:KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\ai_generation\\universal_ai_generator.py",
        "type": "class_based_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\automation\\continuous_testing_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\automation\\enterprise_test_orchestrator.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\components\\integration_generator.py",
        "type": "class_based_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\components\\ml_optimizer.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\enterprise\\quality_gate_automation.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\patterns\\agency_swarm_patterns.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\patterns\\agentscope_patterns.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\patterns\\crewai_patterns.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\security\\advanced_owasp_tester.py",
        "type": "python_config",
        "patterns": [
          "secret_key",
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\security\\api_security_tester.py",
        "type": "environment_config",
        "patterns": [
          "getenv:SECRET",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\testing\\security\\compliance_validator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\validation\\unified_validation_service.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\validation\\system_validation_framework_modules\\system_validation_framework_core.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\validation\\system_validation_framework_modules\\system_validation_framework_validation.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\visualization\\agent_interface_systems.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\visualization\\data_visualization_engines.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\visualization\\development_tools_ui.py",
        "type": "class_based_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\intelligence\\visualization\\user_experience_frameworks.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\intelligence\\visualization\\__init__.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\observability\\unified_monitor_enhanced.stub_backup.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\orchestration\\agent_graph.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\orchestration\\configuration\\orchestration_config.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\orchestration\\configuration\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\orchestration\\coordination\\master\\master_orchestrator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\orchestration\\foundations\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\orchestration\\foundations\\abstractions\\agent_abstractions.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\orchestration\\foundations\\abstractions\\execution_context.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\orchestration\\foundations\\abstractions\\orchestrator_base.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\orchestration\\foundations\\abstractions\\task_abstractions.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\orchestration\\foundations\\protocols\\communication_protocols.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\orchestration\\foundations\\protocols\\integration_protocols.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\orchestration\\integration\\hub\\integration_hub.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\reliability\\emergency_backup_recovery.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\security\\adaptive_fallback_orchestrator.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\security\\adaptive_security_resilience.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\security\\agent_communication_security.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\security\\api_security_layer.py",
        "type": "fastapi_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\security\\authentication_system.py",
        "type": "fastapi_config",
        "patterns": [
          "getenv:JWT_SECRET_KEY",
          "getenv:APP_TOKEN",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\security\\byzantine_consensus_security.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\security\\circuit_breaker_matrix.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\security\\configuration_security.py",
        "type": "class_based_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\security\\container_security_validator.py",
        "type": "class_based_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\security\\data_integrity_guardian.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\security\\deployment_pipeline_security.py",
        "type": "class_based_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\security\\distributed_agent_registry.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\security\\distributed_communication_security.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\security\\distributed_key_management_security.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\security\\document_classification_security.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\security\\enterprise_audit_logging.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\security\\enterprise_authentication.py",
        "type": "environment_config",
        "patterns": [
          "getenv:PASSWORD",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\security\\enterprise_auth_gateway.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\security\\error_isolation_system.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\security\\exception_monitoring.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\security\\fault_tolerance_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\security\\flow_persistence_security.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\security\\graceful_degradation_manager.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\core\\security\\health_monitoring_nexus.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\security\\identity_validation_system.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\security\\multi_agent_access_control.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\security\\multi_agent_evaluation_security.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\security\\network_security_controls.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\security\\quantum_retry_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\security\\rate_limiter.py",
        "type": "fastapi_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\security\\resilience_orchestrator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\security\\retry_mechanism_system.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\security\\secure_message_delivery.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\security\\secure_performance_optimizer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\security\\security_monitoring_system.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\security\\self_healing_coordinator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\security\\service_mesh_security.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\security\\thread_safety_manager.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\security\\threat_intelligence_system.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\security\\vulnerability_detection_framework.py",
        "type": "environment_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\security\\__init__.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\state\\enhanced_state_manager.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\testing\\adaptive_testing_framework.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\testing\\collaborative_testing_platform.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\testing\\competitive_analysis_framework.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\testing\\enterprise_test_framework.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\testing\\graph_index_testing.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\testing\\graph_operations_testing.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\testing\\hook_testing.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\testing\\integration_test_framework.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\testing\\mcp_testing.py",
        "type": "environment_config",
        "patterns": [
          "getenv:PASSWORD"
        ]
      },
      {
        "file": "TestMaster\\core\\testing\\multimodal_validation_testing.py",
        "type": "environment_config",
        "patterns": [
          "getenv:KEY",
          "getenv:KEY",
          "getenv:OPENAI_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\testing\\multi_modal_test_engine.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\testing\\parallel_test_executor.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\testing\\performance_test_suite.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\testing\\supercharged_test_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\testing\\supercharged_test_generator.py_stub_backup_20250821_042438.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\testing\\task_guardrails_testing.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\testing\\testmaster_api_gateway.py",
        "type": "environment_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\core\\testing\\test_integration_hub.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\testing\\test_zero_setup_domination.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\testing\\tracing_testing.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\core\\tools\\type_safe_tools.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\comprehensive_frontend_test.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\gunicorn_config.py",
        "type": "environment_config",
        "patterns": [
          "getenv:ENVIRONMENT"
        ]
      },
      {
        "file": "TestMaster\\dashboard\\server.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\dashboard\\test_api_endpoints.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\test_new_robustness_features.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\test_robustness_verification.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\ultimate_frontend_validator.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\dashboard\\validate_all_endpoints.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\dashboard\\wsgi.py",
        "type": "environment_config",
        "patterns": [
          "secret_key",
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\dashboard\\api\\backend_health_monitor.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\api\\comprehensive_monitoring.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\api\\crew_orchestration.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\api\\enhanced_analytics.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\dashboard\\api\\enhanced_telemetry.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\dashboard\\api\\flow_optimization.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\api\\health.py",
        "type": "environment_config",
        "patterns": [
          "getenv:KEY"
        ]
      },
      {
        "file": "TestMaster\\dashboard\\api\\intelligence.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\api\\phase2_api.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\api\\real_codebase_scanner.stub_backup.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\api\\security.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\api\\swarm_orchestration.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\api\\websocket_dashboard.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_aggregator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_circuit_breaker.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_compressor.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_connectivity_monitor.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_deduplication.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_delivery_guarantee.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_delivery_verifier.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_integrity_guardian.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_integrity_verifier.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_performance_booster.py",
        "type": "environment_config",
        "patterns": [
          "getenv:KEY",
          "getenv:KEY",
          "getenv:KEY"
        ]
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_performance_optimizer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_priority_queue.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_quantum_retry.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_rate_limiter.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_receipt_tracker.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_redundancy.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_retry_manager.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_sla_tracker.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_smart_cache.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_telemetry.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_watchdog.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\emergency_backup_recovery.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\error_handler.py",
        "type": "environment_config",
        "patterns": [
          "getenv:ENVIRONMENT",
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\dashboard\\dashboard_core\\predictive_flow_optimizer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\deployment\\enterprise_deployment.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\deployment\\swarm_orchestrator.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\integration\\automatic_scaling_system.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\integration\\comprehensive_error_recovery.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\integration\\cross_system_analytics.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\integration\\cross_system_apis.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\integration\\cross_system_communication.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\integration\\intelligent_caching_layer.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\integration\\load_balancing_system.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\integration\\multi_environment_support.py",
        "type": "class_based_config",
        "patterns": [
          "env_var:TESTMASTER_ENV",
          "getenv:TESTMASTER_ENV",
          "getenv:ENVIRONMENT",
          "getenv:CI",
          "getenv:GITHUB_ACTIONS",
          "getenv:VERCEL_ENV",
          "getenv:VERCEL_ENV",
          "database_url",
          "secret_key",
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\integration\\predictive_analytics_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\integration\\realtime_performance_monitoring.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\integration\\service_mesh_integration.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\integration\\workflow_execution_engine.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\integration\\workflow_framework.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\integration\\modules\\alert_manager.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\integration\\modules\\health_monitor.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\integration\\modules\\metric_collector.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\integration\\modules\\monitoring_models.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\monitoring\\enhanced_monitor_separate.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\observability\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\operational\\infrastructure_completion_report.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\operational\\infrastructure_validation_suite.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\operational\\perfected_state_manager.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\operational\\ultimate_perfection_validator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\orchestration\\unified_orchestrator.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\orchestration\\modules\\data_models.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\orchestration\\modules\\unified_orchestrator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\orchestration\\modules\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\scripts\\achieve_100_percent.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\scripts\\achieve_100_percent_coverage.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\scripts\\ai_test_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:ANTHROPIC_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\scripts\\api_documenter.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\scripts\\batch_gemini_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\scripts\\dependency_analyzer.py",
        "type": "fastapi_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\scripts\\diagnose_final_five.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\scripts\\fast_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\scripts\\final_five_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\scripts\\gemini_powered_test_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\scripts\\gemini_test_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\scripts\\generate_coverage_sequential.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\scripts\\intelligent_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\scripts\\quick_test_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\scripts\\run_limited_coverage.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\scripts\\self_healing_converter.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\scripts\\simple_test_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\scripts\\test_gemini_api.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\scripts\\test_gemini_config.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\scripts\\test_gemini_correct.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\scripts\\test_single_api_call.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key",
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\scripts\\test_single_generation.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\scripts\\test_updated_prompt.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\scripts\\working_test_generator.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\src\\data_flow_tests.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\src\\integration_test_matrix.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\state\\unified_state_manager.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\main.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\agent_qa\\scoring_system.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\agent_qa\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\api_analysis.py",
        "type": "fastapi_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\crypto_analysis.py",
        "type": "environment_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\database_analysis.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\error_handling_analysis.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\resource_io_analysis.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\security_analysis.py",
        "type": "environment_config",
        "patterns": [
          "secret_key",
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\testmaster\\analysis\\coverage\\codebase_analyzer.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\testmaster\\async_processing\\concurrent_scheduler.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\async_processing\\thread_pool_manager.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\communication\\dynamic_handoff.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\converters\\base.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\converters\\batch.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\testmaster\\converters\\intelligent.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\testmaster\\converters\\parallel.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\testmaster\\core\\config.py",
        "type": "class_based_config",
        "patterns": [
          "getenv:TESTMASTER_PROFILE",
          "getenv:CI",
          "getenv:GITHUB_ACTIONS",
          "getenv:TESTMASTER_SECURITY_SCAN",
          "getenv:TESTMASTER_HIGH_PERFORMANCE",
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\testmaster\\core\\context_manager.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\core\\exceptions.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\core\\feature_flags.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\core\\layer_manager.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\core\\monitoring_decorators.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\core\\orchestrator.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\core\\tracking_manager.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\core\\framework_abstraction\\test_generator.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\core\\framework_abstraction\\universal_test.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\core\\language_detection\\universal_detector.py",
        "type": "fastapi_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\flow_optimizer\\execution_router.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\flow_optimizer\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\generators\\base.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\generators\\intelligent.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\bridges\\event_monitoring_bridge.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\bridges\\protocol_communication_bridge.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\consensus\\agent_coordination.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\core\\doc_generator.py",
        "type": "class_based_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\core\\llm_integration.py",
        "type": "class_based_config",
        "patterns": [
          "getenv:OPENAI_API_KEY",
          "getenv:OPENAI_API_KEY",
          "getenv:ANTHROPIC_API_KEY",
          "getenv:ANTHROPIC_API_KEY",
          "getenv:GOOGLE_API_KEY",
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\generators\\api_doc_generator.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\generators\\architecture_doc_generator.py",
        "type": "fastapi_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\generators\\readme_generator.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\generators\\tutorial_generator.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\integrations\\ci_cd_integration.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\templates\\api\\base.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\templates\\api\\rest_templates.py",
        "type": "environment_config",
        "patterns": [
          "getenv:KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\hierarchical_planning\\llm_integration.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\hierarchical_planning\\unified_integration.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\integration\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\integration\\agents\\documentation_agent.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\integration\\coordination\\analysis_coordinator.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\integration\\events\\event_system.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\integration\\features\\feature_flags.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\integration\\features\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\integration\\layers\\layer_manager.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\integration\\layers\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\integration\\storage\\unified_storage.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\llm_providers\\provider_implementations.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\llm_providers\\universal_llm_provider.py",
        "type": "class_based_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\monitoring\\adaptive_resource_bridge.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\monitoring\\bottleneck_detection_resolution_agent.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\monitoring\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\optimization\\multi_objective_optimizer.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\security\\security_intelligence_agent.py",
        "type": "environment_config",
        "patterns": [
          "getenv:PASSWORD"
        ]
      },
      {
        "file": "TestMaster\\testmaster\\intelligence\\tree_of_thought\\universal_tot_integration.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\monitoring\\file_watcher.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\orchestration\\framework_adapter.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\orchestration\\output_system.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\orchestration\\universal_orchestrator.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\orchestrator\\file_tagger.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\orchestrator\\work_distributor.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\orchestrator\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\overview\\performance_dashboard.py",
        "type": "python_config",
        "patterns": [
          "secret_key",
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\testmaster\\overview\\regression_tracker.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\overview\\structure_mapper.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\refactoring\\hierarchical_analyzer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\reporting\\dashboard_builder.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\reporting\\report_generator.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\reporting\\report_scheduler.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\security\\security_test_generator.py",
        "type": "class_based_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\testmaster\\security\\universal_scanner.py",
        "type": "class_based_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\testmaster\\streaming\\incremental_enhancer.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\streaming\\stream_generator.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\telemetry\\telemetry_dashboard.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\telemetry\\__init__.py",
        "type": "environment_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\ui\\alert_system.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\ui\\dashboard.py",
        "type": "class_based_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\testmaster\\ui\\metrics_display.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\verification\\base.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster\\verification\\quality.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\testmaster\\verification\\self_healing.py",
        "type": "environment_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\tests\\test_phase2_core_validation.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\tests\\test_phase2_e2e_validation.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\tests\\test_phase2_integration_validation.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_handlers.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_layers.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\test_uncategorized.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\archive\\test_uncategorized_original.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\modules\\test_configuration.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\modules\\test_generation.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\modules\\test_thought_processing.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\modules\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\uncategorized\\test_batch_config.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\uncategorized\\test_comprehensive_remaining.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\tests\\modularized\\misc_split\\uncategorized\\__init__.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\ui\\nocode_enhancement.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\ui\\unified_dashboard.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\ui_ux\\agent_verse_ui.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\ui_ux\\studio_interface.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\unified_tools\\coverage_analysis_master.py",
        "type": "class_based_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\unified_tools\\test_generation_master.py",
        "type": "class_based_config",
        "patterns": [
          "getenv:GOOGLE_API_KEY",
          "getenv:OPENAI_API_KEY",
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\web_monitor\\handlers.py",
        "type": "python_config",
        "patterns": [
          "secret_key"
        ]
      },
      {
        "file": "TestMaster\\web_monitor\\utils.py",
        "type": "python_config",
        "patterns": [
          "debug_config"
        ]
      },
      {
        "file": "TestMaster\\workflow\\consolidation_workflow.py",
        "type": "python_config",
        "patterns": []
      },
      {
        "file": "TestMaster\\testmaster_config.yaml",
        "type": "yaml_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\TestMaster_Intelligence_API.yaml",
        "type": "yaml_config",
        "patterns": [
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\unified_testmaster_config.yaml",
        "type": "yaml_config",
        "patterns": [
          "secret_key",
          "debug_config"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\config\\profiles\\development.yaml",
        "type": "yaml_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\config\\profiles\\production.yaml",
        "type": "yaml_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\config\\templates\\complete_template.yaml",
        "type": "yaml_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\config\\templates\\deployment_template.yaml",
        "type": "yaml_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\config\\templates\\graph_template.yaml",
        "type": "yaml_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\config\\templates\\team_template.yaml",
        "type": "yaml_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\config\\templates\\workflow_template.yaml",
        "type": "yaml_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\api\\openapi_specification.yaml",
        "type": "yaml_config",
        "patterns": [
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\analytics_export.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\backend_health_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\cleanup_results.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\comprehensive_analysis_20250821_045021.json",
        "type": "json_config",
        "patterns": [
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\comprehensive_analysis_20250821_054005.json",
        "type": "json_config",
        "patterns": [
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\comprehensive_analysis_20250821_054151.json",
        "type": "json_config",
        "patterns": [
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\comprehensive_analysis_20250821_080659.json",
        "type": "json_config",
        "patterns": [
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\comprehensive_cleanup_data.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\comprehensive_feature_audit_results.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\contribution_analysis_results.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\coupling_analysis_results.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\exhaustive_stub_analysis_results.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\final_archive_sweep_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\IMPLEMENTATION_STATUS_REPORT.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\integration_systems_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\interface_analysis_results.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\metrics_test.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\pattern_analysis_results.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\phase1_api_documentation.json",
        "type": "json_config",
        "patterns": [
          "database_url",
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\phase1_component_analysis.json",
        "type": "json_config",
        "patterns": [
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\phase1_dependency_analysis.json",
        "type": "json_config",
        "patterns": [
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\phase7_validation_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\utility_analysis_detailed_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\archive\\archive_manifest.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\archive\\phase4_archive\\phase_c4_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\archive\\phase4_archive\\validation_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\archive\\phase5_archive\\validation_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\archive\\phase6_archive\\validation_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\config\\default.json",
        "type": "json_config",
        "patterns": [
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\consolidation\\discovery_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\backend_features.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\final_enhancements_test_results.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\frontend_integration_validation.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\frontend_simulation_results.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\backups\\backup_metadata.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165025.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165124.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165125.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165224.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165252.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165324.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165424.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165449.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165524.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165549.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165624.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165649.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165724.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165749.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165824.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165849.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165924.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_165949.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170024.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170124.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170224.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170324.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170348.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170424.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170524.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170624.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170724.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170824.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_170924.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_171024.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_171124.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_171224.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_171324.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_171424.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_171524.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_171624.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172218.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172316.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172335.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172416.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172516.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172603.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172616.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172716.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172726.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172816.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172826.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172916.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_172926.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173016.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173026.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173116.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173126.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173216.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173226.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173316.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173326.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173416.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173426.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173516.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173526.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173616.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173626.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173716.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173726.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173816.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173826.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_173916.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174016.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174116.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174125.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174216.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174225.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174316.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174325.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174416.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174425.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174516.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174525.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174616.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174625.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174716.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174725.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174816.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174825.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174916.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_174925.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175016.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175025.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175116.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175125.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175216.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175225.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175316.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175325.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175416.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\events_20250818_175517.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165124.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165125.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165224.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165252.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165324.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165424.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165449.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165524.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165549.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165624.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165649.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165724.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165749.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165824.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165849.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165924.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_165949.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170024.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170124.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170224.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170324.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170348.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170424.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170524.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170624.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170724.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170824.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_170924.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_171024.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_171124.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_171224.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_171324.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_171424.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_171524.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_171624.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172316.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172335.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172416.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172516.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172603.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172616.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172716.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172726.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172816.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172826.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172916.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_172926.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173016.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173026.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173116.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173126.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173216.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173226.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173316.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173326.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173416.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173426.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173516.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173526.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173616.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173626.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173716.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173726.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173816.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173826.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_173916.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174016.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174116.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174125.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174216.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174225.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174316.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174325.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174416.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174425.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174516.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174525.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174616.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174625.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174716.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174725.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174816.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174825.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174916.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_174925.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175016.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175025.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175116.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175125.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175216.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175225.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175316.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175325.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175417.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\dashboard\\data\\telemetry\\spans_20250818_175517.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\api\\api_summary.json",
        "type": "json_config",
        "patterns": [
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\api\\openapi_specification.json",
        "type": "json_config",
        "patterns": [
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\api_integration\\documentation_api_spec.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\api_integration\\integration_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\configuration\\configuration_inventory.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\knowledge\\knowledge_catalog.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\legacy\\compatibility_matrix.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\legacy\\integration_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\validation\\api_interface_validation_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\validation\\cross_system_dependencies_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\validation\\performance_quality_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\docs\\validation\\system_integration_validation_report.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\operational\\cross_agent_integration_report_20250821_165224.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\operational\\infrastructure_completion_report_20250821_163118.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\operational\\ultimate_perfection_certification_20250821_165612.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\operational\\validation_report_20250821_162742.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\operational\\validation_report_20250821_162844.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\operational\\validation_report_20250821_162942.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\phase_1_7_validation_results\\phase_1_7_summary.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\phase_1_7_validation_results\\validation_results.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\test_reports\\component_performance_20250817_035149_f5c472ee.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\test_reports\\component_performance_20250817_035208_8c19d9b4.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\test_sessions\\archives\\background_task_1755475344_cf67972c\\metadata.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\test_sessions\\archives\\workflow_execution_1755475344_9c5329c5\\metadata.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\test_sops\\test_generation_1755475557_ddcecdff.json",
        "type": "json_config",
        "patterns": [],
        "analyzed": true,
        "is_config_file": true
      },
      {
        "file": "TestMaster\\tools\\migration\\legacy_analysis.json",
        "type": "json_config",
        "patterns": [
          "secret_key"
        ],
        "analyzed": true,
        "is_config_file": true
      }
    ],
    "settings_classes": [
      {
        "name": "ConfigurationSettingsAnalyzer",
        "file": "TestMaster\\configuration_settings_analyzer.py",
        "line": 18,
        "attributes": [
          {
            "name": "filename",
            "line": 117,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_patterns",
            "line": 120,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "content_patterns",
            "line": 134,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "filename",
            "line": 148,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "patterns",
            "line": 173,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "env_patterns",
            "line": 176,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "getenv_patterns",
            "line": 180,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "class_indicators",
            "line": 199,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "attributes",
            "line": 211,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "methods",
            "line": 229,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "value",
            "line": 267,
            "type": "NoneType",
            "is_constant": false
          },
          {
            "name": "lines",
            "line": 321,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "results",
            "line": 370,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "python_files",
            "line": 378,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_extensions",
            "line": 381,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "config_files",
            "line": 382,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "all_files",
            "line": 386,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "opportunities",
            "line": 438,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "duplicates",
            "line": 450,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "config_groups",
            "line": 465,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "scattered",
            "line": 474,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "value_groups",
            "line": 490,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "consolidation_candidates",
            "line": 496,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "config_by_type",
            "line": 511,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "suggestions",
            "line": 524,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "improvements",
            "line": 539,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "consolidation_opportunities",
            "line": 560,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "summary",
            "line": 562,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "score",
            "line": 595,
            "type": "number",
            "is_constant": false
          },
          {
            "name": "security_penalty",
            "line": 598,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "hardcoded_penalty",
            "line": 606,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "recommendations",
            "line": 621,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "tree",
            "line": 49,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "value",
            "line": 269,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "target",
            "line": 276,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "var_name",
            "line": 299,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "method_name",
            "line": 312,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "line_stripped",
            "line": 324,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_info",
            "line": 418,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "unique_files",
            "line": 476,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "content",
            "line": 38,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "env_var",
            "line": 241,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "var_name",
            "line": 244,
            "type": "NoneType",
            "is_constant": false
          },
          {
            "name": "default_value",
            "line": 251,
            "type": "NoneType",
            "is_constant": false
          },
          {
            "name": "value",
            "line": 271,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "var_name",
            "line": 278,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "config_indicators",
            "line": 281,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "object_name",
            "line": 315,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "analysis",
            "line": 398,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "analysis",
            "line": 400,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "content",
            "line": 416,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "var_name",
            "line": 246,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "default_arg",
            "line": 253,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "value",
            "line": 273,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "attr_info",
            "line": 217,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "default_value",
            "line": 255,
            "type": "unknown",
            "is_constant": false
          }
        ],
        "methods": [
          "__init__",
          "analyze_file",
          "visit_ClassDef",
          "visit_Assign",
          "visit_Call",
          "_is_config_file",
          "_determine_config_type",
          "_extract_config_patterns",
          "_is_settings_class",
          "_extract_class_attributes",
          "_extract_class_methods",
          "_process_env_var_usage",
          "_check_hardcoded_config",
          "_analyze_config_dict",
          "_analyze_config_call",
          "_analyze_raw_content",
          "_get_value_type",
          "analyze_directory",
          "_analyze_non_python_config",
          "detect_consolidation_opportunities",
          "_find_duplicate_env_vars",
          "_find_scattered_configs",
          "_find_hardcoded_consolidation",
          "_analyze_config_file_spread",
          "_suggest_config_consolidation",
          "_identify_security_improvements",
          "generate_summary",
          "_calculate_config_health_score",
          "_generate_recommendations"
        ]
      },
      {
        "name": "DocumentationConfig",
        "file": "TestMaster\\documentation_cli.py",
        "line": 84,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ConverterConfig",
        "file": "TestMaster\\parallel_converter_fixed.py",
        "line": 65,
        "attributes": [
          {
            "name": "CONFIGS",
            "line": 69,
            "type": "dict",
            "is_constant": true
          },
          {
            "name": "config",
            "line": 91,
            "type": "unknown",
            "is_constant": false
          }
        ],
        "methods": [
          "__init__"
        ]
      },
      {
        "name": "SwarmConfig",
        "file": "TestMaster\\restored_asyncio_6.py",
        "line": 130,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ServiceConfig",
        "file": "TestMaster\\restored_json_5.py",
        "line": 59,
        "attributes": [],
        "methods": []
      },
      {
        "name": "SwarmConfig",
        "file": "TestMaster\\restored_random_6.py",
        "line": 130,
        "attributes": [],
        "methods": []
      },
      {
        "name": "SwarmConfig",
        "file": "TestMaster\\restored_uuid_6.py",
        "line": 130,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ConfigurationTestGenerator",
        "file": "TestMaster\\specialized_test_generators.py",
        "line": 484,
        "attributes": [],
        "methods": [
          "generate_config_test_suite"
        ]
      },
      {
        "name": "TeamConfiguration",
        "file": "TestMaster\\agents\\team\\testing_team.py",
        "line": 35,
        "attributes": [],
        "methods": []
      },
      {
        "name": "CircuitBreakerConfig",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
        "line": 36,
        "attributes": [],
        "methods": []
      },
      {
        "name": "RetryConfig",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_retry_manager.py",
        "line": 34,
        "attributes": [],
        "methods": []
      },
      {
        "name": "SLAConfiguration",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_sla_tracker.py",
        "line": 63,
        "attributes": [],
        "methods": []
      },
      {
        "name": "CacheConfiguration",
        "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\intelligent_caching_layer_robust.py",
        "line": 212,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ConfigurationTestGenerator",
        "file": "TestMaster\\archive\\legacy_scripts\\specialized_test_generators.py",
        "line": 484,
        "attributes": [],
        "methods": [
          "generate_config_test_suite"
        ]
      },
      {
        "name": "ConfigurationTestGenerator",
        "file": "TestMaster\\archive\\original_backup\\specialized_test_generators.py",
        "line": 484,
        "attributes": [],
        "methods": [
          "generate_config_test_suite"
        ]
      },
      {
        "name": "SystemConfiguration",
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\api\\ml_api.py",
        "line": 610,
        "attributes": [
          {
            "name": "config_data",
            "line": 614,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "config_updates",
            "line": 662,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "update_result",
            "line": 665,
            "type": "dict",
            "is_constant": false
          }
        ],
        "methods": [
          "get",
          "put"
        ]
      },
      {
        "name": "MLCircuitBreakerConfig",
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
        "line": 63,
        "attributes": [],
        "methods": []
      },
      {
        "name": "MLSLAConfiguration",
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\ml\\advanced\\sla_ml_optimizer.py",
        "line": 70,
        "attributes": [],
        "methods": []
      },
      {
        "name": "CacheConfiguration",
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\intelligent_caching_layer.py",
        "line": 212,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ServiceConfig",
        "file": "TestMaster\\archive\\phase5_archive\\replaced_code\\enterprise_deployment_20250819_195602.py",
        "line": 59,
        "attributes": [],
        "methods": []
      },
      {
        "name": "TeamConfiguration",
        "file": "TestMaster\\archive\\phase5_archive\\replaced_code\\testing_team_20250819_195602.py",
        "line": 35,
        "attributes": [],
        "methods": []
      },
      {
        "name": "SwarmConfig",
        "file": "TestMaster\\archive\\phase6_archive\\replaced_code\\swarm_orchestrator_20250819_200929.py",
        "line": 130,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ConfigMigrationTool",
        "file": "TestMaster\\config\\config_migration.py",
        "line": 38,
        "attributes": [
          {
            "name": "result",
            "line": 72,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "python_files",
            "line": 81,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "compatibility_code",
            "line": 136,
            "type": "string",
            "is_constant": false
          },
          {
            "name": "report",
            "line": 253,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "matches",
            "line": 110,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "matches",
            "line": 127,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "content",
            "line": 98,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "relative_path",
            "line": 114,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "relative_path",
            "line": 130,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "import_note",
            "line": 131,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "migration_note",
            "line": 118,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "migration_note",
            "line": 122,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "content",
            "line": 102,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "__init__",
          "analyze_codebase",
          "_analyze_file",
          "create_compatibility_layer",
          "generate_migration_report"
        ]
      },
      {
        "name": "ConfigCategory",
        "file": "TestMaster\\config\\enhanced_unified_config.py",
        "line": 41,
        "attributes": [
          {
            "name": "API",
            "line": 44,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "GENERATION",
            "line": 45,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "MONITORING",
            "line": 46,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "CACHING",
            "line": 47,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "EXECUTION",
            "line": 48,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "REPORTING",
            "line": 49,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "QUALITY",
            "line": 50,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "OPTIMIZATION",
            "line": 51,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "SECURITY",
            "line": 54,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "TESTING",
            "line": 55,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "ML",
            "line": 56,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "INFRASTRUCTURE",
            "line": 57,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "INTEGRATION",
            "line": 58,
            "type": "string",
            "is_constant": true
          }
        ],
        "methods": []
      },
      {
        "name": "SecurityConfig",
        "file": "TestMaster\\config\\enhanced_unified_config.py",
        "line": 63,
        "attributes": [],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "TestingConfig",
        "file": "TestMaster\\config\\enhanced_unified_config.py",
        "line": 85,
        "attributes": [],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "MLConfig",
        "file": "TestMaster\\config\\enhanced_unified_config.py",
        "line": 106,
        "attributes": [],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "InfrastructureConfig",
        "file": "TestMaster\\config\\enhanced_unified_config.py",
        "line": 127,
        "attributes": [],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "IntegrationConfig",
        "file": "TestMaster\\config\\enhanced_unified_config.py",
        "line": 148,
        "attributes": [],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "EnhancedConfigManager",
        "file": "TestMaster\\config\\enhanced_unified_config.py",
        "line": 162,
        "attributes": [
          {
            "name": "_instance",
            "line": 222,
            "type": "NoneType",
            "is_constant": false
          },
          {
            "name": "_lock",
            "line": 223,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "env_file",
            "line": 320,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "profile_file",
            "line": 462,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "profile_data",
            "line": 464,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "testmaster_dict",
            "line": 467,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "all_configs",
            "line": 484,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "section",
            "line": 432,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "current_config",
            "line": 443,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "overrides",
            "line": 325,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "section",
            "line": 331,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "category",
            "line": 338,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "current_config",
            "line": 340,
            "type": "unknown",
            "is_constant": false
          }
        ],
        "methods": [
          "__new__",
          "__init__",
          "environment",
          "config_dir",
          "api",
          "generation",
          "monitoring",
          "caching",
          "execution",
          "reporting",
          "quality",
          "optimization",
          "to_dict",
          "save",
          "_load_extended_configurations",
          "_load_environment_overrides",
          "_validate_extended_configs",
          "get_config",
          "get_api_config",
          "get_security_config",
          "get_monitoring_config",
          "get_caching_config",
          "get_testing_config",
          "get_generation_config",
          "get_execution_config",
          "get_reporting_config",
          "get_quality_config",
          "get_optimization_config",
          "get_ml_config",
          "get_infrastructure_config",
          "get_integration_config",
          "update_config",
          "save_profile",
          "get_all_configs",
          "reload"
        ]
      },
      {
        "name": "HierarchicalConfigurationCoordinator",
        "file": "TestMaster\\config\\hierarchical_config_coordinator.py",
        "line": 34,
        "attributes": [
          {
            "name": "intelligence_config",
            "line": 95,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "security_config",
            "line": 103,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "testing_config",
            "line": 111,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "coordination_config",
            "line": 119,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "api_config",
            "line": 129,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "analytics_config",
            "line": 136,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "enterprise_config",
            "line": 143,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "unified_config",
            "line": 211,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "validation_results",
            "line": 249,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "unified_config",
            "line": 153,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "category_mappings",
            "line": 156,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "foundation_errors",
            "line": 253,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "domain_errors",
            "line": 259,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "orchestration_errors",
            "line": 265,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "service_errors",
            "line": 271,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_category",
            "line": 169,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "layer_info",
            "line": 170,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "__init__",
          "_initialize_hierarchical_configuration",
          "_initialize_domain_configurations",
          "_initialize_services_configurations",
          "_integrate_with_unified_config",
          "_apply_config_to_layer",
          "get_config",
          "get_unified_config",
          "set_config",
          "validate_all_configurations",
          "get_coordination_status",
          "_build_layer_dependencies"
        ]
      },
      {
        "name": "FoundationConfiguration",
        "file": "TestMaster\\config\\hierarchical_config_coordinator.py",
        "line": 300,
        "attributes": [],
        "methods": [
          "__init__",
          "get_default_config",
          "get_schema"
        ]
      },
      {
        "name": "DomainConfiguration",
        "file": "TestMaster\\config\\hierarchical_config_coordinator.py",
        "line": 337,
        "attributes": [],
        "methods": [
          "get_default_config",
          "get_schema"
        ]
      },
      {
        "name": "ServicesConfiguration",
        "file": "TestMaster\\config\\hierarchical_config_coordinator.py",
        "line": 356,
        "attributes": [],
        "methods": [
          "__init__",
          "get_default_config",
          "get_schema"
        ]
      },
      {
        "name": "ConfigSection",
        "file": "TestMaster\\config\\testmaster_config.py",
        "line": 38,
        "attributes": [
          {
            "name": "API",
            "line": 40,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "GENERATION",
            "line": 41,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "MONITORING",
            "line": 42,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "CACHING",
            "line": 43,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "EXECUTION",
            "line": 44,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "REPORTING",
            "line": 45,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "QUALITY",
            "line": 46,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "OPTIMIZATION",
            "line": 47,
            "type": "string",
            "is_constant": true
          }
        ],
        "methods": []
      },
      {
        "name": "APIConfig",
        "file": "TestMaster\\config\\testmaster_config.py",
        "line": 51,
        "attributes": [],
        "methods": [
          "__post_init__"
        ]
      },
      {
        "name": "GenerationConfig",
        "file": "TestMaster\\config\\testmaster_config.py",
        "line": 73,
        "attributes": [],
        "methods": []
      },
      {
        "name": "MonitoringConfig",
        "file": "TestMaster\\config\\testmaster_config.py",
        "line": 94,
        "attributes": [],
        "methods": []
      },
      {
        "name": "CachingConfig",
        "file": "TestMaster\\config\\testmaster_config.py",
        "line": 112,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ExecutionConfig",
        "file": "TestMaster\\config\\testmaster_config.py",
        "line": 128,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ReportingConfig",
        "file": "TestMaster\\config\\testmaster_config.py",
        "line": 146,
        "attributes": [],
        "methods": []
      },
      {
        "name": "QualityConfig",
        "file": "TestMaster\\config\\testmaster_config.py",
        "line": 164,
        "attributes": [],
        "methods": []
      },
      {
        "name": "OptimizationConfig",
        "file": "TestMaster\\config\\testmaster_config.py",
        "line": 180,
        "attributes": [],
        "methods": []
      },
      {
        "name": "TestMasterConfig",
        "file": "TestMaster\\config\\testmaster_config.py",
        "line": 195,
        "attributes": [
          {
            "name": "_instance",
            "line": 198,
            "type": "NoneType",
            "is_constant": false
          },
          {
            "name": "_lock",
            "line": 199,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "env_var",
            "line": 242,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "defaults",
            "line": 276,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "env_mappings",
            "line": 324,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "config_dict",
            "line": 374,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_str",
            "line": 375,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "current_hash",
            "line": 386,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "parts",
            "line": 391,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "obj",
            "line": 392,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "parts",
            "line": 404,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "obj",
            "line": 405,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "config_dict",
            "line": 437,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "value",
            "line": 335,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "file_path",
            "line": 435,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "obj",
            "line": 396,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "obj",
            "line": 409,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config",
            "line": 301,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "section",
            "line": 311,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "section_obj",
            "line": 338,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config",
            "line": 303,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "parsed_value",
            "line": 340,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "parsed_value",
            "line": 342,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "__new__",
          "__init__",
          "_detect_environment",
          "_load_all_configs",
          "_load_defaults",
          "_save_defaults",
          "_load_config_file",
          "_load_env_vars",
          "_validate_config",
          "_calculate_config_hash",
          "reload",
          "has_changed",
          "get",
          "set",
          "to_dict",
          "save",
          "validate_api_keys",
          "get_active_model",
          "print_summary"
        ]
      },
      {
        "name": "ConfigurationError",
        "file": "TestMaster\\config\\unified_config.py",
        "line": 29,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ConfigCategory",
        "file": "TestMaster\\config\\unified_config.py",
        "line": 43,
        "attributes": [
          {
            "name": "API",
            "line": 45,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "SECURITY",
            "line": 46,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "MONITORING",
            "line": 47,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "CACHING",
            "line": 48,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "TESTING",
            "line": 49,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "ML",
            "line": 50,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "INFRASTRUCTURE",
            "line": 51,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "INTEGRATION",
            "line": 52,
            "type": "string",
            "is_constant": true
          }
        ],
        "methods": []
      },
      {
        "name": "ConfigBase",
        "file": "TestMaster\\config\\unified_config.py",
        "line": 56,
        "attributes": [],
        "methods": [
          "validate",
          "to_dict",
          "from_dict"
        ]
      },
      {
        "name": "APIConfig",
        "file": "TestMaster\\config\\unified_config.py",
        "line": 74,
        "attributes": [],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "SecurityConfig",
        "file": "TestMaster\\config\\unified_config.py",
        "line": 95,
        "attributes": [],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "MonitoringConfig",
        "file": "TestMaster\\config\\unified_config.py",
        "line": 116,
        "attributes": [
          {
            "name": "valid_levels",
            "line": 128,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "CachingConfig",
        "file": "TestMaster\\config\\unified_config.py",
        "line": 135,
        "attributes": [
          {
            "name": "valid_strategies",
            "line": 147,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "TestingConfig",
        "file": "TestMaster\\config\\unified_config.py",
        "line": 154,
        "attributes": [],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "MLConfig",
        "file": "TestMaster\\config\\unified_config.py",
        "line": 174,
        "attributes": [],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "InfrastructureConfig",
        "file": "TestMaster\\config\\unified_config.py",
        "line": 194,
        "attributes": [],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "IntegrationConfig",
        "file": "TestMaster\\config\\unified_config.py",
        "line": 214,
        "attributes": [],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "UnifiedConfigManager",
        "file": "TestMaster\\config\\unified_config.py",
        "line": 228,
        "attributes": [
          {
            "name": "env_file",
            "line": 267,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "current_config",
            "line": 346,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "config_dict",
            "line": 347,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_class",
            "line": 351,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "new_config",
            "line": 352,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "profile_file",
            "line": 365,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "profile_data",
            "line": 367,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "overrides",
            "line": 272,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "category",
            "line": 276,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "current_config",
            "line": 279,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "updated_dict",
            "line": 280,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_class",
            "line": 284,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "__init__",
          "_load_configurations",
          "_load_environment_overrides",
          "_validate_all",
          "get_config",
          "get_api_config",
          "get_security_config",
          "get_monitoring_config",
          "get_caching_config",
          "get_testing_config",
          "get_ml_config",
          "get_infrastructure_config",
          "get_integration_config",
          "update_config",
          "save_profile",
          "get_all_configs",
          "reload"
        ]
      },
      {
        "name": "YAMLConfigurationEnhancer",
        "file": "TestMaster\\config\\yaml_config_enhancer.py",
        "line": 30,
        "attributes": [
          {
            "name": "results",
            "line": 283,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "output_dir",
            "line": 502,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "results",
            "line": 505,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "complete_template",
            "line": 513,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "complete_path",
            "line": 520,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "validation_result",
            "line": 540,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "team_id",
            "line": 166,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "success",
            "line": 172,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "deployment_id",
            "line": 197,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "success",
            "line": 203,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "graph_id",
            "line": 227,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "success",
            "line": 233,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "workflow_id",
            "line": 257,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "success",
            "line": 263,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "team_state",
            "line": 379,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "yaml_config",
            "line": 385,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "deployment_state",
            "line": 403,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "yaml_config",
            "line": 409,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "global_state",
            "line": 427,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "all_configs",
            "line": 428,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "yaml_export",
            "line": 430,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "template",
            "line": 485,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "template_path",
            "line": 508,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "success",
            "line": 509,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "template",
            "line": 551,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_data",
            "line": 164,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_data",
            "line": 195,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_data",
            "line": 225,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_data",
            "line": 255,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_data",
            "line": 293,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_data",
            "line": 549,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "supervisor_mode",
            "line": 563,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "roles",
            "line": 567,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "valid_roles",
            "line": 568,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "team_id",
            "line": 298,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "success",
            "line": 299,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "deployment_id",
            "line": 316,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "success",
            "line": 317,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "graph_id",
            "line": 333,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "success",
            "line": 334,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "workflow_id",
            "line": 350,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "success",
            "line": 351,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "mode",
            "line": 574,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "execution_mode",
            "line": 579,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "__init__",
          "_initialize_templates",
          "load_team_config_from_yaml",
          "load_deployment_config_from_yaml",
          "load_graph_config_from_yaml",
          "load_workflow_config_from_yaml",
          "load_complete_config_from_yaml",
          "export_team_to_yaml",
          "export_deployment_to_yaml",
          "export_all_configs_to_yaml",
          "generate_template",
          "generate_all_templates",
          "validate_yaml_config",
          "get_enhancement_info"
        ]
      },
      {
        "name": "EnhancedConfigBridge",
        "file": "TestMaster\\config\\__init__.py",
        "line": 266,
        "attributes": [],
        "methods": [
          "api",
          "generation",
          "security",
          "monitoring",
          "caching",
          "execution",
          "reporting",
          "quality",
          "optimization",
          "testing",
          "ml",
          "infrastructure",
          "integration"
        ]
      },
      {
        "name": "APIConfig",
        "file": "TestMaster\\config\\modules\\api_config.py",
        "line": 19,
        "attributes": [
          {
            "name": "errors",
            "line": 71,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "config",
            "line": 111,
            "type": "dict",
            "is_constant": false
          }
        ],
        "methods": [
          "__post_init__",
          "validate",
          "get_active_api_key",
          "get_api_config_for_model"
        ]
      },
      {
        "name": "ConfigSection",
        "file": "TestMaster\\config\\modules\\data_models.py",
        "line": 26,
        "attributes": [
          {
            "name": "API",
            "line": 28,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "GENERATION",
            "line": 29,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "MONITORING",
            "line": 30,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "CACHING",
            "line": 31,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "EXECUTION",
            "line": 32,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "REPORTING",
            "line": 33,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "QUALITY",
            "line": 34,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "OPTIMIZATION",
            "line": 35,
            "type": "string",
            "is_constant": true
          }
        ],
        "methods": []
      },
      {
        "name": "ConfigCategory",
        "file": "TestMaster\\config\\modules\\data_models.py",
        "line": 38,
        "attributes": [
          {
            "name": "CORE",
            "line": 40,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "SECURITY",
            "line": 41,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "TESTING",
            "line": 42,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "ML",
            "line": 43,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "INFRASTRUCTURE",
            "line": 44,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "INTEGRATION",
            "line": 45,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "MONITORING",
            "line": 46,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "OPTIMIZATION",
            "line": 47,
            "type": "string",
            "is_constant": true
          }
        ],
        "methods": []
      },
      {
        "name": "ConfigBase",
        "file": "TestMaster\\config\\modules\\data_models.py",
        "line": 92,
        "attributes": [
          {
            "name": "result",
            "line": 97,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "errors",
            "line": 117,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "to_dict",
          "update",
          "validate"
        ]
      },
      {
        "name": "ConfigurationError",
        "file": "TestMaster\\config\\modules\\data_models.py",
        "line": 134,
        "attributes": [],
        "methods": []
      },
      {
        "name": "DeploymentConfig",
        "file": "TestMaster\\config\\modules\\infrastructure_config.py",
        "line": 19,
        "attributes": [
          {
            "name": "errors",
            "line": 61,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "DatabaseConfig",
        "file": "TestMaster\\config\\modules\\infrastructure_config.py",
        "line": 81,
        "attributes": [
          {
            "name": "errors",
            "line": 116,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "CacheConfig",
        "file": "TestMaster\\config\\modules\\infrastructure_config.py",
        "line": 134,
        "attributes": [
          {
            "name": "errors",
            "line": 162,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "valid_policies",
            "line": 173,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "QueueConfig",
        "file": "TestMaster\\config\\modules\\infrastructure_config.py",
        "line": 181,
        "attributes": [
          {
            "name": "errors",
            "line": 211,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "StorageConfig",
        "file": "TestMaster\\config\\modules\\infrastructure_config.py",
        "line": 226,
        "attributes": [
          {
            "name": "errors",
            "line": 253,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "NetworkConfig",
        "file": "TestMaster\\config\\modules\\infrastructure_config.py",
        "line": 272,
        "attributes": [
          {
            "name": "errors",
            "line": 301,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "InfrastructureConfig",
        "file": "TestMaster\\config\\modules\\infrastructure_config.py",
        "line": 317,
        "attributes": [
          {
            "name": "errors",
            "line": 343,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "GitIntegrationConfig",
        "file": "TestMaster\\config\\modules\\integration_config.py",
        "line": 39,
        "attributes": [
          {
            "name": "errors",
            "line": 73,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "CICDConfig",
        "file": "TestMaster\\config\\modules\\integration_config.py",
        "line": 91,
        "attributes": [
          {
            "name": "errors",
            "line": 130,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "NotificationConfig",
        "file": "TestMaster\\config\\modules\\integration_config.py",
        "line": 145,
        "attributes": [
          {
            "name": "errors",
            "line": 180,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "WebhookConfig",
        "file": "TestMaster\\config\\modules\\integration_config.py",
        "line": 205,
        "attributes": [
          {
            "name": "errors",
            "line": 239,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "CloudIntegrationConfig",
        "file": "TestMaster\\config\\modules\\integration_config.py",
        "line": 257,
        "attributes": [
          {
            "name": "errors",
            "line": 288,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "IntegrationConfig",
        "file": "TestMaster\\config\\modules\\integration_config.py",
        "line": 308,
        "attributes": [
          {
            "name": "errors",
            "line": 331,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "ModelConfig",
        "file": "TestMaster\\config\\modules\\ml_config.py",
        "line": 42,
        "attributes": [
          {
            "name": "errors",
            "line": 79,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "TrainingConfig",
        "file": "TestMaster\\config\\modules\\ml_config.py",
        "line": 100,
        "attributes": [
          {
            "name": "errors",
            "line": 142,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "total_split",
            "line": 144,
            "type": "unknown",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "InferenceConfig",
        "file": "TestMaster\\config\\modules\\ml_config.py",
        "line": 161,
        "attributes": [
          {
            "name": "errors",
            "line": 193,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "AutoMLConfig",
        "file": "TestMaster\\config\\modules\\ml_config.py",
        "line": 214,
        "attributes": [
          {
            "name": "errors",
            "line": 244,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "MLConfig",
        "file": "TestMaster\\config\\modules\\ml_config.py",
        "line": 259,
        "attributes": [
          {
            "name": "errors",
            "line": 285,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "MonitoringConfig",
        "file": "TestMaster\\config\\modules\\monitoring_config.py",
        "line": 19,
        "attributes": [
          {
            "name": "errors",
            "line": 67,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "valid_log_levels",
            "line": 84,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "ReportingConfig",
        "file": "TestMaster\\config\\modules\\monitoring_config.py",
        "line": 92,
        "attributes": [
          {
            "name": "errors",
            "line": 128,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "MetricsConfig",
        "file": "TestMaster\\config\\modules\\monitoring_config.py",
        "line": 143,
        "attributes": [
          {
            "name": "errors",
            "line": 195,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "ObservabilityConfig",
        "file": "TestMaster\\config\\modules\\monitoring_config.py",
        "line": 210,
        "attributes": [
          {
            "name": "errors",
            "line": 229,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "AuthenticationConfig",
        "file": "TestMaster\\config\\modules\\security_config.py",
        "line": 49,
        "attributes": [
          {
            "name": "errors",
            "line": 82,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "EncryptionConfig",
        "file": "TestMaster\\config\\modules\\security_config.py",
        "line": 101,
        "attributes": [
          {
            "name": "errors",
            "line": 131,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "AccessControlConfig",
        "file": "TestMaster\\config\\modules\\security_config.py",
        "line": 150,
        "attributes": [
          {
            "name": "errors",
            "line": 186,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "AuditConfig",
        "file": "TestMaster\\config\\modules\\security_config.py",
        "line": 201,
        "attributes": [
          {
            "name": "errors",
            "line": 237,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "valid_levels",
            "line": 239,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "SecurityConfig",
        "file": "TestMaster\\config\\modules\\security_config.py",
        "line": 253,
        "attributes": [
          {
            "name": "errors",
            "line": 276,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "GenerationConfig",
        "file": "TestMaster\\config\\modules\\testing_config.py",
        "line": 19,
        "attributes": [
          {
            "name": "errors",
            "line": 59,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "ExecutionConfig",
        "file": "TestMaster\\config\\modules\\testing_config.py",
        "line": 83,
        "attributes": [
          {
            "name": "errors",
            "line": 119,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "QualityConfig",
        "file": "TestMaster\\config\\modules\\testing_config.py",
        "line": 137,
        "attributes": [
          {
            "name": "errors",
            "line": 170,
            "type": "list",
            "is_constant": false
          }
        ],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "TestingConfig",
        "file": "TestMaster\\config\\modules\\testing_config.py",
        "line": 191,
        "attributes": [
          {
            "name": "errors",
            "line": 232,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "profile",
            "line": 220,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "parts",
            "line": 222,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "section_obj",
            "line": 226,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "apply_profile",
          "validate"
        ]
      },
      {
        "name": "ProtocolConfiguration",
        "file": "TestMaster\\core\\domains\\intelligence\\coordination_protocol_manager.py",
        "line": 116,
        "attributes": [],
        "methods": []
      },
      {
        "name": "IntelligenceHubConfig",
        "file": "TestMaster\\core\\domains\\intelligence\\__init__.py",
        "line": 79,
        "attributes": [],
        "methods": []
      },
      {
        "name": "BusinessAnalysisConfiguration",
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\business_base.py",
        "line": 172,
        "attributes": [],
        "methods": [
          "__init__"
        ]
      },
      {
        "name": "DebtConfiguration",
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\debt_base.py",
        "line": 89,
        "attributes": [
          {
            "name": "DEBT_COST_FACTORS",
            "line": 93,
            "type": "dict",
            "is_constant": true
          },
          {
            "name": "INTEREST_RATES",
            "line": 112,
            "type": "dict",
            "is_constant": true
          },
          {
            "name": "PRODUCTIVITY_FACTORS",
            "line": 123,
            "type": "dict",
            "is_constant": true
          },
          {
            "name": "COMPLEXITY_THRESHOLDS",
            "line": 132,
            "type": "dict",
            "is_constant": true
          },
          {
            "name": "RISK_MULTIPLIERS",
            "line": 140,
            "type": "dict",
            "is_constant": true
          }
        ],
        "methods": []
      },
      {
        "name": "SemanticConfiguration",
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\semantic_base.py",
        "line": 103,
        "attributes": [],
        "methods": [
          "__init__"
        ]
      },
      {
        "name": "AnalyticsHubConfig",
        "file": "TestMaster\\core\\domains\\intelligence\\analytics\\__init__.py",
        "line": 90,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ConfigurationLevel",
        "file": "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
        "line": 50,
        "attributes": [
          {
            "name": "DEFAULTS",
            "line": 52,
            "type": "number",
            "is_constant": true
          },
          {
            "name": "ENVIRONMENT",
            "line": 53,
            "type": "number",
            "is_constant": true
          },
          {
            "name": "USER",
            "line": 54,
            "type": "number",
            "is_constant": true
          },
          {
            "name": "RUNTIME",
            "line": 55,
            "type": "number",
            "is_constant": true
          },
          {
            "name": "OVERRIDE",
            "line": 56,
            "type": "number",
            "is_constant": true
          }
        ],
        "methods": []
      },
      {
        "name": "ConfigurationValue",
        "file": "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
        "line": 67,
        "attributes": [],
        "methods": [
          "__post_init__",
          "_decrypt_value"
        ]
      },
      {
        "name": "IntelligenceConfig",
        "file": "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
        "line": 91,
        "attributes": [],
        "methods": []
      },
      {
        "name": "SecurityConfig",
        "file": "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
        "line": 108,
        "attributes": [],
        "methods": []
      },
      {
        "name": "MonitoringConfig",
        "file": "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
        "line": 125,
        "attributes": [],
        "methods": []
      },
      {
        "name": "DatabaseConfig",
        "file": "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
        "line": 146,
        "attributes": [],
        "methods": []
      },
      {
        "name": "CachingConfig",
        "file": "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
        "line": 165,
        "attributes": [],
        "methods": []
      },
      {
        "name": "APIConfig",
        "file": "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
        "line": 184,
        "attributes": [],
        "methods": []
      },
      {
        "name": "EnterpriseConfigManager",
        "file": "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
        "line": 206,
        "attributes": [
          {
            "name": "_instance",
            "line": 212,
            "type": "NoneType",
            "is_constant": false
          },
          {
            "name": "_lock",
            "line": 213,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "env_var",
            "line": 273,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "hostname",
            "line": 287,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "env_mappings",
            "line": 380,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "validation_errors",
            "line": 543,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "config_dict",
            "line": 581,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_str",
            "line": 582,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "file_hashes",
            "line": 611,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "old_hash",
            "line": 622,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "config_dict",
            "line": 728,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "sensitive_fields",
            "line": 751,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "config_file",
            "line": 770,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "config_dict",
            "line": 771,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_dict",
            "line": 800,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "validation_result",
            "line": 811,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "marker_file",
            "line": 282,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_file",
            "line": 302,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "value",
            "line": 415,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "monitor_thread",
            "line": 588,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "new_hash",
            "line": 626,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "parts",
            "line": 652,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "obj",
            "line": 653,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "parts",
            "line": 670,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "obj",
            "line": 671,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "old_value",
            "line": 681,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "section",
            "line": 350,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "current_hash",
            "line": 597,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "data",
            "line": 330,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "section_obj",
            "line": 418,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_key",
            "line": 432,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "file_hash",
            "line": 615,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "obj",
            "line": 657,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "obj",
            "line": 676,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "data",
            "line": 332,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "old_value",
            "line": 354,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_key",
            "line": 360,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "parsed_value",
            "line": 422,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "parsed_value",
            "line": 424,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "parsed_value",
            "line": 426,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "__new__",
          "__init__",
          "_detect_environment",
          "_load_all_configurations",
          "_load_configuration_file",
          "_apply_configuration_data",
          "_load_environment_variables",
          "_apply_configuration_templates",
          "_apply_production_template",
          "_apply_staging_template",
          "_apply_development_template",
          "_apply_local_template",
          "_validate_all_configurations",
          "_calculate_configuration_hash",
          "_start_configuration_monitoring",
          "_configuration_monitor_loop",
          "_calculate_file_hashes",
          "reload_configuration",
          "get_configuration_value",
          "set_configuration_value",
          "add_change_listener",
          "remove_change_listener",
          "to_dict",
          "_filter_sensitive_data",
          "save_configuration",
          "get_audit_log",
          "export_configuration",
          "validate_configuration_schema",
          "get_configuration_summary",
          "shutdown"
        ]
      },
      {
        "name": "LanguageConfig",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\multilingual_docs.py",
        "line": 56,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ProductionConfig",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\production_ready_docs.py",
        "line": 57,
        "attributes": [],
        "methods": []
      },
      {
        "name": "DeploymentConfiguration",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\service_oriented_arch_docs.py",
        "line": 70,
        "attributes": [],
        "methods": []
      },
      {
        "name": "YAMLConfigProcessor",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\yaml_config_processor.py",
        "line": 51,
        "attributes": [
          {
            "name": "errors",
            "line": 87,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "ci_cd_indicators",
            "line": 125,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "doc_indicators",
            "line": 130,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "metadata",
            "line": 139,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "issues",
            "line": 179,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "schema",
            "line": 184,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "issues",
            "line": 221,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "info",
            "line": 224,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "paths",
            "line": 240,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "issues",
            "line": 267,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "api_version",
            "line": 269,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "kind",
            "line": 270,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "metadata",
            "line": 290,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "issues",
            "line": 302,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "services",
            "line": 304,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "result",
            "line": 338,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "result",
            "line": 354,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "services",
            "line": 379,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "result",
            "line": 381,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "result",
            "line": 405,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "result",
            "line": 417,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "result",
            "line": 435,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "endpoints",
            "line": 447,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "paths",
            "line": 449,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "triggers",
            "line": 471,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "trigger_keys",
            "line": 474,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "lines",
            "line": 515,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "processed_data",
            "line": 535,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "changes",
            "line": 590,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "data",
            "line": 94,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "info",
            "line": 142,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "version",
            "line": 198,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "patterns",
            "line": 199,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "methods",
            "line": 253,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "http_methods",
            "line": 254,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "spec",
            "line": 274,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "spec",
            "line": 366,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "endpoints",
            "line": 544,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "errors",
            "line": 562,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "warnings",
            "line": 563,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "content",
            "line": 91,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "k8s_metadata",
            "line": 156,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "labels",
            "line": 161,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "spec",
            "line": 371,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "trigger_value",
            "line": 478,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "all_keys",
            "line": 599,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "services",
            "line": 168,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "service_count",
            "line": 172,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "current_path",
            "line": 602,
            "type": "unknown",
            "is_constant": false
          }
        ],
        "methods": [
          "__init__",
          "_load_validation_schemas",
          "load_yaml_file",
          "identify_yaml_type",
          "extract_metadata",
          "validate_yaml",
          "_validate_openapi_spec",
          "_validate_kubernetes_config",
          "_validate_docker_compose",
          "process_yaml_content",
          "_process_openapi_spec",
          "_process_kubernetes_config",
          "_process_docker_compose",
          "_process_ci_cd_config",
          "_process_application_config",
          "_process_documentation_config",
          "_extract_endpoints_from_openapi",
          "_extract_ci_triggers",
          "_analyze_navigation",
          "generate_documentation_summary",
          "convert_yaml_to_json",
          "convert_json_to_yaml",
          "compare_yaml_versions"
        ]
      },
      {
        "name": "InstantGraphConfig",
        "file": "TestMaster\\core\\domains\\intelligence\\knowledge_graph\\instant_graph_engine.py",
        "line": 45,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ConfigScope",
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\adaptive_configuration_manager.py",
        "line": 30,
        "attributes": [
          {
            "name": "SYSTEM",
            "line": 31,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "APPLICATION",
            "line": 32,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "COMPONENT",
            "line": 33,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "USER",
            "line": 34,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "ENVIRONMENT",
            "line": 35,
            "type": "string",
            "is_constant": true
          }
        ],
        "methods": []
      },
      {
        "name": "ConfigDataType",
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\adaptive_configuration_manager.py",
        "line": 38,
        "attributes": [
          {
            "name": "INTEGER",
            "line": 39,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "FLOAT",
            "line": 40,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "BOOLEAN",
            "line": 41,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "STRING",
            "line": 42,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "LIST",
            "line": 43,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "DICT",
            "line": 44,
            "type": "string",
            "is_constant": true
          }
        ],
        "methods": []
      },
      {
        "name": "ConfigParameter",
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\adaptive_configuration_manager.py",
        "line": 57,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ConfigurationProfile",
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\adaptive_configuration_manager.py",
        "line": 89,
        "attributes": [],
        "methods": []
      },
      {
        "name": "AdaptiveConfigurationManager",
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\adaptive_configuration_manager.py",
        "line": 142,
        "attributes": [
          {
            "name": "param_summary",
            "line": 621,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "experiment_summary",
            "line": 635,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "ml_status",
            "line": 646,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "successful_optimizations",
            "line": 674,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "profile_id",
            "line": 352,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "experiment_id",
            "line": 433,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "valid_params",
            "line": 436,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "baseline_config",
            "line": 442,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "parameter_space",
            "line": 448,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "experiment",
            "line": 475,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "current_config",
            "line": 510,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "current_score",
            "line": 511,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "experiment",
            "line": 688,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "parameter",
            "line": 276,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "parameter",
            "line": 312,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "old_value",
            "line": 313,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "impact_score",
            "line": 326,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "profile",
            "line": 355,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "profile",
            "line": 385,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "rollback_snapshot",
            "line": 388,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "applied_changes",
            "line": 391,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "param",
            "line": 450,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "experiment",
            "line": 505,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "candidate_config",
            "line": 522,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "candidate_score",
            "line": 527,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "improvement",
            "line": 532,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "current_config",
            "line": 534,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "current_score",
            "line": 535,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "recent_improvements",
            "line": 556,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "old_value",
            "line": 394,
            "type": "unknown",
            "is_constant": false
          }
        ],
        "methods": [
          "__init__",
          "_initialize_ml_models",
          "register_parameter",
          "update_parameter",
          "create_configuration_profile",
          "apply_configuration_profile",
          "get_configuration_dashboard",
          "_calculate_optimization_success_rate"
        ]
      },
      {
        "name": "DetectionConfig",
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\anomaly_detection.py",
        "line": 63,
        "attributes": [],
        "methods": []
      },
      {
        "name": "EnsembleConfig",
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\ensemble_meta_learner.py",
        "line": 36,
        "attributes": [],
        "methods": []
      },
      {
        "name": "PipelineStageConfig",
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\intelligent_data_pipeline.py",
        "line": 93,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ExportConfiguration",
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\telemetry_export_manager.py",
        "line": 31,
        "attributes": [],
        "methods": []
      },
      {
        "name": "RetryParams",
        "file": "TestMaster\\core\\domains\\intelligence\\reliability\\quantum_retry_strategies.py",
        "line": 46,
        "attributes": [],
        "methods": []
      },
      {
        "name": "LoadConfig",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\load_generator.py",
        "line": 37,
        "attributes": [],
        "methods": []
      },
      {
        "name": "TestConfiguration",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\test_orchestrator.py",
        "line": 45,
        "attributes": [],
        "methods": []
      },
      {
        "name": "TestGenerationConfig",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
        "line": 45,
        "attributes": [],
        "methods": []
      },
      {
        "name": "UniversalTestConfig",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\ai_generation\\universal_ai_generator.py",
        "line": 31,
        "attributes": [],
        "methods": []
      },
      {
        "name": "AIGenerationConfig",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\components\\integration_generator.py",
        "line": 342,
        "attributes": [],
        "methods": []
      },
      {
        "name": "CommunicationTestConfig",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\patterns\\agency_swarm_patterns.py",
        "line": 57,
        "attributes": [],
        "methods": []
      },
      {
        "name": "GuardrailTestConfig",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\patterns\\crewai_patterns.py",
        "line": 223,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ChartConfiguration",
        "file": "TestMaster\\core\\domains\\intelligence\\visualization\\data_visualization_engines.py",
        "line": 47,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ProjectConfig",
        "file": "TestMaster\\core\\domains\\intelligence\\visualization\\development_tools_ui.py",
        "line": 30,
        "attributes": [],
        "methods": [
          "create"
        ]
      },
      {
        "name": "FallbackConfiguration",
        "file": "TestMaster\\core\\domains\\security\\adaptive_fallback_orchestrator.py",
        "line": 90,
        "attributes": [],
        "methods": []
      },
      {
        "name": "SecurityConfig",
        "file": "TestMaster\\core\\domains\\security\\api_security_layer.py",
        "line": 50,
        "attributes": [],
        "methods": [
          "__post_init__"
        ]
      },
      {
        "name": "CircuitBreakerConfig",
        "file": "TestMaster\\core\\domains\\security\\circuit_breaker_matrix.py",
        "line": 58,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ConfigSecurityLevel",
        "file": "TestMaster\\core\\domains\\security\\configuration_security.py",
        "line": 19,
        "attributes": [
          {
            "name": "PUBLIC",
            "line": 21,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "INTERNAL",
            "line": 22,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "CONFIDENTIAL",
            "line": 23,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "SECRET",
            "line": 24,
            "type": "string",
            "is_constant": true
          }
        ],
        "methods": []
      },
      {
        "name": "ConfigValidationRule",
        "file": "TestMaster\\core\\domains\\security\\configuration_security.py",
        "line": 28,
        "attributes": [],
        "methods": []
      },
      {
        "name": "SecureConfigField",
        "file": "TestMaster\\core\\domains\\security\\configuration_security.py",
        "line": 41,
        "attributes": [],
        "methods": [
          "__post_init__",
          "display_value"
        ]
      },
      {
        "name": "ConfigurationValidator",
        "file": "TestMaster\\core\\domains\\security\\configuration_security.py",
        "line": 68,
        "attributes": [
          {
            "name": "errors",
            "line": 164,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "rules",
            "line": 129,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "is_valid",
            "line": 151,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "value_str",
            "line": 176,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "rule_errors",
            "line": 135,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "__init__",
          "validate_field",
          "_apply_rule"
        ]
      },
      {
        "name": "SecureConfigurationManager",
        "file": "TestMaster\\core\\domains\\security\\configuration_security.py",
        "line": 211,
        "attributes": [
          {
            "name": "loaded_fields",
            "line": 234,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "field",
            "line": 325,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "validation_results",
            "line": 330,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "field_lower",
            "line": 406,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "field",
            "line": 281,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "is_valid",
            "line": 289,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "old_value",
            "line": 292,
            "type": "NoneType",
            "is_constant": false
          },
          {
            "name": "invalid_count",
            "line": 338,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "safe_config",
            "line": 352,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "total_fields",
            "line": 372,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "level_counts",
            "line": 375,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "invalid_count",
            "line": 376,
            "type": "number",
            "is_constant": false
          },
          {
            "name": "recent_changes",
            "line": 386,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "error",
            "line": 271,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "old_value",
            "line": 294,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "error",
            "line": 315,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "is_valid",
            "line": 334,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "error",
            "line": 345,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "level",
            "line": 379,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "field_name",
            "line": 239,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "security_level",
            "line": 242,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "field",
            "line": 244,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "is_valid",
            "line": 252,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "__init__",
          "load_from_environment",
          "set_field",
          "get_field",
          "get_value",
          "validate_all",
          "export_safe_config",
          "get_security_summary",
          "_determine_security_level",
          "_audit_change"
        ]
      },
      {
        "name": "ContainerConfiguration",
        "file": "TestMaster\\core\\domains\\security\\container_security_validator.py",
        "line": 63,
        "attributes": [],
        "methods": [
          "runs_as_root",
          "has_privileged_ports"
        ]
      },
      {
        "name": "PersistenceConfig",
        "file": "TestMaster\\core\\domains\\security\\flow_persistence_security.py",
        "line": 54,
        "attributes": [],
        "methods": [
          "__post_init__"
        ]
      },
      {
        "name": "TLSConfiguration",
        "file": "TestMaster\\core\\domains\\security\\network_security_controls.py",
        "line": 74,
        "attributes": [
          {
            "name": "context",
            "line": 91,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "cipher_string",
            "line": 118,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "create_ssl_context"
        ]
      },
      {
        "name": "RetryConfig",
        "file": "TestMaster\\core\\domains\\security\\retry_mechanism_system.py",
        "line": 68,
        "attributes": [],
        "methods": [
          "__post_init__"
        ]
      },
      {
        "name": "TLSConfiguration",
        "file": "TestMaster\\core\\domains\\security\\service_mesh_security.py",
        "line": 114,
        "attributes": [
          {
            "name": "context",
            "line": 131,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "cert",
            "line": 167,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "__init__",
          "_create_ssl_context",
          "validate_certificate"
        ]
      },
      {
        "name": "ThreadSafetyConfig",
        "file": "TestMaster\\core\\domains\\security\\thread_safety_manager.py",
        "line": 22,
        "attributes": [],
        "methods": [
          "__post_init__"
        ]
      },
      {
        "name": "LanguageConfig",
        "file": "TestMaster\\core\\domains\\testing\\multi_modal_test_engine.py",
        "line": 45,
        "attributes": [],
        "methods": []
      },
      {
        "name": "LanguageConfigManager",
        "file": "TestMaster\\core\\domains\\testing\\multi_modal_test_engine.py",
        "line": 453,
        "attributes": [
          {
            "name": "configs",
            "line": 461,
            "type": "dict",
            "is_constant": false
          }
        ],
        "methods": [
          "__init__",
          "_initialize_language_configs",
          "get_config",
          "add_custom_config"
        ]
      },
      {
        "name": "TestGenerationConfig",
        "file": "TestMaster\\core\\domains\\testing\\supercharged_test_generator.py_stub_backup_20250821_042438.py",
        "line": 22,
        "attributes": [],
        "methods": [
          "__post_init__"
        ]
      },
      {
        "name": "ConfigurationManager",
        "file": "TestMaster\\core\\domains\\testing\\test_integration_hub.py",
        "line": 146,
        "attributes": [
          {
            "name": "schema",
            "line": 193,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_file",
            "line": 207,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "config_data",
            "line": 164,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "__init__",
          "_load_configurations",
          "register_schema",
          "get_configuration",
          "set_configuration",
          "_validate_configuration",
          "_save_configuration"
        ]
      },
      {
        "name": "ConfigurationLayer",
        "file": "TestMaster\\core\\foundation\\configuration\\base\\config_base.py",
        "line": 24,
        "attributes": [
          {
            "name": "FOUNDATION",
            "line": 26,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "DOMAIN",
            "line": 27,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "ORCHESTRATION",
            "line": 28,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "SERVICES",
            "line": 29,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "UNIFIED",
            "line": 30,
            "type": "string",
            "is_constant": true
          }
        ],
        "methods": []
      },
      {
        "name": "ConfigurationScope",
        "file": "TestMaster\\core\\foundation\\configuration\\base\\config_base.py",
        "line": 33,
        "attributes": [
          {
            "name": "GLOBAL",
            "line": 35,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "LAYER",
            "line": 36,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "DOMAIN",
            "line": 37,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "MODULE",
            "line": 38,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "INSTANCE",
            "line": 39,
            "type": "string",
            "is_constant": true
          }
        ],
        "methods": []
      },
      {
        "name": "ConfigurationMetadata",
        "file": "TestMaster\\core\\foundation\\configuration\\base\\config_base.py",
        "line": 43,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ConfigurationBase",
        "file": "TestMaster\\core\\foundation\\configuration\\base\\config_base.py",
        "line": 55,
        "attributes": [
          {
            "name": "scope",
            "line": 118,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "scope",
            "line": 160,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "parent_config",
            "line": 171,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "merged_config",
            "line": 174,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "config_dict",
            "line": 185,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "errors",
            "line": 202,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "schema_errors",
            "line": 214,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "final_config",
            "line": 251,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "depth",
            "line": 297,
            "type": "number",
            "is_constant": false
          },
          {
            "name": "current",
            "line": 298,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "value",
            "line": 143,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "parent_config",
            "line": 255,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "current",
            "line": 301,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "value",
            "line": 146,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "validator_errors",
            "line": 207,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "value",
            "line": 149,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "value",
            "line": 152,
            "type": "unknown",
            "is_constant": false
          }
        ],
        "methods": [
          "__init__",
          "get_default_config",
          "get_schema",
          "add_child",
          "remove_child",
          "set",
          "get",
          "update",
          "merge_from_parent",
          "to_dict",
          "validate",
          "add_validator",
          "add_change_listener",
          "reload",
          "get_hierarchy_info",
          "_compute_final_config",
          "_invalidate_cache",
          "_validate_value",
          "_validate_against_schema",
          "_notify_change",
          "_get_inheritance_depth",
          "__str__",
          "__repr__"
        ]
      },
      {
        "name": "LayeredConfiguration",
        "file": "TestMaster\\core\\foundation\\configuration\\base\\config_base.py",
        "line": 312,
        "attributes": [],
        "methods": [
          "__init__",
          "get_layer_config",
          "merge_domain_config"
        ]
      },
      {
        "name": "ConfigurationValidator",
        "file": "TestMaster\\core\\foundation\\configuration\\base\\validation.py",
        "line": 41,
        "attributes": [
          {
            "name": "results",
            "line": 61,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "global_results",
            "line": 74,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "results",
            "line": 162,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "results",
            "line": 174,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "results",
            "line": 192,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "results",
            "line": 208,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "required",
            "line": 211,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "properties",
            "line": 215,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "dependencies",
            "line": 222,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "exclusive_groups",
            "line": 226,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "results",
            "line": 233,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "results",
            "line": 270,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "results",
            "line": 295,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "url_pattern",
            "line": 338,
            "type": "string",
            "is_constant": false
          },
          {
            "name": "type_map",
            "line": 346,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "schema_results",
            "line": 65,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "key_results",
            "line": 70,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "present_keys",
            "line": 195,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "expected_type",
            "line": 237,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "pattern_result",
            "line": 256,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "choice_result",
            "line": 262,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "field_results",
            "line": 218,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "type_result",
            "line": 239,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "range_result",
            "line": 246,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "validator_results",
            "line": 299,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "error_message",
            "line": 275,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "__init__",
          "validate",
          "add_validator",
          "add_global_validator",
          "validate_type",
          "validate_range",
          "validate_pattern",
          "validate_choices",
          "validate_required",
          "validate_dependencies",
          "validate_mutually_exclusive",
          "_validate_schema",
          "_validate_field_schema",
          "_validate_key",
          "_validate_global",
          "_register_builtin_validators",
          "_validate_url",
          "_get_type_from_string"
        ]
      },
      {
        "name": "AdapterConfiguration",
        "file": "TestMaster\\core\\integration\\foundations\\abstractions\\adapter_abstractions.py",
        "line": 114,
        "attributes": [],
        "methods": []
      },
      {
        "name": "IntegrationConfiguration",
        "file": "TestMaster\\core\\integration\\foundations\\abstractions\\integration_base.py",
        "line": 121,
        "attributes": [],
        "methods": [
          "get_setting",
          "set_setting"
        ]
      },
      {
        "name": "ProtocolConfiguration",
        "file": "TestMaster\\core\\intelligence\\coordination_protocol_manager.py",
        "line": 116,
        "attributes": [],
        "methods": []
      },
      {
        "name": "IntelligenceHubConfig",
        "file": "TestMaster\\core\\intelligence\\__init__.py",
        "line": 177,
        "attributes": [],
        "methods": []
      },
      {
        "name": "BusinessAnalysisConfiguration",
        "file": "TestMaster\\core\\intelligence\\analysis\\business_base.py",
        "line": 172,
        "attributes": [],
        "methods": [
          "__init__"
        ]
      },
      {
        "name": "DebtConfiguration",
        "file": "TestMaster\\core\\intelligence\\analysis\\debt_base.py",
        "line": 89,
        "attributes": [
          {
            "name": "DEBT_COST_FACTORS",
            "line": 93,
            "type": "dict",
            "is_constant": true
          },
          {
            "name": "INTEREST_RATES",
            "line": 112,
            "type": "dict",
            "is_constant": true
          },
          {
            "name": "PRODUCTIVITY_FACTORS",
            "line": 123,
            "type": "dict",
            "is_constant": true
          },
          {
            "name": "COMPLEXITY_THRESHOLDS",
            "line": 132,
            "type": "dict",
            "is_constant": true
          },
          {
            "name": "RISK_MULTIPLIERS",
            "line": 140,
            "type": "dict",
            "is_constant": true
          }
        ],
        "methods": []
      },
      {
        "name": "SemanticConfiguration",
        "file": "TestMaster\\core\\intelligence\\analysis\\semantic_base.py",
        "line": 103,
        "attributes": [],
        "methods": [
          "__init__"
        ]
      },
      {
        "name": "AnalyticsHubConfig",
        "file": "TestMaster\\core\\intelligence\\analytics\\__init__.py",
        "line": 90,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ConfigurationLevel",
        "file": "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
        "line": 50,
        "attributes": [
          {
            "name": "DEFAULTS",
            "line": 52,
            "type": "number",
            "is_constant": true
          },
          {
            "name": "ENVIRONMENT",
            "line": 53,
            "type": "number",
            "is_constant": true
          },
          {
            "name": "USER",
            "line": 54,
            "type": "number",
            "is_constant": true
          },
          {
            "name": "RUNTIME",
            "line": 55,
            "type": "number",
            "is_constant": true
          },
          {
            "name": "OVERRIDE",
            "line": 56,
            "type": "number",
            "is_constant": true
          }
        ],
        "methods": []
      },
      {
        "name": "ConfigurationValue",
        "file": "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
        "line": 67,
        "attributes": [],
        "methods": [
          "__post_init__",
          "_decrypt_value"
        ]
      },
      {
        "name": "IntelligenceConfig",
        "file": "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
        "line": 91,
        "attributes": [],
        "methods": []
      },
      {
        "name": "SecurityConfig",
        "file": "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
        "line": 108,
        "attributes": [],
        "methods": []
      },
      {
        "name": "MonitoringConfig",
        "file": "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
        "line": 125,
        "attributes": [],
        "methods": []
      },
      {
        "name": "DatabaseConfig",
        "file": "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
        "line": 146,
        "attributes": [],
        "methods": []
      },
      {
        "name": "CachingConfig",
        "file": "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
        "line": 165,
        "attributes": [],
        "methods": []
      },
      {
        "name": "APIConfig",
        "file": "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
        "line": 184,
        "attributes": [],
        "methods": []
      },
      {
        "name": "EnterpriseConfigManager",
        "file": "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
        "line": 206,
        "attributes": [
          {
            "name": "_instance",
            "line": 212,
            "type": "NoneType",
            "is_constant": false
          },
          {
            "name": "_lock",
            "line": 213,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "env_var",
            "line": 273,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "hostname",
            "line": 287,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "env_mappings",
            "line": 380,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "validation_errors",
            "line": 543,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "config_dict",
            "line": 581,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_str",
            "line": 582,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "file_hashes",
            "line": 611,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "old_hash",
            "line": 622,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "config_dict",
            "line": 728,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "sensitive_fields",
            "line": 751,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "config_file",
            "line": 770,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "config_dict",
            "line": 771,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_dict",
            "line": 800,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "validation_result",
            "line": 811,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "marker_file",
            "line": 282,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_file",
            "line": 302,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "value",
            "line": 415,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "monitor_thread",
            "line": 588,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "new_hash",
            "line": 626,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "parts",
            "line": 652,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "obj",
            "line": 653,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "parts",
            "line": 670,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "obj",
            "line": 671,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "old_value",
            "line": 681,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "section",
            "line": 350,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "current_hash",
            "line": 597,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "data",
            "line": 330,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "section_obj",
            "line": 418,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_key",
            "line": 432,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "file_hash",
            "line": 615,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "obj",
            "line": 657,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "obj",
            "line": 676,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "data",
            "line": 332,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "old_value",
            "line": 354,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_key",
            "line": 360,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "parsed_value",
            "line": 422,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "parsed_value",
            "line": 424,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "parsed_value",
            "line": 426,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "__new__",
          "__init__",
          "_detect_environment",
          "_load_all_configurations",
          "_load_configuration_file",
          "_apply_configuration_data",
          "_load_environment_variables",
          "_apply_configuration_templates",
          "_apply_production_template",
          "_apply_staging_template",
          "_apply_development_template",
          "_apply_local_template",
          "_validate_all_configurations",
          "_calculate_configuration_hash",
          "_start_configuration_monitoring",
          "_configuration_monitor_loop",
          "_calculate_file_hashes",
          "reload_configuration",
          "get_configuration_value",
          "set_configuration_value",
          "add_change_listener",
          "remove_change_listener",
          "to_dict",
          "_filter_sensitive_data",
          "save_configuration",
          "get_audit_log",
          "export_configuration",
          "validate_configuration_schema",
          "get_configuration_summary",
          "shutdown"
        ]
      },
      {
        "name": "LanguageConfig",
        "file": "TestMaster\\core\\intelligence\\documentation\\multilingual_docs.py",
        "line": 56,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ProductionConfig",
        "file": "TestMaster\\core\\intelligence\\documentation\\production_ready_docs.py",
        "line": 57,
        "attributes": [],
        "methods": []
      },
      {
        "name": "DeploymentConfiguration",
        "file": "TestMaster\\core\\intelligence\\documentation\\service_oriented_arch_docs.py",
        "line": 70,
        "attributes": [],
        "methods": []
      },
      {
        "name": "YAMLConfigProcessor",
        "file": "TestMaster\\core\\intelligence\\documentation\\yaml_config_processor.py",
        "line": 51,
        "attributes": [
          {
            "name": "errors",
            "line": 87,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "ci_cd_indicators",
            "line": 125,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "doc_indicators",
            "line": 130,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "metadata",
            "line": 139,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "issues",
            "line": 179,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "schema",
            "line": 184,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "issues",
            "line": 221,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "info",
            "line": 224,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "paths",
            "line": 240,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "issues",
            "line": 267,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "api_version",
            "line": 269,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "kind",
            "line": 270,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "metadata",
            "line": 290,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "issues",
            "line": 302,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "services",
            "line": 304,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "result",
            "line": 338,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "result",
            "line": 354,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "services",
            "line": 379,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "result",
            "line": 381,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "result",
            "line": 405,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "result",
            "line": 417,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "result",
            "line": 435,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "endpoints",
            "line": 447,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "paths",
            "line": 449,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "triggers",
            "line": 471,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "trigger_keys",
            "line": 474,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "lines",
            "line": 515,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "processed_data",
            "line": 535,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "changes",
            "line": 590,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "data",
            "line": 94,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "info",
            "line": 142,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "version",
            "line": 198,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "patterns",
            "line": 199,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "methods",
            "line": 253,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "http_methods",
            "line": 254,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "spec",
            "line": 274,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "spec",
            "line": 366,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "endpoints",
            "line": 544,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "errors",
            "line": 562,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "warnings",
            "line": 563,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "content",
            "line": 91,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "k8s_metadata",
            "line": 156,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "labels",
            "line": 161,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "spec",
            "line": 371,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "trigger_value",
            "line": 478,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "all_keys",
            "line": 599,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "services",
            "line": 168,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "service_count",
            "line": 172,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "current_path",
            "line": 602,
            "type": "unknown",
            "is_constant": false
          }
        ],
        "methods": [
          "__init__",
          "_load_validation_schemas",
          "load_yaml_file",
          "identify_yaml_type",
          "extract_metadata",
          "validate_yaml",
          "_validate_openapi_spec",
          "_validate_kubernetes_config",
          "_validate_docker_compose",
          "process_yaml_content",
          "_process_openapi_spec",
          "_process_kubernetes_config",
          "_process_docker_compose",
          "_process_ci_cd_config",
          "_process_application_config",
          "_process_documentation_config",
          "_extract_endpoints_from_openapi",
          "_extract_ci_triggers",
          "_analyze_navigation",
          "generate_documentation_summary",
          "convert_yaml_to_json",
          "convert_json_to_yaml",
          "compare_yaml_versions"
        ]
      },
      {
        "name": "InstantGraphConfig",
        "file": "TestMaster\\core\\intelligence\\knowledge_graph\\instant_graph_engine.py",
        "line": 45,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ConfigScope",
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\adaptive_configuration_manager.py",
        "line": 30,
        "attributes": [
          {
            "name": "SYSTEM",
            "line": 31,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "APPLICATION",
            "line": 32,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "COMPONENT",
            "line": 33,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "USER",
            "line": 34,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "ENVIRONMENT",
            "line": 35,
            "type": "string",
            "is_constant": true
          }
        ],
        "methods": []
      },
      {
        "name": "ConfigDataType",
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\adaptive_configuration_manager.py",
        "line": 38,
        "attributes": [
          {
            "name": "INTEGER",
            "line": 39,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "FLOAT",
            "line": 40,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "BOOLEAN",
            "line": 41,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "STRING",
            "line": 42,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "LIST",
            "line": 43,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "DICT",
            "line": 44,
            "type": "string",
            "is_constant": true
          }
        ],
        "methods": []
      },
      {
        "name": "ConfigParameter",
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\adaptive_configuration_manager.py",
        "line": 57,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ConfigurationProfile",
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\adaptive_configuration_manager.py",
        "line": 89,
        "attributes": [],
        "methods": []
      },
      {
        "name": "AdaptiveConfigurationManager",
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\adaptive_configuration_manager.py",
        "line": 142,
        "attributes": [
          {
            "name": "param_summary",
            "line": 621,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "experiment_summary",
            "line": 635,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "ml_status",
            "line": 646,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "successful_optimizations",
            "line": 674,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "profile_id",
            "line": 352,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "experiment_id",
            "line": 433,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "valid_params",
            "line": 436,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "baseline_config",
            "line": 442,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "parameter_space",
            "line": 448,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "experiment",
            "line": 475,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "current_config",
            "line": 510,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "current_score",
            "line": 511,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "experiment",
            "line": 688,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "parameter",
            "line": 276,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "parameter",
            "line": 312,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "old_value",
            "line": 313,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "impact_score",
            "line": 326,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "profile",
            "line": 355,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "profile",
            "line": 385,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "rollback_snapshot",
            "line": 388,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "applied_changes",
            "line": 391,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "param",
            "line": 450,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "experiment",
            "line": 505,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "candidate_config",
            "line": 522,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "candidate_score",
            "line": 527,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "improvement",
            "line": 532,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "current_config",
            "line": 534,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "current_score",
            "line": 535,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "recent_improvements",
            "line": 556,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "old_value",
            "line": 394,
            "type": "unknown",
            "is_constant": false
          }
        ],
        "methods": [
          "__init__",
          "_initialize_ml_models",
          "register_parameter",
          "update_parameter",
          "create_configuration_profile",
          "apply_configuration_profile",
          "get_configuration_dashboard",
          "_calculate_optimization_success_rate"
        ]
      },
      {
        "name": "DetectionConfig",
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\anomaly_detection.py",
        "line": 63,
        "attributes": [],
        "methods": []
      },
      {
        "name": "EnsembleConfig",
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\ensemble_meta_learner.py",
        "line": 36,
        "attributes": [],
        "methods": []
      },
      {
        "name": "PipelineStageConfig",
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\intelligent_data_pipeline.py",
        "line": 93,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ExportConfiguration",
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\telemetry_export_manager.py",
        "line": 31,
        "attributes": [],
        "methods": []
      },
      {
        "name": "RetryParams",
        "file": "TestMaster\\core\\intelligence\\reliability\\quantum_retry_strategies.py",
        "line": 46,
        "attributes": [],
        "methods": []
      },
      {
        "name": "LoadConfig",
        "file": "TestMaster\\core\\intelligence\\testing\\load_generator.py",
        "line": 37,
        "attributes": [],
        "methods": []
      },
      {
        "name": "TestConfiguration",
        "file": "TestMaster\\core\\intelligence\\testing\\test_orchestrator.py",
        "line": 45,
        "attributes": [],
        "methods": []
      },
      {
        "name": "TestGenerationConfig",
        "file": "TestMaster\\core\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
        "line": 45,
        "attributes": [],
        "methods": []
      },
      {
        "name": "UniversalTestConfig",
        "file": "TestMaster\\core\\intelligence\\testing\\ai_generation\\universal_ai_generator.py",
        "line": 31,
        "attributes": [],
        "methods": []
      },
      {
        "name": "AIGenerationConfig",
        "file": "TestMaster\\core\\intelligence\\testing\\components\\integration_generator.py",
        "line": 342,
        "attributes": [],
        "methods": []
      },
      {
        "name": "CommunicationTestConfig",
        "file": "TestMaster\\core\\intelligence\\testing\\patterns\\agency_swarm_patterns.py",
        "line": 57,
        "attributes": [],
        "methods": []
      },
      {
        "name": "GuardrailTestConfig",
        "file": "TestMaster\\core\\intelligence\\testing\\patterns\\crewai_patterns.py",
        "line": 223,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ChartConfiguration",
        "file": "TestMaster\\core\\intelligence\\visualization\\data_visualization_engines.py",
        "line": 47,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ProjectConfig",
        "file": "TestMaster\\core\\intelligence\\visualization\\development_tools_ui.py",
        "line": 30,
        "attributes": [],
        "methods": [
          "create"
        ]
      },
      {
        "name": "OrchestrationConfiguration",
        "file": "TestMaster\\core\\orchestration\\configuration\\orchestration_config.py",
        "line": 98,
        "attributes": [
          {
            "name": "config",
            "line": 126,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "base_config",
            "line": 362,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "mode_specific",
            "line": 364,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "default_config",
            "line": 490,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "validator",
            "line": 497,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "execution",
            "line": 502,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "mode",
            "line": 503,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "lb_config",
            "line": 511,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "hub_config",
            "line": 512,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "__init__",
          "get_default_config",
          "_get_foundations_config",
          "get_schema",
          "get_orchestration_mode_config",
          "get_integration_hub_config",
          "get_load_balancing_config",
          "get_monitoring_config",
          "get_foundations_config",
          "get_hybrid_config",
          "get_intelligence_foundations_config",
          "get_swarm_foundations_config",
          "get_communication_config",
          "get_coordination_config",
          "get_integration_foundations_config",
          "enable_high_performance_mode",
          "enable_development_mode",
          "_initialize_default_config",
          "_add_orchestration_validators"
        ]
      },
      {
        "name": "AgentConfiguration",
        "file": "TestMaster\\core\\orchestration\\foundations\\abstractions\\agent_abstractions.py",
        "line": 70,
        "attributes": [],
        "methods": []
      },
      {
        "name": "FallbackConfiguration",
        "file": "TestMaster\\core\\security\\adaptive_fallback_orchestrator.py",
        "line": 90,
        "attributes": [],
        "methods": []
      },
      {
        "name": "SecurityConfig",
        "file": "TestMaster\\core\\security\\api_security_layer.py",
        "line": 50,
        "attributes": [],
        "methods": [
          "__post_init__"
        ]
      },
      {
        "name": "CircuitBreakerConfig",
        "file": "TestMaster\\core\\security\\circuit_breaker_matrix.py",
        "line": 58,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ConfigSecurityLevel",
        "file": "TestMaster\\core\\security\\configuration_security.py",
        "line": 19,
        "attributes": [
          {
            "name": "PUBLIC",
            "line": 21,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "INTERNAL",
            "line": 22,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "CONFIDENTIAL",
            "line": 23,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "SECRET",
            "line": 24,
            "type": "string",
            "is_constant": true
          }
        ],
        "methods": []
      },
      {
        "name": "ConfigValidationRule",
        "file": "TestMaster\\core\\security\\configuration_security.py",
        "line": 28,
        "attributes": [],
        "methods": []
      },
      {
        "name": "SecureConfigField",
        "file": "TestMaster\\core\\security\\configuration_security.py",
        "line": 41,
        "attributes": [],
        "methods": [
          "__post_init__",
          "display_value"
        ]
      },
      {
        "name": "ConfigurationValidator",
        "file": "TestMaster\\core\\security\\configuration_security.py",
        "line": 68,
        "attributes": [
          {
            "name": "errors",
            "line": 164,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "rules",
            "line": 129,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "is_valid",
            "line": 151,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "value_str",
            "line": 176,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "rule_errors",
            "line": 135,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "__init__",
          "validate_field",
          "_apply_rule"
        ]
      },
      {
        "name": "SecureConfigurationManager",
        "file": "TestMaster\\core\\security\\configuration_security.py",
        "line": 211,
        "attributes": [
          {
            "name": "loaded_fields",
            "line": 234,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "field",
            "line": 325,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "validation_results",
            "line": 330,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "field_lower",
            "line": 406,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "field",
            "line": 281,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "is_valid",
            "line": 289,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "old_value",
            "line": 292,
            "type": "NoneType",
            "is_constant": false
          },
          {
            "name": "invalid_count",
            "line": 338,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "safe_config",
            "line": 352,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "total_fields",
            "line": 372,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "level_counts",
            "line": 375,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "invalid_count",
            "line": 376,
            "type": "number",
            "is_constant": false
          },
          {
            "name": "recent_changes",
            "line": 386,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "error",
            "line": 271,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "old_value",
            "line": 294,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "error",
            "line": 315,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "is_valid",
            "line": 334,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "error",
            "line": 345,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "level",
            "line": 379,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "field_name",
            "line": 239,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "security_level",
            "line": 242,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "field",
            "line": 244,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "is_valid",
            "line": 252,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "__init__",
          "load_from_environment",
          "set_field",
          "get_field",
          "get_value",
          "validate_all",
          "export_safe_config",
          "get_security_summary",
          "_determine_security_level",
          "_audit_change"
        ]
      },
      {
        "name": "ContainerConfiguration",
        "file": "TestMaster\\core\\security\\container_security_validator.py",
        "line": 63,
        "attributes": [],
        "methods": [
          "runs_as_root",
          "has_privileged_ports"
        ]
      },
      {
        "name": "SecretConfig",
        "file": "TestMaster\\core\\security\\deployment_pipeline_security.py",
        "line": 54,
        "attributes": [],
        "methods": [
          "__post_init__",
          "is_recently_used"
        ]
      },
      {
        "name": "PersistenceConfig",
        "file": "TestMaster\\core\\security\\flow_persistence_security.py",
        "line": 54,
        "attributes": [],
        "methods": [
          "__post_init__"
        ]
      },
      {
        "name": "TLSConfiguration",
        "file": "TestMaster\\core\\security\\network_security_controls.py",
        "line": 74,
        "attributes": [
          {
            "name": "context",
            "line": 91,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "cipher_string",
            "line": 118,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "create_ssl_context"
        ]
      },
      {
        "name": "RetryConfig",
        "file": "TestMaster\\core\\security\\retry_mechanism_system.py",
        "line": 68,
        "attributes": [],
        "methods": [
          "__post_init__"
        ]
      },
      {
        "name": "TLSConfiguration",
        "file": "TestMaster\\core\\security\\service_mesh_security.py",
        "line": 114,
        "attributes": [
          {
            "name": "context",
            "line": 131,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "cert",
            "line": 167,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "__init__",
          "_create_ssl_context",
          "validate_certificate"
        ]
      },
      {
        "name": "ThreadSafetyConfig",
        "file": "TestMaster\\core\\security\\thread_safety_manager.py",
        "line": 22,
        "attributes": [],
        "methods": [
          "__post_init__"
        ]
      },
      {
        "name": "TeamConfiguration",
        "file": "TestMaster\\core\\state\\enhanced_state_manager.py",
        "line": 96,
        "attributes": [],
        "methods": [
          "to_dict"
        ]
      },
      {
        "name": "ServiceConfiguration",
        "file": "TestMaster\\core\\state\\enhanced_state_manager.py",
        "line": 123,
        "attributes": [],
        "methods": [
          "to_dict"
        ]
      },
      {
        "name": "LanguageConfig",
        "file": "TestMaster\\core\\testing\\multi_modal_test_engine.py",
        "line": 45,
        "attributes": [],
        "methods": []
      },
      {
        "name": "LanguageConfigManager",
        "file": "TestMaster\\core\\testing\\multi_modal_test_engine.py",
        "line": 453,
        "attributes": [
          {
            "name": "configs",
            "line": 461,
            "type": "dict",
            "is_constant": false
          }
        ],
        "methods": [
          "__init__",
          "_initialize_language_configs",
          "get_config",
          "add_custom_config"
        ]
      },
      {
        "name": "TestGenerationConfig",
        "file": "TestMaster\\core\\testing\\supercharged_test_generator.py_stub_backup_20250821_042438.py",
        "line": 22,
        "attributes": [],
        "methods": [
          "__post_init__"
        ]
      },
      {
        "name": "ConfigurationManager",
        "file": "TestMaster\\core\\testing\\test_integration_hub.py",
        "line": 146,
        "attributes": [
          {
            "name": "schema",
            "line": 193,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_file",
            "line": 207,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "config_data",
            "line": 164,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "__init__",
          "_load_configurations",
          "register_schema",
          "get_configuration",
          "set_configuration",
          "_validate_configuration",
          "_save_configuration"
        ]
      },
      {
        "name": "Config",
        "file": "TestMaster\\core\\tools\\type_safe_tools.py",
        "line": 78,
        "attributes": [
          {
            "name": "extra",
            "line": 79,
            "type": "string",
            "is_constant": false
          },
          {
            "name": "validate_assignment",
            "line": 80,
            "type": "bool",
            "is_constant": false
          }
        ],
        "methods": []
      },
      {
        "name": "Config",
        "file": "TestMaster\\core\\tools\\type_safe_tools.py",
        "line": 93,
        "attributes": [
          {
            "name": "extra",
            "line": 94,
            "type": "string",
            "is_constant": false
          },
          {
            "name": "use_enum_values",
            "line": 95,
            "type": "bool",
            "is_constant": false
          }
        ],
        "methods": []
      },
      {
        "name": "CircuitBreakerConfig",
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_circuit_breaker.py",
        "line": 36,
        "attributes": [],
        "methods": []
      },
      {
        "name": "RetryConfig",
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_retry_manager.py",
        "line": 34,
        "attributes": [],
        "methods": []
      },
      {
        "name": "SLAConfiguration",
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_sla_tracker.py",
        "line": 63,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ServiceConfig",
        "file": "TestMaster\\deployment\\enterprise_deployment.py",
        "line": 59,
        "attributes": [],
        "methods": []
      },
      {
        "name": "SwarmConfig",
        "file": "TestMaster\\deployment\\swarm_orchestrator.py",
        "line": 130,
        "attributes": [],
        "methods": []
      },
      {
        "name": "CacheConfiguration",
        "file": "TestMaster\\integration\\intelligent_caching_layer.py",
        "line": 213,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ConfigSection",
        "file": "TestMaster\\integration\\multi_environment_support.py",
        "line": 32,
        "attributes": [
          {
            "name": "API",
            "line": 34,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "DATABASE",
            "line": 35,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "CACHE",
            "line": 36,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "MONITORING",
            "line": 37,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "SECURITY",
            "line": 38,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "FEATURES",
            "line": 39,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "SCALING",
            "line": 40,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "NETWORKING",
            "line": 41,
            "type": "string",
            "is_constant": true
          }
        ],
        "methods": []
      },
      {
        "name": "EnvironmentConfig",
        "file": "TestMaster\\integration\\multi_environment_support.py",
        "line": 44,
        "attributes": [],
        "methods": []
      },
      {
        "name": "OrchestrationConfiguration",
        "file": "TestMaster\\orchestration\\unified_orchestrator.py",
        "line": 192,
        "attributes": [],
        "methods": [
          "to_dict"
        ]
      },
      {
        "name": "OrchestrationConfiguration",
        "file": "TestMaster\\orchestration\\modules\\data_models.py",
        "line": 187,
        "attributes": [],
        "methods": [
          "to_dict"
        ]
      },
      {
        "name": "TeamConfiguration",
        "file": "TestMaster\\state\\unified_state_manager.py",
        "line": 97,
        "attributes": [],
        "methods": [
          "to_dict"
        ]
      },
      {
        "name": "ServiceConfiguration",
        "file": "TestMaster\\state\\unified_state_manager.py",
        "line": 132,
        "attributes": [],
        "methods": [
          "to_dict"
        ]
      },
      {
        "name": "DeploymentConfiguration",
        "file": "TestMaster\\state\\unified_state_manager.py",
        "line": 157,
        "attributes": [],
        "methods": [
          "to_dict"
        ]
      },
      {
        "name": "GraphConfiguration",
        "file": "TestMaster\\state\\unified_state_manager.py",
        "line": 211,
        "attributes": [],
        "methods": [
          "to_dict"
        ]
      },
      {
        "name": "ScheduleConfig",
        "file": "TestMaster\\testmaster\\async_processing\\concurrent_scheduler.py",
        "line": 33,
        "attributes": [],
        "methods": []
      },
      {
        "name": "PoolConfig",
        "file": "TestMaster\\testmaster\\async_processing\\thread_pool_manager.py",
        "line": 31,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ConversionConfig",
        "file": "TestMaster\\testmaster\\converters\\base.py",
        "line": 39,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ConfigScope",
        "file": "TestMaster\\testmaster\\core\\config.py",
        "line": 24,
        "attributes": [
          {
            "name": "GLOBAL",
            "line": 26,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "MODULE",
            "line": 27,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "AGENT",
            "line": 28,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "SESSION",
            "line": 29,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "RUNTIME",
            "line": 30,
            "type": "string",
            "is_constant": true
          }
        ],
        "methods": []
      },
      {
        "name": "ConfigSource",
        "file": "TestMaster\\testmaster\\core\\config.py",
        "line": 32,
        "attributes": [
          {
            "name": "DEFAULT",
            "line": 34,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "FILE",
            "line": 35,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "ENVIRONMENT",
            "line": 36,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "RUNTIME",
            "line": 37,
            "type": "string",
            "is_constant": true
          },
          {
            "name": "OVERRIDE",
            "line": 38,
            "type": "string",
            "is_constant": true
          }
        ],
        "methods": []
      },
      {
        "name": "ConfigValue",
        "file": "TestMaster\\testmaster\\core\\config.py",
        "line": 41,
        "attributes": [],
        "methods": [
          "validate"
        ]
      },
      {
        "name": "IntelligentConfigProfile",
        "file": "TestMaster\\testmaster\\core\\config.py",
        "line": 60,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ConfigValidationError",
        "file": "TestMaster\\testmaster\\core\\config.py",
        "line": 69,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ConfigurationIntelligenceAgent",
        "file": "TestMaster\\testmaster\\core\\config.py",
        "line": 73,
        "attributes": [
          {
            "name": "defaults",
            "line": 111,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "profiles",
            "line": 249,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "env_profile",
            "line": 308,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "profile",
            "line": 333,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "config_path",
            "line": 361,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "flat_config",
            "line": 405,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "env_prefix",
            "line": 419,
            "type": "string",
            "is_constant": false
          },
          {
            "name": "profile",
            "line": 511,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "errors",
            "line": 533,
            "type": "list",
            "is_constant": false
          },
          {
            "name": "config_dict",
            "line": 544,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "profile",
            "line": 316,
            "type": "string",
            "is_constant": false
          },
          {
            "name": "flat_config",
            "line": 377,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "new_key",
            "line": 408,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "config_value",
            "line": 479,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "old_value",
            "line": 491,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "validator",
            "line": 492,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "description",
            "line": 493,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "profile",
            "line": 318,
            "type": "string",
            "is_constant": false
          },
          {
            "name": "profile",
            "line": 320,
            "type": "string",
            "is_constant": false
          },
          {
            "name": "profile",
            "line": 322,
            "type": "string",
            "is_constant": false
          },
          {
            "name": "old_value",
            "line": 339,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "file_config",
            "line": 369,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config_key",
            "line": 425,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "parsed_value",
            "line": 428,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "file_config",
            "line": 371,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "old_value",
            "line": 382,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "old_value",
            "line": 431,
            "type": "unknown",
            "is_constant": false
          }
        ],
        "methods": [
          "__init__",
          "_initialize_default_configuration",
          "_load_configuration_profiles",
          "_detect_optimal_profile",
          "_apply_profile",
          "_load_config_file",
          "_flatten_config",
          "_load_env_overrides",
          "_parse_env_value",
          "get",
          "set",
          "get_profile_info",
          "add_observer",
          "_notify_observers",
          "validate_all",
          "export_config"
        ]
      },
      {
        "name": "TestMasterConfig",
        "file": "TestMaster\\testmaster\\core\\config.py",
        "line": 561,
        "attributes": [],
        "methods": [
          "__init__",
          "_load_default_config",
          "_load_env_overrides"
        ]
      },
      {
        "name": "ConfigurationError",
        "file": "TestMaster\\testmaster\\core\\exceptions.py",
        "line": 24,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ConfigError",
        "file": "TestMaster\\testmaster\\core\\layer_manager.py",
        "line": 22,
        "attributes": [],
        "methods": []
      },
      {
        "name": "LayerConfig",
        "file": "TestMaster\\testmaster\\core\\layer_manager.py",
        "line": 28,
        "attributes": [],
        "methods": [
          "from_dict"
        ]
      },
      {
        "name": "ConfigReloadHandler",
        "file": "TestMaster\\testmaster\\core\\layer_manager.py",
        "line": 326,
        "attributes": [],
        "methods": [
          "__init__",
          "on_modified"
        ]
      },
      {
        "name": "OrchestratorConfig",
        "file": "TestMaster\\testmaster\\core\\orchestrator.py",
        "line": 82,
        "attributes": [],
        "methods": []
      },
      {
        "name": "TestGenerationConfig",
        "file": "TestMaster\\testmaster\\core\\framework_abstraction\\test_generator.py",
        "line": 23,
        "attributes": [],
        "methods": [
          "to_dict"
        ]
      },
      {
        "name": "GenerationConfig",
        "file": "TestMaster\\testmaster\\generators\\base.py",
        "line": 55,
        "attributes": [],
        "methods": []
      },
      {
        "name": "CoordinationConfig",
        "file": "TestMaster\\testmaster\\intelligence\\consensus\\agent_coordination.py",
        "line": 53,
        "attributes": [],
        "methods": []
      },
      {
        "name": "DocumentationConfig",
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\core\\doc_generator.py",
        "line": 22,
        "attributes": [],
        "methods": []
      },
      {
        "name": "LLMConfig",
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\core\\llm_integration.py",
        "line": 31,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ApiDocConfig",
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\generators\\api_doc_generator.py",
        "line": 23,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ArchitectureDocConfig",
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\generators\\architecture_doc_generator.py",
        "line": 65,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ReadmeConfig",
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\generators\\readme_generator.py",
        "line": 22,
        "attributes": [],
        "methods": []
      },
      {
        "name": "TutorialConfig",
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\generators\\tutorial_generator.py",
        "line": 68,
        "attributes": [],
        "methods": []
      },
      {
        "name": "CIConfig",
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\integrations\\ci_cd_integration.py",
        "line": 34,
        "attributes": [],
        "methods": []
      },
      {
        "name": "LLMPlanningConfig",
        "file": "TestMaster\\testmaster\\intelligence\\hierarchical_planning\\llm_integration.py",
        "line": 32,
        "attributes": [],
        "methods": []
      },
      {
        "name": "HierarchicalPlanningConfig",
        "file": "TestMaster\\testmaster\\intelligence\\hierarchical_planning\\unified_integration.py",
        "line": 68,
        "attributes": [
          {
            "name": "strategy_value",
            "line": 142,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "result",
            "line": 152,
            "type": "dict",
            "is_constant": false
          },
          {
            "name": "strategy",
            "line": 185,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "strategy_str",
            "line": 119,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "strategy_value",
            "line": 144,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "strategy",
            "line": 187,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "strategy_str",
            "line": 188,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "strategy_value",
            "line": 148,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "strategy",
            "line": 191,
            "type": "unknown",
            "is_constant": false
          },
          {
            "name": "strategy_value",
            "line": 150,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "__post_init__",
          "to_dict",
          "to_tot_config"
        ]
      },
      {
        "name": "LayerConfiguration",
        "file": "TestMaster\\testmaster\\intelligence\\integration\\layers\\layer_manager.py",
        "line": 47,
        "attributes": [],
        "methods": [
          "to_dict"
        ]
      },
      {
        "name": "StorageConfig",
        "file": "TestMaster\\testmaster\\intelligence\\integration\\storage\\unified_storage.py",
        "line": 48,
        "attributes": [],
        "methods": []
      },
      {
        "name": "LLMProviderConfig",
        "file": "TestMaster\\testmaster\\intelligence\\llm_providers\\universal_llm_provider.py",
        "line": 121,
        "attributes": [],
        "methods": [
          "to_dict"
        ]
      },
      {
        "name": "BridgeConfiguration",
        "file": "TestMaster\\testmaster\\intelligence\\monitoring\\adaptive_resource_bridge.py",
        "line": 52,
        "attributes": [],
        "methods": []
      },
      {
        "name": "AdaptiveConfiguration",
        "file": "TestMaster\\testmaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
        "line": 107,
        "attributes": [],
        "methods": []
      },
      {
        "name": "MonitoringConfiguration",
        "file": "TestMaster\\testmaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
        "line": 111,
        "attributes": [],
        "methods": []
      },
      {
        "name": "OptimizationConfig",
        "file": "TestMaster\\testmaster\\intelligence\\optimization\\multi_objective_optimizer.py",
        "line": 180,
        "attributes": [],
        "methods": [
          "to_dict"
        ]
      },
      {
        "name": "ToTGenerationConfig",
        "file": "TestMaster\\testmaster\\intelligence\\tree_of_thought\\universal_tot_integration.py",
        "line": 30,
        "attributes": [],
        "methods": [
          "to_dict"
        ]
      },
      {
        "name": "FrameworkAdapterConfig",
        "file": "TestMaster\\testmaster\\orchestration\\framework_adapter.py",
        "line": 113,
        "attributes": [],
        "methods": [
          "to_dict"
        ]
      },
      {
        "name": "OutputSystemConfig",
        "file": "TestMaster\\testmaster\\orchestration\\output_system.py",
        "line": 96,
        "attributes": [],
        "methods": [
          "to_dict"
        ]
      },
      {
        "name": "OrchestrationConfig",
        "file": "TestMaster\\testmaster\\orchestration\\universal_orchestrator.py",
        "line": 55,
        "attributes": [],
        "methods": [
          "__post_init__",
          "to_dict"
        ]
      },
      {
        "name": "DashboardConfig",
        "file": "TestMaster\\testmaster\\reporting\\dashboard_builder.py",
        "line": 31,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ReportConfig",
        "file": "TestMaster\\testmaster\\reporting\\report_generator.py",
        "line": 44,
        "attributes": [],
        "methods": []
      },
      {
        "name": "ScheduleConfig",
        "file": "TestMaster\\testmaster\\reporting\\report_scheduler.py",
        "line": 22,
        "attributes": [],
        "methods": []
      },
      {
        "name": "SecurityTestConfig",
        "file": "TestMaster\\testmaster\\security\\security_test_generator.py",
        "line": 82,
        "attributes": [],
        "methods": [
          "to_dict"
        ]
      },
      {
        "name": "SecurityScanConfig",
        "file": "TestMaster\\testmaster\\security\\universal_scanner.py",
        "line": 111,
        "attributes": [],
        "methods": [
          "to_dict"
        ]
      },
      {
        "name": "StreamConfig",
        "file": "TestMaster\\testmaster\\streaming\\stream_generator.py",
        "line": 33,
        "attributes": [],
        "methods": []
      },
      {
        "name": "DashboardConfig",
        "file": "TestMaster\\testmaster\\telemetry\\telemetry_dashboard.py",
        "line": 40,
        "attributes": [],
        "methods": []
      },
      {
        "name": "DashboardConfig",
        "file": "TestMaster\\testmaster\\ui\\dashboard.py",
        "line": 45,
        "attributes": [],
        "methods": []
      },
      {
        "name": "VerificationConfig",
        "file": "TestMaster\\testmaster\\verification\\base.py",
        "line": 41,
        "attributes": [],
        "methods": []
      },
      {
        "name": "TestTestMasterConfig_Tests",
        "file": "TestMaster\\tests\\modularized\\misc_split\\modules\\test_configuration.py",
        "line": 10,
        "attributes": [
          {
            "name": "result",
            "line": 24,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config",
            "line": 32,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "setup_method",
          "test_test_get_config_returns_dict",
          "test_test_set_config_value_updates_config",
          "test_test_load_from_file_loads_config",
          "test_test_save_to_file_saves_config"
        ]
      },
      {
        "name": "TestTestGenerationConfig_Tests",
        "file": "TestMaster\\tests\\modularized\\misc_split\\modules\\test_generation.py",
        "line": 10,
        "attributes": [
          {
            "name": "result",
            "line": 24,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config",
            "line": 32,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "setup_method",
          "test_test_get_config_returns_dict",
          "test_test_set_generation_mode_sets_mode"
        ]
      },
      {
        "name": "TestToTGenerationConfig_Tests",
        "file": "TestMaster\\tests\\modularized\\misc_split\\modules\\test_thought_processing.py",
        "line": 259,
        "attributes": [
          {
            "name": "result",
            "line": 273,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "config",
            "line": 281,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "setup_method",
          "test_test_get_tot_config_returns_dict",
          "test_test_set_depth_limit_sets_limit"
        ]
      },
      {
        "name": "Testconfig_Tests",
        "file": "TestMaster\\tests\\modularized\\misc_split\\uncategorized\\test_batch_config.py",
        "line": 83,
        "attributes": [
          {
            "name": "result",
            "line": 92,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "result",
            "line": 102,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "setup_method",
          "test_test_get_returns_value",
          "test_test_get_handles_none",
          "test_test_set_returns_value",
          "test_test_set_handles_none"
        ]
      },
      {
        "name": "TestTestMasterConfig_Tests",
        "file": "TestMaster\\tests\\modularized\\misc_split\\uncategorized\\test_batch_config.py",
        "line": 111,
        "attributes": [
          {
            "name": "result",
            "line": 119,
            "type": "function_call",
            "is_constant": false
          },
          {
            "name": "result",
            "line": 129,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "setup_method",
          "test_test_get_returns_value",
          "test_test_get_handles_none",
          "test_test_set_returns_value",
          "test_test_set_handles_none"
        ]
      },
      {
        "name": "TestTestGenerationConfig_Tests",
        "file": "TestMaster\\tests\\modularized\\misc_split\\uncategorized\\test_comprehensive_remaining.py",
        "line": 113,
        "attributes": [
          {
            "name": "result",
            "line": 121,
            "type": "function_call",
            "is_constant": false
          }
        ],
        "methods": [
          "setup_method",
          "test_test_to_dict_returns_value",
          "test_test_to_dict_handles_none"
        ]
      },
      {
        "name": "CoverageAnalysisConfig",
        "file": "TestMaster\\unified_tools\\coverage_analysis_master.py",
        "line": 91,
        "attributes": [],
        "methods": []
      },
      {
        "name": "TestGenerationConfig",
        "file": "TestMaster\\unified_tools\\test_generation_master.py",
        "line": 67,
        "attributes": [],
        "methods": []
      }
    ],
    "hardcoded_values": [
      {
        "variable": "path",
        "value": "",
        "file": "TestMaster\\api_dependency_mapper.py",
        "line": 207,
        "type": "str"
      },
      {
        "variable": "max_count",
        "value": "10",
        "file": "TestMaster\\batch_convert_broken_tests.py",
        "line": 167,
        "type": "int"
      },
      {
        "variable": "max_depth",
        "value": "0",
        "file": "TestMaster\\comprehensive_classical_analysis_methods.py",
        "line": 682,
        "type": "int"
      },
      {
        "variable": "max_diameter",
        "value": "0",
        "file": "TestMaster\\comprehensive_classical_analysis_methods.py",
        "line": 698,
        "type": "int"
      },
      {
        "variable": "host",
        "value": "localhost",
        "file": "TestMaster\\database_relationship_analyzer.py",
        "line": 181,
        "type": "str"
      },
      {
        "variable": "port",
        "value": "0",
        "file": "TestMaster\\database_relationship_analyzer.py",
        "line": 182,
        "type": "int"
      },
      {
        "variable": "is_primary_key",
        "value": "False",
        "file": "TestMaster\\database_relationship_analyzer.py",
        "line": 429,
        "type": "bool"
      },
      {
        "variable": "foreign_key",
        "value": "",
        "file": "TestMaster\\database_relationship_analyzer.py",
        "line": 430,
        "type": "str"
      },
      {
        "variable": "is_primary_key",
        "value": "True",
        "file": "TestMaster\\database_relationship_analyzer.py",
        "line": 443,
        "type": "bool"
      },
      {
        "variable": "max_depth",
        "value": "0",
        "file": "TestMaster\\enhanced_incremental_ast_engine.py",
        "line": 627,
        "type": "int"
      },
      {
        "variable": "test_file",
        "value": "test_incremental.py",
        "file": "TestMaster\\enhanced_incremental_ast_engine.py",
        "line": 746,
        "type": "str"
      },
      {
        "variable": "max_depth",
        "value": "0",
        "file": "TestMaster\\event_flow_mapper.py",
        "line": 664,
        "type": "int"
      },
      {
        "variable": "total_files",
        "value": "0",
        "file": "TestMaster\\exhaustive_stub_analysis.py",
        "line": 118,
        "type": "int"
      },
      {
        "variable": "existing_files",
        "value": "0",
        "file": "TestMaster\\final_archive_sweep.py",
        "line": 131,
        "type": "int"
      },
      {
        "variable": "total_archived_files",
        "value": "0",
        "file": "TestMaster\\final_archive_sweep.py",
        "line": 163,
        "type": "int"
      },
      {
        "variable": "total_consolidated_files",
        "value": "0",
        "file": "TestMaster\\final_archive_sweep.py",
        "line": 164,
        "type": "int"
      },
      {
        "variable": "report_file",
        "value": "final_archive_sweep_report.json",
        "file": "TestMaster\\final_archive_sweep.py",
        "line": 268,
        "type": "str"
      },
      {
        "variable": "total_files",
        "value": "0",
        "file": "TestMaster\\find_all_stubs.py",
        "line": 106,
        "type": "int"
      },
      {
        "variable": "import_pattern",
        "value": "# Import module under test with fallback handling.*?except Exception:.*?MODULE_AVAILABLE = False",
        "file": "TestMaster\\fix_tests_for_real_modules.py",
        "line": 148,
        "type": "str"
      },
      {
        "variable": "import_pattern",
        "value": "# Import module under test with comprehensive fallback\\ntry:.*?MODULE_AVAILABLE = False.*?print\\(f\"M",
        "file": "TestMaster\\fix_week2_test_imports.py",
        "line": 37,
        "type": "str"
      },
      {
        "variable": "simple_import",
        "value": "# Import module under test with fallback handling\nMODULE_AVAILABLE = True\ntry:\n    # Dynamic import ",
        "file": "TestMaster\\fix_week2_test_imports.py",
        "line": 39,
        "type": "str"
      },
      {
        "variable": "project_path",
        "value": ".",
        "file": "TestMaster\\layer3_integration_example.py",
        "line": 496,
        "type": "str"
      },
      {
        "variable": "source_file",
        "value": "C:/Users/kbass/OneDrive/Documents/testmaster/TestMaster/testmaster/intelligence/documentation/templa",
        "file": "TestMaster\\modularize_api_templates.py",
        "line": 13,
        "type": "str"
      },
      {
        "variable": "source_file",
        "value": "C:/Users/kbass/OneDrive/Documents/testmaster/TestMaster/testmaster/analysis/coverage_analyzer.py",
        "file": "TestMaster\\modularize_coverage_analyzer.py",
        "line": 13,
        "type": "str"
      },
      {
        "variable": "config_name",
        "value": "intelligent",
        "file": "TestMaster\\parallel_converter_fixed.py",
        "line": 335,
        "type": "str"
      },
      {
        "variable": "config_score",
        "value": "0",
        "file": "TestMaster\\pattern_analysis_detailed.py",
        "line": 710,
        "type": "int"
      },
      {
        "variable": "report_file",
        "value": "phase7_validation_report.json",
        "file": "TestMaster\\phase7_validation.py",
        "line": 329,
        "type": "str"
      },
      {
        "variable": "open_files",
        "value": "0",
        "file": "TestMaster\\realtime_metrics_collector.py",
        "line": 383,
        "type": "int"
      },
      {
        "variable": "misc_file",
        "value": "C:/Users/kbass/OneDrive/Documents/testmaster/TestMaster/tests/modularized/test_misc.py",
        "file": "TestMaster\\refine_misc_tests.py",
        "line": 12,
        "type": "str"
      },
      {
        "variable": "files_created",
        "value": "0",
        "file": "TestMaster\\refine_misc_tests.py",
        "line": 152,
        "type": "int"
      },
      {
        "variable": "archive_path",
        "value": "C:/Users/kbass/OneDrive/Documents/testmaster/TestMaster/archive/test_misc_original_6141_lines.py",
        "file": "TestMaster\\refine_misc_tests.py",
        "line": 181,
        "type": "str"
      },
      {
        "variable": "stub_path",
        "value": "core/testing/supercharged_test_generator.py",
        "file": "TestMaster\\replace_stubs_with_archive_implementations.py",
        "line": 52,
        "type": "str"
      },
      {
        "variable": "archive_path",
        "value": "archive/legacy_scripts/enhanced_context_aware_test_generator.py",
        "file": "TestMaster\\replace_stubs_with_archive_implementations.py",
        "line": 53,
        "type": "str"
      },
      {
        "variable": "target_dir",
        "value": "core/intelligence/testing/ai_generation",
        "file": "TestMaster\\replace_stubs_with_archive_implementations.py",
        "line": 114,
        "type": "str"
      },
      {
        "variable": "docs_dir",
        "value": "core/intelligence/documentation/intelligence",
        "file": "TestMaster\\replace_stubs_with_archive_implementations.py",
        "line": 145,
        "type": "str"
      },
      {
        "variable": "TEST_REPORTER",
        "value": "test_reporter",
        "file": "TestMaster\\restored_json_5.py",
        "line": 29,
        "type": "str"
      },
      {
        "variable": "max_capacity",
        "value": "100",
        "file": "TestMaster\\restored_json_5.py",
        "line": 409,
        "type": "int"
      },
      {
        "variable": "dashboard_path",
        "value": "hybrid_intelligence_dashboard_grouped.html",
        "file": "TestMaster\\simple_web_monitor.py",
        "line": 47,
        "type": "str"
      },
      {
        "variable": "files_created",
        "value": "0",
        "file": "TestMaster\\split_massive_test_file.py",
        "line": 159,
        "type": "int"
      },
      {
        "variable": "source_file",
        "value": "C:/Users/kbass/OneDrive/Documents/testmaster/TestMaster/test_tot_output.py",
        "file": "TestMaster\\split_massive_test_file.py",
        "line": 209,
        "type": "str"
      },
      {
        "variable": "output_dir",
        "value": "C:/Users/kbass/OneDrive/Documents/testmaster/TestMaster/tests/modularized",
        "file": "TestMaster\\split_massive_test_file.py",
        "line": 210,
        "type": "str"
      },
      {
        "variable": "FIX_IMPORTS",
        "value": "fix_imports",
        "file": "TestMaster\\testmaster_orchestrator.py",
        "line": 209,
        "type": "str"
      },
      {
        "variable": "GENERATE_REPORT",
        "value": "generate_report",
        "file": "TestMaster\\testmaster_orchestrator.py",
        "line": 212,
        "type": "str"
      },
      {
        "variable": "timeout",
        "value": "600",
        "file": "TestMaster\\test_after_refactor.py",
        "line": 161,
        "type": "int"
      },
      {
        "variable": "base_url",
        "value": "http://localhost:8081",
        "file": "TestMaster\\test_analyzer_tab.py",
        "line": 7,
        "type": "str"
      },
      {
        "variable": "max_workers",
        "value": "2",
        "file": "TestMaster\\test_before_refactor.py",
        "line": 65,
        "type": "int"
      },
      {
        "variable": "grouped_path",
        "value": "hybrid_intelligence_dashboard_grouped.html",
        "file": "TestMaster\\web_monitor.py",
        "line": 117,
        "type": "str"
      },
      {
        "variable": "hybrid_path",
        "value": "hybrid_intelligence_dashboard.html",
        "file": "TestMaster\\web_monitor.py",
        "line": 122,
        "type": "str"
      },
      {
        "variable": "dashboard_path",
        "value": "complete_dashboard.html",
        "file": "TestMaster\\web_monitor.py",
        "line": 127,
        "type": "str"
      },
      {
        "variable": "enhanced_path",
        "value": "enhanced_dashboard_full.html",
        "file": "TestMaster\\web_monitor.py",
        "line": 132,
        "type": "str"
      },
      {
        "variable": "import_path",
        "value": "multi_coder_analysis",
        "file": "TestMaster\\week_5_8_batch_converter.py",
        "line": 124,
        "type": "str"
      },
      {
        "variable": "max_batches",
        "value": "3",
        "file": "TestMaster\\week_7_8_converter.py",
        "line": 294,
        "type": "int"
      },
      {
        "variable": "REPORT",
        "value": "report",
        "file": "TestMaster\\agents\\roles\\base_role.py",
        "line": 30,
        "type": "str"
      },
      {
        "variable": "REPORTING",
        "value": "reporting",
        "file": "TestMaster\\agents\\roles\\base_role.py",
        "line": 81,
        "type": "str"
      },
      {
        "variable": "pytest_config",
        "value": "[tool:pytest]\ntestpaths = tests\npython_files = test_*.py\npython_classes = Test*\npython_functions = t",
        "file": "TestMaster\\agents\\roles\\test_engineer.py",
        "line": 409,
        "type": "str"
      },
      {
        "variable": "DIRECTED",
        "value": "directed",
        "file": "TestMaster\\agents\\supervisor\\testing_supervisor.py",
        "line": 25,
        "type": "str"
      },
      {
        "variable": "max_depth",
        "value": "0",
        "file": "TestMaster\\analysis\\comprehensive_analysis\\cognitive_load\\cognitive_load_analyzer.py",
        "line": 998,
        "type": "int"
      },
      {
        "variable": "FILE",
        "value": "file",
        "file": "TestMaster\\analysis\\comprehensive_analysis\\data_pipeline\\data_pipeline_analyzer.py",
        "line": 42,
        "type": "str"
      },
      {
        "variable": "total_files",
        "value": "0",
        "file": "TestMaster\\analysis\\comprehensive_analysis\\pattern_mining\\cross_repo_pattern_miner.py",
        "line": 814,
        "type": "int"
      },
      {
        "variable": "max_depth",
        "value": "0",
        "file": "TestMaster\\analysis\\comprehensive_analysis\\pattern_recognition\\ml_pattern_recognition.py",
        "line": 837,
        "type": "int"
      },
      {
        "variable": "test_files_analyzed",
        "value": "0",
        "file": "TestMaster\\archive\\advanced_testing_intelligence.py",
        "line": 530,
        "type": "int"
      },
      {
        "variable": "max_slope",
        "value": "0",
        "file": "TestMaster\\archive\\architectural_evolution_predictor_original_2410_lines_20250821_113953.py",
        "line": 491,
        "type": "int"
      },
      {
        "variable": "max_base_depth",
        "value": "0",
        "file": "TestMaster\\archive\\coverage_analyzer_original_2697_lines.py",
        "line": 1473,
        "type": "int"
      },
      {
        "variable": "import_count",
        "value": "0",
        "file": "TestMaster\\archive\\coverage_analyzer_original_2697_lines.py",
        "line": 2510,
        "type": "int"
      },
      {
        "variable": "max_depth",
        "value": "0",
        "file": "TestMaster\\archive\\from_subarchive_energy_consumption_analysis_original.py",
        "line": 1091,
        "type": "int"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\archive\\from_subarchive_semantic_analysis_original.py",
        "line": 30,
        "type": "str"
      },
      {
        "variable": "FILE_TRANSFER",
        "value": "file_transfer",
        "file": "TestMaster\\archive\\integration_hub_original_20250820_220939.py",
        "line": 91,
        "type": "str"
      },
      {
        "variable": "max_depth",
        "value": "0",
        "file": "TestMaster\\archive\\superseded_toplevel_energy_consumption_analysis.py",
        "line": 1091,
        "type": "int"
      },
      {
        "variable": "grouped_path",
        "value": "hybrid_intelligence_dashboard_grouped.html",
        "file": "TestMaster\\archive\\20250818\\web_monitor.py",
        "line": 117,
        "type": "str"
      },
      {
        "variable": "hybrid_path",
        "value": "hybrid_intelligence_dashboard.html",
        "file": "TestMaster\\archive\\20250818\\web_monitor.py",
        "line": 122,
        "type": "str"
      },
      {
        "variable": "dashboard_path",
        "value": "complete_dashboard.html",
        "file": "TestMaster\\archive\\20250818\\web_monitor.py",
        "line": 127,
        "type": "str"
      },
      {
        "variable": "enhanced_path",
        "value": "enhanced_dashboard_full.html",
        "file": "TestMaster\\archive\\20250818\\web_monitor.py",
        "line": 132,
        "type": "str"
      },
      {
        "variable": "rate_limiter_available",
        "value": "True",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_aggregator.py",
        "line": 95,
        "type": "bool"
      },
      {
        "variable": "rate_limiter_available",
        "value": "False",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_aggregator.py",
        "line": 98,
        "type": "bool"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_circuit_breaker.py",
        "line": 29,
        "type": "str"
      },
      {
        "variable": "URL",
        "value": "url",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
        "line": 37,
        "type": "str"
      },
      {
        "variable": "FILE_PATH",
        "value": "file_path",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_data_sanitizer.py",
        "line": 40,
        "type": "str"
      },
      {
        "variable": "MAX_RETRIES",
        "value": "max_retries",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
        "line": 28,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_dead_letter_queue.py",
        "line": 31,
        "type": "str"
      },
      {
        "variable": "key_similarity",
        "value": "0.0",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_deduplication.py",
        "line": 577,
        "type": "float"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
        "line": 32,
        "type": "str"
      },
      {
        "variable": "DIRECT",
        "value": "direct",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_delivery_verifier.py",
        "line": 37,
        "type": "str"
      },
      {
        "variable": "max_retries",
        "value": "3",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_error_recovery.py",
        "line": 525,
        "type": "int"
      },
      {
        "variable": "FILE",
        "value": "file",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
        "line": 42,
        "type": "str"
      },
      {
        "variable": "max_count",
        "value": "1",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_export_manager.py",
        "line": 254,
        "type": "int"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_fallback_system.py",
        "line": 37,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_flow_monitor.py",
        "line": 46,
        "type": "str"
      },
      {
        "variable": "MAXIMUM",
        "value": "maximum",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
        "line": 32,
        "type": "str"
      },
      {
        "variable": "TOKEN_BUCKET",
        "value": "token_bucket",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
        "line": 26,
        "type": "str"
      },
      {
        "variable": "REDIRECT_TRAFFIC",
        "value": "redirect_traffic",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_rate_limiter.py",
        "line": 38,
        "type": "str"
      },
      {
        "variable": "DEBUG",
        "value": "debug",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_telemetry.py",
        "line": 29,
        "type": "str"
      },
      {
        "variable": "max_base_depth",
        "value": "0",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
        "line": 1473,
        "type": "int"
      },
      {
        "variable": "import_count",
        "value": "0",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
        "line": 2510,
        "type": "int"
      },
      {
        "variable": "import_pattern",
        "value": "# Import module under test with fallback handling.*?except Exception:.*?MODULE_AVAILABLE = False",
        "file": "TestMaster\\archive\\COMPLETE_REFACTOR_20250818_112844\\fix_tests_for_real_modules.py",
        "line": 148,
        "type": "str"
      },
      {
        "variable": "import_pattern",
        "value": "# Import module under test with comprehensive fallback\\ntry:.*?MODULE_AVAILABLE = False.*?print\\(f\"M",
        "file": "TestMaster\\archive\\COMPLETE_REFACTOR_20250818_112844\\fix_week2_test_imports.py",
        "line": 37,
        "type": "str"
      },
      {
        "variable": "simple_import",
        "value": "# Import module under test with fallback handling\nMODULE_AVAILABLE = True\ntry:\n    # Dynamic import ",
        "file": "TestMaster\\archive\\COMPLETE_REFACTOR_20250818_112844\\fix_week2_test_imports.py",
        "line": 39,
        "type": "str"
      },
      {
        "variable": "grouped_path",
        "value": "hybrid_intelligence_dashboard_grouped.html",
        "file": "TestMaster\\archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
        "line": 117,
        "type": "str"
      },
      {
        "variable": "hybrid_path",
        "value": "hybrid_intelligence_dashboard.html",
        "file": "TestMaster\\archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
        "line": 122,
        "type": "str"
      },
      {
        "variable": "dashboard_path",
        "value": "complete_dashboard.html",
        "file": "TestMaster\\archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
        "line": 127,
        "type": "str"
      },
      {
        "variable": "enhanced_path",
        "value": "enhanced_dashboard_full.html",
        "file": "TestMaster\\archive\\COMPLETE_REFACTOR_20250818_112844\\web_monitor.py",
        "line": 132,
        "type": "str"
      },
      {
        "variable": "timeout",
        "value": "600",
        "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\automatic_scaling_system_robust.py",
        "line": 863,
        "type": "int"
      },
      {
        "variable": "CONFIGURATION_ERROR",
        "value": "configuration_error",
        "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\comprehensive_error_recovery_robust.py",
        "line": 57,
        "type": "str"
      },
      {
        "variable": "TIMEOUT_ERROR",
        "value": "timeout_error",
        "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\comprehensive_error_recovery_robust.py",
        "line": 62,
        "type": "str"
      },
      {
        "variable": "STATE_CONFIG",
        "value": "state_config",
        "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\cross_system_apis_robust.py",
        "line": 38,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION_UPDATE",
        "value": "configuration_update",
        "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\cross_system_apis_robust.py",
        "line": 48,
        "type": "str"
      },
      {
        "variable": "timeout",
        "value": "30.0",
        "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\workflow_execution_engine_robust.py",
        "line": 253,
        "type": "float"
      },
      {
        "variable": "max_batch",
        "value": "10",
        "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\workflow_execution_engine_robust.py",
        "line": 367,
        "type": "int"
      },
      {
        "variable": "max_batch",
        "value": "20",
        "file": "TestMaster\\archive\\integration_robust_duplicates_20250821_083109\\workflow_execution_engine_robust.py",
        "line": 425,
        "type": "int"
      },
      {
        "variable": "rate_limit_delay",
        "value": "2.0",
        "file": "TestMaster\\archive\\legacy_scripts\\achieve_100_percent_coverage.py",
        "line": 299,
        "type": "float"
      },
      {
        "variable": "max_count",
        "value": "10",
        "file": "TestMaster\\archive\\legacy_scripts\\batch_convert_broken_tests.py",
        "line": 167,
        "type": "int"
      },
      {
        "variable": "source_dir",
        "value": "src_new",
        "file": "TestMaster\\archive\\legacy_scripts\\coverage_improver.py",
        "line": 419,
        "type": "str"
      },
      {
        "variable": "test_dir",
        "value": "tests_new",
        "file": "TestMaster\\archive\\legacy_scripts\\coverage_improver.py",
        "line": 420,
        "type": "str"
      },
      {
        "variable": "import_fix",
        "value": "import sys\nfrom pathlib import Path\nsys.path.insert(0, str(Path(__file__).parent.parent.parent / \"sr",
        "file": "TestMaster\\archive\\legacy_scripts\\fix_all_imports.py",
        "line": 23,
        "type": "str"
      },
      {
        "variable": "import_pattern",
        "value": "# Import module under test with fallback handling.*?except Exception:.*?MODULE_AVAILABLE = False",
        "file": "TestMaster\\archive\\legacy_scripts\\fix_tests_for_real_modules.py",
        "line": 148,
        "type": "str"
      },
      {
        "variable": "import_fix",
        "value": "import sys\nfrom pathlib import Path\nsys.path.insert(0, str(Path(__file__).parent.parent.parent / \"sr",
        "file": "TestMaster\\archive\\legacy_scripts\\fix_test_infrastructure.py",
        "line": 29,
        "type": "str"
      },
      {
        "variable": "import_pattern",
        "value": "# Import module under test with comprehensive fallback\\ntry:.*?MODULE_AVAILABLE = False.*?print\\(f\"M",
        "file": "TestMaster\\archive\\legacy_scripts\\fix_week2_test_imports.py",
        "line": 37,
        "type": "str"
      },
      {
        "variable": "simple_import",
        "value": "# Import module under test with fallback handling\nMODULE_AVAILABLE = True\ntry:\n    # Dynamic import ",
        "file": "TestMaster\\archive\\legacy_scripts\\fix_week2_test_imports.py",
        "line": 39,
        "type": "str"
      },
      {
        "variable": "FIX_IMPORTS",
        "value": "fix_imports",
        "file": "TestMaster\\archive\\legacy_scripts\\testmaster_orchestrator.py",
        "line": 53,
        "type": "str"
      },
      {
        "variable": "GENERATE_REPORT",
        "value": "generate_report",
        "file": "TestMaster\\archive\\legacy_scripts\\testmaster_orchestrator.py",
        "line": 56,
        "type": "str"
      },
      {
        "variable": "import_path",
        "value": "multi_coder_analysis",
        "file": "TestMaster\\archive\\legacy_scripts\\week_5_8_batch_converter.py",
        "line": 124,
        "type": "str"
      },
      {
        "variable": "max_batches",
        "value": "3",
        "file": "TestMaster\\archive\\legacy_scripts\\week_7_8_converter.py",
        "line": 294,
        "type": "int"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\archive\\modularization_20250821\\semantic_analyzer_original.py",
        "line": 29,
        "type": "str"
      },
      {
        "variable": "FILE_TRANSFER",
        "value": "file_transfer",
        "file": "TestMaster\\archive\\modularization_integration\\integration_hub_original_1876_lines.py",
        "line": 91,
        "type": "str"
      },
      {
        "variable": "max_count",
        "value": "10",
        "file": "TestMaster\\archive\\original_backup\\batch_convert_broken_tests.py",
        "line": 167,
        "type": "int"
      },
      {
        "variable": "import_pattern",
        "value": "# Import module under test with fallback handling.*?except Exception:.*?MODULE_AVAILABLE = False",
        "file": "TestMaster\\archive\\original_backup\\fix_tests_for_real_modules.py",
        "line": 148,
        "type": "str"
      },
      {
        "variable": "import_pattern",
        "value": "# Import module under test with comprehensive fallback\\ntry:.*?MODULE_AVAILABLE = False.*?print\\(f\"M",
        "file": "TestMaster\\archive\\original_backup\\fix_week2_test_imports.py",
        "line": 37,
        "type": "str"
      },
      {
        "variable": "simple_import",
        "value": "# Import module under test with fallback handling\nMODULE_AVAILABLE = True\ntry:\n    # Dynamic import ",
        "file": "TestMaster\\archive\\original_backup\\fix_week2_test_imports.py",
        "line": 39,
        "type": "str"
      },
      {
        "variable": "FIX_IMPORTS",
        "value": "fix_imports",
        "file": "TestMaster\\archive\\original_backup\\testmaster_orchestrator.py",
        "line": 53,
        "type": "str"
      },
      {
        "variable": "GENERATE_REPORT",
        "value": "generate_report",
        "file": "TestMaster\\archive\\original_backup\\testmaster_orchestrator.py",
        "line": 56,
        "type": "str"
      },
      {
        "variable": "import_path",
        "value": "multi_coder_analysis",
        "file": "TestMaster\\archive\\original_backup\\week_5_8_batch_converter.py",
        "line": 124,
        "type": "str"
      },
      {
        "variable": "max_batches",
        "value": "3",
        "file": "TestMaster\\archive\\original_backup\\week_7_8_converter.py",
        "line": 294,
        "type": "int"
      },
      {
        "variable": "rate_limit_delay",
        "value": "2.0",
        "file": "TestMaster\\archive\\original_backup\\scripts\\achieve_100_percent_coverage.py",
        "line": 299,
        "type": "float"
      },
      {
        "variable": "source_dir",
        "value": "src_new",
        "file": "TestMaster\\archive\\original_backup\\scripts\\coverage_improver.py",
        "line": 419,
        "type": "str"
      },
      {
        "variable": "test_dir",
        "value": "tests_new",
        "file": "TestMaster\\archive\\original_backup\\scripts\\coverage_improver.py",
        "line": 420,
        "type": "str"
      },
      {
        "variable": "import_fix",
        "value": "import sys\nfrom pathlib import Path\nsys.path.insert(0, str(Path(__file__).parent.parent.parent / \"sr",
        "file": "TestMaster\\archive\\original_backup\\scripts\\fix_all_imports.py",
        "line": 23,
        "type": "str"
      },
      {
        "variable": "import_fix",
        "value": "import sys\nfrom pathlib import Path\nsys.path.insert(0, str(Path(__file__).parent.parent.parent / \"sr",
        "file": "TestMaster\\archive\\original_backup\\scripts\\fix_test_infrastructure.py",
        "line": 29,
        "type": "str"
      },
      {
        "variable": "FILE_SYSTEM",
        "value": "file_system",
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\api\\enterprise_integration_layer.py",
        "line": 44,
        "type": "str"
      },
      {
        "variable": "API_RATE_LIMIT",
        "value": "api_rate_limit",
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\coordination\\resource_coordination_system.py",
        "line": 43,
        "type": "str"
      },
      {
        "variable": "FILE_HANDLES",
        "value": "file_handles",
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\coordination\\resource_coordination_system.py",
        "line": 46,
        "type": "str"
      },
      {
        "variable": "PROPORTIONAL_SHARE",
        "value": "proportional",
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\coordination\\resource_coordination_system.py",
        "line": 57,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\ml\\advanced\\circuit_breaker_ml.py",
        "line": 46,
        "type": "str"
      },
      {
        "variable": "STATE_CONFIG",
        "value": "state_config",
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
        "line": 38,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION_UPDATE",
        "value": "configuration_update",
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\cross_system_apis.py",
        "line": 48,
        "type": "str"
      },
      {
        "variable": "timeout",
        "value": "600",
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\automatic_scaling_system.py",
        "line": 863,
        "type": "int"
      },
      {
        "variable": "CONFIGURATION_ERROR",
        "value": "configuration_error",
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
        "line": 57,
        "type": "str"
      },
      {
        "variable": "TIMEOUT_ERROR",
        "value": "timeout_error",
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\comprehensive_error_recovery.py",
        "line": 62,
        "type": "str"
      },
      {
        "variable": "STATE_CONFIG",
        "value": "state_config",
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
        "line": 38,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION_UPDATE",
        "value": "configuration_update",
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\cross_system_apis.py",
        "line": 48,
        "type": "str"
      },
      {
        "variable": "timeout",
        "value": "30.0",
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
        "line": 253,
        "type": "float"
      },
      {
        "variable": "max_batch",
        "value": "10",
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
        "line": 367,
        "type": "int"
      },
      {
        "variable": "max_batch",
        "value": "20",
        "file": "TestMaster\\archive\\phase1c_consolidation_20250820_150000\\integration\\workflow_execution_engine.py",
        "line": 425,
        "type": "int"
      },
      {
        "variable": "TEST_REPORTER",
        "value": "test_reporter",
        "file": "TestMaster\\archive\\phase5_archive\\replaced_code\\enterprise_deployment_20250819_195602.py",
        "line": 29,
        "type": "str"
      },
      {
        "variable": "max_capacity",
        "value": "100",
        "file": "TestMaster\\archive\\phase5_archive\\replaced_code\\enterprise_deployment_20250819_195602.py",
        "line": 409,
        "type": "int"
      },
      {
        "variable": "timeout",
        "value": "30.0",
        "file": "TestMaster\\archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
        "line": 253,
        "type": "float"
      },
      {
        "variable": "max_batch",
        "value": "10",
        "file": "TestMaster\\archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
        "line": 367,
        "type": "int"
      },
      {
        "variable": "max_batch",
        "value": "20",
        "file": "TestMaster\\archive\\placeholder_backups_20250820_011745\\integration\\workflow_execution_engine.py",
        "line": 425,
        "type": "int"
      },
      {
        "variable": "timeout",
        "value": "30.0",
        "file": "TestMaster\\archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
        "line": 253,
        "type": "float"
      },
      {
        "variable": "max_batch",
        "value": "10",
        "file": "TestMaster\\archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
        "line": 367,
        "type": "int"
      },
      {
        "variable": "max_batch",
        "value": "20",
        "file": "TestMaster\\archive\\placeholder_backups_20250820_011817\\integration\\workflow_execution_engine.py",
        "line": 425,
        "type": "int"
      },
      {
        "variable": "REPORTING",
        "value": "reporting",
        "file": "TestMaster\\config\\enhanced_unified_config.py",
        "line": 49,
        "type": "str"
      },
      {
        "variable": "REPORTING",
        "value": "reporting",
        "file": "TestMaster\\config\\testmaster_config.py",
        "line": 45,
        "type": "str"
      },
      {
        "variable": "REPORTING",
        "value": "reporting",
        "file": "TestMaster\\config\\modules\\data_models.py",
        "line": 33,
        "type": "str"
      },
      {
        "variable": "REPORT_GENERATOR",
        "value": "report_generator",
        "file": "TestMaster\\config\\modules\\data_models.py",
        "line": 61,
        "type": "str"
      },
      {
        "variable": "FILE_SYSTEM",
        "value": "file_system",
        "file": "TestMaster\\config\\modules\\integration_config.py",
        "line": 26,
        "type": "str"
      },
      {
        "variable": "API_KEY",
        "value": "api_key",
        "file": "TestMaster\\config\\modules\\security_config.py",
        "line": 21,
        "type": "str"
      },
      {
        "variable": "SECRET",
        "value": "secret",
        "file": "TestMaster\\config\\modules\\security_config.py",
        "line": 45,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION_CHANGE",
        "value": "configuration_change",
        "file": "TestMaster\\core\\domains\\intelligence\\autonomous_decision_engine.py",
        "line": 56,
        "type": "str"
      },
      {
        "variable": "direction",
        "value": "stable",
        "file": "TestMaster\\core\\domains\\intelligence\\cross_system_trend_analyzer.py",
        "line": 153,
        "type": "str"
      },
      {
        "variable": "direction",
        "value": "increasing",
        "file": "TestMaster\\core\\domains\\intelligence\\cross_system_trend_analyzer.py",
        "line": 155,
        "type": "str"
      },
      {
        "variable": "direction",
        "value": "decreasing",
        "file": "TestMaster\\core\\domains\\intelligence\\cross_system_trend_analyzer.py",
        "line": 157,
        "type": "str"
      },
      {
        "variable": "max_variance",
        "value": "0.25",
        "file": "TestMaster\\core\\domains\\intelligence\\intelligent_resource_allocator.py",
        "line": 1307,
        "type": "float"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\semantic_analyzer.py",
        "line": 29,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\semantic_base.py",
        "line": 27,
        "type": "str"
      },
      {
        "variable": "key_similarity",
        "value": "0.0",
        "file": "TestMaster\\core\\domains\\intelligence\\analytics\\analytics_deduplication.py",
        "line": 513,
        "type": "float"
      },
      {
        "variable": "API_KEY",
        "value": "api_key",
        "file": "TestMaster\\core\\domains\\intelligence\\api\\unified_api_gateway.py",
        "line": 48,
        "type": "str"
      },
      {
        "variable": "API_KEY",
        "value": "api_key",
        "file": "TestMaster\\core\\domains\\intelligence\\api\\unified_api_gateway.py",
        "line": 59,
        "type": "str"
      },
      {
        "variable": "SECRET",
        "value": "secret",
        "file": "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
        "line": 63,
        "type": "str"
      },
      {
        "variable": "TOP_SECRET",
        "value": "top_secret",
        "file": "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
        "line": 64,
        "type": "str"
      },
      {
        "variable": "URL",
        "value": "url",
        "file": "TestMaster\\core\\domains\\intelligence\\data_pipeline\\advanced_data_pipeline.py",
        "line": 44,
        "type": "str"
      },
      {
        "variable": "FILE_PATH",
        "value": "file_path",
        "file": "TestMaster\\core\\domains\\intelligence\\data_pipeline\\advanced_data_pipeline.py",
        "line": 47,
        "type": "str"
      },
      {
        "variable": "url_pattern",
        "value": "^https?://[^\\s/$.?#].[^\\s]*$",
        "file": "TestMaster\\core\\domains\\intelligence\\data_pipeline\\advanced_data_pipeline.py",
        "line": 108,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\api_validation_framework.py",
        "line": 44,
        "type": "str"
      },
      {
        "variable": "REDIRECT",
        "value": "3xx",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\api_validation_framework.py",
        "line": 50,
        "type": "str"
      },
      {
        "variable": "config_type",
        "value": "config",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\architecture_validation_framework.py",
        "line": 163,
        "type": "str"
      },
      {
        "variable": "config_type",
        "value": "yaml_config",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\architecture_validation_framework.py",
        "line": 165,
        "type": "str"
      },
      {
        "variable": "config_type",
        "value": "json_config",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\architecture_validation_framework.py",
        "line": 167,
        "type": "str"
      },
      {
        "variable": "config_type",
        "value": "toml_config",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\architecture_validation_framework.py",
        "line": 169,
        "type": "str"
      },
      {
        "variable": "config_type",
        "value": "ini_config",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\architecture_validation_framework.py",
        "line": 171,
        "type": "str"
      },
      {
        "variable": "documented_files",
        "value": "0",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\doc_orchestrator.py",
        "line": 139,
        "type": "int"
      },
      {
        "variable": "file_count",
        "value": "0",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\doc_orchestrator.py",
        "line": 254,
        "type": "int"
      },
      {
        "variable": "API_KEY",
        "value": "api_key",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\enterprise_api_docs.py",
        "line": 19,
        "type": "str"
      },
      {
        "variable": "BEARER_TOKEN",
        "value": "bearer",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\enterprise_api_docs.py",
        "line": 20,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\faq_system.py",
        "line": 19,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION_BUILDER",
        "value": "configuration_builder",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\interactive_docs_system.py",
        "line": 26,
        "type": "str"
      },
      {
        "variable": "NAVIGATION_CONFIG",
        "value": "navigation_config",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\json_docs_processor.py",
        "line": 20,
        "type": "str"
      },
      {
        "variable": "LOCALIZATION_FILE",
        "value": "localization",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\json_docs_processor.py",
        "line": 21,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\json_docs_processor.py",
        "line": 23,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\knowledge_management_framework.py",
        "line": 36,
        "type": "str"
      },
      {
        "variable": "DOCUMENTATION_FILES",
        "value": "documentation_files",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\knowledge_management_framework.py",
        "line": 42,
        "type": "str"
      },
      {
        "variable": "README_FILES",
        "value": "readme_files",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\knowledge_management_framework.py",
        "line": 45,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION_FILES",
        "value": "configuration_files",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\knowledge_management_framework.py",
        "line": 49,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION_CHANGE",
        "value": "configuration_change",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\migration_guide_generator.py",
        "line": 21,
        "type": "str"
      },
      {
        "variable": "PORTUGUESE_BR",
        "value": "pt-BR",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\multilingual_docs.py",
        "line": 19,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\workflow_recipe_docs.py",
        "line": 48,
        "type": "str"
      },
      {
        "variable": "KUBERNETES_CONFIG",
        "value": "kubernetes",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\yaml_config_processor.py",
        "line": 19,
        "type": "str"
      },
      {
        "variable": "CI_CD_CONFIG",
        "value": "ci-cd",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\yaml_config_processor.py",
        "line": 21,
        "type": "str"
      },
      {
        "variable": "APPLICATION_CONFIG",
        "value": "application",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\yaml_config_processor.py",
        "line": 22,
        "type": "str"
      },
      {
        "variable": "DOCUMENTATION_CONFIG",
        "value": "documentation",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\yaml_config_processor.py",
        "line": 23,
        "type": "str"
      },
      {
        "variable": "falkordb_language_support",
        "value": "2",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\revolutionary\\falkordb_obliterator.py",
        "line": 370,
        "type": "int"
      },
      {
        "variable": "COMPLIANCE_REPORT",
        "value": "compliance_report",
        "file": "TestMaster\\core\\domains\\intelligence\\enterprise\\reporting_engine.py",
        "line": 25,
        "type": "str"
      },
      {
        "variable": "REPORTING",
        "value": "reporting",
        "file": "TestMaster\\core\\domains\\intelligence\\enterprise\\api\\endpoint_manager.py",
        "line": 25,
        "type": "str"
      },
      {
        "variable": "rate_limit",
        "value": "100",
        "file": "TestMaster\\core\\domains\\intelligence\\enterprise\\api\\request_router.py",
        "line": 512,
        "type": "int"
      },
      {
        "variable": "FILE_TRANSFER",
        "value": "file_transfer",
        "file": "TestMaster\\core\\domains\\intelligence\\integration\\base.py",
        "line": 29,
        "type": "str"
      },
      {
        "variable": "timeout",
        "value": "30",
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\ml_orchestrator.py",
        "line": 682,
        "type": "int"
      },
      {
        "variable": "timeout",
        "value": "120",
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\distributed_ml_coordinator.py",
        "line": 772,
        "type": "int"
      },
      {
        "variable": "timeout",
        "value": "60",
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\intelligent_data_pipeline.py",
        "line": 784,
        "type": "int"
      },
      {
        "variable": "timeout",
        "value": "60",
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\intelligent_resource_scheduler.py",
        "line": 736,
        "type": "int"
      },
      {
        "variable": "FILE_TRANSFER",
        "value": "file_transfer",
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\ml_network_optimizer.py",
        "line": 43,
        "type": "str"
      },
      {
        "variable": "DEBUG",
        "value": "debug",
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\telemetry_ml_collector.py",
        "line": 30,
        "type": "str"
      },
      {
        "variable": "timeout",
        "value": "30",
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\advanced\\watchdog_recovery_system.py",
        "line": 635,
        "type": "int"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\domains\\intelligence\\orchestration\\cross_system_orchestrator.py",
        "line": 41,
        "type": "str"
      },
      {
        "variable": "max_duration",
        "value": "0.0",
        "file": "TestMaster\\core\\domains\\intelligence\\orchestration\\cross_system_orchestrator.py",
        "line": 278,
        "type": "float"
      },
      {
        "variable": "CONFIGURATION_MANAGEMENT",
        "value": "configuration_management",
        "file": "TestMaster\\core\\domains\\intelligence\\orchestration\\integration_hub.py",
        "line": 45,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION_UPDATE",
        "value": "configuration_update",
        "file": "TestMaster\\core\\domains\\intelligence\\orchestration\\integration_hub.py",
        "line": 57,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION_ERROR",
        "value": "configuration_error",
        "file": "TestMaster\\core\\domains\\intelligence\\reliability\\enterprise_error_recovery.py",
        "line": 48,
        "type": "str"
      },
      {
        "variable": "TIMEOUT_ERROR",
        "value": "timeout_error",
        "file": "TestMaster\\core\\domains\\intelligence\\reliability\\enterprise_error_recovery.py",
        "line": 53,
        "type": "str"
      },
      {
        "variable": "direction",
        "value": "stable",
        "file": "TestMaster\\core\\domains\\intelligence\\security\\security_analytics.py",
        "line": 326,
        "type": "str"
      },
      {
        "variable": "direction",
        "value": "increasing",
        "file": "TestMaster\\core\\domains\\intelligence\\security\\security_analytics.py",
        "line": 329,
        "type": "str"
      },
      {
        "variable": "direction",
        "value": "decreasing",
        "file": "TestMaster\\core\\domains\\intelligence\\security\\security_analytics.py",
        "line": 332,
        "type": "str"
      },
      {
        "variable": "CONFIG_CHANGE",
        "value": "config_change",
        "file": "TestMaster\\core\\domains\\intelligence\\security\\audit\\audit_events.py",
        "line": 20,
        "type": "str"
      },
      {
        "variable": "FILE_CHANGE",
        "value": "file_change",
        "file": "TestMaster\\core\\domains\\intelligence\\security\\audit\\audit_events.py",
        "line": 24,
        "type": "str"
      },
      {
        "variable": "QUARANTINE_FILE",
        "value": "quarantine_file",
        "file": "TestMaster\\core\\domains\\intelligence\\security\\enterprise\\intelligence\\incident_responder.py",
        "line": 41,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION_CHANGE",
        "value": "configuration_change",
        "file": "TestMaster\\core\\domains\\intelligence\\streaming\\event_streaming_engine.py",
        "line": 46,
        "type": "str"
      },
      {
        "variable": "KEY_BASED",
        "value": "key_based",
        "file": "TestMaster\\core\\domains\\intelligence\\streaming\\event_streaming_engine.py",
        "line": 58,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\chaos_engineer.py",
        "line": 23,
        "type": "str"
      },
      {
        "variable": "SECURITY_MISCONFIG",
        "value": "security_misconfiguration",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\security_fuzzer.py",
        "line": 22,
        "type": "str"
      },
      {
        "variable": "MAXIMIZE_COVERAGE",
        "value": "maximize_coverage",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\test_intelligence.py",
        "line": 32,
        "type": "str"
      },
      {
        "variable": "MAXIMIZE_DEFECT_DETECTION",
        "value": "maximize_defect_detection",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\test_intelligence.py",
        "line": 34,
        "type": "str"
      },
      {
        "variable": "PATH",
        "value": "path",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\advanced\\statistical_coverage_analyzer.py",
        "line": 24,
        "type": "str"
      },
      {
        "variable": "max_retries",
        "value": "3",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
        "line": 305,
        "type": "int"
      },
      {
        "variable": "TIMEOUT",
        "value": "TIMEOUT",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\automation\\continuous_testing_engine.py",
        "line": 43,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "TIMEOUT",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\automation\\enterprise_test_orchestrator.py",
        "line": 45,
        "type": "str"
      },
      {
        "variable": "UPDATE_IMPORTS",
        "value": "update_imports",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\automation\\test_maintenance_system.py",
        "line": 22,
        "type": "str"
      },
      {
        "variable": "import_index",
        "value": "0",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\components\\integration_generator.py",
        "line": 1128,
        "type": "int"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\components\\ml_optimizer.py",
        "line": 67,
        "type": "str"
      },
      {
        "variable": "direction",
        "value": "stable",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\enterprise\\quality_analytics_engine.py",
        "line": 588,
        "type": "str"
      },
      {
        "variable": "direction",
        "value": "improving",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\enterprise\\quality_analytics_engine.py",
        "line": 590,
        "type": "str"
      },
      {
        "variable": "direction",
        "value": "declining",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\enterprise\\quality_analytics_engine.py",
        "line": 592,
        "type": "str"
      },
      {
        "variable": "path_query",
        "value": "MATCH p=(:L1)-[:R1]->(:L1) RETURN p",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\patterns\\falkordb_patterns.py",
        "line": 334,
        "type": "str"
      },
      {
        "variable": "A05_SECURITY_MISCONFIGURATION",
        "value": "A05_Security_Misconfiguration",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\security\\advanced_owasp_tester.py",
        "line": 24,
        "type": "str"
      },
      {
        "variable": "base_url",
        "value": "https://owasp.org/Top10/2021/",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\security\\advanced_owasp_tester.py",
        "line": 678,
        "type": "str"
      },
      {
        "variable": "SECURITY_MISCONFIGURATION",
        "value": "API8_2023",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\security\\api_security_tester.py",
        "line": 28,
        "type": "str"
      },
      {
        "variable": "RATE_LIMITING",
        "value": "rate_limiting",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\security\\api_security_tester.py",
        "line": 43,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\security\\api_security_tester.py",
        "line": 47,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\domains\\security\\adaptive_fallback_orchestrator.py",
        "line": 41,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\domains\\security\\adaptive_fallback_orchestrator.py",
        "line": 50,
        "type": "str"
      },
      {
        "variable": "key_pattern",
        "value": "^[\\x20-\\x7E]+$",
        "file": "TestMaster\\core\\domains\\security\\agent_communication_security.py",
        "line": 40,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\domains\\security\\byzantine_consensus_security.py",
        "line": 35,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\domains\\security\\circuit_breaker_matrix.py",
        "line": 37,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\domains\\security\\circuit_breaker_matrix.py",
        "line": 44,
        "type": "str"
      },
      {
        "variable": "PATH_TRAVERSAL",
        "value": "path_traversal",
        "file": "TestMaster\\core\\domains\\security\\code_generation_security.py",
        "line": 51,
        "type": "str"
      },
      {
        "variable": "HARDCODED_SECRETS",
        "value": "hardcoded_secrets",
        "file": "TestMaster\\core\\domains\\security\\code_generation_security.py",
        "line": 54,
        "type": "str"
      },
      {
        "variable": "SECRET",
        "value": "secret",
        "file": "TestMaster\\core\\domains\\security\\configuration_security.py",
        "line": 24,
        "type": "str"
      },
      {
        "variable": "API_KEY",
        "value": "api_key",
        "file": "TestMaster\\core\\domains\\security\\distributed_key_management_security.py",
        "line": 31,
        "type": "str"
      },
      {
        "variable": "ACCESS_TOKEN",
        "value": "access_token",
        "file": "TestMaster\\core\\domains\\security\\distributed_key_management_security.py",
        "line": 32,
        "type": "str"
      },
      {
        "variable": "REFRESH_TOKEN",
        "value": "refresh_token",
        "file": "TestMaster\\core\\domains\\security\\distributed_key_management_security.py",
        "line": 33,
        "type": "str"
      },
      {
        "variable": "SYMMETRIC_KEY",
        "value": "symmetric_key",
        "file": "TestMaster\\core\\domains\\security\\distributed_key_management_security.py",
        "line": 34,
        "type": "str"
      },
      {
        "variable": "PUBLIC_KEY",
        "value": "public_key",
        "file": "TestMaster\\core\\domains\\security\\distributed_key_management_security.py",
        "line": 35,
        "type": "str"
      },
      {
        "variable": "PRIVATE_KEY",
        "value": "private_key",
        "file": "TestMaster\\core\\domains\\security\\distributed_key_management_security.py",
        "line": 36,
        "type": "str"
      },
      {
        "variable": "MASTER_KEY",
        "value": "master_key",
        "file": "TestMaster\\core\\domains\\security\\distributed_key_management_security.py",
        "line": 37,
        "type": "str"
      },
      {
        "variable": "key_value",
        "value": "PRIVATE_KEY_STORED_SECURELY",
        "file": "TestMaster\\core\\domains\\security\\distributed_key_management_security.py",
        "line": 396,
        "type": "str"
      },
      {
        "variable": "TOP_SECRET",
        "value": "top_secret",
        "file": "TestMaster\\core\\domains\\security\\document_classification_security.py",
        "line": 26,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\domains\\security\\document_classification_security.py",
        "line": 42,
        "type": "str"
      },
      {
        "variable": "SYSTEM_CONFIGURATION",
        "value": "system_configuration",
        "file": "TestMaster\\core\\domains\\security\\enterprise_audit_logging.py",
        "line": 27,
        "type": "str"
      },
      {
        "variable": "EXPORT_OPERATION",
        "value": "export_operation",
        "file": "TestMaster\\core\\domains\\security\\enterprise_audit_logging.py",
        "line": 31,
        "type": "str"
      },
      {
        "variable": "JWT_TOKEN",
        "value": "jwt_token",
        "file": "TestMaster\\core\\domains\\security\\enterprise_authentication.py",
        "line": 33,
        "type": "str"
      },
      {
        "variable": "API_KEY",
        "value": "api_key",
        "file": "TestMaster\\core\\domains\\security\\enterprise_authentication.py",
        "line": 34,
        "type": "str"
      },
      {
        "variable": "API_KEY",
        "value": "api_key",
        "file": "TestMaster\\core\\domains\\security\\enterprise_auth_gateway.py",
        "line": 77,
        "type": "str"
      },
      {
        "variable": "ID_TOKEN",
        "value": "id_token",
        "file": "TestMaster\\core\\domains\\security\\enterprise_auth_gateway.py",
        "line": 92,
        "type": "str"
      },
      {
        "variable": "API_KEY",
        "value": "api_key",
        "file": "TestMaster\\core\\domains\\security\\enterprise_auth_gateway.py",
        "line": 93,
        "type": "str"
      },
      {
        "variable": "TOKEN_ISSUED",
        "value": "token_issued",
        "file": "TestMaster\\core\\domains\\security\\enterprise_auth_gateway.py",
        "line": 100,
        "type": "str"
      },
      {
        "variable": "TOKEN_REVOKED",
        "value": "token_revoked",
        "file": "TestMaster\\core\\domains\\security\\enterprise_auth_gateway.py",
        "line": 101,
        "type": "str"
      },
      {
        "variable": "TOKEN_EXPIRED",
        "value": "token_expired",
        "file": "TestMaster\\core\\domains\\security\\enum_security.py",
        "line": 67,
        "type": "str"
      },
      {
        "variable": "RATE_LIMITED",
        "value": "rate_limited",
        "file": "TestMaster\\core\\domains\\security\\enum_security.py",
        "line": 68,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\domains\\security\\enum_security.py",
        "line": 87,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\domains\\security\\error_recovery_framework.py",
        "line": 44,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\domains\\security\\exception_monitoring.py",
        "line": 30,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\domains\\security\\fault_tolerance_engine.py",
        "line": 37,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\domains\\security\\guardrail_security_system.py",
        "line": 25,
        "type": "str"
      },
      {
        "variable": "CONFIG",
        "value": "config",
        "file": "TestMaster\\core\\domains\\security\\multi_agent_access_control.py",
        "line": 47,
        "type": "str"
      },
      {
        "variable": "TIMEOUT_ERRORS",
        "value": "timeout_errors",
        "file": "TestMaster\\core\\domains\\security\\retry_mechanism_system.py",
        "line": 37,
        "type": "str"
      },
      {
        "variable": "RATE_LIMIT_ERRORS",
        "value": "rate_limit_errors",
        "file": "TestMaster\\core\\domains\\security\\retry_mechanism_system.py",
        "line": 38,
        "type": "str"
      },
      {
        "variable": "FAILED_MAX_ATTEMPTS",
        "value": "failed_max_attempts",
        "file": "TestMaster\\core\\domains\\security\\retry_mechanism_system.py",
        "line": 45,
        "type": "str"
      },
      {
        "variable": "FAILED_TIMEOUT",
        "value": "failed_timeout",
        "file": "TestMaster\\core\\domains\\security\\retry_mechanism_system.py",
        "line": 46,
        "type": "str"
      },
      {
        "variable": "SECRET",
        "value": "secret",
        "file": "TestMaster\\core\\domains\\security\\secure_message_delivery.py",
        "line": 48,
        "type": "str"
      },
      {
        "variable": "TOP_SECRET",
        "value": "top_secret",
        "file": "TestMaster\\core\\domains\\security\\secure_message_delivery.py",
        "line": 49,
        "type": "str"
      },
      {
        "variable": "RATE_LIMIT_EXCEEDED",
        "value": "rate_limit_exceeded",
        "file": "TestMaster\\core\\domains\\security\\secure_message_delivery.py",
        "line": 61,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION_CHANGE",
        "value": "configuration_change",
        "file": "TestMaster\\core\\domains\\security\\security_monitoring_system.py",
        "line": 47,
        "type": "str"
      },
      {
        "variable": "URL",
        "value": "url",
        "file": "TestMaster\\core\\domains\\security\\threat_intelligence_system.py",
        "line": 148,
        "type": "str"
      },
      {
        "variable": "FILE_PATH",
        "value": "file_path",
        "file": "TestMaster\\core\\domains\\security\\threat_intelligence_system.py",
        "line": 150,
        "type": "str"
      },
      {
        "variable": "REGISTRY_KEY",
        "value": "registry_key",
        "file": "TestMaster\\core\\domains\\security\\threat_intelligence_system.py",
        "line": 151,
        "type": "str"
      },
      {
        "variable": "SECURITY_MISCONFIGURATION",
        "value": "security_misconfiguration",
        "file": "TestMaster\\core\\domains\\security\\vulnerability_detection_framework.py",
        "line": 96,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\domains\\security\\vulnerability_detection_framework.py",
        "line": 117,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\domains\\testing\\adaptive_testing_framework.py",
        "line": 37,
        "type": "str"
      },
      {
        "variable": "REPORTING",
        "value": "reporting",
        "file": "TestMaster\\core\\domains\\testing\\enterprise_test_framework.py",
        "line": 46,
        "type": "str"
      },
      {
        "variable": "max_iterations",
        "value": "3",
        "file": "TestMaster\\core\\domains\\testing\\flow_testing.py",
        "line": 592,
        "type": "int"
      },
      {
        "variable": "imports",
        "value": "import pytest\nimport unittest\nfrom unittest.mock import Mock, patch\n\n",
        "file": "TestMaster\\core\\domains\\testing\\multi_modal_test_engine.py",
        "line": 90,
        "type": "str"
      },
      {
        "variable": "imports",
        "value": "const { describe, test, expect, beforeEach, afterEach } = require('@jest/globals');\n\n",
        "file": "TestMaster\\core\\domains\\testing\\multi_modal_test_engine.py",
        "line": 113,
        "type": "str"
      },
      {
        "variable": "imports",
        "value": "import { describe, test, expect, beforeEach, afterEach } from '@jest/globals';\n\n",
        "file": "TestMaster\\core\\domains\\testing\\multi_modal_test_engine.py",
        "line": 133,
        "type": "str"
      },
      {
        "variable": "imports",
        "value": "import org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter",
        "file": "TestMaster\\core\\domains\\testing\\multi_modal_test_engine.py",
        "line": 155,
        "type": "str"
      },
      {
        "variable": "imports",
        "value": "using Microsoft.VisualStudio.TestTools.UnitTesting;\nusing System;\n\n",
        "file": "TestMaster\\core\\domains\\testing\\multi_modal_test_engine.py",
        "line": 194,
        "type": "str"
      },
      {
        "variable": "imports",
        "value": "package main\n\nimport (\n    \"testing\"\n)\n\n",
        "file": "TestMaster\\core\\domains\\testing\\multi_modal_test_engine.py",
        "line": 257,
        "type": "str"
      },
      {
        "variable": "max_score",
        "value": "100.0",
        "file": "TestMaster\\core\\domains\\testing\\supercharged_test_generator.py_stub_backup_20250821_042438.py",
        "line": 412,
        "type": "float"
      },
      {
        "variable": "API_KEY",
        "value": "api_key",
        "file": "TestMaster\\core\\domains\\testing\\testmaster_api_gateway.py",
        "line": 41,
        "type": "str"
      },
      {
        "variable": "REPORTER",
        "value": "reporter",
        "file": "TestMaster\\core\\domains\\testing\\test_integration_hub.py",
        "line": 35,
        "type": "str"
      },
      {
        "variable": "timeout_cmd",
        "value": "echo \"123\"; sleep 5; echo \"456\"",
        "file": "TestMaster\\core\\domains\\testing\\tool_testing.py",
        "line": 702,
        "type": "str"
      },
      {
        "variable": "url_pattern",
        "value": "^https?://[^\\s/$.?#].[^\\s]*$",
        "file": "TestMaster\\core\\foundation\\configuration\\base\\validation.py",
        "line": 338,
        "type": "str"
      },
      {
        "variable": "FILE_ADAPTER",
        "value": "file_adapter",
        "file": "TestMaster\\core\\integration\\foundations\\abstractions\\adapter_abstractions.py",
        "line": 43,
        "type": "str"
      },
      {
        "variable": "BIDIRECTIONAL",
        "value": "bidirectional",
        "file": "TestMaster\\core\\integration\\foundations\\abstractions\\adapter_abstractions.py",
        "line": 65,
        "type": "str"
      },
      {
        "variable": "FILE_SERVICE",
        "value": "file_service",
        "file": "TestMaster\\core\\integration\\foundations\\abstractions\\service_abstractions.py",
        "line": 35,
        "type": "str"
      },
      {
        "variable": "BEARER_TOKEN",
        "value": "bearer_token",
        "file": "TestMaster\\core\\integration\\foundations\\abstractions\\service_abstractions.py",
        "line": 69,
        "type": "str"
      },
      {
        "variable": "API_KEY",
        "value": "api_key",
        "file": "TestMaster\\core\\integration\\foundations\\abstractions\\service_abstractions.py",
        "line": 70,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION_CHANGE",
        "value": "configuration_change",
        "file": "TestMaster\\core\\intelligence\\autonomous_decision_engine.py",
        "line": 56,
        "type": "str"
      },
      {
        "variable": "base_port",
        "value": "8000",
        "file": "TestMaster\\core\\intelligence\\autonomous_replication_engine.py",
        "line": 829,
        "type": "int"
      },
      {
        "variable": "max_wait",
        "value": "60",
        "file": "TestMaster\\core\\intelligence\\autonomous_replication_engine.py",
        "line": 882,
        "type": "int"
      },
      {
        "variable": "direction",
        "value": "stable",
        "file": "TestMaster\\core\\intelligence\\cross_system_trend_analyzer.py",
        "line": 153,
        "type": "str"
      },
      {
        "variable": "direction",
        "value": "increasing",
        "file": "TestMaster\\core\\intelligence\\cross_system_trend_analyzer.py",
        "line": 155,
        "type": "str"
      },
      {
        "variable": "direction",
        "value": "decreasing",
        "file": "TestMaster\\core\\intelligence\\cross_system_trend_analyzer.py",
        "line": 157,
        "type": "str"
      },
      {
        "variable": "max_proximity",
        "value": "0.0",
        "file": "TestMaster\\core\\intelligence\\emergent_intelligence_detector.py",
        "line": 641,
        "type": "float"
      },
      {
        "variable": "THEORETICAL_LIMIT",
        "value": "theoretical_limit",
        "file": "TestMaster\\core\\intelligence\\intelligence_perfection_engine.py",
        "line": 48,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\intelligence\\intelligence_testing_framework.py",
        "line": 53,
        "type": "str"
      },
      {
        "variable": "THEORETICAL_LIMIT",
        "value": "theoretical_limit",
        "file": "TestMaster\\core\\intelligence\\intelligence_testing_framework.py",
        "line": 63,
        "type": "str"
      },
      {
        "variable": "max_depth",
        "value": "5",
        "file": "TestMaster\\core\\intelligence\\intelligence_testing_framework.py",
        "line": 238,
        "type": "int"
      },
      {
        "variable": "max_variance",
        "value": "0.25",
        "file": "TestMaster\\core\\intelligence\\intelligent_resource_allocator.py",
        "line": 1307,
        "type": "float"
      },
      {
        "variable": "MAXIMIZE_ACCURACY",
        "value": "maximize_accuracy",
        "file": "TestMaster\\core\\intelligence\\intelligent_workflow_engine.py",
        "line": 83,
        "type": "str"
      },
      {
        "variable": "MAXIMIZE_THROUGHPUT",
        "value": "maximize_throughput",
        "file": "TestMaster\\core\\intelligence\\intelligent_workflow_engine.py",
        "line": 85,
        "type": "str"
      },
      {
        "variable": "MAXIMIZE_VALUE",
        "value": "maximize_value",
        "file": "TestMaster\\core\\intelligence\\prescriptive_intelligence_engine.py",
        "line": 47,
        "type": "str"
      },
      {
        "variable": "MAXIMIZE_EFFICIENCY",
        "value": "maximize_efficiency",
        "file": "TestMaster\\core\\intelligence\\prescriptive_intelligence_engine.py",
        "line": 50,
        "type": "str"
      },
      {
        "variable": "MINIMAX",
        "value": "minimax",
        "file": "TestMaster\\core\\intelligence\\prescriptive_intelligence_engine.py",
        "line": 64,
        "type": "str"
      },
      {
        "variable": "path_value",
        "value": "0",
        "file": "TestMaster\\core\\intelligence\\prescriptive_intelligence_engine.py",
        "line": 754,
        "type": "int"
      },
      {
        "variable": "max_iterations",
        "value": "10",
        "file": "TestMaster\\core\\intelligence\\recursive_intelligence_optimizer.py",
        "line": 732,
        "type": "int"
      },
      {
        "variable": "IMPORT",
        "value": "import",
        "file": "TestMaster\\core\\intelligence\\semantic_code_analyzer.py",
        "line": 57,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\intelligence\\semantic_code_analyzer.py",
        "line": 73,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\intelligence\\semantic_code_analyzer.py",
        "line": 100,
        "type": "str"
      },
      {
        "variable": "DEBUGGING",
        "value": "debugging",
        "file": "TestMaster\\core\\intelligence\\semantic_code_analyzer.py",
        "line": 106,
        "type": "str"
      },
      {
        "variable": "max_depth",
        "value": "0",
        "file": "TestMaster\\core\\intelligence\\semantic_code_analyzer.py",
        "line": 835,
        "type": "int"
      },
      {
        "variable": "temp_file",
        "value": "temp_semantic_example.py",
        "file": "TestMaster\\core\\intelligence\\semantic_code_analyzer.py",
        "line": 1271,
        "type": "str"
      },
      {
        "variable": "DIRECT",
        "value": "direct",
        "file": "TestMaster\\core\\intelligence\\temporal_intelligence_engine.py",
        "line": 52,
        "type": "str"
      },
      {
        "variable": "INDIRECT",
        "value": "indirect",
        "file": "TestMaster\\core\\intelligence\\temporal_intelligence_engine.py",
        "line": 53,
        "type": "str"
      },
      {
        "variable": "BIDIRECTIONAL",
        "value": "bidirectional",
        "file": "TestMaster\\core\\intelligence\\temporal_intelligence_engine.py",
        "line": 54,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\intelligence\\unified_architecture_intelligence.py",
        "line": 57,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION_DEPENDENCY",
        "value": "configuration_dependency",
        "file": "TestMaster\\core\\intelligence\\unified_architecture_intelligence.py",
        "line": 64,
        "type": "str"
      },
      {
        "variable": "file_content",
        "value": "",
        "file": "TestMaster\\core\\intelligence\\unified_architecture_intelligence.py",
        "line": 218,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\intelligence\\unified_architecture_intelligence_complete.py",
        "line": 58,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION_DEPENDENCY",
        "value": "configuration_dependency",
        "file": "TestMaster\\core\\intelligence\\unified_architecture_intelligence_complete.py",
        "line": 65,
        "type": "str"
      },
      {
        "variable": "file_content",
        "value": "",
        "file": "TestMaster\\core\\intelligence\\unified_architecture_intelligence_complete.py",
        "line": 219,
        "type": "str"
      },
      {
        "variable": "target_path",
        "value": ".",
        "file": "TestMaster\\core\\intelligence\\analysis\\comprehensive_analysis_hub.py",
        "line": 839,
        "type": "str"
      },
      {
        "variable": "target_path",
        "value": ".",
        "file": "TestMaster\\core\\intelligence\\analysis\\safe_comprehensive_analysis_hub.py",
        "line": 394,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\intelligence\\analysis\\semantic_analyzer.py",
        "line": 29,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\intelligence\\analysis\\semantic_base.py",
        "line": 27,
        "type": "str"
      },
      {
        "variable": "key_similarity",
        "value": "0.0",
        "file": "TestMaster\\core\\intelligence\\analytics\\analytics_deduplication.py",
        "line": 513,
        "type": "float"
      },
      {
        "variable": "API_KEY",
        "value": "api_key",
        "file": "TestMaster\\core\\intelligence\\api\\unified_api_gateway.py",
        "line": 48,
        "type": "str"
      },
      {
        "variable": "API_KEY",
        "value": "api_key",
        "file": "TestMaster\\core\\intelligence\\api\\unified_api_gateway.py",
        "line": 59,
        "type": "str"
      },
      {
        "variable": "ORIGINAL_FILE",
        "value": "architectural_decision_engine.py",
        "file": "TestMaster\\core\\intelligence\\architectural_decision_modules\\__init__.py",
        "line": 55,
        "type": "str"
      },
      {
        "variable": "max_slope",
        "value": "0",
        "file": "TestMaster\\core\\intelligence\\architectural_evolution\\growth_modeler.py",
        "line": 329,
        "type": "int"
      },
      {
        "variable": "max_slope",
        "value": "0",
        "file": "TestMaster\\core\\intelligence\\architectural_evolution_modules\\system_growth_modeler.py",
        "line": 332,
        "type": "int"
      },
      {
        "variable": "ORIGINAL_FILE",
        "value": "architectural_evolution_predictor.py",
        "file": "TestMaster\\core\\intelligence\\architectural_evolution_modules\\__init__.py",
        "line": 61,
        "type": "str"
      },
      {
        "variable": "max_slope",
        "value": "0",
        "file": "TestMaster\\core\\intelligence\\archive\\architectural_evolution_predictor_original.py",
        "line": 491,
        "type": "int"
      },
      {
        "variable": "SECRET",
        "value": "secret",
        "file": "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
        "line": 63,
        "type": "str"
      },
      {
        "variable": "TOP_SECRET",
        "value": "top_secret",
        "file": "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
        "line": 64,
        "type": "str"
      },
      {
        "variable": "URL",
        "value": "url",
        "file": "TestMaster\\core\\intelligence\\data_pipeline\\advanced_data_pipeline.py",
        "line": 44,
        "type": "str"
      },
      {
        "variable": "FILE_PATH",
        "value": "file_path",
        "file": "TestMaster\\core\\intelligence\\data_pipeline\\advanced_data_pipeline.py",
        "line": 47,
        "type": "str"
      },
      {
        "variable": "url_pattern",
        "value": "^https?://[^\\s/$.?#].[^\\s]*$",
        "file": "TestMaster\\core\\intelligence\\data_pipeline\\advanced_data_pipeline.py",
        "line": 108,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\intelligence\\documentation\\api_validation_framework.py",
        "line": 44,
        "type": "str"
      },
      {
        "variable": "REDIRECT",
        "value": "3xx",
        "file": "TestMaster\\core\\intelligence\\documentation\\api_validation_framework.py",
        "line": 50,
        "type": "str"
      },
      {
        "variable": "config_type",
        "value": "config",
        "file": "TestMaster\\core\\intelligence\\documentation\\architecture_validation_framework.py",
        "line": 163,
        "type": "str"
      },
      {
        "variable": "config_type",
        "value": "yaml_config",
        "file": "TestMaster\\core\\intelligence\\documentation\\architecture_validation_framework.py",
        "line": 165,
        "type": "str"
      },
      {
        "variable": "config_type",
        "value": "json_config",
        "file": "TestMaster\\core\\intelligence\\documentation\\architecture_validation_framework.py",
        "line": 167,
        "type": "str"
      },
      {
        "variable": "config_type",
        "value": "toml_config",
        "file": "TestMaster\\core\\intelligence\\documentation\\architecture_validation_framework.py",
        "line": 169,
        "type": "str"
      },
      {
        "variable": "config_type",
        "value": "ini_config",
        "file": "TestMaster\\core\\intelligence\\documentation\\architecture_validation_framework.py",
        "line": 171,
        "type": "str"
      },
      {
        "variable": "documented_files",
        "value": "0",
        "file": "TestMaster\\core\\intelligence\\documentation\\doc_orchestrator.py",
        "line": 139,
        "type": "int"
      },
      {
        "variable": "file_count",
        "value": "0",
        "file": "TestMaster\\core\\intelligence\\documentation\\doc_orchestrator.py",
        "line": 254,
        "type": "int"
      },
      {
        "variable": "API_KEY",
        "value": "api_key",
        "file": "TestMaster\\core\\intelligence\\documentation\\enterprise_api_docs.py",
        "line": 19,
        "type": "str"
      },
      {
        "variable": "BEARER_TOKEN",
        "value": "bearer",
        "file": "TestMaster\\core\\intelligence\\documentation\\enterprise_api_docs.py",
        "line": 20,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\intelligence\\documentation\\faq_system.py",
        "line": 19,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION_BUILDER",
        "value": "configuration_builder",
        "file": "TestMaster\\core\\intelligence\\documentation\\interactive_docs_system.py",
        "line": 26,
        "type": "str"
      },
      {
        "variable": "NAVIGATION_CONFIG",
        "value": "navigation_config",
        "file": "TestMaster\\core\\intelligence\\documentation\\json_docs_processor.py",
        "line": 20,
        "type": "str"
      },
      {
        "variable": "LOCALIZATION_FILE",
        "value": "localization",
        "file": "TestMaster\\core\\intelligence\\documentation\\json_docs_processor.py",
        "line": 21,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\intelligence\\documentation\\json_docs_processor.py",
        "line": 23,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\intelligence\\documentation\\knowledge_management_framework.py",
        "line": 36,
        "type": "str"
      },
      {
        "variable": "DOCUMENTATION_FILES",
        "value": "documentation_files",
        "file": "TestMaster\\core\\intelligence\\documentation\\knowledge_management_framework.py",
        "line": 42,
        "type": "str"
      },
      {
        "variable": "README_FILES",
        "value": "readme_files",
        "file": "TestMaster\\core\\intelligence\\documentation\\knowledge_management_framework.py",
        "line": 45,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION_FILES",
        "value": "configuration_files",
        "file": "TestMaster\\core\\intelligence\\documentation\\knowledge_management_framework.py",
        "line": 49,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION_CHANGE",
        "value": "configuration_change",
        "file": "TestMaster\\core\\intelligence\\documentation\\migration_guide_generator.py",
        "line": 21,
        "type": "str"
      },
      {
        "variable": "PORTUGUESE_BR",
        "value": "pt-BR",
        "file": "TestMaster\\core\\intelligence\\documentation\\multilingual_docs.py",
        "line": 19,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\intelligence\\documentation\\workflow_recipe_docs.py",
        "line": 48,
        "type": "str"
      },
      {
        "variable": "KUBERNETES_CONFIG",
        "value": "kubernetes",
        "file": "TestMaster\\core\\intelligence\\documentation\\yaml_config_processor.py",
        "line": 19,
        "type": "str"
      },
      {
        "variable": "CI_CD_CONFIG",
        "value": "ci-cd",
        "file": "TestMaster\\core\\intelligence\\documentation\\yaml_config_processor.py",
        "line": 21,
        "type": "str"
      },
      {
        "variable": "APPLICATION_CONFIG",
        "value": "application",
        "file": "TestMaster\\core\\intelligence\\documentation\\yaml_config_processor.py",
        "line": 22,
        "type": "str"
      },
      {
        "variable": "DOCUMENTATION_CONFIG",
        "value": "documentation",
        "file": "TestMaster\\core\\intelligence\\documentation\\yaml_config_processor.py",
        "line": 23,
        "type": "str"
      },
      {
        "variable": "falkordb_language_support",
        "value": "2",
        "file": "TestMaster\\core\\intelligence\\documentation\\revolutionary\\falkordb_obliterator.py",
        "line": 370,
        "type": "int"
      },
      {
        "variable": "COMPLIANCE_REPORT",
        "value": "compliance_report",
        "file": "TestMaster\\core\\intelligence\\enterprise\\reporting_engine.py",
        "line": 25,
        "type": "str"
      },
      {
        "variable": "REPORTING",
        "value": "reporting",
        "file": "TestMaster\\core\\intelligence\\enterprise\\api\\endpoint_manager.py",
        "line": 25,
        "type": "str"
      },
      {
        "variable": "rate_limit",
        "value": "100",
        "file": "TestMaster\\core\\intelligence\\enterprise\\api\\request_router.py",
        "line": 512,
        "type": "int"
      },
      {
        "variable": "FILE_TRANSFER",
        "value": "file_transfer",
        "file": "TestMaster\\core\\intelligence\\integration\\base.py",
        "line": 29,
        "type": "str"
      },
      {
        "variable": "timeout",
        "value": "30",
        "file": "TestMaster\\core\\intelligence\\ml\\ml_orchestrator.py",
        "line": 682,
        "type": "int"
      },
      {
        "variable": "timeout",
        "value": "120",
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\distributed_ml_coordinator.py",
        "line": 772,
        "type": "int"
      },
      {
        "variable": "timeout",
        "value": "60",
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\intelligent_data_pipeline.py",
        "line": 784,
        "type": "int"
      },
      {
        "variable": "timeout",
        "value": "60",
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\intelligent_resource_scheduler.py",
        "line": 736,
        "type": "int"
      },
      {
        "variable": "FILE_TRANSFER",
        "value": "file_transfer",
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\ml_network_optimizer.py",
        "line": 43,
        "type": "str"
      },
      {
        "variable": "DEBUG",
        "value": "debug",
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\telemetry_ml_collector.py",
        "line": 30,
        "type": "str"
      },
      {
        "variable": "timeout",
        "value": "30",
        "file": "TestMaster\\core\\intelligence\\ml\\advanced\\watchdog_recovery_system.py",
        "line": 635,
        "type": "int"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\intelligence\\orchestration\\cross_system_orchestrator.py",
        "line": 41,
        "type": "str"
      },
      {
        "variable": "max_duration",
        "value": "0.0",
        "file": "TestMaster\\core\\intelligence\\orchestration\\cross_system_orchestrator.py",
        "line": 278,
        "type": "float"
      },
      {
        "variable": "CONFIGURATION_MANAGEMENT",
        "value": "configuration_management",
        "file": "TestMaster\\core\\intelligence\\orchestration\\integration_hub.py",
        "line": 45,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION_UPDATE",
        "value": "configuration_update",
        "file": "TestMaster\\core\\intelligence\\orchestration\\integration_hub.py",
        "line": 57,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION_ERROR",
        "value": "configuration_error",
        "file": "TestMaster\\core\\intelligence\\reliability\\enterprise_error_recovery.py",
        "line": 48,
        "type": "str"
      },
      {
        "variable": "TIMEOUT_ERROR",
        "value": "timeout_error",
        "file": "TestMaster\\core\\intelligence\\reliability\\enterprise_error_recovery.py",
        "line": 53,
        "type": "str"
      },
      {
        "variable": "direction",
        "value": "stable",
        "file": "TestMaster\\core\\intelligence\\security\\security_analytics.py",
        "line": 326,
        "type": "str"
      },
      {
        "variable": "direction",
        "value": "increasing",
        "file": "TestMaster\\core\\intelligence\\security\\security_analytics.py",
        "line": 329,
        "type": "str"
      },
      {
        "variable": "direction",
        "value": "decreasing",
        "file": "TestMaster\\core\\intelligence\\security\\security_analytics.py",
        "line": 332,
        "type": "str"
      },
      {
        "variable": "CONFIG_CHANGE",
        "value": "config_change",
        "file": "TestMaster\\core\\intelligence\\security\\audit\\audit_events.py",
        "line": 20,
        "type": "str"
      },
      {
        "variable": "FILE_CHANGE",
        "value": "file_change",
        "file": "TestMaster\\core\\intelligence\\security\\audit\\audit_events.py",
        "line": 24,
        "type": "str"
      },
      {
        "variable": "QUARANTINE_FILE",
        "value": "quarantine_file",
        "file": "TestMaster\\core\\intelligence\\security\\enterprise\\intelligence\\incident_responder.py",
        "line": 41,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION_CHANGE",
        "value": "configuration_change",
        "file": "TestMaster\\core\\intelligence\\streaming\\event_streaming_engine.py",
        "line": 46,
        "type": "str"
      },
      {
        "variable": "KEY_BASED",
        "value": "key_based",
        "file": "TestMaster\\core\\intelligence\\streaming\\event_streaming_engine.py",
        "line": 58,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\intelligence\\testing\\chaos_engineer.py",
        "line": 23,
        "type": "str"
      },
      {
        "variable": "SECURITY_MISCONFIG",
        "value": "security_misconfiguration",
        "file": "TestMaster\\core\\intelligence\\testing\\security_fuzzer.py",
        "line": 22,
        "type": "str"
      },
      {
        "variable": "MAXIMIZE_COVERAGE",
        "value": "maximize_coverage",
        "file": "TestMaster\\core\\intelligence\\testing\\test_intelligence.py",
        "line": 32,
        "type": "str"
      },
      {
        "variable": "MAXIMIZE_DEFECT_DETECTION",
        "value": "maximize_defect_detection",
        "file": "TestMaster\\core\\intelligence\\testing\\test_intelligence.py",
        "line": 34,
        "type": "str"
      },
      {
        "variable": "PATH",
        "value": "path",
        "file": "TestMaster\\core\\intelligence\\testing\\advanced\\statistical_coverage_analyzer.py",
        "line": 24,
        "type": "str"
      },
      {
        "variable": "max_retries",
        "value": "3",
        "file": "TestMaster\\core\\intelligence\\testing\\ai_generation\\gemini_test_generator.py",
        "line": 305,
        "type": "int"
      },
      {
        "variable": "TIMEOUT",
        "value": "TIMEOUT",
        "file": "TestMaster\\core\\intelligence\\testing\\automation\\continuous_testing_engine.py",
        "line": 43,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "TIMEOUT",
        "file": "TestMaster\\core\\intelligence\\testing\\automation\\enterprise_test_orchestrator.py",
        "line": 45,
        "type": "str"
      },
      {
        "variable": "UPDATE_IMPORTS",
        "value": "update_imports",
        "file": "TestMaster\\core\\intelligence\\testing\\automation\\test_maintenance_system.py",
        "line": 22,
        "type": "str"
      },
      {
        "variable": "import_index",
        "value": "0",
        "file": "TestMaster\\core\\intelligence\\testing\\components\\integration_generator.py",
        "line": 1128,
        "type": "int"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\intelligence\\testing\\components\\ml_optimizer.py",
        "line": 67,
        "type": "str"
      },
      {
        "variable": "direction",
        "value": "stable",
        "file": "TestMaster\\core\\intelligence\\testing\\enterprise\\quality_analytics_engine.py",
        "line": 588,
        "type": "str"
      },
      {
        "variable": "direction",
        "value": "improving",
        "file": "TestMaster\\core\\intelligence\\testing\\enterprise\\quality_analytics_engine.py",
        "line": 590,
        "type": "str"
      },
      {
        "variable": "direction",
        "value": "declining",
        "file": "TestMaster\\core\\intelligence\\testing\\enterprise\\quality_analytics_engine.py",
        "line": 592,
        "type": "str"
      },
      {
        "variable": "path_query",
        "value": "MATCH p=(:L1)-[:R1]->(:L1) RETURN p",
        "file": "TestMaster\\core\\intelligence\\testing\\patterns\\falkordb_patterns.py",
        "line": 334,
        "type": "str"
      },
      {
        "variable": "A05_SECURITY_MISCONFIGURATION",
        "value": "A05_Security_Misconfiguration",
        "file": "TestMaster\\core\\intelligence\\testing\\security\\advanced_owasp_tester.py",
        "line": 24,
        "type": "str"
      },
      {
        "variable": "base_url",
        "value": "https://owasp.org/Top10/2021/",
        "file": "TestMaster\\core\\intelligence\\testing\\security\\advanced_owasp_tester.py",
        "line": 678,
        "type": "str"
      },
      {
        "variable": "SECURITY_MISCONFIGURATION",
        "value": "API8_2023",
        "file": "TestMaster\\core\\intelligence\\testing\\security\\api_security_tester.py",
        "line": 28,
        "type": "str"
      },
      {
        "variable": "RATE_LIMITING",
        "value": "rate_limiting",
        "file": "TestMaster\\core\\intelligence\\testing\\security\\api_security_tester.py",
        "line": 43,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\intelligence\\testing\\security\\api_security_tester.py",
        "line": 47,
        "type": "str"
      },
      {
        "variable": "FIX_IMPORTS",
        "value": "fix_imports",
        "file": "TestMaster\\core\\orchestration\\coordination\\master\\master_orchestrator.py",
        "line": 97,
        "type": "str"
      },
      {
        "variable": "GENERATE_REPORT",
        "value": "generate_report",
        "file": "TestMaster\\core\\orchestration\\coordination\\master\\master_orchestrator.py",
        "line": 100,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\orchestration\\engines\\workflow\\workflow_orchestration_engine.py",
        "line": 47,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\orchestration\\foundations\\abstractions\\task_abstractions.py",
        "line": 28,
        "type": "str"
      },
      {
        "variable": "max_velocity",
        "value": "2.0",
        "file": "TestMaster\\core\\orchestration\\foundations\\patterns\\swarm_patterns.py",
        "line": 484,
        "type": "float"
      },
      {
        "variable": "FILE_SYSTEM",
        "value": "file_system",
        "file": "TestMaster\\core\\orchestration\\foundations\\protocols\\integration_protocols.py",
        "line": 29,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\orchestration\\foundations\\protocols\\integration_protocols.py",
        "line": 60,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION_MANAGEMENT",
        "value": "configuration_management",
        "file": "TestMaster\\core\\orchestration\\integration\\hub\\integration_hub.py",
        "line": 45,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION_UPDATE",
        "value": "configuration_update",
        "file": "TestMaster\\core\\orchestration\\integration\\hub\\integration_hub.py",
        "line": 57,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\security\\adaptive_fallback_orchestrator.py",
        "line": 41,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\security\\adaptive_fallback_orchestrator.py",
        "line": 50,
        "type": "str"
      },
      {
        "variable": "key_pattern",
        "value": "^[\\x20-\\x7E]+$",
        "file": "TestMaster\\core\\security\\agent_communication_security.py",
        "line": 40,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\security\\byzantine_consensus_security.py",
        "line": 35,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\security\\circuit_breaker_matrix.py",
        "line": 37,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\security\\circuit_breaker_matrix.py",
        "line": 44,
        "type": "str"
      },
      {
        "variable": "PATH_TRAVERSAL",
        "value": "path_traversal",
        "file": "TestMaster\\core\\security\\code_generation_security.py",
        "line": 51,
        "type": "str"
      },
      {
        "variable": "HARDCODED_SECRETS",
        "value": "hardcoded_secrets",
        "file": "TestMaster\\core\\security\\code_generation_security.py",
        "line": 54,
        "type": "str"
      },
      {
        "variable": "SECRET",
        "value": "secret",
        "file": "TestMaster\\core\\security\\configuration_security.py",
        "line": 24,
        "type": "str"
      },
      {
        "variable": "SECRET_DETECTION",
        "value": "secret_detection",
        "file": "TestMaster\\core\\security\\deployment_pipeline_security.py",
        "line": 39,
        "type": "str"
      },
      {
        "variable": "API_KEY",
        "value": "api_key",
        "file": "TestMaster\\core\\security\\distributed_key_management_security.py",
        "line": 31,
        "type": "str"
      },
      {
        "variable": "ACCESS_TOKEN",
        "value": "access_token",
        "file": "TestMaster\\core\\security\\distributed_key_management_security.py",
        "line": 32,
        "type": "str"
      },
      {
        "variable": "REFRESH_TOKEN",
        "value": "refresh_token",
        "file": "TestMaster\\core\\security\\distributed_key_management_security.py",
        "line": 33,
        "type": "str"
      },
      {
        "variable": "SYMMETRIC_KEY",
        "value": "symmetric_key",
        "file": "TestMaster\\core\\security\\distributed_key_management_security.py",
        "line": 34,
        "type": "str"
      },
      {
        "variable": "PUBLIC_KEY",
        "value": "public_key",
        "file": "TestMaster\\core\\security\\distributed_key_management_security.py",
        "line": 35,
        "type": "str"
      },
      {
        "variable": "PRIVATE_KEY",
        "value": "private_key",
        "file": "TestMaster\\core\\security\\distributed_key_management_security.py",
        "line": 36,
        "type": "str"
      },
      {
        "variable": "MASTER_KEY",
        "value": "master_key",
        "file": "TestMaster\\core\\security\\distributed_key_management_security.py",
        "line": 37,
        "type": "str"
      },
      {
        "variable": "key_value",
        "value": "PRIVATE_KEY_STORED_SECURELY",
        "file": "TestMaster\\core\\security\\distributed_key_management_security.py",
        "line": 396,
        "type": "str"
      },
      {
        "variable": "TOP_SECRET",
        "value": "top_secret",
        "file": "TestMaster\\core\\security\\document_classification_security.py",
        "line": 26,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\security\\document_classification_security.py",
        "line": 42,
        "type": "str"
      },
      {
        "variable": "SYSTEM_CONFIGURATION",
        "value": "system_configuration",
        "file": "TestMaster\\core\\security\\enterprise_audit_logging.py",
        "line": 27,
        "type": "str"
      },
      {
        "variable": "EXPORT_OPERATION",
        "value": "export_operation",
        "file": "TestMaster\\core\\security\\enterprise_audit_logging.py",
        "line": 31,
        "type": "str"
      },
      {
        "variable": "JWT_TOKEN",
        "value": "jwt_token",
        "file": "TestMaster\\core\\security\\enterprise_authentication.py",
        "line": 33,
        "type": "str"
      },
      {
        "variable": "API_KEY",
        "value": "api_key",
        "file": "TestMaster\\core\\security\\enterprise_authentication.py",
        "line": 34,
        "type": "str"
      },
      {
        "variable": "API_KEY",
        "value": "api_key",
        "file": "TestMaster\\core\\security\\enterprise_auth_gateway.py",
        "line": 77,
        "type": "str"
      },
      {
        "variable": "ID_TOKEN",
        "value": "id_token",
        "file": "TestMaster\\core\\security\\enterprise_auth_gateway.py",
        "line": 92,
        "type": "str"
      },
      {
        "variable": "API_KEY",
        "value": "api_key",
        "file": "TestMaster\\core\\security\\enterprise_auth_gateway.py",
        "line": 93,
        "type": "str"
      },
      {
        "variable": "TOKEN_ISSUED",
        "value": "token_issued",
        "file": "TestMaster\\core\\security\\enterprise_auth_gateway.py",
        "line": 100,
        "type": "str"
      },
      {
        "variable": "TOKEN_REVOKED",
        "value": "token_revoked",
        "file": "TestMaster\\core\\security\\enterprise_auth_gateway.py",
        "line": 101,
        "type": "str"
      },
      {
        "variable": "TOKEN_EXPIRED",
        "value": "token_expired",
        "file": "TestMaster\\core\\security\\enum_security.py",
        "line": 67,
        "type": "str"
      },
      {
        "variable": "RATE_LIMITED",
        "value": "rate_limited",
        "file": "TestMaster\\core\\security\\enum_security.py",
        "line": 68,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\security\\enum_security.py",
        "line": 87,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\security\\error_recovery_framework.py",
        "line": 44,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\security\\exception_monitoring.py",
        "line": 30,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\security\\fault_tolerance_engine.py",
        "line": 37,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\security\\guardrail_security_system.py",
        "line": 25,
        "type": "str"
      },
      {
        "variable": "CONFIG",
        "value": "config",
        "file": "TestMaster\\core\\security\\multi_agent_access_control.py",
        "line": 47,
        "type": "str"
      },
      {
        "variable": "TIMEOUT_ERRORS",
        "value": "timeout_errors",
        "file": "TestMaster\\core\\security\\retry_mechanism_system.py",
        "line": 37,
        "type": "str"
      },
      {
        "variable": "RATE_LIMIT_ERRORS",
        "value": "rate_limit_errors",
        "file": "TestMaster\\core\\security\\retry_mechanism_system.py",
        "line": 38,
        "type": "str"
      },
      {
        "variable": "FAILED_MAX_ATTEMPTS",
        "value": "failed_max_attempts",
        "file": "TestMaster\\core\\security\\retry_mechanism_system.py",
        "line": 45,
        "type": "str"
      },
      {
        "variable": "FAILED_TIMEOUT",
        "value": "failed_timeout",
        "file": "TestMaster\\core\\security\\retry_mechanism_system.py",
        "line": 46,
        "type": "str"
      },
      {
        "variable": "SECRET",
        "value": "secret",
        "file": "TestMaster\\core\\security\\secure_message_delivery.py",
        "line": 48,
        "type": "str"
      },
      {
        "variable": "TOP_SECRET",
        "value": "top_secret",
        "file": "TestMaster\\core\\security\\secure_message_delivery.py",
        "line": 49,
        "type": "str"
      },
      {
        "variable": "RATE_LIMIT_EXCEEDED",
        "value": "rate_limit_exceeded",
        "file": "TestMaster\\core\\security\\secure_message_delivery.py",
        "line": 61,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION_CHANGE",
        "value": "configuration_change",
        "file": "TestMaster\\core\\security\\security_monitoring_system.py",
        "line": 47,
        "type": "str"
      },
      {
        "variable": "URL",
        "value": "url",
        "file": "TestMaster\\core\\security\\threat_intelligence_system.py",
        "line": 148,
        "type": "str"
      },
      {
        "variable": "FILE_PATH",
        "value": "file_path",
        "file": "TestMaster\\core\\security\\threat_intelligence_system.py",
        "line": 150,
        "type": "str"
      },
      {
        "variable": "REGISTRY_KEY",
        "value": "registry_key",
        "file": "TestMaster\\core\\security\\threat_intelligence_system.py",
        "line": 151,
        "type": "str"
      },
      {
        "variable": "SECURITY_MISCONFIGURATION",
        "value": "security_misconfiguration",
        "file": "TestMaster\\core\\security\\vulnerability_detection_framework.py",
        "line": 96,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\core\\security\\vulnerability_detection_framework.py",
        "line": 117,
        "type": "str"
      },
      {
        "variable": "TEST_REPORTER",
        "value": "test_reporter",
        "file": "TestMaster\\core\\state\\enhanced_state_manager.py",
        "line": 69,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\testing\\adaptive_testing_framework.py",
        "line": 37,
        "type": "str"
      },
      {
        "variable": "REPORTING",
        "value": "reporting",
        "file": "TestMaster\\core\\testing\\enterprise_test_framework.py",
        "line": 46,
        "type": "str"
      },
      {
        "variable": "max_iterations",
        "value": "3",
        "file": "TestMaster\\core\\testing\\flow_testing.py",
        "line": 592,
        "type": "int"
      },
      {
        "variable": "imports",
        "value": "import pytest\nimport unittest\nfrom unittest.mock import Mock, patch\n\n",
        "file": "TestMaster\\core\\testing\\multi_modal_test_engine.py",
        "line": 90,
        "type": "str"
      },
      {
        "variable": "imports",
        "value": "const { describe, test, expect, beforeEach, afterEach } = require('@jest/globals');\n\n",
        "file": "TestMaster\\core\\testing\\multi_modal_test_engine.py",
        "line": 113,
        "type": "str"
      },
      {
        "variable": "imports",
        "value": "import { describe, test, expect, beforeEach, afterEach } from '@jest/globals';\n\n",
        "file": "TestMaster\\core\\testing\\multi_modal_test_engine.py",
        "line": 133,
        "type": "str"
      },
      {
        "variable": "imports",
        "value": "import org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter",
        "file": "TestMaster\\core\\testing\\multi_modal_test_engine.py",
        "line": 155,
        "type": "str"
      },
      {
        "variable": "imports",
        "value": "using Microsoft.VisualStudio.TestTools.UnitTesting;\nusing System;\n\n",
        "file": "TestMaster\\core\\testing\\multi_modal_test_engine.py",
        "line": 194,
        "type": "str"
      },
      {
        "variable": "imports",
        "value": "package main\n\nimport (\n    \"testing\"\n)\n\n",
        "file": "TestMaster\\core\\testing\\multi_modal_test_engine.py",
        "line": 257,
        "type": "str"
      },
      {
        "variable": "max_score",
        "value": "100.0",
        "file": "TestMaster\\core\\testing\\supercharged_test_generator.py_stub_backup_20250821_042438.py",
        "line": 412,
        "type": "float"
      },
      {
        "variable": "API_KEY",
        "value": "api_key",
        "file": "TestMaster\\core\\testing\\testmaster_api_gateway.py",
        "line": 41,
        "type": "str"
      },
      {
        "variable": "REPORTER",
        "value": "reporter",
        "file": "TestMaster\\core\\testing\\test_integration_hub.py",
        "line": 35,
        "type": "str"
      },
      {
        "variable": "timeout_cmd",
        "value": "echo \"123\"; sleep 5; echo \"456\"",
        "file": "TestMaster\\core\\testing\\tool_testing.py",
        "line": 702,
        "type": "str"
      },
      {
        "variable": "REPORTING",
        "value": "reporting",
        "file": "TestMaster\\core\\tools\\type_safe_tools.py",
        "line": 37,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\core\\tools\\type_safe_tools.py",
        "line": 47,
        "type": "str"
      },
      {
        "variable": "base_url",
        "value": "http://localhost:5000",
        "file": "TestMaster\\dashboard\\comprehensive_frontend_test.py",
        "line": 24,
        "type": "str"
      },
      {
        "variable": "base_url",
        "value": "http://localhost:5000",
        "file": "TestMaster\\dashboard\\demo_automated_frontend_testing.py",
        "line": 26,
        "type": "str"
      },
      {
        "variable": "timeout",
        "value": "30",
        "file": "TestMaster\\dashboard\\gunicorn_config.py",
        "line": 15,
        "type": "int"
      },
      {
        "variable": "max_requests",
        "value": "1000",
        "file": "TestMaster\\dashboard\\gunicorn_config.py",
        "line": 19,
        "type": "int"
      },
      {
        "variable": "max_requests_jitter",
        "value": "50",
        "file": "TestMaster\\dashboard\\gunicorn_config.py",
        "line": 20,
        "type": "int"
      },
      {
        "variable": "limit_request_line",
        "value": "8190",
        "file": "TestMaster\\dashboard\\gunicorn_config.py",
        "line": 35,
        "type": "int"
      },
      {
        "variable": "limit_request_fields",
        "value": "100",
        "file": "TestMaster\\dashboard\\gunicorn_config.py",
        "line": 36,
        "type": "int"
      },
      {
        "variable": "limit_request_field_size",
        "value": "8190",
        "file": "TestMaster\\dashboard\\gunicorn_config.py",
        "line": 37,
        "type": "int"
      },
      {
        "variable": "graceful_timeout",
        "value": "30",
        "file": "TestMaster\\dashboard\\gunicorn_config.py",
        "line": 43,
        "type": "int"
      },
      {
        "variable": "base_url",
        "value": "http://localhost:5000",
        "file": "TestMaster\\dashboard\\integration_gap_analysis.py",
        "line": 22,
        "type": "str"
      },
      {
        "variable": "base_url",
        "value": "http://localhost:5000",
        "file": "TestMaster\\dashboard\\quick_frontend_test.py",
        "line": 25,
        "type": "str"
      },
      {
        "variable": "base_url",
        "value": "http://localhost:5000",
        "file": "TestMaster\\dashboard\\quick_integration_test.py",
        "line": 23,
        "type": "str"
      },
      {
        "variable": "base_url",
        "value": "http://localhost:5000",
        "file": "TestMaster\\dashboard\\quick_validation.py",
        "line": 35,
        "type": "str"
      },
      {
        "variable": "BASE_URL",
        "value": "http://localhost:5000",
        "file": "TestMaster\\dashboard\\test_all_features.py",
        "line": 15,
        "type": "str"
      },
      {
        "variable": "base_url",
        "value": "http://localhost:5000",
        "file": "TestMaster\\dashboard\\test_api_endpoints.py",
        "line": 197,
        "type": "str"
      },
      {
        "variable": "base_url",
        "value": "http://localhost:5000",
        "file": "TestMaster\\dashboard\\test_frontend_without_browser.py",
        "line": 22,
        "type": "str"
      },
      {
        "variable": "base_url",
        "value": "http://localhost:5000",
        "file": "TestMaster\\dashboard\\test_new_robustness_features.py",
        "line": 212,
        "type": "str"
      },
      {
        "variable": "base_url",
        "value": "http://localhost:5000",
        "file": "TestMaster\\dashboard\\test_new_robustness_features.py",
        "line": 260,
        "type": "str"
      },
      {
        "variable": "base_url",
        "value": "http://localhost:5000",
        "file": "TestMaster\\dashboard\\test_new_visualization_apis.py",
        "line": 22,
        "type": "str"
      },
      {
        "variable": "BASE_URL",
        "value": "http://localhost:5000",
        "file": "TestMaster\\dashboard\\test_robustness_suite.py",
        "line": 16,
        "type": "str"
      },
      {
        "variable": "base_url",
        "value": "http://localhost:5000",
        "file": "TestMaster\\dashboard\\test_robustness_verification.py",
        "line": 202,
        "type": "str"
      },
      {
        "variable": "base_url",
        "value": "http://localhost:5000",
        "file": "TestMaster\\dashboard\\validate_100_percent_real_data.py",
        "line": 24,
        "type": "str"
      },
      {
        "variable": "base_url",
        "value": "http://localhost:5000",
        "file": "TestMaster\\dashboard\\validate_all_endpoints.py",
        "line": 23,
        "type": "str"
      },
      {
        "variable": "cost_per_token",
        "value": "2e-05",
        "file": "TestMaster\\dashboard\\api\\llm.py",
        "line": 305,
        "type": "float"
      },
      {
        "variable": "rate_limiter_available",
        "value": "True",
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_aggregator.py",
        "line": 95,
        "type": "bool"
      },
      {
        "variable": "rate_limiter_available",
        "value": "False",
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_aggregator.py",
        "line": 98,
        "type": "bool"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_circuit_breaker.py",
        "line": 29,
        "type": "str"
      },
      {
        "variable": "URL",
        "value": "url",
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_data_sanitizer.py",
        "line": 37,
        "type": "str"
      },
      {
        "variable": "FILE_PATH",
        "value": "file_path",
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_data_sanitizer.py",
        "line": 40,
        "type": "str"
      },
      {
        "variable": "MAX_RETRIES",
        "value": "max_retries",
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_dead_letter_queue.py",
        "line": 28,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_dead_letter_queue.py",
        "line": 31,
        "type": "str"
      },
      {
        "variable": "key_similarity",
        "value": "0.0",
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_deduplication.py",
        "line": 577,
        "type": "float"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_delivery_verifier.py",
        "line": 32,
        "type": "str"
      },
      {
        "variable": "DIRECT",
        "value": "direct",
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_delivery_verifier.py",
        "line": 37,
        "type": "str"
      },
      {
        "variable": "max_retries",
        "value": "3",
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_error_recovery.py",
        "line": 525,
        "type": "int"
      },
      {
        "variable": "FILE",
        "value": "file",
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_export_manager.py",
        "line": 42,
        "type": "str"
      },
      {
        "variable": "max_count",
        "value": "1",
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_export_manager.py",
        "line": 254,
        "type": "int"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_fallback_system.py",
        "line": 37,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_flow_monitor.py",
        "line": 46,
        "type": "str"
      },
      {
        "variable": "MAXIMUM",
        "value": "maximum",
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_integrity_verifier.py",
        "line": 32,
        "type": "str"
      },
      {
        "variable": "TOKEN_BUCKET",
        "value": "token_bucket",
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_rate_limiter.py",
        "line": 26,
        "type": "str"
      },
      {
        "variable": "REDIRECT_TRAFFIC",
        "value": "redirect_traffic",
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_rate_limiter.py",
        "line": 38,
        "type": "str"
      },
      {
        "variable": "DEBUG",
        "value": "debug",
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_telemetry.py",
        "line": 29,
        "type": "str"
      },
      {
        "variable": "RATE_LIMITED",
        "value": "RATE_LIMITED",
        "file": "TestMaster\\dashboard\\dashboard_core\\error_handler.py",
        "line": 32,
        "type": "str"
      },
      {
        "variable": "OPTIMIZATION_OPPORTUNITY",
        "value": "optimization_opportunity",
        "file": "TestMaster\\dashboard\\dashboard_core\\predictive_flow_optimizer.py",
        "line": 53,
        "type": "str"
      },
      {
        "variable": "opportunity_score",
        "value": "1.0",
        "file": "TestMaster\\dashboard\\dashboard_core\\predictive_flow_optimizer.py",
        "line": 1009,
        "type": "float"
      },
      {
        "variable": "files_analyzed",
        "value": "0",
        "file": "TestMaster\\dashboard\\dashboard_core\\real_data_extractor.py",
        "line": 351,
        "type": "int"
      },
      {
        "variable": "TEST_REPORTER",
        "value": "test_reporter",
        "file": "TestMaster\\deployment\\enterprise_deployment.py",
        "line": 29,
        "type": "str"
      },
      {
        "variable": "max_capacity",
        "value": "100",
        "file": "TestMaster\\deployment\\enterprise_deployment.py",
        "line": 409,
        "type": "int"
      },
      {
        "variable": "timeout",
        "value": "600",
        "file": "TestMaster\\integration\\automatic_scaling_system.py",
        "line": 865,
        "type": "int"
      },
      {
        "variable": "CONFIGURATION_ERROR",
        "value": "configuration_error",
        "file": "TestMaster\\integration\\comprehensive_error_recovery.py",
        "line": 57,
        "type": "str"
      },
      {
        "variable": "TIMEOUT_ERROR",
        "value": "timeout_error",
        "file": "TestMaster\\integration\\comprehensive_error_recovery.py",
        "line": 62,
        "type": "str"
      },
      {
        "variable": "STATE_CONFIG",
        "value": "state_config",
        "file": "TestMaster\\integration\\cross_system_apis.py",
        "line": 38,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION_UPDATE",
        "value": "configuration_update",
        "file": "TestMaster\\integration\\cross_system_apis.py",
        "line": 48,
        "type": "str"
      },
      {
        "variable": "STATE_CONFIG",
        "value": "state_config",
        "file": "TestMaster\\integration\\cross_system_communication.py",
        "line": 38,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION_UPDATE",
        "value": "configuration_update",
        "file": "TestMaster\\integration\\cross_system_communication.py",
        "line": 48,
        "type": "str"
      },
      {
        "variable": "URL_PARAMETER",
        "value": "url_parameter",
        "file": "TestMaster\\integration\\load_balancing_system.py",
        "line": 65,
        "type": "str"
      },
      {
        "variable": "timeout",
        "value": "30.0",
        "file": "TestMaster\\integration\\workflow_execution_engine.py",
        "line": 253,
        "type": "float"
      },
      {
        "variable": "max_batch",
        "value": "10",
        "file": "TestMaster\\integration\\workflow_execution_engine.py",
        "line": 367,
        "type": "int"
      },
      {
        "variable": "max_batch",
        "value": "20",
        "file": "TestMaster\\integration\\workflow_execution_engine.py",
        "line": 425,
        "type": "int"
      },
      {
        "variable": "config_count",
        "value": "0",
        "file": "TestMaster\\operational\\infrastructure_validation_suite.py",
        "line": 393,
        "type": "int"
      },
      {
        "variable": "rate_limit_delay",
        "value": "2.0",
        "file": "TestMaster\\scripts\\achieve_100_percent_coverage.py",
        "line": 299,
        "type": "float"
      },
      {
        "variable": "source_dir",
        "value": "src_new",
        "file": "TestMaster\\scripts\\coverage_improver.py",
        "line": 419,
        "type": "str"
      },
      {
        "variable": "test_dir",
        "value": "tests_new",
        "file": "TestMaster\\scripts\\coverage_improver.py",
        "line": 420,
        "type": "str"
      },
      {
        "variable": "import_fix",
        "value": "import sys\nfrom pathlib import Path\nsys.path.insert(0, str(Path(__file__).parent.parent.parent / \"sr",
        "file": "TestMaster\\scripts\\fix_all_imports.py",
        "line": 23,
        "type": "str"
      },
      {
        "variable": "import_fix",
        "value": "import sys\nfrom pathlib import Path\nsys.path.insert(0, str(Path(__file__).parent.parent.parent / \"sr",
        "file": "TestMaster\\scripts\\fix_test_infrastructure.py",
        "line": 29,
        "type": "str"
      },
      {
        "variable": "TEST_REPORTER",
        "value": "test_reporter",
        "file": "TestMaster\\state\\unified_state_manager.py",
        "line": 50,
        "type": "str"
      },
      {
        "variable": "file_total_complexity",
        "value": "0",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\complexity_analysis.py",
        "line": 53,
        "type": "int"
      },
      {
        "variable": "imports",
        "value": "0",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\complexity_analysis.py",
        "line": 340,
        "type": "int"
      },
      {
        "variable": "max_depth",
        "value": "0",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\complexity_analysis.py",
        "line": 526,
        "type": "int"
      },
      {
        "variable": "files_changed",
        "value": "0",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\evolution_analysis.py",
        "line": 211,
        "type": "int"
      },
      {
        "variable": "trend_direction",
        "value": "stable",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\evolution_analysis.py",
        "line": 613,
        "type": "str"
      },
      {
        "variable": "trend_direction",
        "value": "increasing",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\evolution_analysis.py",
        "line": 615,
        "type": "str"
      },
      {
        "variable": "trend_direction",
        "value": "decreasing",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\evolution_analysis.py",
        "line": 617,
        "type": "str"
      },
      {
        "variable": "max_depth",
        "value": "0",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\graph_analysis.py",
        "line": 272,
        "type": "int"
      },
      {
        "variable": "file_has_comments",
        "value": "False",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
        "line": 385,
        "type": "bool"
      },
      {
        "variable": "file_has_comments",
        "value": "True",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
        "line": 393,
        "type": "bool"
      },
      {
        "variable": "file_functions",
        "value": "0",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
        "line": 510,
        "type": "int"
      },
      {
        "variable": "file_docstring_functions",
        "value": "0",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
        "line": 511,
        "type": "int"
      },
      {
        "variable": "file_classes",
        "value": "0",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
        "line": 512,
        "type": "int"
      },
      {
        "variable": "file_docstring_classes",
        "value": "0",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
        "line": 513,
        "type": "int"
      },
      {
        "variable": "max_depth",
        "value": "0",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
        "line": 678,
        "type": "int"
      },
      {
        "variable": "has_maxsize",
        "value": "False",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\memory_analysis.py",
        "line": 447,
        "type": "bool"
      },
      {
        "variable": "has_maxsize",
        "value": "True",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\memory_analysis.py",
        "line": 450,
        "type": "bool"
      },
      {
        "variable": "has_limit",
        "value": "False",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\performance_analysis.py",
        "line": 869,
        "type": "bool"
      },
      {
        "variable": "import_count",
        "value": "0",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\quality_analysis.py",
        "line": 274,
        "type": "int"
      },
      {
        "variable": "has_timeout",
        "value": "False",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\resource_io_analysis.py",
        "line": 479,
        "type": "bool"
      },
      {
        "variable": "has_timeout",
        "value": "True",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\resource_io_analysis.py",
        "line": 483,
        "type": "bool"
      },
      {
        "variable": "import_count",
        "value": "0",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\statistical_analysis.py",
        "line": 76,
        "type": "int"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\testmaster\\async_processing\\async_monitor.py",
        "line": 28,
        "type": "str"
      },
      {
        "variable": "IMPORT_ERROR",
        "value": "import_error",
        "file": "TestMaster\\testmaster\\breaking\\failure_detector.py",
        "line": 29,
        "type": "str"
      },
      {
        "variable": "TIMEOUT_ERROR",
        "value": "timeout_error",
        "file": "TestMaster\\testmaster\\breaking\\failure_detector.py",
        "line": 32,
        "type": "str"
      },
      {
        "variable": "DIRECTIVE_REQUEST",
        "value": "directive_request",
        "file": "TestMaster\\testmaster\\communication\\claude_messenger.py",
        "line": 40,
        "type": "str"
      },
      {
        "variable": "imports",
        "value": "0",
        "file": "TestMaster\\testmaster\\converters\\intelligent.py",
        "line": 470,
        "type": "int"
      },
      {
        "variable": "FILE",
        "value": "file",
        "file": "TestMaster\\testmaster\\core\\config.py",
        "line": 35,
        "type": "str"
      },
      {
        "variable": "profile",
        "value": "production",
        "file": "TestMaster\\testmaster\\core\\config.py",
        "line": 316,
        "type": "str"
      },
      {
        "variable": "profile",
        "value": "security_focused",
        "file": "TestMaster\\testmaster\\core\\config.py",
        "line": 318,
        "type": "str"
      },
      {
        "variable": "profile",
        "value": "high_performance",
        "file": "TestMaster\\testmaster\\core\\config.py",
        "line": 320,
        "type": "str"
      },
      {
        "variable": "profile",
        "value": "development",
        "file": "TestMaster\\testmaster\\core\\config.py",
        "line": 322,
        "type": "str"
      },
      {
        "variable": "FIX_IMPORTS",
        "value": "fix_imports",
        "file": "TestMaster\\testmaster\\core\\orchestrator.py",
        "line": 44,
        "type": "str"
      },
      {
        "variable": "GENERATE_REPORT",
        "value": "generate_report",
        "file": "TestMaster\\testmaster\\core\\orchestrator.py",
        "line": 47,
        "type": "str"
      },
      {
        "variable": "CONFIG_CHANGE",
        "value": "config_change",
        "file": "TestMaster\\testmaster\\core\\tracking_manager.py",
        "line": 47,
        "type": "str"
      },
      {
        "variable": "IMPORT",
        "value": "import",
        "file": "TestMaster\\testmaster\\core\\ast_abstraction\\universal_ast.py",
        "line": 33,
        "type": "str"
      },
      {
        "variable": "level_max_duration",
        "value": "0.0",
        "file": "TestMaster\\testmaster\\flow_optimizer\\dependency_resolver.py",
        "line": 274,
        "type": "float"
      },
      {
        "variable": "MAXIMIZE_PERFORMANCE",
        "value": "maximize_performance",
        "file": "TestMaster\\testmaster\\flow_optimizer\\resource_optimizer.py",
        "line": 27,
        "type": "str"
      },
      {
        "variable": "DEBUG",
        "value": "5",
        "file": "TestMaster\\testmaster\\intelligence\\bridges\\event_monitoring_bridge.py",
        "line": 61,
        "type": "int"
      },
      {
        "variable": "DIRECT",
        "value": "direct",
        "file": "TestMaster\\testmaster\\intelligence\\bridges\\protocol_communication_bridge.py",
        "line": 40,
        "type": "str"
      },
      {
        "variable": "DIRECT",
        "value": "direct",
        "file": "TestMaster\\testmaster\\intelligence\\bridges\\protocol_communication_bridge.py",
        "line": 50,
        "type": "str"
      },
      {
        "variable": "completion_tokens",
        "value": "500",
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\core\\llm_integration.py",
        "line": 498,
        "type": "int"
      },
      {
        "variable": "completion_tokens",
        "value": "2000",
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\core\\llm_integration.py",
        "line": 501,
        "type": "int"
      },
      {
        "variable": "completion_tokens",
        "value": "1500",
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\core\\llm_integration.py",
        "line": 503,
        "type": "int"
      },
      {
        "variable": "max_score",
        "value": "0.0",
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\core\\quality_assessor.py",
        "line": 322,
        "type": "float"
      },
      {
        "variable": "max_score",
        "value": "0.0",
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\core\\quality_assessor.py",
        "line": 420,
        "type": "float"
      },
      {
        "variable": "import_pattern",
        "value": "^\\s*(?:from\\s+(\\S+)\\s+)?import\\s+(.+)$",
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\generators\\tutorial_generator.py",
        "line": 385,
        "type": "str"
      },
      {
        "variable": "API_KEY",
        "value": "api_key",
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\templates\\api\\base.py",
        "line": 24,
        "type": "str"
      },
      {
        "variable": "BEARER_TOKEN",
        "value": "bearer_token",
        "file": "TestMaster\\testmaster\\intelligence\\documentation\\templates\\api\\base.py",
        "line": 25,
        "type": "str"
      },
      {
        "variable": "FILE_SYSTEM",
        "value": "file_system",
        "file": "TestMaster\\testmaster\\intelligence\\integration\\storage\\unified_storage.py",
        "line": 26,
        "type": "str"
      },
      {
        "variable": "MAXIMIZE_QUALITY",
        "value": "maximize_quality",
        "file": "TestMaster\\testmaster\\intelligence\\llm_providers\\provider_optimization.py",
        "line": 22,
        "type": "str"
      },
      {
        "variable": "MAXIMIZE_RELIABILITY",
        "value": "maximize_reliability",
        "file": "TestMaster\\testmaster\\intelligence\\llm_providers\\provider_optimization.py",
        "line": 23,
        "type": "str"
      },
      {
        "variable": "cost_per_1k_tokens",
        "value": "0.002",
        "file": "TestMaster\\testmaster\\intelligence\\llm_providers\\universal_llm_provider.py",
        "line": 261,
        "type": "float"
      },
      {
        "variable": "CRITICAL_PATH",
        "value": "critical_path",
        "file": "TestMaster\\testmaster\\intelligence\\monitoring\\bottleneck_detection_resolution_agent.py",
        "line": 45,
        "type": "str"
      },
      {
        "variable": "COVERAGE_MAXIMIZATION",
        "value": "coverage_maximization",
        "file": "TestMaster\\testmaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
        "line": 34,
        "type": "str"
      },
      {
        "variable": "MAXIMIZE",
        "value": "maximize",
        "file": "TestMaster\\testmaster\\intelligence\\optimization\\multi_objective_optimizer.py",
        "line": 20,
        "type": "str"
      },
      {
        "variable": "max_val",
        "value": "0.0",
        "file": "TestMaster\\testmaster\\intelligence\\optimization\\optimization_algorithms.py",
        "line": 218,
        "type": "float"
      },
      {
        "variable": "HAPPY_PATH",
        "value": "happy_path",
        "file": "TestMaster\\testmaster\\intelligence\\tree_of_thought\\test_thought_generator.py",
        "line": 24,
        "type": "str"
      },
      {
        "variable": "file_list_start",
        "value": "1",
        "file": "TestMaster\\testmaster\\monitoring\\file_watcher.py",
        "line": 479,
        "type": "int"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\testmaster\\monitoring\\test_scheduler.py",
        "line": 44,
        "type": "str"
      },
      {
        "variable": "CONFIG",
        "value": "config",
        "file": "TestMaster\\testmaster\\orchestration\\output_system.py",
        "line": 50,
        "type": "str"
      },
      {
        "variable": "MAKEFILE",
        "value": "makefile",
        "file": "TestMaster\\testmaster\\orchestration\\output_system.py",
        "line": 51,
        "type": "str"
      },
      {
        "variable": "DOCKERFILE",
        "value": "dockerfile",
        "file": "TestMaster\\testmaster\\orchestration\\output_system.py",
        "line": 52,
        "type": "str"
      },
      {
        "variable": "CONFIG",
        "value": "config",
        "file": "TestMaster\\testmaster\\orchestrator\\file_tagger.py",
        "line": 33,
        "type": "str"
      },
      {
        "variable": "max_depth",
        "value": "0",
        "file": "TestMaster\\testmaster\\orchestrator\\file_tagger.py",
        "line": 871,
        "type": "int"
      },
      {
        "variable": "FILE_ANALYSIS",
        "value": "file_analysis",
        "file": "TestMaster\\testmaster\\orchestrator\\handoff_manager.py",
        "line": 51,
        "type": "str"
      },
      {
        "variable": "FILE_ANALYSIS",
        "value": "file_analysis",
        "file": "TestMaster\\testmaster\\orchestrator\\investigator.py",
        "line": 48,
        "type": "str"
      },
      {
        "variable": "MISSING_ERROR_PATH",
        "value": "missing_error_path",
        "file": "TestMaster\\testmaster\\overview\\coverage_intelligence.py",
        "line": 42,
        "type": "str"
      },
      {
        "variable": "path_id",
        "value": "0",
        "file": "TestMaster\\testmaster\\overview\\coverage_intelligence.py",
        "line": 338,
        "type": "int"
      },
      {
        "variable": "IMPORT_ERROR",
        "value": "import_error",
        "file": "TestMaster\\testmaster\\overview\\regression_tracker.py",
        "line": 43,
        "type": "str"
      },
      {
        "variable": "TIMEOUT",
        "value": "timeout",
        "file": "TestMaster\\testmaster\\overview\\regression_tracker.py",
        "line": 46,
        "type": "str"
      },
      {
        "variable": "file_pattern",
        "value": "File \"([^\"]+)\"",
        "file": "TestMaster\\testmaster\\overview\\regression_tracker.py",
        "line": 566,
        "type": "str"
      },
      {
        "variable": "IMPORTS",
        "value": "imports",
        "file": "TestMaster\\testmaster\\overview\\structure_mapper.py",
        "line": 32,
        "type": "str"
      },
      {
        "variable": "CONFIGURATION",
        "value": "configuration",
        "file": "TestMaster\\testmaster\\overview\\structure_mapper.py",
        "line": 50,
        "type": "str"
      },
      {
        "variable": "imports_in_methods",
        "value": "0",
        "file": "TestMaster\\testmaster\\refactoring\\hierarchical_analyzer.py",
        "line": 560,
        "type": "int"
      },
      {
        "variable": "MAX",
        "value": "max",
        "file": "TestMaster\\testmaster\\reporting\\data_collector.py",
        "line": 29,
        "type": "str"
      },
      {
        "variable": "FILE_SYSTEM",
        "value": "file_system",
        "file": "TestMaster\\testmaster\\reporting\\report_scheduler.py",
        "line": 16,
        "type": "str"
      },
      {
        "variable": "SECURITY_MISCONFIGURATION",
        "value": "security_misconfiguration",
        "file": "TestMaster\\testmaster\\security\\security_test_generator.py",
        "line": 30,
        "type": "str"
      },
      {
        "variable": "PATH_TRAVERSAL",
        "value": "path_traversal",
        "file": "TestMaster\\testmaster\\security\\universal_scanner.py",
        "line": 36,
        "type": "str"
      },
      {
        "variable": "SECURITY_MISCONFIGURATION",
        "value": "security_misconfiguration",
        "file": "TestMaster\\testmaster\\security\\universal_scanner.py",
        "line": 43,
        "type": "str"
      },
      {
        "variable": "max_score",
        "value": "10.0",
        "file": "TestMaster\\testmaster\\streaming\\incremental_enhancer.py",
        "line": 434,
        "type": "float"
      },
      {
        "variable": "ISSUE_REPORT",
        "value": "issue_report",
        "file": "TestMaster\\testmaster\\streaming\\live_feedback.py",
        "line": 28,
        "type": "str"
      },
      {
        "variable": "FILE",
        "value": "file",
        "file": "TestMaster\\testmaster\\ui\\alert_system.py",
        "line": 43,
        "type": "str"
      },
      {
        "variable": "max_depth",
        "value": "0",
        "file": "TestMaster\\testmaster\\verification\\quality.py",
        "line": 253,
        "type": "int"
      },
      {
        "variable": "ORIGINAL_FILE",
        "value": "test_uncategorized.py",
        "file": "TestMaster\\tests\\modularized\\misc_split\\modules\\__init__.py",
        "line": 52,
        "type": "str"
      },
      {
        "variable": "SANKEY",
        "value": "sankey",
        "file": "TestMaster\\ui\\unified_dashboard.py",
        "line": 60,
        "type": "str"
      },
      {
        "variable": "FORCE_DIRECTED",
        "value": "force_directed",
        "file": "TestMaster\\ui_ux\\agent_verse_ui.py",
        "line": 26,
        "type": "str"
      },
      {
        "variable": "SANKEY",
        "value": "sankey",
        "file": "TestMaster\\ui_ux\\studio_interface.py",
        "line": 40,
        "type": "str"
      },
      {
        "variable": "PATH",
        "value": "path",
        "file": "TestMaster\\unified_tools\\coverage_analysis_master.py",
        "line": 50,
        "type": "str"
      },
      {
        "variable": "report_path",
        "value": "ARCHIVE/comprehensive_validation_report.json",
        "file": "TestMaster\\validation\\phase_validator.py",
        "line": 376,
        "type": "str"
      }
    ],
    "security_concerns": [
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\comprehensive_classical_analysis_methods.py",
        "line": 469,
        "content": "r'password\\s*=\\s*[\"\\'][^\"\\']+[\"\\']',"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\comprehensive_classical_analysis_methods.py",
        "line": 471,
        "content": "r'secret\\s*=\\s*[\"\\'][^\"\\']+[\"\\']'"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\configuration_settings_analyzer.py",
        "line": 327,
        "content": "if re.search(r'password.*=.*[\\'\"][^\\'\"]*[\\'\"]', line_stripped, re.IGNORECASE):"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\configuration_settings_analyzer.py",
        "line": 335,
        "content": "if re.search(r'secret.*=.*[\\'\"][^\\'\"]*[\\'\"]', line_stripped, re.IGNORECASE):"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\unified_orchestration_example.py",
        "line": 249,
        "content": "if username == \"admin\" and password == \"admin123\":"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\archive\\coverage_analyzer_original_2697_lines.py",
        "line": 1015,
        "content": "r'password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']',"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\archive\\coverage_analyzer_original_2697_lines.py",
        "line": 1017,
        "content": "r'secret\\s*=\\s*[\"\\'][^\"\\']{10,}[\"\\']'"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\archive\\integration_hub_original_20250820_220939.py",
        "line": 1041,
        "content": "password = auth_config.get('password')"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_aggregator.py",
        "line": 234,
        "content": "secret_key = os.getenv('KEY')"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\analytics_components\\analytics_integrity_verifier.py",
        "line": 104,
        "content": "self.secret_key = secret_key or \"default_analytics_key\""
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
        "line": 1015,
        "content": "r'password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']',"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\archive\\centralization_process_20250821_intelligence_consolidation\\testing_components\\coverage_analyzer.py",
        "line": 1017,
        "content": "r'secret\\s*=\\s*[\"\\'][^\"\\']{10,}[\"\\']'"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
        "line": 1283,
        "content": "(r'password\\s*=\\s*[\"\\'][^\"\\']+[\"\\']', 'password'),"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\archive\\modularization_20250821\\debt_analyzer_original_1546_lines.py",
        "line": 1285,
        "content": "(r'secret\\s*=\\s*[\"\\'][^\"\\']+[\"\\']', 'secret')"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\archive\\modularization_integration\\integration_hub_original_1876_lines.py",
        "line": 1041,
        "content": "password = auth_config.get('password')"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
        "line": 1283,
        "content": "(r'password\\s*=\\s*[\"\\'][^\"\\']+[\"\\']', 'password'),"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\archive\\oversized_modules_20250821_042018\\analysis\\debt_analyzer.py",
        "line": 1285,
        "content": "(r'secret\\s*=\\s*[\"\\'][^\"\\']+[\"\\']', 'secret')"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\config\\modules\\security_config.py",
        "line": 45,
        "content": "SECRET = \"secret\""
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\technical_debt_analyzer.py",
        "line": 361,
        "content": "r'password\\s*=\\s*[\"\\'][^\"\\']*[\"\\']',  # Hardcoded passwords"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\intelligence\\analysis\\technical_debt_analyzer.py",
        "line": 362,
        "content": "r'secret\\s*=\\s*[\"\\'][^\"\\']*[\"\\']',    # Hardcoded secrets"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\intelligence\\api\\unified_api_gateway.py",
        "line": 474,
        "content": "self.jwt_secrets: Dict[str, str] = {\"default\": \"your-secret-key\"}"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
        "line": 63,
        "content": "SECRET = \"secret\""
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
        "line": 64,
        "content": "TOP_SECRET = \"top_secret\""
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
        "line": 152,
        "content": "password: str = \"\""
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\domains\\intelligence\\config\\enterprise_config_manager.py",
        "line": 171,
        "content": "password: str = \"\""
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\architecture_validation_framework.py",
        "line": 375,
        "content": "r'password\\s*=\\s*[\\'\"][^\\'\"]+[\\'\"]',"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\intelligence\\documentation\\architecture_validation_framework.py",
        "line": 377,
        "content": "r'secret\\s*=\\s*[\\'\"][^\\'\"]+[\\'\"]',"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
        "line": 144,
        "content": "self.web_app.config['SECRET_KEY'] = 'ml_dashboard_secret'"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\intelligence\\security\\advanced_security_intelligence.py",
        "line": 148,
        "content": "self.secret_key = self.config.get('secret_key', 'default_secret_key_change_in_production')"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\domains\\intelligence\\security\\code_vulnerability_scanner.py",
        "line": 280,
        "content": "('password.*=.*[\"\\']', 'Hardcoded Credentials', 'critical'),"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\domains\\intelligence\\security\\code_vulnerability_scanner.py",
        "line": 497,
        "content": "'pattern': r'(password|secret|key|token)\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']',"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\intelligence\\security\\code_vulnerability_scanner.py",
        "line": 497,
        "content": "'pattern': r'(password|secret|key|token)\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']',"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\domains\\intelligence\\security\\vulnerability_scanner.py",
        "line": 204,
        "content": "(r'[\"\\'](?:password|passwd|pwd)[\"\\']?\\s*[=:]\\s*[\"\\'][^\"\\']+[\"\\']', \"password\"),"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\intelligence\\security\\vulnerability_scanner.py",
        "line": 206,
        "content": "(r'[\"\\'](?:secret|token)[\"\\']?\\s*[=:]\\s*[\"\\'][^\"\\']+[\"\\']', \"secret/token\"),"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\security\\advanced_owasp_tester.py",
        "line": 137,
        "content": "\"password=admin\", \"Weak password transmission\","
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\security\\advanced_owasp_tester.py",
        "line": 262,
        "content": "\"password=password\", \"Weak password\","
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\security\\advanced_owasp_tester.py",
        "line": 354,
        "content": "{\"pattern\": r\"SECRET.*=.*[a-zA-Z0-9]{20,}\", \"severity\": \"high\", \"description\": \"Secret key exposed\"}"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\intelligence\\testing\\security\\api_security_tester.py",
        "line": 222,
        "content": "weak_secret = os.getenv('SECRET')"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\security\\agent_communication_security.py",
        "line": 105,
        "content": "self.secret_key = secret_key or \"default_secret\"  # Should be configured properly"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\security\\authentication_system.py",
        "line": 45,
        "content": "def __init__(self, secret_key: Optional[str] = None, algorithm: str = \"HS256\"):"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\security\\authentication_system.py",
        "line": 46,
        "content": "self.secret_key = secret_key or os.getenv(\"JWT_SECRET_KEY\", secrets.token_urlsafe(32))"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\security\\code_generation_security.py",
        "line": 54,
        "content": "HARDCODED_SECRETS = \"hardcoded_secrets\""
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\security\\configuration_security.py",
        "line": 24,
        "content": "SECRET = \"secret\""
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\security\\distributed_communication_security.py",
        "line": 293,
        "content": "self.secret_key = secret_key or \"default_secret\""
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\security\\document_classification_security.py",
        "line": 26,
        "content": "TOP_SECRET = \"top_secret\""
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\domains\\security\\document_classification_security.py",
        "line": 227,
        "content": "regex_pattern=r'(?i)(password|pwd|pass)[\\'\"\\s]*[:=][\\'\"\\s]*([^\\s\\'\"]{8,})',"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\security\\document_classification_security.py",
        "line": 270,
        "content": "regex_pattern=r'(?i)(secret[_-]?key|secretkey)[\\'\"\\s]*[:=][\\'\"\\s]*([a-zA-Z0-9+/]{16,})',"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\domains\\security\\enterprise_authentication.py",
        "line": 32,
        "content": "PASSWORD = \"password\""
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\domains\\security\\enterprise_authentication.py",
        "line": 146,
        "content": "password_bytes = password.encode('utf-8')"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\domains\\security\\enterprise_authentication.py",
        "line": 166,
        "content": "password_bytes = password.encode('utf-8')"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\domains\\security\\enterprise_authentication.py",
        "line": 232,
        "content": "common_passwords = ['password', '123456', 'admin', 'welcome', 'letmein']"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\domains\\security\\enterprise_authentication.py",
        "line": 724,
        "content": "admin_password = os.getenv('PASSWORD')  # Should be changed immediately in production"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\security\\enterprise_auth_gateway.py",
        "line": 161,
        "content": "def __init__(self, secret_key: str, algorithm: str = \"HS256\"):"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\security\\secure_message_delivery.py",
        "line": 48,
        "content": "SECRET = \"secret\""
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\security\\secure_message_delivery.py",
        "line": 49,
        "content": "TOP_SECRET = \"top_secret\""
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\security\\secure_message_delivery.py",
        "line": 179,
        "content": "def __init__(self, secret_key: str = \"default_secret_key\"):"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\security\\validation_security.py",
        "line": 538,
        "content": "secret_patterns = ['password', 'secret', 'private_key', 'bearer']"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\domains\\security\\vulnerability_detection_framework.py",
        "line": 339,
        "content": "(r'password\\s*=\\s*[\"\\'][^\"\\']{1,8}[\"\\']', \"Weak password detected\"),"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\domains\\security\\vulnerability_detection_framework.py",
        "line": 372,
        "content": "(r'[\"\\'](?:password|passwd|pwd)[\"\\']?\\s*[=:]\\s*[\"\\'][^\"\\']+[\"\\']', \"Password exposure\"),"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\security\\vulnerability_detection_framework.py",
        "line": 373,
        "content": "(r'[\"\\'](?:secret|token)[\"\\']?\\s*[=:]\\s*[\"\\'][^\"\\']+[\"\\']', \"Secret token exposure\"),"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\testing\\testmaster_api_gateway.py",
        "line": 147,
        "content": "payload = jwt.decode(token, user.jwt_secret, algorithms=[\"HS256\"])"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\domains\\testing\\testmaster_api_gateway.py",
        "line": 172,
        "content": "token = jwt.encode(payload, user.jwt_secret, algorithm=\"HS256\")"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\domains\\testing\\testmaster_api_gateway.py",
        "line": 693,
        "content": "password = request.body.get(\"password\") if request.body else None"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\intelligence\\semantic_code_analyzer.py",
        "line": 1111,
        "content": "'hardcoded_secrets': r'password\\s*=\\s*[\"\\'][^\"\\']+[\"\\']|api_key\\s*=\\s*[\"\\'][^\"\\']+[\"\\']'"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\intelligence\\semantic_code_analyzer.py",
        "line": 1111,
        "content": "'hardcoded_secrets': r'password\\s*=\\s*[\"\\'][^\"\\']+[\"\\']|api_key\\s*=\\s*[\"\\'][^\"\\']+[\"\\']'"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\intelligence\\analysis\\technical_debt_analyzer.py",
        "line": 361,
        "content": "r'password\\s*=\\s*[\"\\'][^\"\\']*[\"\\']',  # Hardcoded passwords"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\intelligence\\analysis\\technical_debt_analyzer.py",
        "line": 362,
        "content": "r'secret\\s*=\\s*[\"\\'][^\"\\']*[\"\\']',    # Hardcoded secrets"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\intelligence\\api\\unified_api_gateway.py",
        "line": 474,
        "content": "self.jwt_secrets: Dict[str, str] = {\"default\": \"your-secret-key\"}"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
        "line": 63,
        "content": "SECRET = \"secret\""
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
        "line": 64,
        "content": "TOP_SECRET = \"top_secret\""
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
        "line": 152,
        "content": "password: str = \"\""
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\intelligence\\config\\enterprise_config_manager.py",
        "line": 171,
        "content": "password: str = \"\""
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\intelligence\\documentation\\architecture_validation_framework.py",
        "line": 375,
        "content": "r'password\\s*=\\s*[\\'\"][^\\'\"]+[\\'\"]',"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\intelligence\\documentation\\architecture_validation_framework.py",
        "line": 377,
        "content": "r'secret\\s*=\\s*[\\'\"][^\\'\"]+[\\'\"]',"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\intelligence\\ml\\enterprise\\ml_monitoring_dashboard.py",
        "line": 144,
        "content": "self.web_app.config['SECRET_KEY'] = 'ml_dashboard_secret'"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\intelligence\\security\\advanced_security_intelligence.py",
        "line": 148,
        "content": "self.secret_key = self.config.get('secret_key', 'default_secret_key_change_in_production')"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\intelligence\\security\\code_vulnerability_scanner.py",
        "line": 280,
        "content": "('password.*=.*[\"\\']', 'Hardcoded Credentials', 'critical'),"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\intelligence\\security\\code_vulnerability_scanner.py",
        "line": 497,
        "content": "'pattern': r'(password|secret|key|token)\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']',"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\intelligence\\security\\code_vulnerability_scanner.py",
        "line": 497,
        "content": "'pattern': r'(password|secret|key|token)\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']',"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\intelligence\\security\\vulnerability_scanner.py",
        "line": 204,
        "content": "(r'[\"\\'](?:password|passwd|pwd)[\"\\']?\\s*[=:]\\s*[\"\\'][^\"\\']+[\"\\']', \"password\"),"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\intelligence\\security\\vulnerability_scanner.py",
        "line": 206,
        "content": "(r'[\"\\'](?:secret|token)[\"\\']?\\s*[=:]\\s*[\"\\'][^\"\\']+[\"\\']', \"secret/token\"),"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\intelligence\\testing\\security\\advanced_owasp_tester.py",
        "line": 137,
        "content": "\"password=admin\", \"Weak password transmission\","
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\intelligence\\testing\\security\\advanced_owasp_tester.py",
        "line": 262,
        "content": "\"password=password\", \"Weak password\","
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\intelligence\\testing\\security\\advanced_owasp_tester.py",
        "line": 354,
        "content": "{\"pattern\": r\"SECRET.*=.*[a-zA-Z0-9]{20,}\", \"severity\": \"high\", \"description\": \"Secret key exposed\"}"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\intelligence\\testing\\security\\api_security_tester.py",
        "line": 222,
        "content": "weak_secret = os.getenv('SECRET')"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\security\\agent_communication_security.py",
        "line": 105,
        "content": "self.secret_key = secret_key or \"default_secret\"  # Should be configured properly"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\security\\authentication_system.py",
        "line": 45,
        "content": "def __init__(self, secret_key: Optional[str] = None, algorithm: str = \"HS256\"):"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\security\\authentication_system.py",
        "line": 46,
        "content": "self.secret_key = secret_key or os.getenv(\"JWT_SECRET_KEY\", secrets.token_urlsafe(32))"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\security\\code_generation_security.py",
        "line": 54,
        "content": "HARDCODED_SECRETS = \"hardcoded_secrets\""
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\security\\configuration_security.py",
        "line": 24,
        "content": "SECRET = \"secret\""
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\security\\deployment_pipeline_security.py",
        "line": 39,
        "content": "SECRET_DETECTION = \"secret_detection\""
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\security\\deployment_pipeline_security.py",
        "line": 147,
        "content": "secret_key = f\"{environment.value}:{secret_name}\""
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\security\\deployment_pipeline_security.py",
        "line": 163,
        "content": "secret_key = f\"{environment.value}:{secret_name}\""
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\security\\deployment_pipeline_security.py",
        "line": 185,
        "content": "secret_key = f\"{environment.value}:{secret_name}\""
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\security\\deployment_pipeline_security.py",
        "line": 250,
        "content": "'pattern': r'(?i)password[\\'\"\\s]*[:=][\\'\"\\s]*([^\\s\\'\"]{8,})',"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\security\\deployment_pipeline_security.py",
        "line": 255,
        "content": "'pattern': r'(?i)secret[\\'\"\\s]*[:=][\\'\"\\s]*([a-zA-Z0-9]{16,})',"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\security\\deployment_pipeline_security.py",
        "line": 465,
        "content": "'pattern': r'(?i)(password|secret|key)\\s*=\\s*[\\'\"][^\\'\\\"]{8,}[\\'\"]',"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\security\\deployment_pipeline_security.py",
        "line": 465,
        "content": "'pattern': r'(?i)(password|secret|key)\\s*=\\s*[\\'\"][^\\'\\\"]{8,}[\\'\"]',"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\security\\distributed_communication_security.py",
        "line": 293,
        "content": "self.secret_key = secret_key or \"default_secret\""
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\security\\document_classification_security.py",
        "line": 26,
        "content": "TOP_SECRET = \"top_secret\""
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\security\\document_classification_security.py",
        "line": 227,
        "content": "regex_pattern=r'(?i)(password|pwd|pass)[\\'\"\\s]*[:=][\\'\"\\s]*([^\\s\\'\"]{8,})',"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\security\\document_classification_security.py",
        "line": 270,
        "content": "regex_pattern=r'(?i)(secret[_-]?key|secretkey)[\\'\"\\s]*[:=][\\'\"\\s]*([a-zA-Z0-9+/]{16,})',"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\security\\enterprise_authentication.py",
        "line": 32,
        "content": "PASSWORD = \"password\""
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\security\\enterprise_authentication.py",
        "line": 146,
        "content": "password_bytes = password.encode('utf-8')"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\security\\enterprise_authentication.py",
        "line": 166,
        "content": "password_bytes = password.encode('utf-8')"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\security\\enterprise_authentication.py",
        "line": 232,
        "content": "common_passwords = ['password', '123456', 'admin', 'welcome', 'letmein']"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\security\\enterprise_authentication.py",
        "line": 724,
        "content": "admin_password = os.getenv('PASSWORD')  # Should be changed immediately in production"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\security\\enterprise_auth_gateway.py",
        "line": 161,
        "content": "def __init__(self, secret_key: str, algorithm: str = \"HS256\"):"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\security\\secure_message_delivery.py",
        "line": 48,
        "content": "SECRET = \"secret\""
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\security\\secure_message_delivery.py",
        "line": 49,
        "content": "TOP_SECRET = \"top_secret\""
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\security\\secure_message_delivery.py",
        "line": 179,
        "content": "def __init__(self, secret_key: str = \"default_secret_key\"):"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\security\\validation_security.py",
        "line": 538,
        "content": "secret_patterns = ['password', 'secret', 'private_key', 'bearer']"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\security\\vulnerability_detection_framework.py",
        "line": 339,
        "content": "(r'password\\s*=\\s*[\"\\'][^\"\\']{1,8}[\"\\']', \"Weak password detected\"),"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\security\\vulnerability_detection_framework.py",
        "line": 372,
        "content": "(r'[\"\\'](?:password|passwd|pwd)[\"\\']?\\s*[=:]\\s*[\"\\'][^\"\\']+[\"\\']', \"Password exposure\"),"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\security\\vulnerability_detection_framework.py",
        "line": 373,
        "content": "(r'[\"\\'](?:secret|token)[\"\\']?\\s*[=:]\\s*[\"\\'][^\"\\']+[\"\\']', \"Secret token exposure\"),"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\testing\\testmaster_api_gateway.py",
        "line": 147,
        "content": "payload = jwt.decode(token, user.jwt_secret, algorithms=[\"HS256\"])"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\core\\testing\\testmaster_api_gateway.py",
        "line": 172,
        "content": "token = jwt.encode(payload, user.jwt_secret, algorithm=\"HS256\")"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\core\\testing\\testmaster_api_gateway.py",
        "line": 693,
        "content": "password = request.body.get(\"password\") if request.body else None"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\dashboard\\wsgi.py",
        "line": 56,
        "content": "SECRET_KEY=os.environ.get('SECRET_KEY', 'prod-secret-key-change-me'),"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_aggregator.py",
        "line": 234,
        "content": "secret_key = os.getenv('KEY')"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\dashboard\\dashboard_core\\analytics_integrity_verifier.py",
        "line": 104,
        "content": "self.secret_key = secret_key or \"default_analytics_key\""
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\dashboard\\dashboard_core\\real_data_extractor.py",
        "line": 196,
        "content": "'hardcoded_secrets': r'(password|secret|key|token)\\s*=\\s*[\"\\']',"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\dashboard\\dashboard_core\\real_data_extractor.py",
        "line": 196,
        "content": "'hardcoded_secrets': r'(password|secret|key|token)\\s*=\\s*[\"\\']',"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\crypto_analysis.py",
        "line": 186,
        "content": "r'password\\s*=\\s*[\"\\'][^\"\\']+[\"\\']',"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\crypto_analysis.py",
        "line": 187,
        "content": "r'secret\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']',"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\security_analysis.py",
        "line": 67,
        "content": "r'password.*=.*[\"\\'][^\"\\']{1,8}[\"\\']',  # Short passwords"
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\security_analysis.py",
        "line": 135,
        "content": "r'SECRET_KEY.*=.*[\"\\'][^\"\\']{1,20}[\"\\']',  # Short secret key"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\security_analysis.py",
        "line": 158,
        "content": "r'password.*=.*[\"\\'][^\"\\']{1,6}[\"\\']',  # Very short passwords"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\security_analysis.py",
        "line": 201,
        "content": "r'if.*password.*==.*[\"\\'].*[\"\\']',  # Hardcoded password checks"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\testmaster\\analysis\\comprehensive_analysis\\security_analysis.py",
        "line": 486,
        "content": "r'password.*==.*[\"\\']',  # Plain text password comparison"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\testmaster\\intelligence\\security\\security_intelligence_agent.py",
        "line": 885,
        "content": "query = f\"SELECT * FROM users WHERE username = '{username}' AND password = os.getenv('PASSWORD')\""
      },
      {
        "type": "hardcoded_secret",
        "file": "TestMaster\\testmaster\\overview\\performance_dashboard.py",
        "line": 152,
        "content": "self.flask_app.config['SECRET_KEY'] = 'testmaster_dashboard'"
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\testmaster\\security\\security_test_generator.py",
        "line": 368,
        "content": "test_function=f\"# Test weak password rejection\\\\nresult = {func.name}('user', '123')\","
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\testmaster\\security\\security_test_generator.py",
        "line": 381,
        "content": "test_function=f\"# Test account lockout after failed attempts\\\\nfor i in range(6):\\\\n    {func.name}("
      },
      {
        "type": "hardcoded_password",
        "file": "TestMaster\\testmaster\\security\\universal_scanner.py",
        "line": 647,
        "content": "'pattern': r'password\\s*=\\s*[\"\\'][^\"\\']{3,}[\"\\']',"
      }
    ]
  }
}