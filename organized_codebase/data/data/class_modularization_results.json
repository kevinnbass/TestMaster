{
  "analysis_metadata": {
    "analyzer": "Agent B - Class Modularization Analysis",
    "phase": "Hours 56-60",
    "timestamp": "2025-08-21T20:50:41.742071",
    "classes_analyzed": 708,
    "recommendations_generated": 199
  },
  "class_metrics": [
    {
      "name": "IntelligenceHubConfig",
      "file_path": ".\\core/intelligence/__init__.py",
      "line_count": 46,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "IntelligenceHub",
      "file_path": ".\\core/intelligence/__init__.py",
      "line_count": 342,
      "method_count": 19,
      "attribute_count": 9,
      "inheritance_depth": 0,
      "responsibility_score": 28,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "ConsolidatedTestingHub",
      "file_path": ".\\core/intelligence/testing/__init__.py",
      "line_count": 298,
      "method_count": 19,
      "attribute_count": 7,
      "inheritance_depth": 1,
      "responsibility_score": 26,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "AnalyticsHubConfig",
      "file_path": ".\\core/intelligence/analytics/__init__.py",
      "line_count": 16,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ConsolidatedAnalyticsHub",
      "file_path": ".\\core/intelligence/analytics/__init__.py",
      "line_count": 422,
      "method_count": 26,
      "attribute_count": 16,
      "inheritance_depth": 1,
      "responsibility_score": 42,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "EnhancedUnifiedAnalyticsEngine",
      "file_path": ".\\core/intelligence/analytics/__init__.py",
      "line_count": 14,
      "method_count": 2,
      "attribute_count": 2,
      "inheritance_depth": 0,
      "responsibility_score": 4,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CrossSystemCorrelationEngine",
      "file_path": ".\\core/intelligence/analytics/__init__.py",
      "line_count": 25,
      "method_count": 2,
      "attribute_count": 2,
      "inheritance_depth": 0,
      "responsibility_score": 4,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "MLModelManager",
      "file_path": ".\\core/intelligence/analytics/__init__.py",
      "line_count": 14,
      "method_count": 2,
      "attribute_count": 3,
      "inheritance_depth": 0,
      "responsibility_score": 5,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "RealTimeAnalyticsProcessor",
      "file_path": ".\\core/intelligence/analytics/__init__.py",
      "line_count": 12,
      "method_count": 2,
      "attribute_count": 2,
      "inheritance_depth": 0,
      "responsibility_score": 4,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TaskStatus",
      "file_path": ".\\testmaster_orchestrator.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TaskType",
      "file_path": ".\\testmaster_orchestrator.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 10,
      "inheritance_depth": 1,
      "responsibility_score": 10,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "Task",
      "file_path": ".\\testmaster_orchestrator.py",
      "line_count": 21,
      "method_count": 2,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 2,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "WorkflowDAG",
      "file_path": ".\\testmaster_orchestrator.py",
      "line_count": 92,
      "method_count": 4,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 4,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "PipelineOrchestrator",
      "file_path": ".\\testmaster_orchestrator.py",
      "line_count": 387,
      "method_count": 18,
      "attribute_count": 6,
      "inheritance_depth": 0,
      "responsibility_score": 24,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "EnhancedConfigBridge",
      "file_path": ".\\config/__init__.py",
      "line_count": 46,
      "method_count": 13,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 13,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "TestMasterLayer2",
      "file_path": "TestMaster\\layer2_integration.py",
      "line_count": 304,
      "method_count": 15,
      "attribute_count": 16,
      "inheritance_depth": 0,
      "responsibility_score": 31,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "BenchmarkType",
      "file_path": "TestMaster\\agent_qa\\benchmarking_suite.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 7,
      "inheritance_depth": 1,
      "responsibility_score": 7,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "PerformanceMetric",
      "file_path": "TestMaster\\agent_qa\\benchmarking_suite.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "BenchmarkResult",
      "file_path": "TestMaster\\agent_qa\\benchmarking_suite.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "BenchmarkingSuite",
      "file_path": "TestMaster\\agent_qa\\benchmarking_suite.py",
      "line_count": 237,
      "method_count": 20,
      "attribute_count": 3,
      "inheritance_depth": 0,
      "responsibility_score": 23,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "QualityLevel",
      "file_path": "TestMaster\\agent_qa\\quality_inspector.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "QualityCheck",
      "file_path": "TestMaster\\agent_qa\\quality_inspector.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "QualityMetric",
      "file_path": "TestMaster\\agent_qa\\quality_inspector.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "QualityReport",
      "file_path": "TestMaster\\agent_qa\\quality_inspector.py",
      "line_count": 13,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "QualityInspector",
      "file_path": "TestMaster\\agent_qa\\quality_inspector.py",
      "line_count": 200,
      "method_count": 12,
      "attribute_count": 3,
      "inheritance_depth": 0,
      "responsibility_score": 15,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "AlertType",
      "file_path": "TestMaster\\agent_qa\\quality_monitor.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "QualityThreshold",
      "file_path": "TestMaster\\agent_qa\\quality_monitor.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "QualityAlert",
      "file_path": "TestMaster\\agent_qa\\quality_monitor.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "QualityMonitor",
      "file_path": "TestMaster\\agent_qa\\quality_monitor.py",
      "line_count": 240,
      "method_count": 20,
      "attribute_count": 5,
      "inheritance_depth": 0,
      "responsibility_score": 25,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "ScoreCategory",
      "file_path": "TestMaster\\agent_qa\\scoring_system.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ScoreWeight",
      "file_path": "TestMaster\\agent_qa\\scoring_system.py",
      "line_count": 5,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ScoreBreakdown",
      "file_path": "TestMaster\\agent_qa\\scoring_system.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "QualityScore",
      "file_path": "TestMaster\\agent_qa\\scoring_system.py",
      "line_count": 34,
      "method_count": 2,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 2,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ScoringSystem",
      "file_path": "TestMaster\\agent_qa\\scoring_system.py",
      "line_count": 212,
      "method_count": 14,
      "attribute_count": 3,
      "inheritance_depth": 0,
      "responsibility_score": 17,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "APIAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\api_analysis.py",
      "line_count": 638,
      "method_count": 32,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 32,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "BaseAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\base_analyzer.py",
      "line_count": 78,
      "method_count": 9,
      "attribute_count": 3,
      "inheritance_depth": 0,
      "responsibility_score": 12,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CloneDetectionAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\clone_detection.py",
      "line_count": 311,
      "method_count": 12,
      "attribute_count": 2,
      "inheritance_depth": 1,
      "responsibility_score": 14,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "ComplexityAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\complexity_analysis.py",
      "line_count": 540,
      "method_count": 23,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 23,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "ConcurrencyAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\concurrency_analysis.py",
      "line_count": 1029,
      "method_count": 66,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 70,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "CouplingCohesionAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\coupling_cohesion.py",
      "line_count": 145,
      "method_count": 4,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "CryptographicIssue",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\crypto_analysis.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CryptographicAlgorithm",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\crypto_analysis.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CryptographicAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\crypto_analysis.py",
      "line_count": 641,
      "method_count": 30,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 30,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "DatabaseAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\database_analysis.py",
      "line_count": 901,
      "method_count": 56,
      "attribute_count": 2,
      "inheritance_depth": 1,
      "responsibility_score": 58,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "ErrorHandlingAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\error_handling_analysis.py",
      "line_count": 962,
      "method_count": 55,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 59,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "EvolutionAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\evolution_analysis.py",
      "line_count": 525,
      "method_count": 22,
      "attribute_count": 1,
      "inheritance_depth": 1,
      "responsibility_score": 23,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "GraphAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\graph_analysis.py",
      "line_count": 272,
      "method_count": 13,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 13,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "InheritancePolymorphismAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\inheritance_polymorphism.py",
      "line_count": 175,
      "method_count": 6,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "LinguisticAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
      "line_count": 667,
      "method_count": 23,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 23,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "ComprehensiveCodebaseAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\main_analyzer.py",
      "line_count": 401,
      "method_count": 10,
      "attribute_count": 2,
      "inheritance_depth": 0,
      "responsibility_score": 12,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "MemoryAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\memory_analysis.py",
      "line_count": 878,
      "method_count": 44,
      "attribute_count": 2,
      "inheritance_depth": 1,
      "responsibility_score": 46,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "PerformanceAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\performance_analysis.py",
      "line_count": 956,
      "method_count": 42,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 42,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "QualityAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\quality_analysis.py",
      "line_count": 599,
      "method_count": 32,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 32,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "ResourceIOAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\resource_io_analysis.py",
      "line_count": 994,
      "method_count": 35,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 35,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "SecurityAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\security_analysis.py",
      "line_count": 725,
      "method_count": 15,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 15,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "SoftwareMetricsAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\software_metrics.py",
      "line_count": 171,
      "method_count": 6,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "StatisticalAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\statistical_analysis.py",
      "line_count": 634,
      "method_count": 29,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 29,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "StructuralAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\structural_analysis.py",
      "line_count": 587,
      "method_count": 27,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 27,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "SupplyChainSecurityAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\supply_chain_security.py",
      "line_count": 594,
      "method_count": 30,
      "attribute_count": 3,
      "inheritance_depth": 1,
      "responsibility_score": 33,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "TestingAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\testing_analysis.py",
      "line_count": 1009,
      "method_count": 44,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 44,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "FunctionCoverage",
      "file_path": "TestMaster\\analysis\\coverage\\base.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ModuleCoverage",
      "file_path": "TestMaster\\analysis\\coverage\\base.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CoverageReport",
      "file_path": "TestMaster\\analysis\\coverage\\base.py",
      "line_count": 11,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "UnifiedCoverageAnalyzer",
      "file_path": "TestMaster\\analysis\\coverage\\interface.py",
      "line_count": 35,
      "method_count": 6,
      "attribute_count": 4,
      "inheritance_depth": 0,
      "responsibility_score": 10,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TaskPriority",
      "file_path": "TestMaster\\async_processing\\async_executor.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ExecutionContext",
      "file_path": "TestMaster\\async_processing\\async_executor.py",
      "line_count": 13,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TaskResult",
      "file_path": "TestMaster\\async_processing\\async_executor.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AsyncExecutor",
      "file_path": "TestMaster\\async_processing\\async_executor.py",
      "line_count": 355,
      "method_count": 11,
      "attribute_count": 17,
      "inheritance_depth": 0,
      "responsibility_score": 28,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "TaskState",
      "file_path": "TestMaster\\async_processing\\async_monitor.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AsyncTaskInfo",
      "file_path": "TestMaster\\async_processing\\async_monitor.py",
      "line_count": 15,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ExecutionStats",
      "file_path": "TestMaster\\async_processing\\async_monitor.py",
      "line_count": 16,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "PerformanceAlert",
      "file_path": "TestMaster\\async_processing\\async_monitor.py",
      "line_count": 11,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AsyncMonitor",
      "file_path": "TestMaster\\async_processing\\async_monitor.py",
      "line_count": 420,
      "method_count": 18,
      "attribute_count": 15,
      "inheritance_depth": 0,
      "responsibility_score": 33,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "ScheduleType",
      "file_path": "TestMaster\\async_processing\\concurrent_scheduler.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ScheduleConfig",
      "file_path": "TestMaster\\async_processing\\concurrent_scheduler.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ScheduledTask",
      "file_path": "TestMaster\\async_processing\\concurrent_scheduler.py",
      "line_count": 16,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ConcurrentScheduler",
      "file_path": "TestMaster\\async_processing\\concurrent_scheduler.py",
      "line_count": 377,
      "method_count": 14,
      "attribute_count": 15,
      "inheritance_depth": 0,
      "responsibility_score": 29,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "PoolType",
      "file_path": "TestMaster\\async_processing\\thread_pool_manager.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "PoolConfig",
      "file_path": "TestMaster\\async_processing\\thread_pool_manager.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ThreadMetrics",
      "file_path": "TestMaster\\async_processing\\thread_pool_manager.py",
      "line_count": 15,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TaskSubmission",
      "file_path": "TestMaster\\async_processing\\thread_pool_manager.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ThreadPoolManager",
      "file_path": "TestMaster\\async_processing\\thread_pool_manager.py",
      "line_count": 398,
      "method_count": 15,
      "attribute_count": 10,
      "inheritance_depth": 0,
      "responsibility_score": 25,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "FailureType",
      "file_path": "TestMaster\\breaking\\failure_detector.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 8,
      "inheritance_depth": 1,
      "responsibility_score": 8,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FailureInstance",
      "file_path": "TestMaster\\breaking\\failure_detector.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FailureReport",
      "file_path": "TestMaster\\breaking\\failure_detector.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FailureDetector",
      "file_path": "TestMaster\\breaking\\failure_detector.py",
      "line_count": 327,
      "method_count": 19,
      "attribute_count": 2,
      "inheritance_depth": 0,
      "responsibility_score": 21,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "MessageType",
      "file_path": "TestMaster\\communication\\claude_messenger.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 10,
      "inheritance_depth": 1,
      "responsibility_score": 10,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "MessagePriority",
      "file_path": "TestMaster\\communication\\claude_messenger.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TestFailureInfo",
      "file_path": "TestMaster\\communication\\claude_messenger.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ModuleAttentionInfo",
      "file_path": "TestMaster\\communication\\claude_messenger.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CoverageGapInfo",
      "file_path": "TestMaster\\communication\\claude_messenger.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ClaudeMessage",
      "file_path": "TestMaster\\communication\\claude_messenger.py",
      "line_count": 17,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ClaudeDirective",
      "file_path": "TestMaster\\communication\\claude_messenger.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ClaudeMessenger",
      "file_path": "TestMaster\\communication\\claude_messenger.py",
      "line_count": 403,
      "method_count": 23,
      "attribute_count": 9,
      "inheritance_depth": 0,
      "responsibility_score": 32,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "AgentType",
      "file_path": "TestMaster\\communication\\dynamic_handoff.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 7,
      "inheritance_depth": 1,
      "responsibility_score": 7,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "HandoffDecision",
      "file_path": "TestMaster\\communication\\dynamic_handoff.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AgentCapability",
      "file_path": "TestMaster\\communication\\dynamic_handoff.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "DynamicHandoffSystem",
      "file_path": "TestMaster\\communication\\dynamic_handoff.py",
      "line_count": 293,
      "method_count": 14,
      "attribute_count": 12,
      "inheritance_depth": 0,
      "responsibility_score": 26,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "AgentRouter",
      "file_path": "TestMaster\\communication\\dynamic_handoff.py",
      "line_count": 111,
      "method_count": 6,
      "attribute_count": 2,
      "inheritance_depth": 0,
      "responsibility_score": 8,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "HandoffPerformanceTracker",
      "file_path": "TestMaster\\communication\\dynamic_handoff.py",
      "line_count": 57,
      "method_count": 4,
      "attribute_count": 1,
      "inheritance_depth": 0,
      "responsibility_score": 5,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "MessageStatus",
      "file_path": "TestMaster\\communication\\message_queue.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 7,
      "inheritance_depth": 1,
      "responsibility_score": 7,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "QueuePriority",
      "file_path": "TestMaster\\communication\\message_queue.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "QueueMessage",
      "file_path": "TestMaster\\communication\\message_queue.py",
      "line_count": 20,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "QueueStatistics",
      "file_path": "TestMaster\\communication\\message_queue.py",
      "line_count": 13,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "MessageQueue",
      "file_path": "TestMaster\\communication\\message_queue.py",
      "line_count": 416,
      "method_count": 20,
      "attribute_count": 7,
      "inheritance_depth": 0,
      "responsibility_score": 27,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "ConversionResult",
      "file_path": "TestMaster\\converters\\base.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ConversionConfig",
      "file_path": "TestMaster\\converters\\base.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "RateLimiter",
      "file_path": "TestMaster\\converters\\base.py",
      "line_count": 16,
      "method_count": 2,
      "attribute_count": 4,
      "inheritance_depth": 0,
      "responsibility_score": 6,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "BaseConverter",
      "file_path": "TestMaster\\converters\\base.py",
      "line_count": 105,
      "method_count": 9,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 13,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "ParallelConverter",
      "file_path": "TestMaster\\converters\\base.py",
      "line_count": 30,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "BatchConverter",
      "file_path": "TestMaster\\converters\\base.py",
      "line_count": 34,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CachedConverter",
      "file_path": "TestMaster\\converters\\base.py",
      "line_count": 41,
      "method_count": 6,
      "attribute_count": 1,
      "inheritance_depth": 1,
      "responsibility_score": 7,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "BatchTestConverter",
      "file_path": "TestMaster\\converters\\batch.py",
      "line_count": 192,
      "method_count": 10,
      "attribute_count": 1,
      "inheritance_depth": 1,
      "responsibility_score": 11,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "IntelligentConverter",
      "file_path": "TestMaster\\converters\\intelligent.py",
      "line_count": 345,
      "method_count": 11,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 16,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "ParallelTestConverter",
      "file_path": "TestMaster\\converters\\parallel.py",
      "line_count": 174,
      "method_count": 7,
      "attribute_count": 1,
      "inheritance_depth": 1,
      "responsibility_score": 8,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "ConfigScope",
      "file_path": "TestMaster\\core\\config.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ConfigSource",
      "file_path": "TestMaster\\core\\config.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ConfigValue",
      "file_path": "TestMaster\\core\\config.py",
      "line_count": 16,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "IntelligentConfigProfile",
      "file_path": "TestMaster\\core\\config.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ConfigValidationError",
      "file_path": "TestMaster\\core\\config.py",
      "line_count": 3,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ConfigurationIntelligenceAgent",
      "file_path": "TestMaster\\core\\config.py",
      "line_count": 408,
      "method_count": 16,
      "attribute_count": 2,
      "inheritance_depth": 0,
      "responsibility_score": 18,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "TestMasterConfig",
      "file_path": "TestMaster\\core\\config.py",
      "line_count": 27,
      "method_count": 3,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 3,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ContextSnapshot",
      "file_path": "TestMaster\\core\\context_manager.py",
      "line_count": 11,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ContextHistory",
      "file_path": "TestMaster\\core\\context_manager.py",
      "line_count": 14,
      "method_count": 2,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 2,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ContextManager",
      "file_path": "TestMaster\\core\\context_manager.py",
      "line_count": 330,
      "method_count": 19,
      "attribute_count": 12,
      "inheritance_depth": 0,
      "responsibility_score": 31,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "TestMasterException",
      "file_path": "TestMaster\\core\\exceptions.py",
      "line_count": 3,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "GenerationError",
      "file_path": "TestMaster\\core\\exceptions.py",
      "line_count": 3,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "VerificationError",
      "file_path": "TestMaster\\core\\exceptions.py",
      "line_count": 3,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ConversionError",
      "file_path": "TestMaster\\core\\exceptions.py",
      "line_count": 3,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ConfigurationError",
      "file_path": "TestMaster\\core\\exceptions.py",
      "line_count": 3,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FeatureFlags",
      "file_path": "TestMaster\\core\\feature_flags.py",
      "line_count": 291,
      "method_count": 16,
      "attribute_count": 5,
      "inheritance_depth": 0,
      "responsibility_score": 21,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "ConfigError",
      "file_path": "TestMaster\\core\\layer_manager.py",
      "line_count": 3,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "LayerConfig",
      "file_path": "TestMaster\\core\\layer_manager.py",
      "line_count": 18,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "LayerManager",
      "file_path": "TestMaster\\core\\layer_manager.py",
      "line_count": 415,
      "method_count": 24,
      "attribute_count": 6,
      "inheritance_depth": 0,
      "responsibility_score": 30,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "ConfigReloadHandler",
      "file_path": "TestMaster\\core\\layer_manager.py",
      "line_count": 7,
      "method_count": 2,
      "attribute_count": 1,
      "inheritance_depth": 1,
      "responsibility_score": 3,
      "cohesion_estimate": 0.8,
      "docstring_present": false,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "PerformanceMonitor",
      "file_path": "TestMaster\\core\\monitoring_decorators.py",
      "line_count": 90,
      "method_count": 6,
      "attribute_count": 8,
      "inheritance_depth": 0,
      "responsibility_score": 14,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "TaskStatus",
      "file_path": "TestMaster\\core\\orchestrator.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TaskType",
      "file_path": "TestMaster\\core\\orchestrator.py",
      "line_count": 14,
      "method_count": 0,
      "attribute_count": 12,
      "inheritance_depth": 1,
      "responsibility_score": 12,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "Task",
      "file_path": "TestMaster\\core\\orchestrator.py",
      "line_count": 21,
      "method_count": 2,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 2,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "OrchestratorConfig",
      "file_path": "TestMaster\\core\\orchestrator.py",
      "line_count": 11,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "WorkflowDAG",
      "file_path": "TestMaster\\core\\orchestrator.py",
      "line_count": 48,
      "method_count": 4,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 4,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "Orchestrator",
      "file_path": "TestMaster\\core\\orchestrator.py",
      "line_count": 245,
      "method_count": 13,
      "attribute_count": 7,
      "inheritance_depth": 0,
      "responsibility_score": 20,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "EventType",
      "file_path": "TestMaster\\core\\tracking_manager.py",
      "line_count": 16,
      "method_count": 0,
      "attribute_count": 14,
      "inheritance_depth": 1,
      "responsibility_score": 14,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "TrackingEvent",
      "file_path": "TestMaster\\core\\tracking_manager.py",
      "line_count": 17,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ExecutionChain",
      "file_path": "TestMaster\\core\\tracking_manager.py",
      "line_count": 13,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TrackingManager",
      "file_path": "TestMaster\\core\\tracking_manager.py",
      "line_count": 449,
      "method_count": 12,
      "attribute_count": 10,
      "inheritance_depth": 0,
      "responsibility_score": 22,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "WorkflowState",
      "file_path": "TestMaster\\core\\workflow_graph.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "NodeType",
      "file_path": "TestMaster\\core\\workflow_graph.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "WorkflowContext",
      "file_path": "TestMaster\\core\\workflow_graph.py",
      "line_count": 11,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "WorkflowNode",
      "file_path": "TestMaster\\core\\workflow_graph.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "WorkflowEdge",
      "file_path": "TestMaster\\core\\workflow_graph.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "WorkflowGraph",
      "file_path": "TestMaster\\core\\workflow_graph.py",
      "line_count": 348,
      "method_count": 15,
      "attribute_count": 8,
      "inheritance_depth": 0,
      "responsibility_score": 23,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "BaseLanguageParser",
      "file_path": "TestMaster\\core\\ast_abstraction\\language_parsers.py",
      "line_count": 21,
      "method_count": 4,
      "attribute_count": 2,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "PythonASTParser",
      "file_path": "TestMaster\\core\\ast_abstraction\\language_parsers.py",
      "line_count": 284,
      "method_count": 12,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 12,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "JavaScriptASTParser",
      "file_path": "TestMaster\\core\\ast_abstraction\\language_parsers.py",
      "line_count": 204,
      "method_count": 10,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 10,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "TypeScriptASTParser",
      "file_path": "TestMaster\\core\\ast_abstraction\\language_parsers.py",
      "line_count": 45,
      "method_count": 3,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 3,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "JavaASTParser",
      "file_path": "TestMaster\\core\\ast_abstraction\\language_parsers.py",
      "line_count": 74,
      "method_count": 4,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CSharpASTParser",
      "file_path": "TestMaster\\core\\ast_abstraction\\language_parsers.py",
      "line_count": 52,
      "method_count": 3,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 3,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "GoASTParser",
      "file_path": "TestMaster\\core\\ast_abstraction\\language_parsers.py",
      "line_count": 68,
      "method_count": 4,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "RustASTParser",
      "file_path": "TestMaster\\core\\ast_abstraction\\language_parsers.py",
      "line_count": 71,
      "method_count": 4,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "LanguageParserRegistry",
      "file_path": "TestMaster\\core\\ast_abstraction\\language_parsers.py",
      "line_count": 37,
      "method_count": 5,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 5,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ASTNodeType",
      "file_path": "TestMaster\\core\\ast_abstraction\\universal_ast.py",
      "line_count": 19,
      "method_count": 0,
      "attribute_count": 17,
      "inheritance_depth": 1,
      "responsibility_score": 17,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "CodeLocation",
      "file_path": "TestMaster\\core\\ast_abstraction\\universal_ast.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "UniversalVariable",
      "file_path": "TestMaster\\core\\ast_abstraction\\universal_ast.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "UniversalParameter",
      "file_path": "TestMaster\\core\\ast_abstraction\\universal_ast.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "UniversalFunction",
      "file_path": "TestMaster\\core\\ast_abstraction\\universal_ast.py",
      "line_count": 25,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "UniversalClass",
      "file_path": "TestMaster\\core\\ast_abstraction\\universal_ast.py",
      "line_count": 20,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "UniversalImport",
      "file_path": "TestMaster\\core\\ast_abstraction\\universal_ast.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "UniversalExpression",
      "file_path": "TestMaster\\core\\ast_abstraction\\universal_ast.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "UniversalModule",
      "file_path": "TestMaster\\core\\ast_abstraction\\universal_ast.py",
      "line_count": 18,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "UniversalAST",
      "file_path": "TestMaster\\core\\ast_abstraction\\universal_ast.py",
      "line_count": 43,
      "method_count": 4,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 4,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "UniversalASTAbstractor",
      "file_path": "TestMaster\\core\\ast_abstraction\\universal_ast.py",
      "line_count": 255,
      "method_count": 15,
      "attribute_count": 3,
      "inheritance_depth": 0,
      "responsibility_score": 18,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "SemanticAnalyzer",
      "file_path": "TestMaster\\core\\ast_abstraction\\universal_ast.py",
      "line_count": 191,
      "method_count": 16,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 16,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "BasicPythonParser",
      "file_path": "TestMaster\\core\\ast_abstraction\\universal_ast.py",
      "line_count": 128,
      "method_count": 7,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 7,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "BasicJavaScriptParser",
      "file_path": "TestMaster\\core\\ast_abstraction\\universal_ast.py",
      "line_count": 48,
      "method_count": 4,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 4,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "BasicTypeScriptParser",
      "file_path": "TestMaster\\core\\ast_abstraction\\universal_ast.py",
      "line_count": 22,
      "method_count": 2,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 2,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "BaseFrameworkAdapter",
      "file_path": "TestMaster\\core\\framework_abstraction\\framework_adapters.py",
      "line_count": 38,
      "method_count": 7,
      "attribute_count": 3,
      "inheritance_depth": 1,
      "responsibility_score": 10,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "PytestAdapter",
      "file_path": "TestMaster\\core\\framework_abstraction\\framework_adapters.py",
      "line_count": 162,
      "method_count": 6,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "JestAdapter",
      "file_path": "TestMaster\\core\\framework_abstraction\\framework_adapters.py",
      "line_count": 124,
      "method_count": 5,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "UnittestAdapter",
      "file_path": "TestMaster\\core\\framework_abstraction\\framework_adapters.py",
      "line_count": 103,
      "method_count": 5,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "MochaAdapter",
      "file_path": "TestMaster\\core\\framework_abstraction\\framework_adapters.py",
      "line_count": 64,
      "method_count": 4,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "JUnitAdapter",
      "file_path": "TestMaster\\core\\framework_abstraction\\framework_adapters.py",
      "line_count": 8,
      "method_count": 3,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 3,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "NUnitAdapter",
      "file_path": "TestMaster\\core\\framework_abstraction\\framework_adapters.py",
      "line_count": 8,
      "method_count": 3,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 3,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "XUnitAdapter",
      "file_path": "TestMaster\\core\\framework_abstraction\\framework_adapters.py",
      "line_count": 8,
      "method_count": 3,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 3,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "GoTestAdapter",
      "file_path": "TestMaster\\core\\framework_abstraction\\framework_adapters.py",
      "line_count": 8,
      "method_count": 3,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 3,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "RustTestAdapter",
      "file_path": "TestMaster\\core\\framework_abstraction\\framework_adapters.py",
      "line_count": 8,
      "method_count": 3,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 3,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "RSpecAdapter",
      "file_path": "TestMaster\\core\\framework_abstraction\\framework_adapters.py",
      "line_count": 8,
      "method_count": 3,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 3,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "MinitestAdapter",
      "file_path": "TestMaster\\core\\framework_abstraction\\framework_adapters.py",
      "line_count": 8,
      "method_count": 3,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 3,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FrameworkAdapterRegistry",
      "file_path": "TestMaster\\core\\framework_abstraction\\framework_adapters.py",
      "line_count": 49,
      "method_count": 6,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 6,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AssertionType",
      "file_path": "TestMaster\\core\\framework_abstraction\\universal_test.py",
      "line_count": 23,
      "method_count": 0,
      "attribute_count": 21,
      "inheritance_depth": 1,
      "responsibility_score": 21,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "TestParameter",
      "file_path": "TestMaster\\core\\framework_abstraction\\universal_test.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TestAssertion",
      "file_path": "TestMaster\\core\\framework_abstraction\\universal_test.py",
      "line_count": 20,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TestSetup",
      "file_path": "TestMaster\\core\\framework_abstraction\\universal_test.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TestTeardown",
      "file_path": "TestMaster\\core\\framework_abstraction\\universal_test.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TestFixture",
      "file_path": "TestMaster\\core\\framework_abstraction\\universal_test.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TestMetadata",
      "file_path": "TestMaster\\core\\framework_abstraction\\universal_test.py",
      "line_count": 14,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "UniversalTest",
      "file_path": "TestMaster\\core\\framework_abstraction\\universal_test.py",
      "line_count": 50,
      "method_count": 5,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 5,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "UniversalTestCase",
      "file_path": "TestMaster\\core\\framework_abstraction\\universal_test.py",
      "line_count": 35,
      "method_count": 5,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 5,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "UniversalTestSuite",
      "file_path": "TestMaster\\core\\framework_abstraction\\universal_test.py",
      "line_count": 101,
      "method_count": 9,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 9,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "TestPatternLibrary",
      "file_path": "TestMaster\\core\\framework_abstraction\\universal_test.py",
      "line_count": 65,
      "method_count": 4,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 4,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "LanguageInfo",
      "file_path": "TestMaster\\core\\language_detection\\universal_detector.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FrameworkInfo",
      "file_path": "TestMaster\\core\\language_detection\\universal_detector.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "BuildSystemInfo",
      "file_path": "TestMaster\\core\\language_detection\\universal_detector.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "DependencyInfo",
      "file_path": "TestMaster\\core\\language_detection\\universal_detector.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FileInfo",
      "file_path": "TestMaster\\core\\language_detection\\universal_detector.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CodebaseProfile",
      "file_path": "TestMaster\\core\\language_detection\\universal_detector.py",
      "line_count": 16,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "UniversalLanguageDetector",
      "file_path": "TestMaster\\core\\language_detection\\universal_detector.py",
      "line_count": 554,
      "method_count": 29,
      "attribute_count": 6,
      "inheritance_depth": 0,
      "responsibility_score": 35,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "DependencyType",
      "file_path": "TestMaster\\flow_optimizer\\dependency_resolver.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TaskNode",
      "file_path": "TestMaster\\flow_optimizer\\dependency_resolver.py",
      "line_count": 15,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "DependencyGraph",
      "file_path": "TestMaster\\flow_optimizer\\dependency_resolver.py",
      "line_count": 10,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "DependencyResolver",
      "file_path": "TestMaster\\flow_optimizer\\dependency_resolver.py",
      "line_count": 237,
      "method_count": 12,
      "attribute_count": 2,
      "inheritance_depth": 0,
      "responsibility_score": 14,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "RoutingStrategy",
      "file_path": "TestMaster\\flow_optimizer\\execution_router.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "RouteWeight",
      "file_path": "TestMaster\\flow_optimizer\\execution_router.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "PerformanceData",
      "file_path": "TestMaster\\flow_optimizer\\execution_router.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "Route",
      "file_path": "TestMaster\\flow_optimizer\\execution_router.py",
      "line_count": 11,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ExecutionRouter",
      "file_path": "TestMaster\\flow_optimizer\\execution_router.py",
      "line_count": 230,
      "method_count": 15,
      "attribute_count": 4,
      "inheritance_depth": 0,
      "responsibility_score": 19,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "AnalysisType",
      "file_path": "TestMaster\\flow_optimizer\\flow_analyzer.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FlowMetric",
      "file_path": "TestMaster\\flow_optimizer\\flow_analyzer.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "BottleneckInfo",
      "file_path": "TestMaster\\flow_optimizer\\flow_analyzer.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FlowAnalysis",
      "file_path": "TestMaster\\flow_optimizer\\flow_analyzer.py",
      "line_count": 14,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FlowAnalyzer",
      "file_path": "TestMaster\\flow_optimizer\\flow_analyzer.py",
      "line_count": 239,
      "method_count": 10,
      "attribute_count": 2,
      "inheritance_depth": 0,
      "responsibility_score": 12,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "ParallelStrategy",
      "file_path": "TestMaster\\flow_optimizer\\parallel_executor.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TaskBatch",
      "file_path": "TestMaster\\flow_optimizer\\parallel_executor.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ExecutionPlan",
      "file_path": "TestMaster\\flow_optimizer\\parallel_executor.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ParallelExecutor",
      "file_path": "TestMaster\\flow_optimizer\\parallel_executor.py",
      "line_count": 225,
      "method_count": 13,
      "attribute_count": 4,
      "inheritance_depth": 0,
      "responsibility_score": 17,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "ResourceType",
      "file_path": "TestMaster\\flow_optimizer\\resource_optimizer.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "OptimizationPolicy",
      "file_path": "TestMaster\\flow_optimizer\\resource_optimizer.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ResourceRequirement",
      "file_path": "TestMaster\\flow_optimizer\\resource_optimizer.py",
      "line_count": 9,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ResourcePool",
      "file_path": "TestMaster\\flow_optimizer\\resource_optimizer.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ResourceAllocation",
      "file_path": "TestMaster\\flow_optimizer\\resource_optimizer.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ResourceOptimizer",
      "file_path": "TestMaster\\flow_optimizer\\resource_optimizer.py",
      "line_count": 261,
      "method_count": 16,
      "attribute_count": 2,
      "inheritance_depth": 0,
      "responsibility_score": 18,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "ModuleAnalysis",
      "file_path": "TestMaster\\generators\\base.py",
      "line_count": 21,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "GenerationConfig",
      "file_path": "TestMaster\\generators\\base.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "BaseGenerator",
      "file_path": "TestMaster\\generators\\base.py",
      "line_count": 338,
      "method_count": 7,
      "attribute_count": 8,
      "inheritance_depth": 1,
      "responsibility_score": 15,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "AnalysisBasedGenerator",
      "file_path": "TestMaster\\generators\\base.py",
      "line_count": 80,
      "method_count": 3,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 3,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TemplateBasedGenerator",
      "file_path": "TestMaster\\generators\\base.py",
      "line_count": 69,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "IntelligentTestGenerator",
      "file_path": "TestMaster\\generators\\intelligent.py",
      "line_count": 346,
      "method_count": 11,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 16,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "IntegrationTestResult",
      "file_path": "TestMaster\\integration\\final_integration_test.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SystemValidation",
      "file_path": "TestMaster\\integration\\final_integration_test.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "PerformanceBaseline",
      "file_path": "TestMaster\\integration\\final_integration_test.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FinalIntegrationTest",
      "file_path": "TestMaster\\integration\\final_integration_test.py",
      "line_count": 1366,
      "method_count": 33,
      "attribute_count": 15,
      "inheritance_depth": 0,
      "responsibility_score": 48,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "IntegrationTestSuite",
      "file_path": "TestMaster\\integration\\final_integration_test.py",
      "line_count": 7,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "EventType",
      "file_path": "TestMaster\\intelligence\\bridges\\event_monitoring_bridge.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 10,
      "inheritance_depth": 1,
      "responsibility_score": 10,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "EventSeverity",
      "file_path": "TestMaster\\intelligence\\bridges\\event_monitoring_bridge.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "EventStatus",
      "file_path": "TestMaster\\intelligence\\bridges\\event_monitoring_bridge.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 7,
      "inheritance_depth": 1,
      "responsibility_score": 7,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TestMasterEvent",
      "file_path": "TestMaster\\intelligence\\bridges\\event_monitoring_bridge.py",
      "line_count": 40,
      "method_count": 2,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 2,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "EventSubscription",
      "file_path": "TestMaster\\intelligence\\bridges\\event_monitoring_bridge.py",
      "line_count": 14,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "EventCorrelation",
      "file_path": "TestMaster\\intelligence\\bridges\\event_monitoring_bridge.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "EventBus",
      "file_path": "TestMaster\\intelligence\\bridges\\event_monitoring_bridge.py",
      "line_count": 158,
      "method_count": 12,
      "attribute_count": 9,
      "inheritance_depth": 0,
      "responsibility_score": 21,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "EventPersistence",
      "file_path": "TestMaster\\intelligence\\bridges\\event_monitoring_bridge.py",
      "line_count": 212,
      "method_count": 7,
      "attribute_count": 2,
      "inheritance_depth": 0,
      "responsibility_score": 9,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "EventCorrelationEngine",
      "file_path": "TestMaster\\intelligence\\bridges\\event_monitoring_bridge.py",
      "line_count": 141,
      "method_count": 8,
      "attribute_count": 1,
      "inheritance_depth": 0,
      "responsibility_score": 9,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "EventMonitoringBridge",
      "file_path": "TestMaster\\intelligence\\bridges\\event_monitoring_bridge.py",
      "line_count": 208,
      "method_count": 13,
      "attribute_count": 8,
      "inheritance_depth": 0,
      "responsibility_score": 21,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "MessageProtocol",
      "file_path": "TestMaster\\intelligence\\bridges\\protocol_communication_bridge.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "RoutingStrategy",
      "file_path": "TestMaster\\intelligence\\bridges\\protocol_communication_bridge.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "MessagePriority",
      "file_path": "TestMaster\\intelligence\\bridges\\protocol_communication_bridge.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "MessageStatus",
      "file_path": "TestMaster\\intelligence\\bridges\\protocol_communication_bridge.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CommunicationChannel",
      "file_path": "TestMaster\\intelligence\\bridges\\protocol_communication_bridge.py",
      "line_count": 17,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AgentMessage",
      "file_path": "TestMaster\\intelligence\\bridges\\protocol_communication_bridge.py",
      "line_count": 20,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "MessageResponse",
      "file_path": "TestMaster\\intelligence\\bridges\\protocol_communication_bridge.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "MessageBus",
      "file_path": "TestMaster\\intelligence\\bridges\\protocol_communication_bridge.py",
      "line_count": 188,
      "method_count": 15,
      "attribute_count": 5,
      "inheritance_depth": 0,
      "responsibility_score": 20,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "MessageRouter",
      "file_path": "TestMaster\\intelligence\\bridges\\protocol_communication_bridge.py",
      "line_count": 67,
      "method_count": 5,
      "attribute_count": 1,
      "inheritance_depth": 0,
      "responsibility_score": 6,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AgentCommunicator",
      "file_path": "TestMaster\\intelligence\\bridges\\protocol_communication_bridge.py",
      "line_count": 109,
      "method_count": 9,
      "attribute_count": 5,
      "inheritance_depth": 0,
      "responsibility_score": 14,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "ProtocolCommunicationBridge",
      "file_path": "TestMaster\\intelligence\\bridges\\protocol_communication_bridge.py",
      "line_count": 183,
      "method_count": 14,
      "attribute_count": 7,
      "inheritance_depth": 0,
      "responsibility_score": 21,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "SessionStatus",
      "file_path": "TestMaster\\intelligence\\bridges\\session_tracking_bridge.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 8,
      "inheritance_depth": 1,
      "responsibility_score": 8,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SessionType",
      "file_path": "TestMaster\\intelligence\\bridges\\session_tracking_bridge.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 7,
      "inheritance_depth": 1,
      "responsibility_score": 7,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "StateScope",
      "file_path": "TestMaster\\intelligence\\bridges\\session_tracking_bridge.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SessionMetadata",
      "file_path": "TestMaster\\intelligence\\bridges\\session_tracking_bridge.py",
      "line_count": 14,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SessionState",
      "file_path": "TestMaster\\intelligence\\bridges\\session_tracking_bridge.py",
      "line_count": 13,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SessionCheckpoint",
      "file_path": "TestMaster\\intelligence\\bridges\\session_tracking_bridge.py",
      "line_count": 11,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SessionAnalytics",
      "file_path": "TestMaster\\intelligence\\bridges\\session_tracking_bridge.py",
      "line_count": 14,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SessionManager",
      "file_path": "TestMaster\\intelligence\\bridges\\session_tracking_bridge.py",
      "line_count": 427,
      "method_count": 19,
      "attribute_count": 6,
      "inheritance_depth": 0,
      "responsibility_score": 25,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "SessionTrackingBridge",
      "file_path": "TestMaster\\intelligence\\bridges\\session_tracking_bridge.py",
      "line_count": 311,
      "method_count": 18,
      "attribute_count": 6,
      "inheritance_depth": 0,
      "responsibility_score": 24,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "SOPType",
      "file_path": "TestMaster\\intelligence\\bridges\\sop_workflow_bridge.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 10,
      "inheritance_depth": 1,
      "responsibility_score": 10,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SOPComplexity",
      "file_path": "TestMaster\\intelligence\\bridges\\sop_workflow_bridge.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SOPStatus",
      "file_path": "TestMaster\\intelligence\\bridges\\sop_workflow_bridge.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 8,
      "inheritance_depth": 1,
      "responsibility_score": 8,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SOPStep",
      "file_path": "TestMaster\\intelligence\\bridges\\sop_workflow_bridge.py",
      "line_count": 16,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SOPTemplate",
      "file_path": "TestMaster\\intelligence\\bridges\\sop_workflow_bridge.py",
      "line_count": 29,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SOPExecution",
      "file_path": "TestMaster\\intelligence\\bridges\\sop_workflow_bridge.py",
      "line_count": 15,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SOPPattern",
      "file_path": "TestMaster\\intelligence\\bridges\\sop_workflow_bridge.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SOPPatternMatcher",
      "file_path": "TestMaster\\intelligence\\bridges\\sop_workflow_bridge.py",
      "line_count": 118,
      "method_count": 10,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 10,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "SOPDAGConverter",
      "file_path": "TestMaster\\intelligence\\bridges\\sop_workflow_bridge.py",
      "line_count": 142,
      "method_count": 14,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 14,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "SOPWorkflowBridge",
      "file_path": "TestMaster\\intelligence\\bridges\\sop_workflow_bridge.py",
      "line_count": 336,
      "method_count": 14,
      "attribute_count": 11,
      "inheritance_depth": 0,
      "responsibility_score": 25,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "AgentRole",
      "file_path": "TestMaster\\intelligence\\consensus\\agent_coordination.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CoordinationStatus",
      "file_path": "TestMaster\\intelligence\\consensus\\agent_coordination.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AgentInfo",
      "file_path": "TestMaster\\intelligence\\consensus\\agent_coordination.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CoordinationConfig",
      "file_path": "TestMaster\\intelligence\\consensus\\agent_coordination.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CoordinationTask",
      "file_path": "TestMaster\\intelligence\\consensus\\agent_coordination.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AgentCoordinator",
      "file_path": "TestMaster\\intelligence\\consensus\\agent_coordination.py",
      "line_count": 247,
      "method_count": 12,
      "attribute_count": 5,
      "inheritance_depth": 0,
      "responsibility_score": 17,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "VotingMethod",
      "file_path": "TestMaster\\intelligence\\consensus\\consensus_engine.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ConsensusStrategy",
      "file_path": "TestMaster\\intelligence\\consensus\\consensus_engine.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AgentVote",
      "file_path": "TestMaster\\intelligence\\consensus\\consensus_engine.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ConsensusResult",
      "file_path": "TestMaster\\intelligence\\consensus\\consensus_engine.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ConsensusEngine",
      "file_path": "TestMaster\\intelligence\\consensus\\consensus_engine.py",
      "line_count": 216,
      "method_count": 11,
      "attribute_count": 4,
      "inheritance_depth": 0,
      "responsibility_score": 15,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "ContextualInsight",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\context_builder.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FunctionContext",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\context_builder.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ClassContext",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\context_builder.py",
      "line_count": 11,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ModuleContext",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\context_builder.py",
      "line_count": 13,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ProjectContext",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\context_builder.py",
      "line_count": 11,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AnalysisContextBuilder",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\context_builder.py",
      "line_count": 460,
      "method_count": 43,
      "attribute_count": 2,
      "inheritance_depth": 0,
      "responsibility_score": 45,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "DocumentationConfig",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\doc_generator.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "GenerationResult",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\doc_generator.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "DocumentationEngine",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\doc_generator.py",
      "line_count": 391,
      "method_count": 6,
      "attribute_count": 5,
      "inheritance_depth": 0,
      "responsibility_score": 11,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "LLMProvider",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\llm_integration.py",
      "line_count": 5,
      "method_count": 0,
      "attribute_count": 3,
      "inheritance_depth": 1,
      "responsibility_score": 3,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "LLMConfig",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\llm_integration.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "GenerationRequest",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\llm_integration.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "GenerationResponse",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\llm_integration.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "PromptTemplateEngine",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\llm_integration.py",
      "line_count": 143,
      "method_count": 4,
      "attribute_count": 1,
      "inheritance_depth": 0,
      "responsibility_score": 5,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "OpenAIProvider",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\llm_integration.py",
      "line_count": 33,
      "method_count": 1,
      "attribute_count": 1,
      "inheritance_depth": 0,
      "responsibility_score": 2,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AnthropicProvider",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\llm_integration.py",
      "line_count": 31,
      "method_count": 1,
      "attribute_count": 2,
      "inheritance_depth": 0,
      "responsibility_score": 3,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "GoogleProvider",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\llm_integration.py",
      "line_count": 31,
      "method_count": 1,
      "attribute_count": 2,
      "inheritance_depth": 0,
      "responsibility_score": 3,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "LLMIntegration",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\llm_integration.py",
      "line_count": 159,
      "method_count": 6,
      "attribute_count": 4,
      "inheritance_depth": 0,
      "responsibility_score": 10,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "QualityMetric",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\quality_assessor.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 7,
      "inheritance_depth": 1,
      "responsibility_score": 7,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "QualityScore",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\quality_assessor.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "QualityAssessment",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\quality_assessor.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "DocumentationQualityAssessor",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\quality_assessor.py",
      "line_count": 478,
      "method_count": 14,
      "attribute_count": 2,
      "inheritance_depth": 0,
      "responsibility_score": 16,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "ApiDocConfig",
      "file_path": "TestMaster\\intelligence\\documentation\\generators\\api_doc_generator.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ApiDocumentationGenerator",
      "file_path": "TestMaster\\intelligence\\documentation\\generators\\api_doc_generator.py",
      "line_count": 433,
      "method_count": 8,
      "attribute_count": 3,
      "inheritance_depth": 0,
      "responsibility_score": 11,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "ArchitecturalComponent",
      "file_path": "TestMaster\\intelligence\\documentation\\generators\\architecture_doc_generator.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ArchitecturalLayer",
      "file_path": "TestMaster\\intelligence\\documentation\\generators\\architecture_doc_generator.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SystemArchitecture",
      "file_path": "TestMaster\\intelligence\\documentation\\generators\\architecture_doc_generator.py",
      "line_count": 11,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ArchitectureDocConfig",
      "file_path": "TestMaster\\intelligence\\documentation\\generators\\architecture_doc_generator.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ArchitectureDocumentationGenerator",
      "file_path": "TestMaster\\intelligence\\documentation\\generators\\architecture_doc_generator.py",
      "line_count": 536,
      "method_count": 4,
      "attribute_count": 6,
      "inheritance_depth": 0,
      "responsibility_score": 10,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "DocstringGenerator",
      "file_path": "TestMaster\\intelligence\\documentation\\generators\\docstring_generator.py",
      "line_count": 393,
      "method_count": 13,
      "attribute_count": 4,
      "inheritance_depth": 0,
      "responsibility_score": 17,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "ReadmeConfig",
      "file_path": "TestMaster\\intelligence\\documentation\\generators\\readme_generator.py",
      "line_count": 13,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ReadmeGenerator",
      "file_path": "TestMaster\\intelligence\\documentation\\generators\\readme_generator.py",
      "line_count": 465,
      "method_count": 6,
      "attribute_count": 3,
      "inheritance_depth": 0,
      "responsibility_score": 9,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "CodeExample",
      "file_path": "TestMaster\\intelligence\\documentation\\generators\\tutorial_generator.py",
      "line_count": 11,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TutorialStep",
      "file_path": "TestMaster\\intelligence\\documentation\\generators\\tutorial_generator.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "Tutorial",
      "file_path": "TestMaster\\intelligence\\documentation\\generators\\tutorial_generator.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TutorialConfig",
      "file_path": "TestMaster\\intelligence\\documentation\\generators\\tutorial_generator.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TutorialGenerator",
      "file_path": "TestMaster\\intelligence\\documentation\\generators\\tutorial_generator.py",
      "line_count": 682,
      "method_count": 8,
      "attribute_count": 6,
      "inheritance_depth": 0,
      "responsibility_score": 14,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "CIPlatform",
      "file_path": "TestMaster\\intelligence\\documentation\\integrations\\ci_cd_integration.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CIConfig",
      "file_path": "TestMaster\\intelligence\\documentation\\integrations\\ci_cd_integration.py",
      "line_count": 15,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CICDDocumentationIntegration",
      "file_path": "TestMaster\\intelligence\\documentation\\integrations\\ci_cd_integration.py",
      "line_count": 385,
      "method_count": 12,
      "attribute_count": 4,
      "inheritance_depth": 0,
      "responsibility_score": 16,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "GitChange",
      "file_path": "TestMaster\\intelligence\\documentation\\integrations\\git_integration.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CommitContext",
      "file_path": "TestMaster\\intelligence\\documentation\\integrations\\git_integration.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "GitCommitEnhancer",
      "file_path": "TestMaster\\intelligence\\documentation\\integrations\\git_integration.py",
      "line_count": 378,
      "method_count": 12,
      "attribute_count": 3,
      "inheritance_depth": 0,
      "responsibility_score": 15,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "CompletenessLevel",
      "file_path": "TestMaster\\intelligence\\documentation\\quality\\completeness_checker.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "DocumentationGap",
      "file_path": "TestMaster\\intelligence\\documentation\\quality\\completeness_checker.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CompletenessReport",
      "file_path": "TestMaster\\intelligence\\documentation\\quality\\completeness_checker.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CompletenessChecker",
      "file_path": "TestMaster\\intelligence\\documentation\\quality\\completeness_checker.py",
      "line_count": 456,
      "method_count": 15,
      "attribute_count": 1,
      "inheritance_depth": 0,
      "responsibility_score": 16,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "DocstringStyle",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\docstring_templates.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "DocstringContext",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\docstring_templates.py",
      "line_count": 26,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "DocstringTemplateManager",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\docstring_templates.py",
      "line_count": 665,
      "method_count": 16,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 16,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "TemplateFormat",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\template_engine.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TemplateType",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\template_engine.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 8,
      "inheritance_depth": 1,
      "responsibility_score": 8,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TemplateMetadata",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\template_engine.py",
      "line_count": 15,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "Template",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\template_engine.py",
      "line_count": 11,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TemplateProcessor",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\template_engine.py",
      "line_count": 10,
      "method_count": 2,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 2,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SimpleTemplateProcessor",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\template_engine.py",
      "line_count": 14,
      "method_count": 2,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 2,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "Jinja2TemplateProcessor",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\template_engine.py",
      "line_count": 25,
      "method_count": 3,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 7,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "MustacheTemplateProcessor",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\template_engine.py",
      "line_count": 21,
      "method_count": 3,
      "attribute_count": 3,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TemplateEngine",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\template_engine.py",
      "line_count": 283,
      "method_count": 15,
      "attribute_count": 1,
      "inheritance_depth": 0,
      "responsibility_score": 16,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "ApiType",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\api\\base.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AuthenticationType",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\api\\base.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 7,
      "inheritance_depth": 1,
      "responsibility_score": 7,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ApiEndpoint",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\api\\base.py",
      "line_count": 18,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ApiModel",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\api\\base.py",
      "line_count": 10,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ApiContext",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\api\\base.py",
      "line_count": 23,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "GrpcTemplateProvider",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\api\\grpc_templates.py",
      "line_count": 270,
      "method_count": 4,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 4,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "ApiTemplateManager",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\api\\manager.py",
      "line_count": 38,
      "method_count": 5,
      "attribute_count": 1,
      "inheritance_depth": 0,
      "responsibility_score": 6,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "RestTemplateProvider",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\api\\rest_templates.py",
      "line_count": 465,
      "method_count": 4,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 4,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "WebsocketTemplateProvider",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\api\\websocket_templates.py",
      "line_count": 405,
      "method_count": 4,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 4,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "ProjectType",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\readme_template_modules\\data_models.py",
      "line_count": 13,
      "method_count": 0,
      "attribute_count": 11,
      "inheritance_depth": 1,
      "responsibility_score": 11,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ReadmeContext",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\readme_template_modules\\data_models.py",
      "line_count": 39,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "GenericTemplates",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\readme_template_modules\\generic_templates.py",
      "line_count": 212,
      "method_count": 3,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 3,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "PlanningStrategy",
      "file_path": "TestMaster\\intelligence\\hierarchical_planning\\htp_reasoning.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "EvaluationCriteria",
      "file_path": "TestMaster\\intelligence\\hierarchical_planning\\htp_reasoning.py",
      "line_count": 11,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "PlanningNode",
      "file_path": "TestMaster\\intelligence\\hierarchical_planning\\htp_reasoning.py",
      "line_count": 46,
      "method_count": 5,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 5,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "PlanningTree",
      "file_path": "TestMaster\\intelligence\\hierarchical_planning\\htp_reasoning.py",
      "line_count": 54,
      "method_count": 6,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 6,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "PlanGenerator",
      "file_path": "TestMaster\\intelligence\\hierarchical_planning\\htp_reasoning.py",
      "line_count": 6,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "PlanEvaluator",
      "file_path": "TestMaster\\intelligence\\hierarchical_planning\\htp_reasoning.py",
      "line_count": 6,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "HierarchicalTestPlanner",
      "file_path": "TestMaster\\intelligence\\hierarchical_planning\\htp_reasoning.py",
      "line_count": 118,
      "method_count": 7,
      "attribute_count": 9,
      "inheritance_depth": 0,
      "responsibility_score": 16,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "LLMPlanningConfig",
      "file_path": "TestMaster\\intelligence\\hierarchical_planning\\llm_integration.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "LLMPoweredPlanGenerator",
      "file_path": "TestMaster\\intelligence\\hierarchical_planning\\llm_integration.py",
      "line_count": 158,
      "method_count": 8,
      "attribute_count": 2,
      "inheritance_depth": 1,
      "responsibility_score": 10,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "LLMPoweredPlanEvaluator",
      "file_path": "TestMaster\\intelligence\\hierarchical_planning\\llm_integration.py",
      "line_count": 128,
      "method_count": 7,
      "attribute_count": 2,
      "inheritance_depth": 1,
      "responsibility_score": 9,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "HierarchicalPlanningConfig",
      "file_path": "TestMaster\\intelligence\\hierarchical_planning\\unified_integration.py",
      "line_count": 107,
      "method_count": 3,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 3,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "HierarchicalPlanningResult",
      "file_path": "TestMaster\\intelligence\\hierarchical_planning\\unified_integration.py",
      "line_count": 79,
      "method_count": 7,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 7,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "UniversalHierarchicalTestGenerator",
      "file_path": "TestMaster\\intelligence\\hierarchical_planning\\unified_integration.py",
      "line_count": 123,
      "method_count": 7,
      "attribute_count": 10,
      "inheritance_depth": 0,
      "responsibility_score": 17,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "DocumentationRequest",
      "file_path": "TestMaster\\intelligence\\integration\\agents\\documentation_agent.py",
      "line_count": 21,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "DocumentationResult",
      "file_path": "TestMaster\\intelligence\\integration\\agents\\documentation_agent.py",
      "line_count": 21,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "DocumentationIntelligenceAgent",
      "file_path": "TestMaster\\intelligence\\integration\\agents\\documentation_agent.py",
      "line_count": 427,
      "method_count": 8,
      "attribute_count": 10,
      "inheritance_depth": 0,
      "responsibility_score": 18,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "AnalysisTaskType",
      "file_path": "TestMaster\\intelligence\\integration\\coordination\\analysis_coordinator.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 7,
      "inheritance_depth": 1,
      "responsibility_score": 7,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TaskPriority",
      "file_path": "TestMaster\\intelligence\\integration\\coordination\\analysis_coordinator.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TaskStatus",
      "file_path": "TestMaster\\intelligence\\integration\\coordination\\analysis_coordinator.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AnalysisTask",
      "file_path": "TestMaster\\intelligence\\integration\\coordination\\analysis_coordinator.py",
      "line_count": 38,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ResourceConstraints",
      "file_path": "TestMaster\\intelligence\\integration\\coordination\\analysis_coordinator.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AgentCapability",
      "file_path": "TestMaster\\intelligence\\integration\\coordination\\analysis_coordinator.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AnalysisCoordinator",
      "file_path": "TestMaster\\intelligence\\integration\\coordination\\analysis_coordinator.py",
      "line_count": 415,
      "method_count": 14,
      "attribute_count": 5,
      "inheritance_depth": 0,
      "responsibility_score": 19,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "EventPriority",
      "file_path": "TestMaster\\intelligence\\integration\\events\\event_system.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "Event",
      "file_path": "TestMaster\\intelligence\\integration\\events\\event_system.py",
      "line_count": 19,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "EventHandler",
      "file_path": "TestMaster\\intelligence\\integration\\events\\event_system.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "EventSystem",
      "file_path": "TestMaster\\intelligence\\integration\\events\\event_system.py",
      "line_count": 135,
      "method_count": 4,
      "attribute_count": 3,
      "inheritance_depth": 0,
      "responsibility_score": 7,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "FeatureStatus",
      "file_path": "TestMaster\\intelligence\\integration\\features\\feature_flags.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ConditionType",
      "file_path": "TestMaster\\intelligence\\integration\\features\\feature_flags.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 8,
      "inheritance_depth": 1,
      "responsibility_score": 8,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FeatureCondition",
      "file_path": "TestMaster\\intelligence\\integration\\features\\feature_flags.py",
      "line_count": 62,
      "method_count": 2,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 2,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FeatureFlag",
      "file_path": "TestMaster\\intelligence\\integration\\features\\feature_flags.py",
      "line_count": 83,
      "method_count": 4,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 4,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FeatureFlagsManager",
      "file_path": "TestMaster\\intelligence\\integration\\features\\feature_flags.py",
      "line_count": 352,
      "method_count": 19,
      "attribute_count": 5,
      "inheritance_depth": 0,
      "responsibility_score": 24,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "SystemLayer",
      "file_path": "TestMaster\\intelligence\\integration\\layers\\layer_manager.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "LayerStatus",
      "file_path": "TestMaster\\intelligence\\integration\\layers\\layer_manager.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CommunicationPattern",
      "file_path": "TestMaster\\intelligence\\integration\\layers\\layer_manager.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "LayerConfiguration",
      "file_path": "TestMaster\\intelligence\\integration\\layers\\layer_manager.py",
      "line_count": 23,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "LayerInstance",
      "file_path": "TestMaster\\intelligence\\integration\\layers\\layer_manager.py",
      "line_count": 22,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "LayerCommunication",
      "file_path": "TestMaster\\intelligence\\integration\\layers\\layer_manager.py",
      "line_count": 11,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "LayerManager",
      "file_path": "TestMaster\\intelligence\\integration\\layers\\layer_manager.py",
      "line_count": 403,
      "method_count": 12,
      "attribute_count": 4,
      "inheritance_depth": 0,
      "responsibility_score": 16,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "StorageBackend",
      "file_path": "TestMaster\\intelligence\\integration\\storage\\unified_storage.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CompressionType",
      "file_path": "TestMaster\\intelligence\\integration\\storage\\unified_storage.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ResultStatus",
      "file_path": "TestMaster\\intelligence\\integration\\storage\\unified_storage.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "StorageConfig",
      "file_path": "TestMaster\\intelligence\\integration\\storage\\unified_storage.py",
      "line_count": 11,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ResultMetadata",
      "file_path": "TestMaster\\intelligence\\integration\\storage\\unified_storage.py",
      "line_count": 27,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "UnifiedAnalysisStorage",
      "file_path": "TestMaster\\intelligence\\integration\\storage\\unified_storage.py",
      "line_count": 469,
      "method_count": 7,
      "attribute_count": 4,
      "inheritance_depth": 0,
      "responsibility_score": 11,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "OpenAIProvider",
      "file_path": "TestMaster\\intelligence\\llm_providers\\provider_implementations.py",
      "line_count": 156,
      "method_count": 4,
      "attribute_count": 2,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "AnthropicProvider",
      "file_path": "TestMaster\\intelligence\\llm_providers\\provider_implementations.py",
      "line_count": 80,
      "method_count": 3,
      "attribute_count": 2,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "LocalLLMProvider",
      "file_path": "TestMaster\\intelligence\\llm_providers\\provider_implementations.py",
      "line_count": 57,
      "method_count": 3,
      "attribute_count": 1,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AzureOpenAIProvider",
      "file_path": "TestMaster\\intelligence\\llm_providers\\provider_implementations.py",
      "line_count": 50,
      "method_count": 1,
      "attribute_count": 2,
      "inheritance_depth": 1,
      "responsibility_score": 3,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "GoogleProvider",
      "file_path": "TestMaster\\intelligence\\llm_providers\\provider_implementations.py",
      "line_count": 55,
      "method_count": 2,
      "attribute_count": 1,
      "inheritance_depth": 1,
      "responsibility_score": 3,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "OllamaProvider",
      "file_path": "TestMaster\\intelligence\\llm_providers\\provider_implementations.py",
      "line_count": 43,
      "method_count": 1,
      "attribute_count": 1,
      "inheritance_depth": 1,
      "responsibility_score": 2,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "OptimizationObjective",
      "file_path": "TestMaster\\intelligence\\llm_providers\\provider_optimization.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ProviderMetrics",
      "file_path": "TestMaster\\intelligence\\llm_providers\\provider_optimization.py",
      "line_count": 51,
      "method_count": 2,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 2,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ProviderOptimizer",
      "file_path": "TestMaster\\intelligence\\llm_providers\\provider_optimization.py",
      "line_count": 170,
      "method_count": 8,
      "attribute_count": 3,
      "inheritance_depth": 0,
      "responsibility_score": 11,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "CostOptimizer",
      "file_path": "TestMaster\\intelligence\\llm_providers\\provider_optimization.py",
      "line_count": 23,
      "method_count": 3,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 3,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "LatencyOptimizer",
      "file_path": "TestMaster\\intelligence\\llm_providers\\provider_optimization.py",
      "line_count": 14,
      "method_count": 2,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 2,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "QualityOptimizer",
      "file_path": "TestMaster\\intelligence\\llm_providers\\provider_optimization.py",
      "line_count": 30,
      "method_count": 3,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 3,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "MessageRole",
      "file_path": "TestMaster\\intelligence\\llm_providers\\universal_llm_provider.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ProviderType",
      "file_path": "TestMaster\\intelligence\\llm_providers\\universal_llm_provider.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 8,
      "inheritance_depth": 1,
      "responsibility_score": 8,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "LLMMessage",
      "file_path": "TestMaster\\intelligence\\llm_providers\\universal_llm_provider.py",
      "line_count": 34,
      "method_count": 2,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 2,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "LLMResponse",
      "file_path": "TestMaster\\intelligence\\llm_providers\\universal_llm_provider.py",
      "line_count": 32,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "LLMProviderConfig",
      "file_path": "TestMaster\\intelligence\\llm_providers\\universal_llm_provider.py",
      "line_count": 44,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "UniversalLLMProvider",
      "file_path": "TestMaster\\intelligence\\llm_providers\\universal_llm_provider.py",
      "line_count": 90,
      "method_count": 9,
      "attribute_count": 10,
      "inheritance_depth": 1,
      "responsibility_score": 19,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "LLMProviderManager",
      "file_path": "TestMaster\\intelligence\\llm_providers\\universal_llm_provider.py",
      "line_count": 118,
      "method_count": 9,
      "attribute_count": 2,
      "inheritance_depth": 0,
      "responsibility_score": 11,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "BridgeMode",
      "file_path": "TestMaster\\intelligence\\monitoring\\adaptive_resource_bridge.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "BridgeConfiguration",
      "file_path": "TestMaster\\intelligence\\monitoring\\adaptive_resource_bridge.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "UnifiedResourceDecision",
      "file_path": "TestMaster\\intelligence\\monitoring\\adaptive_resource_bridge.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AdaptiveResourceBridge",
      "file_path": "TestMaster\\intelligence\\monitoring\\adaptive_resource_bridge.py",
      "line_count": 386,
      "method_count": 20,
      "attribute_count": 8,
      "inheritance_depth": 0,
      "responsibility_score": 28,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "ScalingDirection",
      "file_path": "TestMaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
      "line_count": 5,
      "method_count": 0,
      "attribute_count": 3,
      "inheritance_depth": 1,
      "responsibility_score": 3,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ScalingTrigger",
      "file_path": "TestMaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ResourceStrategy",
      "file_path": "TestMaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ResourceMetrics",
      "file_path": "TestMaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
      "line_count": 11,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ScalingDecision",
      "file_path": "TestMaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
      "line_count": 17,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ResourcePrediction",
      "file_path": "TestMaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AdaptiveConfiguration",
      "file_path": "TestMaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
      "line_count": 14,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ResourcePredictor",
      "file_path": "TestMaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
      "line_count": 133,
      "method_count": 9,
      "attribute_count": 1,
      "inheritance_depth": 0,
      "responsibility_score": 10,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "ResourceScaler",
      "file_path": "TestMaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
      "line_count": 114,
      "method_count": 6,
      "attribute_count": 3,
      "inheritance_depth": 0,
      "responsibility_score": 9,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "AdaptiveResourceManagementAgent",
      "file_path": "TestMaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
      "line_count": 391,
      "method_count": 20,
      "attribute_count": 13,
      "inheritance_depth": 0,
      "responsibility_score": 33,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "BottleneckType",
      "file_path": "TestMaster\\intelligence\\monitoring\\bottleneck_detection_resolution_agent.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 8,
      "inheritance_depth": 1,
      "responsibility_score": 8,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ResolutionStrategy",
      "file_path": "TestMaster\\intelligence\\monitoring\\bottleneck_detection_resolution_agent.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 8,
      "inheritance_depth": 1,
      "responsibility_score": 8,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "BottleneckSeverity",
      "file_path": "TestMaster\\intelligence\\monitoring\\bottleneck_detection_resolution_agent.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "BottleneckDetection",
      "file_path": "TestMaster\\intelligence\\monitoring\\bottleneck_detection_resolution_agent.py",
      "line_count": 15,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ResolutionAction",
      "file_path": "TestMaster\\intelligence\\monitoring\\bottleneck_detection_resolution_agent.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "BottleneckResolution",
      "file_path": "TestMaster\\intelligence\\monitoring\\bottleneck_detection_resolution_agent.py",
      "line_count": 14,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "BottleneckDetector",
      "file_path": "TestMaster\\intelligence\\monitoring\\bottleneck_detection_resolution_agent.py",
      "line_count": 274,
      "method_count": 12,
      "attribute_count": 9,
      "inheritance_depth": 0,
      "responsibility_score": 21,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "BottleneckResolver",
      "file_path": "TestMaster\\intelligence\\monitoring\\bottleneck_detection_resolution_agent.py",
      "line_count": 257,
      "method_count": 9,
      "attribute_count": 2,
      "inheritance_depth": 0,
      "responsibility_score": 11,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "BottleneckDetectionResolutionAgent",
      "file_path": "TestMaster\\intelligence\\monitoring\\bottleneck_detection_resolution_agent.py",
      "line_count": 198,
      "method_count": 9,
      "attribute_count": 8,
      "inheritance_depth": 0,
      "responsibility_score": 17,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "MonitoringScope",
      "file_path": "TestMaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AlertSeverity",
      "file_path": "TestMaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "PerformanceMetricType",
      "file_path": "TestMaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 8,
      "inheritance_depth": 1,
      "responsibility_score": 8,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "PerformanceThreshold",
      "file_path": "TestMaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "PerformanceAlert",
      "file_path": "TestMaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
      "line_count": 13,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "WorkflowMetrics",
      "file_path": "TestMaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
      "line_count": 15,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "MonitoringConfiguration",
      "file_path": "TestMaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "PerformanceDataCollector",
      "file_path": "TestMaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
      "line_count": 113,
      "method_count": 5,
      "attribute_count": 5,
      "inheritance_depth": 0,
      "responsibility_score": 10,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "ThresholdManager",
      "file_path": "TestMaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
      "line_count": 106,
      "method_count": 7,
      "attribute_count": 2,
      "inheritance_depth": 0,
      "responsibility_score": 9,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "AlertManager",
      "file_path": "TestMaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
      "line_count": 72,
      "method_count": 5,
      "attribute_count": 2,
      "inheritance_depth": 0,
      "responsibility_score": 7,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "WorkflowPerformanceMonitorAgent",
      "file_path": "TestMaster\\intelligence\\monitoring\\workflow_performance_monitor_agent.py",
      "line_count": 235,
      "method_count": 11,
      "attribute_count": 12,
      "inheritance_depth": 0,
      "responsibility_score": 23,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "OptimizationObjective",
      "file_path": "TestMaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 8,
      "inheritance_depth": 1,
      "responsibility_score": 8,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "OptimizationStrategy",
      "file_path": "TestMaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ObjectiveWeights",
      "file_path": "TestMaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
      "line_count": 27,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "OptimizationCandidate",
      "file_path": "TestMaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "OptimizationResult",
      "file_path": "TestMaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "MultiObjectiveOptimizer",
      "file_path": "TestMaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
      "line_count": 404,
      "method_count": 26,
      "attribute_count": 8,
      "inheritance_depth": 0,
      "responsibility_score": 34,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "OptimizationPlanGenerator",
      "file_path": "TestMaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
      "line_count": 74,
      "method_count": 3,
      "attribute_count": 1,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "OptimizationPlanEvaluator",
      "file_path": "TestMaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
      "line_count": 37,
      "method_count": 2,
      "attribute_count": 1,
      "inheritance_depth": 1,
      "responsibility_score": 3,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "MultiObjectiveOptimizationAgent",
      "file_path": "TestMaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
      "line_count": 196,
      "method_count": 8,
      "attribute_count": 6,
      "inheritance_depth": 0,
      "responsibility_score": 14,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "ObjectiveType",
      "file_path": "TestMaster\\intelligence\\optimization\\multi_objective_optimizer.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "OptimizationObjective",
      "file_path": "TestMaster\\intelligence\\optimization\\multi_objective_optimizer.py",
      "line_count": 46,
      "method_count": 3,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 3,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "Solution",
      "file_path": "TestMaster\\intelligence\\optimization\\multi_objective_optimizer.py",
      "line_count": 31,
      "method_count": 2,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 2,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ParetoFront",
      "file_path": "TestMaster\\intelligence\\optimization\\multi_objective_optimizer.py",
      "line_count": 37,
      "method_count": 3,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 3,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "OptimizationConfig",
      "file_path": "TestMaster\\intelligence\\optimization\\multi_objective_optimizer.py",
      "line_count": 30,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "OptimizationResult",
      "file_path": "TestMaster\\intelligence\\optimization\\multi_objective_optimizer.py",
      "line_count": 28,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "MultiObjectiveOptimizer",
      "file_path": "TestMaster\\intelligence\\optimization\\multi_objective_optimizer.py",
      "line_count": 284,
      "method_count": 22,
      "attribute_count": 7,
      "inheritance_depth": 0,
      "responsibility_score": 29,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "NSGAIIOptimizer",
      "file_path": "TestMaster\\intelligence\\optimization\\optimization_algorithms.py",
      "line_count": 83,
      "method_count": 4,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "MOEADOptimizer",
      "file_path": "TestMaster\\intelligence\\optimization\\optimization_algorithms.py",
      "line_count": 55,
      "method_count": 5,
      "attribute_count": 3,
      "inheritance_depth": 1,
      "responsibility_score": 8,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ParticleSwarmOptimizer",
      "file_path": "TestMaster\\intelligence\\optimization\\optimization_algorithms.py",
      "line_count": 42,
      "method_count": 3,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 9,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SimulatedAnnealingOptimizer",
      "file_path": "TestMaster\\intelligence\\optimization\\optimization_algorithms.py",
      "line_count": 35,
      "method_count": 4,
      "attribute_count": 3,
      "inheritance_depth": 1,
      "responsibility_score": 7,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "GeneticAlgorithmOptimizer",
      "file_path": "TestMaster\\intelligence\\optimization\\optimization_algorithms.py",
      "line_count": 96,
      "method_count": 8,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 8,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SecurityTestStrategy",
      "file_path": "TestMaster\\intelligence\\security\\security_intelligence_agent.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SecurityTestPlan",
      "file_path": "TestMaster\\intelligence\\security\\security_intelligence_agent.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SecurityFinding",
      "file_path": "TestMaster\\intelligence\\security\\security_intelligence_agent.py",
      "line_count": 11,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SecurityPlanGenerator",
      "file_path": "TestMaster\\intelligence\\security\\security_intelligence_agent.py",
      "line_count": 241,
      "method_count": 15,
      "attribute_count": 3,
      "inheritance_depth": 1,
      "responsibility_score": 18,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "SecurityPlanEvaluator",
      "file_path": "TestMaster\\intelligence\\security\\security_intelligence_agent.py",
      "line_count": 80,
      "method_count": 6,
      "attribute_count": 1,
      "inheritance_depth": 1,
      "responsibility_score": 7,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "VulnerabilityTestGenerator",
      "file_path": "TestMaster\\intelligence\\security\\security_intelligence_agent.py",
      "line_count": 57,
      "method_count": 4,
      "attribute_count": 1,
      "inheritance_depth": 0,
      "responsibility_score": 5,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "OWASPComplianceChecker",
      "file_path": "TestMaster\\intelligence\\security\\security_intelligence_agent.py",
      "line_count": 48,
      "method_count": 3,
      "attribute_count": 1,
      "inheritance_depth": 0,
      "responsibility_score": 4,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SecurityIntelligenceAgent",
      "file_path": "TestMaster\\intelligence\\security\\security_intelligence_agent.py",
      "line_count": 191,
      "method_count": 11,
      "attribute_count": 7,
      "inheritance_depth": 0,
      "responsibility_score": 18,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "ReasoningStrategy",
      "file_path": "TestMaster\\intelligence\\tree_of_thought\\tot_reasoning.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "EvaluationCriteria",
      "file_path": "TestMaster\\intelligence\\tree_of_thought\\tot_reasoning.py",
      "line_count": 11,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ThoughtNode",
      "file_path": "TestMaster\\intelligence\\tree_of_thought\\tot_reasoning.py",
      "line_count": 46,
      "method_count": 4,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 4,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ThoughtTree",
      "file_path": "TestMaster\\intelligence\\tree_of_thought\\tot_reasoning.py",
      "line_count": 76,
      "method_count": 8,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 8,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ThoughtGenerator",
      "file_path": "TestMaster\\intelligence\\tree_of_thought\\tot_reasoning.py",
      "line_count": 6,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ThoughtEvaluator",
      "file_path": "TestMaster\\intelligence\\tree_of_thought\\tot_reasoning.py",
      "line_count": 6,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TreeOfThoughtReasoner",
      "file_path": "TestMaster\\intelligence\\tree_of_thought\\tot_reasoning.py",
      "line_count": 164,
      "method_count": 9,
      "attribute_count": 9,
      "inheritance_depth": 0,
      "responsibility_score": 18,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "SimpleThoughtGenerator",
      "file_path": "TestMaster\\intelligence\\tree_of_thought\\tot_reasoning.py",
      "line_count": 17,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SimpleThoughtEvaluator",
      "file_path": "TestMaster\\intelligence\\tree_of_thought\\tot_reasoning.py",
      "line_count": 13,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ToTGenerationConfig",
      "file_path": "TestMaster\\intelligence\\tree_of_thought\\universal_tot_integration.py",
      "line_count": 30,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ToTGenerationResult",
      "file_path": "TestMaster\\intelligence\\tree_of_thought\\universal_tot_integration.py",
      "line_count": 31,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "UniversalToTTestGenerator",
      "file_path": "TestMaster\\intelligence\\tree_of_thought\\universal_tot_integration.py",
      "line_count": 280,
      "method_count": 11,
      "attribute_count": 1,
      "inheritance_depth": 0,
      "responsibility_score": 12,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "ModuleDependency",
      "file_path": "TestMaster\\mapping\\dependency_tracker.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ImpactAnalysis",
      "file_path": "TestMaster\\mapping\\dependency_tracker.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "DependencyTracker",
      "file_path": "TestMaster\\mapping\\dependency_tracker.py",
      "line_count": 301,
      "method_count": 19,
      "attribute_count": 4,
      "inheritance_depth": 0,
      "responsibility_score": 23,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "MappingCache",
      "file_path": "TestMaster\\mapping\\mapping_cache.py",
      "line_count": 43,
      "method_count": 5,
      "attribute_count": 1,
      "inheritance_depth": 0,
      "responsibility_score": 6,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ChangeType",
      "file_path": "TestMaster\\monitoring\\file_watcher.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FileChangeEvent",
      "file_path": "TestMaster\\monitoring\\file_watcher.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "WatcherCallbacks",
      "file_path": "TestMaster\\monitoring\\file_watcher.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TestMasterFileHandler",
      "file_path": "TestMaster\\monitoring\\file_watcher.py",
      "line_count": 70,
      "method_count": 7,
      "attribute_count": 3,
      "inheritance_depth": 1,
      "responsibility_score": 10,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FileWatcher",
      "file_path": "TestMaster\\monitoring\\file_watcher.py",
      "line_count": 286,
      "method_count": 17,
      "attribute_count": 10,
      "inheritance_depth": 0,
      "responsibility_score": 27,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "IdleState",
      "file_path": "TestMaster\\monitoring\\idle_detector.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "IdleModule",
      "file_path": "TestMaster\\monitoring\\idle_detector.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "IdleStatistics",
      "file_path": "TestMaster\\monitoring\\idle_detector.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "IdleDetector",
      "file_path": "TestMaster\\monitoring\\idle_detector.py",
      "line_count": 311,
      "method_count": 17,
      "attribute_count": 5,
      "inheritance_depth": 0,
      "responsibility_score": 22,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "SupportedFramework",
      "file_path": "TestMaster\\orchestration\\framework_adapter.py",
      "line_count": 26,
      "method_count": 0,
      "attribute_count": 24,
      "inheritance_depth": 1,
      "responsibility_score": 24,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "TestFrameworkMapping",
      "file_path": "TestMaster\\orchestration\\framework_adapter.py",
      "line_count": 30,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FrameworkAdapterConfig",
      "file_path": "TestMaster\\orchestration\\framework_adapter.py",
      "line_count": 26,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "UniversalFrameworkAdapter",
      "file_path": "TestMaster\\orchestration\\framework_adapter.py",
      "line_count": 317,
      "method_count": 18,
      "attribute_count": 1,
      "inheritance_depth": 0,
      "responsibility_score": 19,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "OutputFormat",
      "file_path": "TestMaster\\orchestration\\output_system.py",
      "line_count": 21,
      "method_count": 0,
      "attribute_count": 19,
      "inheritance_depth": 1,
      "responsibility_score": 19,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "TestOutputBundle",
      "file_path": "TestMaster\\orchestration\\output_system.py",
      "line_count": 30,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "OutputSystemConfig",
      "file_path": "TestMaster\\orchestration\\output_system.py",
      "line_count": 54,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CodebaseAgnosticOutputSystem",
      "file_path": "TestMaster\\orchestration\\output_system.py",
      "line_count": 477,
      "method_count": 26,
      "attribute_count": 2,
      "inheritance_depth": 0,
      "responsibility_score": 28,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "OrchestrationMode",
      "file_path": "TestMaster\\orchestration\\universal_orchestrator.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 7,
      "inheritance_depth": 1,
      "responsibility_score": 7,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "OrchestrationConfig",
      "file_path": "TestMaster\\orchestration\\universal_orchestrator.py",
      "line_count": 65,
      "method_count": 2,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 2,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "OrchestrationMetrics",
      "file_path": "TestMaster\\orchestration\\universal_orchestrator.py",
      "line_count": 54,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "OrchestrationResult",
      "file_path": "TestMaster\\orchestration\\universal_orchestrator.py",
      "line_count": 48,
      "method_count": 1,
      "attribute_count": 1,
      "inheritance_depth": 0,
      "responsibility_score": 2,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "UniversalTestOrchestrator",
      "file_path": "TestMaster\\orchestration\\universal_orchestrator.py",
      "line_count": 265,
      "method_count": 12,
      "attribute_count": 10,
      "inheritance_depth": 0,
      "responsibility_score": 22,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "ModuleType",
      "file_path": "TestMaster\\orchestrator\\file_tagger.py",
      "line_count": 11,
      "method_count": 0,
      "attribute_count": 9,
      "inheritance_depth": 1,
      "responsibility_score": 9,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ModuleStatus",
      "file_path": "TestMaster\\orchestrator\\file_tagger.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "Priority",
      "file_path": "TestMaster\\orchestrator\\file_tagger.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FileClassification",
      "file_path": "TestMaster\\orchestrator\\file_tagger.py",
      "line_count": 20,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TaggingRule",
      "file_path": "TestMaster\\orchestrator\\file_tagger.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FileTagger",
      "file_path": "TestMaster\\orchestrator\\file_tagger.py",
      "line_count": 664,
      "method_count": 29,
      "attribute_count": 2,
      "inheritance_depth": 0,
      "responsibility_score": 31,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "HandoffType",
      "file_path": "TestMaster\\orchestrator\\handoff_manager.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "HandoffStatus",
      "file_path": "TestMaster\\orchestrator\\handoff_manager.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 7,
      "inheritance_depth": 1,
      "responsibility_score": 7,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ContextType",
      "file_path": "TestMaster\\orchestrator\\handoff_manager.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 8,
      "inheritance_depth": 1,
      "responsibility_score": 8,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ContextItem",
      "file_path": "TestMaster\\orchestrator\\handoff_manager.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "HandoffContext",
      "file_path": "TestMaster\\orchestrator\\handoff_manager.py",
      "line_count": 24,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "HandoffResponse",
      "file_path": "TestMaster\\orchestrator\\handoff_manager.py",
      "line_count": 17,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "HandoffPattern",
      "file_path": "TestMaster\\orchestrator\\handoff_manager.py",
      "line_count": 13,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "HandoffManager",
      "file_path": "TestMaster\\orchestrator\\handoff_manager.py",
      "line_count": 701,
      "method_count": 25,
      "attribute_count": 9,
      "inheritance_depth": 0,
      "responsibility_score": 34,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "PriorityQueue",
      "file_path": "TestMaster\\orchestrator\\handoff_manager.py",
      "line_count": 31,
      "method_count": 4,
      "attribute_count": 2,
      "inheritance_depth": 0,
      "responsibility_score": 6,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "RetryManager",
      "file_path": "TestMaster\\orchestrator\\handoff_manager.py",
      "line_count": 23,
      "method_count": 5,
      "attribute_count": 4,
      "inheritance_depth": 0,
      "responsibility_score": 9,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "BatchProcessor",
      "file_path": "TestMaster\\orchestrator\\handoff_manager.py",
      "line_count": 27,
      "method_count": 3,
      "attribute_count": 4,
      "inheritance_depth": 0,
      "responsibility_score": 7,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "InvestigationType",
      "file_path": "TestMaster\\orchestrator\\investigator.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 7,
      "inheritance_depth": 1,
      "responsibility_score": 7,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "InvestigationPriority",
      "file_path": "TestMaster\\orchestrator\\investigator.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "EvidenceType",
      "file_path": "TestMaster\\orchestrator\\investigator.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 7,
      "inheritance_depth": 1,
      "responsibility_score": 7,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "Evidence",
      "file_path": "TestMaster\\orchestrator\\investigator.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "Finding",
      "file_path": "TestMaster\\orchestrator\\investigator.py",
      "line_count": 13,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "Investigation",
      "file_path": "TestMaster\\orchestrator\\investigator.py",
      "line_count": 17,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "InvestigationResult",
      "file_path": "TestMaster\\orchestrator\\investigator.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AutoInvestigator",
      "file_path": "TestMaster\\orchestrator\\investigator.py",
      "line_count": 759,
      "method_count": 17,
      "attribute_count": 2,
      "inheritance_depth": 0,
      "responsibility_score": 19,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "WorkType",
      "file_path": "TestMaster\\orchestrator\\work_distributor.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 10,
      "inheritance_depth": 1,
      "responsibility_score": 10,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ComplexityLevel",
      "file_path": "TestMaster\\orchestrator\\work_distributor.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "HandoffTarget",
      "file_path": "TestMaster\\orchestrator\\work_distributor.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "HandoffReason",
      "file_path": "TestMaster\\orchestrator\\work_distributor.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "WorkItem",
      "file_path": "TestMaster\\orchestrator\\work_distributor.py",
      "line_count": 20,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "HandoffDecision",
      "file_path": "TestMaster\\orchestrator\\work_distributor.py",
      "line_count": 13,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "BatchContext",
      "file_path": "TestMaster\\orchestrator\\work_distributor.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "WorkDistributor",
      "file_path": "TestMaster\\orchestrator\\work_distributor.py",
      "line_count": 469,
      "method_count": 14,
      "attribute_count": 1,
      "inheritance_depth": 0,
      "responsibility_score": 15,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "PathCriticality",
      "file_path": "TestMaster\\overview\\coverage_intelligence.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "GapType",
      "file_path": "TestMaster\\overview\\coverage_intelligence.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "RiskLevel",
      "file_path": "TestMaster\\overview\\coverage_intelligence.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CriticalPath",
      "file_path": "TestMaster\\overview\\coverage_intelligence.py",
      "line_count": 23,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CoverageGap",
      "file_path": "TestMaster\\overview\\coverage_intelligence.py",
      "line_count": 20,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ModuleCoverage",
      "file_path": "TestMaster\\overview\\coverage_intelligence.py",
      "line_count": 17,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CoverageIntelligenceReport",
      "file_path": "TestMaster\\overview\\coverage_intelligence.py",
      "line_count": 13,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CoverageIntelligence",
      "file_path": "TestMaster\\overview\\coverage_intelligence.py",
      "line_count": 641,
      "method_count": 30,
      "attribute_count": 4,
      "inheritance_depth": 0,
      "responsibility_score": 34,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "MetricType",
      "file_path": "TestMaster\\overview\\performance_dashboard.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "PerformanceMetric",
      "file_path": "TestMaster\\overview\\performance_dashboard.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ComponentStats",
      "file_path": "TestMaster\\overview\\performance_dashboard.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "DashboardPanel",
      "file_path": "TestMaster\\overview\\performance_dashboard.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "PerformanceDashboard",
      "file_path": "TestMaster\\overview\\performance_dashboard.py",
      "line_count": 460,
      "method_count": 16,
      "attribute_count": 9,
      "inheritance_depth": 0,
      "responsibility_score": 25,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "RegressionType",
      "file_path": "TestMaster\\overview\\regression_tracker.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 7,
      "inheritance_depth": 1,
      "responsibility_score": 7,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FailureCategory",
      "file_path": "TestMaster\\overview\\regression_tracker.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 8,
      "inheritance_depth": 1,
      "responsibility_score": 8,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FailureSeverity",
      "file_path": "TestMaster\\overview\\regression_tracker.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "PredictionConfidence",
      "file_path": "TestMaster\\overview\\regression_tracker.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FailureRecord",
      "file_path": "TestMaster\\overview\\regression_tracker.py",
      "line_count": 22,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "RegressionPattern",
      "file_path": "TestMaster\\overview\\regression_tracker.py",
      "line_count": 20,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FailurePrediction",
      "file_path": "TestMaster\\overview\\regression_tracker.py",
      "line_count": 19,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "RegressionSummary",
      "file_path": "TestMaster\\overview\\regression_tracker.py",
      "line_count": 14,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "RegressionTracker",
      "file_path": "TestMaster\\overview\\regression_tracker.py",
      "line_count": 837,
      "method_count": 37,
      "attribute_count": 4,
      "inheritance_depth": 0,
      "responsibility_score": 41,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "RelationshipType",
      "file_path": "TestMaster\\overview\\structure_mapper.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 8,
      "inheritance_depth": 1,
      "responsibility_score": 8,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ModuleCategory",
      "file_path": "TestMaster\\overview\\structure_mapper.py",
      "line_count": 11,
      "method_count": 0,
      "attribute_count": 9,
      "inheritance_depth": 1,
      "responsibility_score": 9,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AccessLevel",
      "file_path": "TestMaster\\overview\\structure_mapper.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FunctionInfo",
      "file_path": "TestMaster\\overview\\structure_mapper.py",
      "line_count": 19,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ClassInfo",
      "file_path": "TestMaster\\overview\\structure_mapper.py",
      "line_count": 18,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ModuleInfo",
      "file_path": "TestMaster\\overview\\structure_mapper.py",
      "line_count": 15,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ModuleRelationship",
      "file_path": "TestMaster\\overview\\structure_mapper.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FunctionalMap",
      "file_path": "TestMaster\\overview\\structure_mapper.py",
      "line_count": 13,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "StructureMapper",
      "file_path": "TestMaster\\overview\\structure_mapper.py",
      "line_count": 658,
      "method_count": 27,
      "attribute_count": 4,
      "inheritance_depth": 0,
      "responsibility_score": 31,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "CodeMetrics",
      "file_path": "TestMaster\\refactoring\\hierarchical_analyzer.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "RefactorOpportunity",
      "file_path": "TestMaster\\refactoring\\hierarchical_analyzer.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FunctionalCluster",
      "file_path": "TestMaster\\refactoring\\hierarchical_analyzer.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CodebaseHierarchy",
      "file_path": "TestMaster\\refactoring\\hierarchical_analyzer.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "RefactorRoadmap",
      "file_path": "TestMaster\\refactoring\\hierarchical_analyzer.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "HierarchicalRefactoringAnalyzer",
      "file_path": "TestMaster\\refactoring\\hierarchical_analyzer.py",
      "line_count": 673,
      "method_count": 33,
      "attribute_count": 6,
      "inheritance_depth": 0,
      "responsibility_score": 39,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "ChartType",
      "file_path": "TestMaster\\reporting\\dashboard_builder.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "DashboardSection",
      "file_path": "TestMaster\\reporting\\dashboard_builder.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "DashboardConfig",
      "file_path": "TestMaster\\reporting\\dashboard_builder.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "DashboardBuilder",
      "file_path": "TestMaster\\reporting\\dashboard_builder.py",
      "line_count": 27,
      "method_count": 2,
      "attribute_count": 1,
      "inheritance_depth": 0,
      "responsibility_score": 3,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "DataSource",
      "file_path": "TestMaster\\reporting\\data_collector.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "MetricAggregation",
      "file_path": "TestMaster\\reporting\\data_collector.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TimeRange",
      "file_path": "TestMaster\\reporting\\data_collector.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CollectedMetric",
      "file_path": "TestMaster\\reporting\\data_collector.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "DataCollector",
      "file_path": "TestMaster\\reporting\\data_collector.py",
      "line_count": 44,
      "method_count": 8,
      "attribute_count": 3,
      "inheritance_depth": 0,
      "responsibility_score": 11,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AnalysisType",
      "file_path": "TestMaster\\reporting\\metrics_analyzer.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TrendAnalysis",
      "file_path": "TestMaster\\reporting\\metrics_analyzer.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AnomalyDetection",
      "file_path": "TestMaster\\reporting\\metrics_analyzer.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "MetricsAnalyzer",
      "file_path": "TestMaster\\reporting\\metrics_analyzer.py",
      "line_count": 37,
      "method_count": 5,
      "attribute_count": 3,
      "inheritance_depth": 0,
      "responsibility_score": 8,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ReportFormat",
      "file_path": "TestMaster\\reporting\\report_generator.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ReportType",
      "file_path": "TestMaster\\reporting\\report_generator.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 8,
      "inheritance_depth": 1,
      "responsibility_score": 8,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ReportConfig",
      "file_path": "TestMaster\\reporting\\report_generator.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ReportSection",
      "file_path": "TestMaster\\reporting\\report_generator.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "GeneratedReport",
      "file_path": "TestMaster\\reporting\\report_generator.py",
      "line_count": 11,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ReportGenerator",
      "file_path": "TestMaster\\reporting\\report_generator.py",
      "line_count": 606,
      "method_count": 40,
      "attribute_count": 10,
      "inheritance_depth": 0,
      "responsibility_score": 50,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "DeliveryMethod",
      "file_path": "TestMaster\\reporting\\report_scheduler.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ScheduleConfig",
      "file_path": "TestMaster\\reporting\\report_scheduler.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ReportDelivery",
      "file_path": "TestMaster\\reporting\\report_scheduler.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ReportScheduler",
      "file_path": "TestMaster\\reporting\\report_scheduler.py",
      "line_count": 24,
      "method_count": 4,
      "attribute_count": 3,
      "inheritance_depth": 0,
      "responsibility_score": 7,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ComplianceStatus",
      "file_path": "TestMaster\\security\\compliance_framework.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ComplianceStandard",
      "file_path": "TestMaster\\security\\compliance_framework.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 10,
      "inheritance_depth": 1,
      "responsibility_score": 10,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ComplianceRule",
      "file_path": "TestMaster\\security\\compliance_framework.py",
      "line_count": 44,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ComplianceResult",
      "file_path": "TestMaster\\security\\compliance_framework.py",
      "line_count": 28,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ComplianceReport",
      "file_path": "TestMaster\\security\\compliance_framework.py",
      "line_count": 70,
      "method_count": 2,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 2,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ComplianceFramework",
      "file_path": "TestMaster\\security\\compliance_framework.py",
      "line_count": 322,
      "method_count": 12,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 12,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "ThreatCategory",
      "file_path": "TestMaster\\security\\security_test_generator.py",
      "line_count": 14,
      "method_count": 0,
      "attribute_count": 12,
      "inheritance_depth": 1,
      "responsibility_score": 12,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ThreatModel",
      "file_path": "TestMaster\\security\\security_test_generator.py",
      "line_count": 30,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SecurityTestConfig",
      "file_path": "TestMaster\\security\\security_test_generator.py",
      "line_count": 36,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SecurityTestSuite",
      "file_path": "TestMaster\\security\\security_test_generator.py",
      "line_count": 20,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SecurityTestGenerator",
      "file_path": "TestMaster\\security\\security_test_generator.py",
      "line_count": 479,
      "method_count": 26,
      "attribute_count": 4,
      "inheritance_depth": 0,
      "responsibility_score": 30,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "SeverityLevel",
      "file_path": "TestMaster\\security\\universal_scanner.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "VulnerabilityType",
      "file_path": "TestMaster\\security\\universal_scanner.py",
      "line_count": 22,
      "method_count": 0,
      "attribute_count": 20,
      "inheritance_depth": 1,
      "responsibility_score": 20,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "VulnerabilityFinding",
      "file_path": "TestMaster\\security\\universal_scanner.py",
      "line_count": 44,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SecurityScanConfig",
      "file_path": "TestMaster\\security\\universal_scanner.py",
      "line_count": 36,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SecurityScanResult",
      "file_path": "TestMaster\\security\\universal_scanner.py",
      "line_count": 69,
      "method_count": 3,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 3,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "UniversalSecurityScanner",
      "file_path": "TestMaster\\security\\universal_scanner.py",
      "line_count": 438,
      "method_count": 23,
      "attribute_count": 5,
      "inheritance_depth": 0,
      "responsibility_score": 28,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "CollaborationMode",
      "file_path": "TestMaster\\streaming\\collaborative_generator.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "GeneratorAgent",
      "file_path": "TestMaster\\streaming\\collaborative_generator.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CollaborativeGenerator",
      "file_path": "TestMaster\\streaming\\collaborative_generator.py",
      "line_count": 42,
      "method_count": 8,
      "attribute_count": 2,
      "inheritance_depth": 0,
      "responsibility_score": 10,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "RefinementStage",
      "file_path": "TestMaster\\streaming\\incremental_enhancer.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "EnhancementPipeline",
      "file_path": "TestMaster\\streaming\\incremental_enhancer.py",
      "line_count": 13,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "EnhancementResult",
      "file_path": "TestMaster\\streaming\\incremental_enhancer.py",
      "line_count": 13,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "RefinementStep",
      "file_path": "TestMaster\\streaming\\incremental_enhancer.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "IncrementalEnhancer",
      "file_path": "TestMaster\\streaming\\incremental_enhancer.py",
      "line_count": 325,
      "method_count": 15,
      "attribute_count": 11,
      "inheritance_depth": 0,
      "responsibility_score": 26,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "FeedbackType",
      "file_path": "TestMaster\\streaming\\live_feedback.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 7,
      "inheritance_depth": 1,
      "responsibility_score": 7,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "LiveFeedback",
      "file_path": "TestMaster\\streaming\\live_feedback.py",
      "line_count": 11,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FeedbackSession",
      "file_path": "TestMaster\\streaming\\live_feedback.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FeedbackSummary",
      "file_path": "TestMaster\\streaming\\live_feedback.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FeedbackCollector",
      "file_path": "TestMaster\\streaming\\live_feedback.py",
      "line_count": 302,
      "method_count": 15,
      "attribute_count": 15,
      "inheritance_depth": 0,
      "responsibility_score": 30,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "GenerationStage",
      "file_path": "TestMaster\\streaming\\stream_generator.py",
      "line_count": 8,
      "method_count": 0,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 6,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "StreamConfig",
      "file_path": "TestMaster\\streaming\\stream_generator.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "StreamChunk",
      "file_path": "TestMaster\\streaming\\stream_generator.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "GenerationProgress",
      "file_path": "TestMaster\\streaming\\stream_generator.py",
      "line_count": 11,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "StreamGenerator",
      "file_path": "TestMaster\\streaming\\stream_generator.py",
      "line_count": 389,
      "method_count": 18,
      "attribute_count": 11,
      "inheritance_depth": 0,
      "responsibility_score": 29,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "StreamEvent",
      "file_path": "TestMaster\\streaming\\stream_monitor.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "StreamMetrics",
      "file_path": "TestMaster\\streaming\\stream_monitor.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "StreamMonitor",
      "file_path": "TestMaster\\streaming\\stream_monitor.py",
      "line_count": 14,
      "method_count": 3,
      "attribute_count": 4,
      "inheritance_depth": 0,
      "responsibility_score": 7,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FlowNode",
      "file_path": "TestMaster\\telemetry\\flow_analyzer.py",
      "line_count": 15,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FlowPath",
      "file_path": "TestMaster\\telemetry\\flow_analyzer.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "FlowAnalysis",
      "file_path": "TestMaster\\telemetry\\flow_analyzer.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ExecutionFlowAnalyzer",
      "file_path": "TestMaster\\telemetry\\flow_analyzer.py",
      "line_count": 402,
      "method_count": 16,
      "attribute_count": 9,
      "inheritance_depth": 0,
      "responsibility_score": 25,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "PerformanceMetric",
      "file_path": "TestMaster\\telemetry\\performance_monitor.py",
      "line_count": 15,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ComponentStats",
      "file_path": "TestMaster\\telemetry\\performance_monitor.py",
      "line_count": 19,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AdvancedPerformanceMonitor",
      "file_path": "TestMaster\\telemetry\\performance_monitor.py",
      "line_count": 334,
      "method_count": 15,
      "attribute_count": 12,
      "inheritance_depth": 0,
      "responsibility_score": 27,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "SystemMetrics",
      "file_path": "TestMaster\\telemetry\\system_profiler.py",
      "line_count": 15,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ProcessMetrics",
      "file_path": "TestMaster\\telemetry\\system_profiler.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ResourceAlert",
      "file_path": "TestMaster\\telemetry\\system_profiler.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SystemProfiler",
      "file_path": "TestMaster\\telemetry\\system_profiler.py",
      "line_count": 381,
      "method_count": 18,
      "attribute_count": 12,
      "inheritance_depth": 0,
      "responsibility_score": 30,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "TelemetryEvent",
      "file_path": "TestMaster\\telemetry\\telemetry_collector.py",
      "line_count": 13,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "SystemInfo",
      "file_path": "TestMaster\\telemetry\\telemetry_collector.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TelemetryCollector",
      "file_path": "TestMaster\\telemetry\\telemetry_collector.py",
      "line_count": 260,
      "method_count": 15,
      "attribute_count": 12,
      "inheritance_depth": 0,
      "responsibility_score": 27,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "TelemetryReport",
      "file_path": "TestMaster\\telemetry\\telemetry_dashboard.py",
      "line_count": 13,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "DashboardConfig",
      "file_path": "TestMaster\\telemetry\\telemetry_dashboard.py",
      "line_count": 11,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TelemetryDashboard",
      "file_path": "TestMaster\\telemetry\\telemetry_dashboard.py",
      "line_count": 407,
      "method_count": 15,
      "attribute_count": 12,
      "inheritance_depth": 0,
      "responsibility_score": 27,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "AlertLevel",
      "file_path": "TestMaster\\ui\\alert_system.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AlertChannel",
      "file_path": "TestMaster\\ui\\alert_system.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AlertCategory",
      "file_path": "TestMaster\\ui\\alert_system.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 7,
      "inheritance_depth": 1,
      "responsibility_score": 7,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "Alert",
      "file_path": "TestMaster\\ui\\alert_system.py",
      "line_count": 21,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AlertRule",
      "file_path": "TestMaster\\ui\\alert_system.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AlertStatistics",
      "file_path": "TestMaster\\ui\\alert_system.py",
      "line_count": 10,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "AlertSystem",
      "file_path": "TestMaster\\ui\\alert_system.py",
      "line_count": 450,
      "method_count": 24,
      "attribute_count": 5,
      "inheritance_depth": 0,
      "responsibility_score": 29,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "DashboardTheme",
      "file_path": "TestMaster\\ui\\dashboard.py",
      "line_count": 5,
      "method_count": 0,
      "attribute_count": 3,
      "inheritance_depth": 1,
      "responsibility_score": 3,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "DashboardConfig",
      "file_path": "TestMaster\\ui\\dashboard.py",
      "line_count": 9,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "DashboardData",
      "file_path": "TestMaster\\ui\\dashboard.py",
      "line_count": 67,
      "method_count": 8,
      "attribute_count": 11,
      "inheritance_depth": 0,
      "responsibility_score": 19,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "WebSocketHandler",
      "file_path": "TestMaster\\ui\\dashboard.py",
      "line_count": 48,
      "method_count": 4,
      "attribute_count": 1,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "DashboardHandler",
      "file_path": "TestMaster\\ui\\dashboard.py",
      "line_count": 385,
      "method_count": 4,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "APIHandler",
      "file_path": "TestMaster\\ui\\dashboard.py",
      "line_count": 6,
      "method_count": 1,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 1,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TestMasterDashboard",
      "file_path": "TestMaster\\ui\\dashboard.py",
      "line_count": 114,
      "method_count": 13,
      "attribute_count": 5,
      "inheritance_depth": 0,
      "responsibility_score": 18,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "MetricType",
      "file_path": "TestMaster\\ui\\metrics_display.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 4,
      "inheritance_depth": 1,
      "responsibility_score": 4,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "ChartType",
      "file_path": "TestMaster\\ui\\metrics_display.py",
      "line_count": 7,
      "method_count": 0,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 5,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "MetricPoint",
      "file_path": "TestMaster\\ui\\metrics_display.py",
      "line_count": 6,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "CoverageMetrics",
      "file_path": "TestMaster\\ui\\metrics_display.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "QualityMetrics",
      "file_path": "TestMaster\\ui\\metrics_display.py",
      "line_count": 12,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "PerformanceMetrics",
      "file_path": "TestMaster\\ui\\metrics_display.py",
      "line_count": 11,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "MetricsDisplay",
      "file_path": "TestMaster\\ui\\metrics_display.py",
      "line_count": 411,
      "method_count": 16,
      "attribute_count": 4,
      "inheritance_depth": 0,
      "responsibility_score": 20,
      "cohesion_estimate": 0.7,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    },
    {
      "name": "CoverageWidget",
      "file_path": "TestMaster\\ui\\metrics_display.py",
      "line_count": 37,
      "method_count": 2,
      "attribute_count": 1,
      "inheritance_depth": 0,
      "responsibility_score": 3,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "QualityWidget",
      "file_path": "TestMaster\\ui\\metrics_display.py",
      "line_count": 37,
      "method_count": 2,
      "attribute_count": 1,
      "inheritance_depth": 0,
      "responsibility_score": 3,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "VerificationResult",
      "file_path": "TestMaster\\verification\\base.py",
      "line_count": 13,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "VerificationConfig",
      "file_path": "TestMaster\\verification\\base.py",
      "line_count": 11,
      "method_count": 0,
      "attribute_count": 0,
      "inheritance_depth": 0,
      "responsibility_score": 0,
      "cohesion_estimate": 0.0,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "RateLimiter",
      "file_path": "TestMaster\\verification\\base.py",
      "line_count": 16,
      "method_count": 2,
      "attribute_count": 4,
      "inheritance_depth": 0,
      "responsibility_score": 6,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "BaseVerifier",
      "file_path": "TestMaster\\verification\\base.py",
      "line_count": 134,
      "method_count": 8,
      "attribute_count": 3,
      "inheritance_depth": 1,
      "responsibility_score": 11,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "LOW"
    },
    {
      "name": "SelfHealingVerifier",
      "file_path": "TestMaster\\verification\\base.py",
      "line_count": 48,
      "method_count": 3,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 3,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "QualityAnalyzer",
      "file_path": "TestMaster\\verification\\base.py",
      "line_count": 55,
      "method_count": 3,
      "attribute_count": 0,
      "inheritance_depth": 1,
      "responsibility_score": 3,
      "cohesion_estimate": 0.5,
      "docstring_present": true,
      "modularization_priority": "MINIMAL"
    },
    {
      "name": "TestQualityAnalyzer",
      "file_path": "TestMaster\\verification\\quality.py",
      "line_count": 286,
      "method_count": 9,
      "attribute_count": 6,
      "inheritance_depth": 1,
      "responsibility_score": 15,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "MEDIUM"
    },
    {
      "name": "SelfHealingTestVerifier",
      "file_path": "TestMaster\\verification\\self_healing.py",
      "line_count": 334,
      "method_count": 10,
      "attribute_count": 5,
      "inheritance_depth": 1,
      "responsibility_score": 15,
      "cohesion_estimate": 0.8,
      "docstring_present": true,
      "modularization_priority": "HIGH"
    }
  ],
  "modularization_recommendations": [
    {
      "original_class": "IntelligenceHub",
      "file_path": ".\\core/intelligence/__init__.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "IntelligenceHubCore",
        "IntelligenceHubData",
        "IntelligenceHubInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 342 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "IntelligenceHub",
      "file_path": ".\\core/intelligence/__init__.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "IntelligenceHubDomain",
        "IntelligenceHubInfrastructure",
        "IntelligenceHubCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 28, indicates multiple responsibilities"
    },
    {
      "original_class": "ConsolidatedTestingHub",
      "file_path": ".\\core/intelligence/testing/__init__.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "ConsolidatedTestingHubDomain",
        "ConsolidatedTestingHubInfrastructure",
        "ConsolidatedTestingHubCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 26, indicates multiple responsibilities"
    },
    {
      "original_class": "ConsolidatedAnalyticsHub",
      "file_path": ".\\core/intelligence/analytics/__init__.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "ConsolidatedAnalyticsHubCore",
        "ConsolidatedAnalyticsHubData",
        "ConsolidatedAnalyticsHubInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 422 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "ConsolidatedAnalyticsHub",
      "file_path": ".\\core/intelligence/analytics/__init__.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "ConsolidatedAnalyticsHubPrimary",
        "ConsolidatedAnalyticsHubUtils",
        "ConsolidatedAnalyticsHubValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 26 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "ConsolidatedAnalyticsHub",
      "file_path": ".\\core/intelligence/analytics/__init__.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "ConsolidatedAnalyticsHubDomain",
        "ConsolidatedAnalyticsHubInfrastructure",
        "ConsolidatedAnalyticsHubCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 42, indicates multiple responsibilities"
    },
    {
      "original_class": "PipelineOrchestrator",
      "file_path": ".\\testmaster_orchestrator.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "PipelineOrchestratorCore",
        "PipelineOrchestratorData",
        "PipelineOrchestratorInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 387 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "TestMasterLayer2",
      "file_path": "TestMaster\\layer2_integration.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "TestMasterLayer2Core",
        "TestMasterLayer2Data",
        "TestMasterLayer2Interface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 304 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "TestMasterLayer2",
      "file_path": "TestMaster\\layer2_integration.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "TestMasterLayer2Domain",
        "TestMasterLayer2Infrastructure",
        "TestMasterLayer2Coordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 31, indicates multiple responsibilities"
    },
    {
      "original_class": "APIAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\api_analysis.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "APIAnalyzerCore",
        "APIAnalyzerData",
        "APIAnalyzerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 638 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "APIAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\api_analysis.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "APIAnalyzerPrimary",
        "APIAnalyzerUtils",
        "APIAnalyzerValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 32 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "APIAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\api_analysis.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "APIAnalyzerDomain",
        "APIAnalyzerInfrastructure",
        "APIAnalyzerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 32, indicates multiple responsibilities"
    },
    {
      "original_class": "APIAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\api_analysis.py",
      "issue_type": "LOW_COHESION",
      "priority": "MEDIUM",
      "recommended_splits": [
        "related_functionality",
        "separate_concerns"
      ],
      "new_class_names": [
        "APIAnalyzerCore",
        "APIAnalyzerSupport"
      ],
      "extracted_responsibilities": [
        "Tightly related operations",
        "Supporting functionality"
      ],
      "rationale": "Class has low cohesion estimate 0.50, suggests mixed responsibilities"
    },
    {
      "original_class": "CloneDetectionAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\clone_detection.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "CloneDetectionAnalyzerCore",
        "CloneDetectionAnalyzerData",
        "CloneDetectionAnalyzerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 311 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "ComplexityAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\complexity_analysis.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "ComplexityAnalyzerCore",
        "ComplexityAnalyzerData",
        "ComplexityAnalyzerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 540 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "ComplexityAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\complexity_analysis.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "ComplexityAnalyzerPrimary",
        "ComplexityAnalyzerUtils",
        "ComplexityAnalyzerValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 23 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "ComplexityAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\complexity_analysis.py",
      "issue_type": "LOW_COHESION",
      "priority": "MEDIUM",
      "recommended_splits": [
        "related_functionality",
        "separate_concerns"
      ],
      "new_class_names": [
        "ComplexityAnalyzerCore",
        "ComplexityAnalyzerSupport"
      ],
      "extracted_responsibilities": [
        "Tightly related operations",
        "Supporting functionality"
      ],
      "rationale": "Class has low cohesion estimate 0.50, suggests mixed responsibilities"
    },
    {
      "original_class": "ConcurrencyAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\concurrency_analysis.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "ConcurrencyAnalyzerCore",
        "ConcurrencyAnalyzerData",
        "ConcurrencyAnalyzerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 1029 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "ConcurrencyAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\concurrency_analysis.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "ConcurrencyAnalyzerPrimary",
        "ConcurrencyAnalyzerUtils",
        "ConcurrencyAnalyzerValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 66 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "ConcurrencyAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\concurrency_analysis.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "ConcurrencyAnalyzerDomain",
        "ConcurrencyAnalyzerInfrastructure",
        "ConcurrencyAnalyzerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 70, indicates multiple responsibilities"
    },
    {
      "original_class": "CryptographicAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\crypto_analysis.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "CryptographicAnalyzerCore",
        "CryptographicAnalyzerData",
        "CryptographicAnalyzerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 641 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "CryptographicAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\crypto_analysis.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "CryptographicAnalyzerPrimary",
        "CryptographicAnalyzerUtils",
        "CryptographicAnalyzerValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 30 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "CryptographicAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\crypto_analysis.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "CryptographicAnalyzerDomain",
        "CryptographicAnalyzerInfrastructure",
        "CryptographicAnalyzerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 30, indicates multiple responsibilities"
    },
    {
      "original_class": "CryptographicAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\crypto_analysis.py",
      "issue_type": "LOW_COHESION",
      "priority": "MEDIUM",
      "recommended_splits": [
        "related_functionality",
        "separate_concerns"
      ],
      "new_class_names": [
        "CryptographicAnalyzerCore",
        "CryptographicAnalyzerSupport"
      ],
      "extracted_responsibilities": [
        "Tightly related operations",
        "Supporting functionality"
      ],
      "rationale": "Class has low cohesion estimate 0.50, suggests mixed responsibilities"
    },
    {
      "original_class": "DatabaseAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\database_analysis.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "DatabaseAnalyzerCore",
        "DatabaseAnalyzerData",
        "DatabaseAnalyzerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 901 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "DatabaseAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\database_analysis.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "DatabaseAnalyzerPrimary",
        "DatabaseAnalyzerUtils",
        "DatabaseAnalyzerValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 56 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "DatabaseAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\database_analysis.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "DatabaseAnalyzerDomain",
        "DatabaseAnalyzerInfrastructure",
        "DatabaseAnalyzerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 58, indicates multiple responsibilities"
    },
    {
      "original_class": "ErrorHandlingAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\error_handling_analysis.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "ErrorHandlingAnalyzerCore",
        "ErrorHandlingAnalyzerData",
        "ErrorHandlingAnalyzerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 962 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "ErrorHandlingAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\error_handling_analysis.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "ErrorHandlingAnalyzerPrimary",
        "ErrorHandlingAnalyzerUtils",
        "ErrorHandlingAnalyzerValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 55 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "ErrorHandlingAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\error_handling_analysis.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "ErrorHandlingAnalyzerDomain",
        "ErrorHandlingAnalyzerInfrastructure",
        "ErrorHandlingAnalyzerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 59, indicates multiple responsibilities"
    },
    {
      "original_class": "EvolutionAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\evolution_analysis.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "EvolutionAnalyzerCore",
        "EvolutionAnalyzerData",
        "EvolutionAnalyzerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 525 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "EvolutionAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\evolution_analysis.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "EvolutionAnalyzerPrimary",
        "EvolutionAnalyzerUtils",
        "EvolutionAnalyzerValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 22 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "LinguisticAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "LinguisticAnalyzerCore",
        "LinguisticAnalyzerData",
        "LinguisticAnalyzerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 667 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "LinguisticAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "LinguisticAnalyzerPrimary",
        "LinguisticAnalyzerUtils",
        "LinguisticAnalyzerValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 23 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "LinguisticAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\linguistic_analysis.py",
      "issue_type": "LOW_COHESION",
      "priority": "MEDIUM",
      "recommended_splits": [
        "related_functionality",
        "separate_concerns"
      ],
      "new_class_names": [
        "LinguisticAnalyzerCore",
        "LinguisticAnalyzerSupport"
      ],
      "extracted_responsibilities": [
        "Tightly related operations",
        "Supporting functionality"
      ],
      "rationale": "Class has low cohesion estimate 0.50, suggests mixed responsibilities"
    },
    {
      "original_class": "ComprehensiveCodebaseAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\main_analyzer.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "ComprehensiveCodebaseAnalyzerCore",
        "ComprehensiveCodebaseAnalyzerData",
        "ComprehensiveCodebaseAnalyzerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 401 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "MemoryAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\memory_analysis.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "MemoryAnalyzerCore",
        "MemoryAnalyzerData",
        "MemoryAnalyzerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 878 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "MemoryAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\memory_analysis.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "MemoryAnalyzerPrimary",
        "MemoryAnalyzerUtils",
        "MemoryAnalyzerValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 44 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "MemoryAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\memory_analysis.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "MemoryAnalyzerDomain",
        "MemoryAnalyzerInfrastructure",
        "MemoryAnalyzerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 46, indicates multiple responsibilities"
    },
    {
      "original_class": "PerformanceAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\performance_analysis.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "PerformanceAnalyzerCore",
        "PerformanceAnalyzerData",
        "PerformanceAnalyzerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 956 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "PerformanceAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\performance_analysis.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "PerformanceAnalyzerPrimary",
        "PerformanceAnalyzerUtils",
        "PerformanceAnalyzerValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 42 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "PerformanceAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\performance_analysis.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "PerformanceAnalyzerDomain",
        "PerformanceAnalyzerInfrastructure",
        "PerformanceAnalyzerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 42, indicates multiple responsibilities"
    },
    {
      "original_class": "PerformanceAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\performance_analysis.py",
      "issue_type": "LOW_COHESION",
      "priority": "MEDIUM",
      "recommended_splits": [
        "related_functionality",
        "separate_concerns"
      ],
      "new_class_names": [
        "PerformanceAnalyzerCore",
        "PerformanceAnalyzerSupport"
      ],
      "extracted_responsibilities": [
        "Tightly related operations",
        "Supporting functionality"
      ],
      "rationale": "Class has low cohesion estimate 0.50, suggests mixed responsibilities"
    },
    {
      "original_class": "QualityAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\quality_analysis.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "QualityAnalyzerCore",
        "QualityAnalyzerData",
        "QualityAnalyzerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 599 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "QualityAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\quality_analysis.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "QualityAnalyzerPrimary",
        "QualityAnalyzerUtils",
        "QualityAnalyzerValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 32 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "QualityAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\quality_analysis.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "QualityAnalyzerDomain",
        "QualityAnalyzerInfrastructure",
        "QualityAnalyzerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 32, indicates multiple responsibilities"
    },
    {
      "original_class": "QualityAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\quality_analysis.py",
      "issue_type": "LOW_COHESION",
      "priority": "MEDIUM",
      "recommended_splits": [
        "related_functionality",
        "separate_concerns"
      ],
      "new_class_names": [
        "QualityAnalyzerCore",
        "QualityAnalyzerSupport"
      ],
      "extracted_responsibilities": [
        "Tightly related operations",
        "Supporting functionality"
      ],
      "rationale": "Class has low cohesion estimate 0.50, suggests mixed responsibilities"
    },
    {
      "original_class": "ResourceIOAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\resource_io_analysis.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "ResourceIOAnalyzerCore",
        "ResourceIOAnalyzerData",
        "ResourceIOAnalyzerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 994 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "ResourceIOAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\resource_io_analysis.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "ResourceIOAnalyzerPrimary",
        "ResourceIOAnalyzerUtils",
        "ResourceIOAnalyzerValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 35 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "ResourceIOAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\resource_io_analysis.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "ResourceIOAnalyzerDomain",
        "ResourceIOAnalyzerInfrastructure",
        "ResourceIOAnalyzerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 35, indicates multiple responsibilities"
    },
    {
      "original_class": "ResourceIOAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\resource_io_analysis.py",
      "issue_type": "LOW_COHESION",
      "priority": "MEDIUM",
      "recommended_splits": [
        "related_functionality",
        "separate_concerns"
      ],
      "new_class_names": [
        "ResourceIOAnalyzerCore",
        "ResourceIOAnalyzerSupport"
      ],
      "extracted_responsibilities": [
        "Tightly related operations",
        "Supporting functionality"
      ],
      "rationale": "Class has low cohesion estimate 0.50, suggests mixed responsibilities"
    },
    {
      "original_class": "SecurityAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\security_analysis.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "SecurityAnalyzerCore",
        "SecurityAnalyzerData",
        "SecurityAnalyzerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 725 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "SecurityAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\security_analysis.py",
      "issue_type": "LOW_COHESION",
      "priority": "MEDIUM",
      "recommended_splits": [
        "related_functionality",
        "separate_concerns"
      ],
      "new_class_names": [
        "SecurityAnalyzerCore",
        "SecurityAnalyzerSupport"
      ],
      "extracted_responsibilities": [
        "Tightly related operations",
        "Supporting functionality"
      ],
      "rationale": "Class has low cohesion estimate 0.50, suggests mixed responsibilities"
    },
    {
      "original_class": "StatisticalAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\statistical_analysis.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "StatisticalAnalyzerCore",
        "StatisticalAnalyzerData",
        "StatisticalAnalyzerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 634 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "StatisticalAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\statistical_analysis.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "StatisticalAnalyzerPrimary",
        "StatisticalAnalyzerUtils",
        "StatisticalAnalyzerValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 29 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "StatisticalAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\statistical_analysis.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "StatisticalAnalyzerDomain",
        "StatisticalAnalyzerInfrastructure",
        "StatisticalAnalyzerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 29, indicates multiple responsibilities"
    },
    {
      "original_class": "StatisticalAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\statistical_analysis.py",
      "issue_type": "LOW_COHESION",
      "priority": "MEDIUM",
      "recommended_splits": [
        "related_functionality",
        "separate_concerns"
      ],
      "new_class_names": [
        "StatisticalAnalyzerCore",
        "StatisticalAnalyzerSupport"
      ],
      "extracted_responsibilities": [
        "Tightly related operations",
        "Supporting functionality"
      ],
      "rationale": "Class has low cohesion estimate 0.50, suggests mixed responsibilities"
    },
    {
      "original_class": "StructuralAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\structural_analysis.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "StructuralAnalyzerCore",
        "StructuralAnalyzerData",
        "StructuralAnalyzerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 587 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "StructuralAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\structural_analysis.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "StructuralAnalyzerPrimary",
        "StructuralAnalyzerUtils",
        "StructuralAnalyzerValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 27 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "StructuralAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\structural_analysis.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "StructuralAnalyzerDomain",
        "StructuralAnalyzerInfrastructure",
        "StructuralAnalyzerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 27, indicates multiple responsibilities"
    },
    {
      "original_class": "StructuralAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\structural_analysis.py",
      "issue_type": "LOW_COHESION",
      "priority": "MEDIUM",
      "recommended_splits": [
        "related_functionality",
        "separate_concerns"
      ],
      "new_class_names": [
        "StructuralAnalyzerCore",
        "StructuralAnalyzerSupport"
      ],
      "extracted_responsibilities": [
        "Tightly related operations",
        "Supporting functionality"
      ],
      "rationale": "Class has low cohesion estimate 0.50, suggests mixed responsibilities"
    },
    {
      "original_class": "SupplyChainSecurityAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\supply_chain_security.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "SupplyChainSecurityAnalyzerCore",
        "SupplyChainSecurityAnalyzerData",
        "SupplyChainSecurityAnalyzerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 594 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "SupplyChainSecurityAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\supply_chain_security.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "SupplyChainSecurityAnalyzerPrimary",
        "SupplyChainSecurityAnalyzerUtils",
        "SupplyChainSecurityAnalyzerValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 30 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "SupplyChainSecurityAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\supply_chain_security.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "SupplyChainSecurityAnalyzerDomain",
        "SupplyChainSecurityAnalyzerInfrastructure",
        "SupplyChainSecurityAnalyzerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 33, indicates multiple responsibilities"
    },
    {
      "original_class": "TestingAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\testing_analysis.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "TestingAnalyzerCore",
        "TestingAnalyzerData",
        "TestingAnalyzerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 1009 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "TestingAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\testing_analysis.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "TestingAnalyzerPrimary",
        "TestingAnalyzerUtils",
        "TestingAnalyzerValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 44 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "TestingAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\testing_analysis.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "TestingAnalyzerDomain",
        "TestingAnalyzerInfrastructure",
        "TestingAnalyzerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 44, indicates multiple responsibilities"
    },
    {
      "original_class": "TestingAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\testing_analysis.py",
      "issue_type": "LOW_COHESION",
      "priority": "MEDIUM",
      "recommended_splits": [
        "related_functionality",
        "separate_concerns"
      ],
      "new_class_names": [
        "TestingAnalyzerCore",
        "TestingAnalyzerSupport"
      ],
      "extracted_responsibilities": [
        "Tightly related operations",
        "Supporting functionality"
      ],
      "rationale": "Class has low cohesion estimate 0.50, suggests mixed responsibilities"
    },
    {
      "original_class": "AsyncExecutor",
      "file_path": "TestMaster\\async_processing\\async_executor.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "AsyncExecutorCore",
        "AsyncExecutorData",
        "AsyncExecutorInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 355 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "AsyncExecutor",
      "file_path": "TestMaster\\async_processing\\async_executor.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "AsyncExecutorDomain",
        "AsyncExecutorInfrastructure",
        "AsyncExecutorCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 28, indicates multiple responsibilities"
    },
    {
      "original_class": "AsyncMonitor",
      "file_path": "TestMaster\\async_processing\\async_monitor.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "AsyncMonitorCore",
        "AsyncMonitorData",
        "AsyncMonitorInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 420 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "AsyncMonitor",
      "file_path": "TestMaster\\async_processing\\async_monitor.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "AsyncMonitorDomain",
        "AsyncMonitorInfrastructure",
        "AsyncMonitorCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 33, indicates multiple responsibilities"
    },
    {
      "original_class": "ConcurrentScheduler",
      "file_path": "TestMaster\\async_processing\\concurrent_scheduler.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "ConcurrentSchedulerCore",
        "ConcurrentSchedulerData",
        "ConcurrentSchedulerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 377 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "ConcurrentScheduler",
      "file_path": "TestMaster\\async_processing\\concurrent_scheduler.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "ConcurrentSchedulerDomain",
        "ConcurrentSchedulerInfrastructure",
        "ConcurrentSchedulerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 29, indicates multiple responsibilities"
    },
    {
      "original_class": "ThreadPoolManager",
      "file_path": "TestMaster\\async_processing\\thread_pool_manager.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "ThreadPoolManagerCore",
        "ThreadPoolManagerData",
        "ThreadPoolManagerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 398 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "FailureDetector",
      "file_path": "TestMaster\\breaking\\failure_detector.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "FailureDetectorCore",
        "FailureDetectorData",
        "FailureDetectorInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 327 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "ClaudeMessenger",
      "file_path": "TestMaster\\communication\\claude_messenger.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "ClaudeMessengerCore",
        "ClaudeMessengerData",
        "ClaudeMessengerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 403 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "ClaudeMessenger",
      "file_path": "TestMaster\\communication\\claude_messenger.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "ClaudeMessengerPrimary",
        "ClaudeMessengerUtils",
        "ClaudeMessengerValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 23 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "ClaudeMessenger",
      "file_path": "TestMaster\\communication\\claude_messenger.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "ClaudeMessengerDomain",
        "ClaudeMessengerInfrastructure",
        "ClaudeMessengerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 32, indicates multiple responsibilities"
    },
    {
      "original_class": "DynamicHandoffSystem",
      "file_path": "TestMaster\\communication\\dynamic_handoff.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "DynamicHandoffSystemDomain",
        "DynamicHandoffSystemInfrastructure",
        "DynamicHandoffSystemCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 26, indicates multiple responsibilities"
    },
    {
      "original_class": "MessageQueue",
      "file_path": "TestMaster\\communication\\message_queue.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "MessageQueueCore",
        "MessageQueueData",
        "MessageQueueInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 416 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "MessageQueue",
      "file_path": "TestMaster\\communication\\message_queue.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "MessageQueueDomain",
        "MessageQueueInfrastructure",
        "MessageQueueCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 27, indicates multiple responsibilities"
    },
    {
      "original_class": "IntelligentConverter",
      "file_path": "TestMaster\\converters\\intelligent.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "IntelligentConverterCore",
        "IntelligentConverterData",
        "IntelligentConverterInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 345 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "ConfigurationIntelligenceAgent",
      "file_path": "TestMaster\\core\\config.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "ConfigurationIntelligenceAgentCore",
        "ConfigurationIntelligenceAgentData",
        "ConfigurationIntelligenceAgentInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 408 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "ContextManager",
      "file_path": "TestMaster\\core\\context_manager.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "ContextManagerCore",
        "ContextManagerData",
        "ContextManagerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 330 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "ContextManager",
      "file_path": "TestMaster\\core\\context_manager.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "ContextManagerDomain",
        "ContextManagerInfrastructure",
        "ContextManagerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 31, indicates multiple responsibilities"
    },
    {
      "original_class": "LayerManager",
      "file_path": "TestMaster\\core\\layer_manager.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "LayerManagerCore",
        "LayerManagerData",
        "LayerManagerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 415 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "LayerManager",
      "file_path": "TestMaster\\core\\layer_manager.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "LayerManagerPrimary",
        "LayerManagerUtils",
        "LayerManagerValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 24 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "LayerManager",
      "file_path": "TestMaster\\core\\layer_manager.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "LayerManagerDomain",
        "LayerManagerInfrastructure",
        "LayerManagerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 30, indicates multiple responsibilities"
    },
    {
      "original_class": "TrackingManager",
      "file_path": "TestMaster\\core\\tracking_manager.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "TrackingManagerCore",
        "TrackingManagerData",
        "TrackingManagerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 449 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "WorkflowGraph",
      "file_path": "TestMaster\\core\\workflow_graph.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "WorkflowGraphCore",
        "WorkflowGraphData",
        "WorkflowGraphInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 348 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "UniversalLanguageDetector",
      "file_path": "TestMaster\\core\\language_detection\\universal_detector.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "UniversalLanguageDetectorCore",
        "UniversalLanguageDetectorData",
        "UniversalLanguageDetectorInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 554 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "UniversalLanguageDetector",
      "file_path": "TestMaster\\core\\language_detection\\universal_detector.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "UniversalLanguageDetectorPrimary",
        "UniversalLanguageDetectorUtils",
        "UniversalLanguageDetectorValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 29 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "UniversalLanguageDetector",
      "file_path": "TestMaster\\core\\language_detection\\universal_detector.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "UniversalLanguageDetectorDomain",
        "UniversalLanguageDetectorInfrastructure",
        "UniversalLanguageDetectorCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 35, indicates multiple responsibilities"
    },
    {
      "original_class": "BaseGenerator",
      "file_path": "TestMaster\\generators\\base.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "BaseGeneratorCore",
        "BaseGeneratorData",
        "BaseGeneratorInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 338 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "IntelligentTestGenerator",
      "file_path": "TestMaster\\generators\\intelligent.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "IntelligentTestGeneratorCore",
        "IntelligentTestGeneratorData",
        "IntelligentTestGeneratorInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 346 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "FinalIntegrationTest",
      "file_path": "TestMaster\\integration\\final_integration_test.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "FinalIntegrationTestCore",
        "FinalIntegrationTestData",
        "FinalIntegrationTestInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 1366 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "FinalIntegrationTest",
      "file_path": "TestMaster\\integration\\final_integration_test.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "FinalIntegrationTestPrimary",
        "FinalIntegrationTestUtils",
        "FinalIntegrationTestValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 33 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "FinalIntegrationTest",
      "file_path": "TestMaster\\integration\\final_integration_test.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "FinalIntegrationTestDomain",
        "FinalIntegrationTestInfrastructure",
        "FinalIntegrationTestCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 48, indicates multiple responsibilities"
    },
    {
      "original_class": "SessionManager",
      "file_path": "TestMaster\\intelligence\\bridges\\session_tracking_bridge.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "SessionManagerCore",
        "SessionManagerData",
        "SessionManagerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 427 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "SessionTrackingBridge",
      "file_path": "TestMaster\\intelligence\\bridges\\session_tracking_bridge.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "SessionTrackingBridgeCore",
        "SessionTrackingBridgeData",
        "SessionTrackingBridgeInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 311 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "SOPWorkflowBridge",
      "file_path": "TestMaster\\intelligence\\bridges\\sop_workflow_bridge.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "SOPWorkflowBridgeCore",
        "SOPWorkflowBridgeData",
        "SOPWorkflowBridgeInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 336 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "AnalysisContextBuilder",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\context_builder.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "AnalysisContextBuilderCore",
        "AnalysisContextBuilderData",
        "AnalysisContextBuilderInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 460 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "AnalysisContextBuilder",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\context_builder.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "AnalysisContextBuilderPrimary",
        "AnalysisContextBuilderUtils",
        "AnalysisContextBuilderValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 43 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "AnalysisContextBuilder",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\context_builder.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "AnalysisContextBuilderDomain",
        "AnalysisContextBuilderInfrastructure",
        "AnalysisContextBuilderCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 45, indicates multiple responsibilities"
    },
    {
      "original_class": "DocumentationEngine",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\doc_generator.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "DocumentationEngineCore",
        "DocumentationEngineData",
        "DocumentationEngineInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 391 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "DocumentationQualityAssessor",
      "file_path": "TestMaster\\intelligence\\documentation\\core\\quality_assessor.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "DocumentationQualityAssessorCore",
        "DocumentationQualityAssessorData",
        "DocumentationQualityAssessorInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 478 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "ApiDocumentationGenerator",
      "file_path": "TestMaster\\intelligence\\documentation\\generators\\api_doc_generator.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "ApiDocumentationGeneratorCore",
        "ApiDocumentationGeneratorData",
        "ApiDocumentationGeneratorInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 433 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "ArchitectureDocumentationGenerator",
      "file_path": "TestMaster\\intelligence\\documentation\\generators\\architecture_doc_generator.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "ArchitectureDocumentationGeneratorCore",
        "ArchitectureDocumentationGeneratorData",
        "ArchitectureDocumentationGeneratorInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 536 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "DocstringGenerator",
      "file_path": "TestMaster\\intelligence\\documentation\\generators\\docstring_generator.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "DocstringGeneratorCore",
        "DocstringGeneratorData",
        "DocstringGeneratorInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 393 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "ReadmeGenerator",
      "file_path": "TestMaster\\intelligence\\documentation\\generators\\readme_generator.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "ReadmeGeneratorCore",
        "ReadmeGeneratorData",
        "ReadmeGeneratorInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 465 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "TutorialGenerator",
      "file_path": "TestMaster\\intelligence\\documentation\\generators\\tutorial_generator.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "TutorialGeneratorCore",
        "TutorialGeneratorData",
        "TutorialGeneratorInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 682 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "CICDDocumentationIntegration",
      "file_path": "TestMaster\\intelligence\\documentation\\integrations\\ci_cd_integration.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "CICDDocumentationIntegrationCore",
        "CICDDocumentationIntegrationData",
        "CICDDocumentationIntegrationInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 385 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "GitCommitEnhancer",
      "file_path": "TestMaster\\intelligence\\documentation\\integrations\\git_integration.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "GitCommitEnhancerCore",
        "GitCommitEnhancerData",
        "GitCommitEnhancerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 378 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "CompletenessChecker",
      "file_path": "TestMaster\\intelligence\\documentation\\quality\\completeness_checker.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "CompletenessCheckerCore",
        "CompletenessCheckerData",
        "CompletenessCheckerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 456 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "DocstringTemplateManager",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\docstring_templates.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "DocstringTemplateManagerCore",
        "DocstringTemplateManagerData",
        "DocstringTemplateManagerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 665 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "DocstringTemplateManager",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\docstring_templates.py",
      "issue_type": "LOW_COHESION",
      "priority": "MEDIUM",
      "recommended_splits": [
        "related_functionality",
        "separate_concerns"
      ],
      "new_class_names": [
        "DocstringTemplateManagerCore",
        "DocstringTemplateManagerSupport"
      ],
      "extracted_responsibilities": [
        "Tightly related operations",
        "Supporting functionality"
      ],
      "rationale": "Class has low cohesion estimate 0.50, suggests mixed responsibilities"
    },
    {
      "original_class": "RestTemplateProvider",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\api\\rest_templates.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "RestTemplateProviderCore",
        "RestTemplateProviderData",
        "RestTemplateProviderInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 465 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "RestTemplateProvider",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\api\\rest_templates.py",
      "issue_type": "LOW_COHESION",
      "priority": "MEDIUM",
      "recommended_splits": [
        "related_functionality",
        "separate_concerns"
      ],
      "new_class_names": [
        "RestTemplateProviderCore",
        "RestTemplateProviderSupport"
      ],
      "extracted_responsibilities": [
        "Tightly related operations",
        "Supporting functionality"
      ],
      "rationale": "Class has low cohesion estimate 0.50, suggests mixed responsibilities"
    },
    {
      "original_class": "WebsocketTemplateProvider",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\api\\websocket_templates.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "WebsocketTemplateProviderCore",
        "WebsocketTemplateProviderData",
        "WebsocketTemplateProviderInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 405 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "WebsocketTemplateProvider",
      "file_path": "TestMaster\\intelligence\\documentation\\templates\\api\\websocket_templates.py",
      "issue_type": "LOW_COHESION",
      "priority": "MEDIUM",
      "recommended_splits": [
        "related_functionality",
        "separate_concerns"
      ],
      "new_class_names": [
        "WebsocketTemplateProviderCore",
        "WebsocketTemplateProviderSupport"
      ],
      "extracted_responsibilities": [
        "Tightly related operations",
        "Supporting functionality"
      ],
      "rationale": "Class has low cohesion estimate 0.50, suggests mixed responsibilities"
    },
    {
      "original_class": "DocumentationIntelligenceAgent",
      "file_path": "TestMaster\\intelligence\\integration\\agents\\documentation_agent.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "DocumentationIntelligenceAgentCore",
        "DocumentationIntelligenceAgentData",
        "DocumentationIntelligenceAgentInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 427 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "AnalysisCoordinator",
      "file_path": "TestMaster\\intelligence\\integration\\coordination\\analysis_coordinator.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "AnalysisCoordinatorCore",
        "AnalysisCoordinatorData",
        "AnalysisCoordinatorInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 415 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "FeatureFlagsManager",
      "file_path": "TestMaster\\intelligence\\integration\\features\\feature_flags.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "FeatureFlagsManagerCore",
        "FeatureFlagsManagerData",
        "FeatureFlagsManagerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 352 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "LayerManager",
      "file_path": "TestMaster\\intelligence\\integration\\layers\\layer_manager.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "LayerManagerCore",
        "LayerManagerData",
        "LayerManagerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 403 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "UnifiedAnalysisStorage",
      "file_path": "TestMaster\\intelligence\\integration\\storage\\unified_storage.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "UnifiedAnalysisStorageCore",
        "UnifiedAnalysisStorageData",
        "UnifiedAnalysisStorageInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 469 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "AdaptiveResourceBridge",
      "file_path": "TestMaster\\intelligence\\monitoring\\adaptive_resource_bridge.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "AdaptiveResourceBridgeCore",
        "AdaptiveResourceBridgeData",
        "AdaptiveResourceBridgeInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 386 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "AdaptiveResourceBridge",
      "file_path": "TestMaster\\intelligence\\monitoring\\adaptive_resource_bridge.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "AdaptiveResourceBridgeDomain",
        "AdaptiveResourceBridgeInfrastructure",
        "AdaptiveResourceBridgeCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 28, indicates multiple responsibilities"
    },
    {
      "original_class": "AdaptiveResourceManagementAgent",
      "file_path": "TestMaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "AdaptiveResourceManagementAgentCore",
        "AdaptiveResourceManagementAgentData",
        "AdaptiveResourceManagementAgentInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 391 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "AdaptiveResourceManagementAgent",
      "file_path": "TestMaster\\intelligence\\monitoring\\adaptive_resource_management_agent.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "AdaptiveResourceManagementAgentDomain",
        "AdaptiveResourceManagementAgentInfrastructure",
        "AdaptiveResourceManagementAgentCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 33, indicates multiple responsibilities"
    },
    {
      "original_class": "MultiObjectiveOptimizer",
      "file_path": "TestMaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "MultiObjectiveOptimizerCore",
        "MultiObjectiveOptimizerData",
        "MultiObjectiveOptimizerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 404 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "MultiObjectiveOptimizer",
      "file_path": "TestMaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "MultiObjectiveOptimizerPrimary",
        "MultiObjectiveOptimizerUtils",
        "MultiObjectiveOptimizerValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 26 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "MultiObjectiveOptimizer",
      "file_path": "TestMaster\\intelligence\\optimization\\multi_objective_optimization_agent.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "MultiObjectiveOptimizerDomain",
        "MultiObjectiveOptimizerInfrastructure",
        "MultiObjectiveOptimizerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 34, indicates multiple responsibilities"
    },
    {
      "original_class": "MultiObjectiveOptimizer",
      "file_path": "TestMaster\\intelligence\\optimization\\multi_objective_optimizer.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "MultiObjectiveOptimizerPrimary",
        "MultiObjectiveOptimizerUtils",
        "MultiObjectiveOptimizerValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 22 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "MultiObjectiveOptimizer",
      "file_path": "TestMaster\\intelligence\\optimization\\multi_objective_optimizer.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "MultiObjectiveOptimizerDomain",
        "MultiObjectiveOptimizerInfrastructure",
        "MultiObjectiveOptimizerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 29, indicates multiple responsibilities"
    },
    {
      "original_class": "DependencyTracker",
      "file_path": "TestMaster\\mapping\\dependency_tracker.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "DependencyTrackerCore",
        "DependencyTrackerData",
        "DependencyTrackerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 301 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "FileWatcher",
      "file_path": "TestMaster\\monitoring\\file_watcher.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "FileWatcherDomain",
        "FileWatcherInfrastructure",
        "FileWatcherCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 27, indicates multiple responsibilities"
    },
    {
      "original_class": "IdleDetector",
      "file_path": "TestMaster\\monitoring\\idle_detector.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "IdleDetectorCore",
        "IdleDetectorData",
        "IdleDetectorInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 311 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "UniversalFrameworkAdapter",
      "file_path": "TestMaster\\orchestration\\framework_adapter.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "UniversalFrameworkAdapterCore",
        "UniversalFrameworkAdapterData",
        "UniversalFrameworkAdapterInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 317 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "CodebaseAgnosticOutputSystem",
      "file_path": "TestMaster\\orchestration\\output_system.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "CodebaseAgnosticOutputSystemCore",
        "CodebaseAgnosticOutputSystemData",
        "CodebaseAgnosticOutputSystemInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 477 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "CodebaseAgnosticOutputSystem",
      "file_path": "TestMaster\\orchestration\\output_system.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "CodebaseAgnosticOutputSystemPrimary",
        "CodebaseAgnosticOutputSystemUtils",
        "CodebaseAgnosticOutputSystemValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 26 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "CodebaseAgnosticOutputSystem",
      "file_path": "TestMaster\\orchestration\\output_system.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "CodebaseAgnosticOutputSystemDomain",
        "CodebaseAgnosticOutputSystemInfrastructure",
        "CodebaseAgnosticOutputSystemCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 28, indicates multiple responsibilities"
    },
    {
      "original_class": "FileTagger",
      "file_path": "TestMaster\\orchestrator\\file_tagger.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "FileTaggerCore",
        "FileTaggerData",
        "FileTaggerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 664 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "FileTagger",
      "file_path": "TestMaster\\orchestrator\\file_tagger.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "FileTaggerPrimary",
        "FileTaggerUtils",
        "FileTaggerValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 29 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "FileTagger",
      "file_path": "TestMaster\\orchestrator\\file_tagger.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "FileTaggerDomain",
        "FileTaggerInfrastructure",
        "FileTaggerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 31, indicates multiple responsibilities"
    },
    {
      "original_class": "HandoffManager",
      "file_path": "TestMaster\\orchestrator\\handoff_manager.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "HandoffManagerCore",
        "HandoffManagerData",
        "HandoffManagerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 701 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "HandoffManager",
      "file_path": "TestMaster\\orchestrator\\handoff_manager.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "HandoffManagerPrimary",
        "HandoffManagerUtils",
        "HandoffManagerValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 25 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "HandoffManager",
      "file_path": "TestMaster\\orchestrator\\handoff_manager.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "HandoffManagerDomain",
        "HandoffManagerInfrastructure",
        "HandoffManagerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 34, indicates multiple responsibilities"
    },
    {
      "original_class": "AutoInvestigator",
      "file_path": "TestMaster\\orchestrator\\investigator.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "AutoInvestigatorCore",
        "AutoInvestigatorData",
        "AutoInvestigatorInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 759 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "WorkDistributor",
      "file_path": "TestMaster\\orchestrator\\work_distributor.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "WorkDistributorCore",
        "WorkDistributorData",
        "WorkDistributorInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 469 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "CoverageIntelligence",
      "file_path": "TestMaster\\overview\\coverage_intelligence.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "CoverageIntelligenceCore",
        "CoverageIntelligenceData",
        "CoverageIntelligenceInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 641 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "CoverageIntelligence",
      "file_path": "TestMaster\\overview\\coverage_intelligence.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "CoverageIntelligencePrimary",
        "CoverageIntelligenceUtils",
        "CoverageIntelligenceValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 30 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "CoverageIntelligence",
      "file_path": "TestMaster\\overview\\coverage_intelligence.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "CoverageIntelligenceDomain",
        "CoverageIntelligenceInfrastructure",
        "CoverageIntelligenceCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 34, indicates multiple responsibilities"
    },
    {
      "original_class": "PerformanceDashboard",
      "file_path": "TestMaster\\overview\\performance_dashboard.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "PerformanceDashboardCore",
        "PerformanceDashboardData",
        "PerformanceDashboardInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 460 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "RegressionTracker",
      "file_path": "TestMaster\\overview\\regression_tracker.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "RegressionTrackerCore",
        "RegressionTrackerData",
        "RegressionTrackerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 837 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "RegressionTracker",
      "file_path": "TestMaster\\overview\\regression_tracker.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "RegressionTrackerPrimary",
        "RegressionTrackerUtils",
        "RegressionTrackerValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 37 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "RegressionTracker",
      "file_path": "TestMaster\\overview\\regression_tracker.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "RegressionTrackerDomain",
        "RegressionTrackerInfrastructure",
        "RegressionTrackerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 41, indicates multiple responsibilities"
    },
    {
      "original_class": "StructureMapper",
      "file_path": "TestMaster\\overview\\structure_mapper.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "StructureMapperCore",
        "StructureMapperData",
        "StructureMapperInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 658 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "StructureMapper",
      "file_path": "TestMaster\\overview\\structure_mapper.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "StructureMapperPrimary",
        "StructureMapperUtils",
        "StructureMapperValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 27 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "StructureMapper",
      "file_path": "TestMaster\\overview\\structure_mapper.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "StructureMapperDomain",
        "StructureMapperInfrastructure",
        "StructureMapperCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 31, indicates multiple responsibilities"
    },
    {
      "original_class": "HierarchicalRefactoringAnalyzer",
      "file_path": "TestMaster\\refactoring\\hierarchical_analyzer.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "HierarchicalRefactoringAnalyzerCore",
        "HierarchicalRefactoringAnalyzerData",
        "HierarchicalRefactoringAnalyzerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 673 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "HierarchicalRefactoringAnalyzer",
      "file_path": "TestMaster\\refactoring\\hierarchical_analyzer.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "HierarchicalRefactoringAnalyzerPrimary",
        "HierarchicalRefactoringAnalyzerUtils",
        "HierarchicalRefactoringAnalyzerValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 33 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "HierarchicalRefactoringAnalyzer",
      "file_path": "TestMaster\\refactoring\\hierarchical_analyzer.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "HierarchicalRefactoringAnalyzerDomain",
        "HierarchicalRefactoringAnalyzerInfrastructure",
        "HierarchicalRefactoringAnalyzerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 39, indicates multiple responsibilities"
    },
    {
      "original_class": "ReportGenerator",
      "file_path": "TestMaster\\reporting\\report_generator.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "ReportGeneratorCore",
        "ReportGeneratorData",
        "ReportGeneratorInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 606 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "ReportGenerator",
      "file_path": "TestMaster\\reporting\\report_generator.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "ReportGeneratorPrimary",
        "ReportGeneratorUtils",
        "ReportGeneratorValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 40 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "ReportGenerator",
      "file_path": "TestMaster\\reporting\\report_generator.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "ReportGeneratorDomain",
        "ReportGeneratorInfrastructure",
        "ReportGeneratorCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 50, indicates multiple responsibilities"
    },
    {
      "original_class": "ComplianceFramework",
      "file_path": "TestMaster\\security\\compliance_framework.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "ComplianceFrameworkCore",
        "ComplianceFrameworkData",
        "ComplianceFrameworkInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 322 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "ComplianceFramework",
      "file_path": "TestMaster\\security\\compliance_framework.py",
      "issue_type": "LOW_COHESION",
      "priority": "MEDIUM",
      "recommended_splits": [
        "related_functionality",
        "separate_concerns"
      ],
      "new_class_names": [
        "ComplianceFrameworkCore",
        "ComplianceFrameworkSupport"
      ],
      "extracted_responsibilities": [
        "Tightly related operations",
        "Supporting functionality"
      ],
      "rationale": "Class has low cohesion estimate 0.50, suggests mixed responsibilities"
    },
    {
      "original_class": "SecurityTestGenerator",
      "file_path": "TestMaster\\security\\security_test_generator.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "SecurityTestGeneratorCore",
        "SecurityTestGeneratorData",
        "SecurityTestGeneratorInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 479 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "SecurityTestGenerator",
      "file_path": "TestMaster\\security\\security_test_generator.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "SecurityTestGeneratorPrimary",
        "SecurityTestGeneratorUtils",
        "SecurityTestGeneratorValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 26 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "SecurityTestGenerator",
      "file_path": "TestMaster\\security\\security_test_generator.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "SecurityTestGeneratorDomain",
        "SecurityTestGeneratorInfrastructure",
        "SecurityTestGeneratorCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 30, indicates multiple responsibilities"
    },
    {
      "original_class": "UniversalSecurityScanner",
      "file_path": "TestMaster\\security\\universal_scanner.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "UniversalSecurityScannerCore",
        "UniversalSecurityScannerData",
        "UniversalSecurityScannerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 438 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "UniversalSecurityScanner",
      "file_path": "TestMaster\\security\\universal_scanner.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "UniversalSecurityScannerPrimary",
        "UniversalSecurityScannerUtils",
        "UniversalSecurityScannerValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 23 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "UniversalSecurityScanner",
      "file_path": "TestMaster\\security\\universal_scanner.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "UniversalSecurityScannerDomain",
        "UniversalSecurityScannerInfrastructure",
        "UniversalSecurityScannerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 28, indicates multiple responsibilities"
    },
    {
      "original_class": "IncrementalEnhancer",
      "file_path": "TestMaster\\streaming\\incremental_enhancer.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "IncrementalEnhancerCore",
        "IncrementalEnhancerData",
        "IncrementalEnhancerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 325 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "IncrementalEnhancer",
      "file_path": "TestMaster\\streaming\\incremental_enhancer.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "IncrementalEnhancerDomain",
        "IncrementalEnhancerInfrastructure",
        "IncrementalEnhancerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 26, indicates multiple responsibilities"
    },
    {
      "original_class": "FeedbackCollector",
      "file_path": "TestMaster\\streaming\\live_feedback.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "FeedbackCollectorCore",
        "FeedbackCollectorData",
        "FeedbackCollectorInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 302 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "FeedbackCollector",
      "file_path": "TestMaster\\streaming\\live_feedback.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "FeedbackCollectorDomain",
        "FeedbackCollectorInfrastructure",
        "FeedbackCollectorCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 30, indicates multiple responsibilities"
    },
    {
      "original_class": "StreamGenerator",
      "file_path": "TestMaster\\streaming\\stream_generator.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "StreamGeneratorCore",
        "StreamGeneratorData",
        "StreamGeneratorInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 389 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "StreamGenerator",
      "file_path": "TestMaster\\streaming\\stream_generator.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "StreamGeneratorDomain",
        "StreamGeneratorInfrastructure",
        "StreamGeneratorCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 29, indicates multiple responsibilities"
    },
    {
      "original_class": "ExecutionFlowAnalyzer",
      "file_path": "TestMaster\\telemetry\\flow_analyzer.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "ExecutionFlowAnalyzerCore",
        "ExecutionFlowAnalyzerData",
        "ExecutionFlowAnalyzerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 402 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "AdvancedPerformanceMonitor",
      "file_path": "TestMaster\\telemetry\\performance_monitor.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "AdvancedPerformanceMonitorCore",
        "AdvancedPerformanceMonitorData",
        "AdvancedPerformanceMonitorInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 334 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "AdvancedPerformanceMonitor",
      "file_path": "TestMaster\\telemetry\\performance_monitor.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "AdvancedPerformanceMonitorDomain",
        "AdvancedPerformanceMonitorInfrastructure",
        "AdvancedPerformanceMonitorCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 27, indicates multiple responsibilities"
    },
    {
      "original_class": "SystemProfiler",
      "file_path": "TestMaster\\telemetry\\system_profiler.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "SystemProfilerCore",
        "SystemProfilerData",
        "SystemProfilerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 381 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "SystemProfiler",
      "file_path": "TestMaster\\telemetry\\system_profiler.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "SystemProfilerDomain",
        "SystemProfilerInfrastructure",
        "SystemProfilerCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 30, indicates multiple responsibilities"
    },
    {
      "original_class": "TelemetryCollector",
      "file_path": "TestMaster\\telemetry\\telemetry_collector.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "TelemetryCollectorDomain",
        "TelemetryCollectorInfrastructure",
        "TelemetryCollectorCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 27, indicates multiple responsibilities"
    },
    {
      "original_class": "TelemetryDashboard",
      "file_path": "TestMaster\\telemetry\\telemetry_dashboard.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "TelemetryDashboardCore",
        "TelemetryDashboardData",
        "TelemetryDashboardInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 407 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "TelemetryDashboard",
      "file_path": "TestMaster\\telemetry\\telemetry_dashboard.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "TelemetryDashboardDomain",
        "TelemetryDashboardInfrastructure",
        "TelemetryDashboardCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 27, indicates multiple responsibilities"
    },
    {
      "original_class": "AlertSystem",
      "file_path": "TestMaster\\ui\\alert_system.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "AlertSystemCore",
        "AlertSystemData",
        "AlertSystemInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 450 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "AlertSystem",
      "file_path": "TestMaster\\ui\\alert_system.py",
      "issue_type": "TOO_MANY_METHODS",
      "priority": "HIGH",
      "recommended_splits": [
        "primary_methods",
        "utility_methods",
        "validation_methods"
      ],
      "new_class_names": [
        "AlertSystemPrimary",
        "AlertSystemUtils",
        "AlertSystemValidator"
      ],
      "extracted_responsibilities": [
        "Core operations",
        "Helper functions",
        "Input validation"
      ],
      "rationale": "Class has 24 methods, exceeds 20 method guideline"
    },
    {
      "original_class": "AlertSystem",
      "file_path": "TestMaster\\ui\\alert_system.py",
      "issue_type": "MULTIPLE_RESPONSIBILITIES",
      "priority": "HIGH",
      "recommended_splits": [
        "domain_logic",
        "infrastructure",
        "coordination"
      ],
      "new_class_names": [
        "AlertSystemDomain",
        "AlertSystemInfrastructure",
        "AlertSystemCoordinator"
      ],
      "extracted_responsibilities": [
        "Business domain logic",
        "Infrastructure concerns",
        "Component coordination"
      ],
      "rationale": "Class has responsibility score 29, indicates multiple responsibilities"
    },
    {
      "original_class": "DashboardHandler",
      "file_path": "TestMaster\\ui\\dashboard.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "DashboardHandlerCore",
        "DashboardHandlerData",
        "DashboardHandlerInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 385 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "DashboardHandler",
      "file_path": "TestMaster\\ui\\dashboard.py",
      "issue_type": "LOW_COHESION",
      "priority": "MEDIUM",
      "recommended_splits": [
        "related_functionality",
        "separate_concerns"
      ],
      "new_class_names": [
        "DashboardHandlerCore",
        "DashboardHandlerSupport"
      ],
      "extracted_responsibilities": [
        "Tightly related operations",
        "Supporting functionality"
      ],
      "rationale": "Class has low cohesion estimate 0.50, suggests mixed responsibilities"
    },
    {
      "original_class": "MetricsDisplay",
      "file_path": "TestMaster\\ui\\metrics_display.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "MetricsDisplayCore",
        "MetricsDisplayData",
        "MetricsDisplayInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 411 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "SelfHealingTestVerifier",
      "file_path": "TestMaster\\verification\\self_healing.py",
      "issue_type": "OVERSIZED_CLASS",
      "priority": "HIGH",
      "recommended_splits": [
        "core_functionality",
        "data_management",
        "interface_methods"
      ],
      "new_class_names": [
        "SelfHealingTestVerifierCore",
        "SelfHealingTestVerifierData",
        "SelfHealingTestVerifierInterface"
      ],
      "extracted_responsibilities": [
        "Business logic",
        "Data operations",
        "External interfaces"
      ],
      "rationale": "Class has 334 lines, exceeds 300-line guideline"
    },
    {
      "original_class": "GraphAnalyzer",
      "file_path": "TestMaster\\analysis\\comprehensive_analysis\\graph_analysis.py",
      "issue_type": "LOW_COHESION",
      "priority": "LOW",
      "recommended_splits": [
        "related_functionality",
        "separate_concerns"
      ],
      "new_class_names": [
        "GraphAnalyzerCore",
        "GraphAnalyzerSupport"
      ],
      "extracted_responsibilities": [
        "Tightly related operations",
        "Supporting functionality"
      ],
      "rationale": "Class has low cohesion estimate 0.50, suggests mixed responsibilities"
    },
    {
      "original_class": "PythonASTParser",
      "file_path": "TestMaster\\core\\ast_abstraction\\language_parsers.py",
      "issue_type": "LOW_COHESION",
      "priority": "LOW",
      "recommended_splits": [
        "related_functionality",
        "separate_concerns"
      ],
      "new_class_names": [
        "PythonASTParserCore",
        "PythonASTParserSupport"
      ],
      "extracted_responsibilities": [
        "Tightly related operations",
        "Supporting functionality"
      ],
      "rationale": "Class has low cohesion estimate 0.50, suggests mixed responsibilities"
    },
    {
      "original_class": "JavaScriptASTParser",
      "file_path": "TestMaster\\core\\ast_abstraction\\language_parsers.py",
      "issue_type": "LOW_COHESION",
      "priority": "LOW",
      "recommended_splits": [
        "related_functionality",
        "separate_concerns"
      ],
      "new_class_names": [
        "JavaScriptASTParserCore",
        "JavaScriptASTParserSupport"
      ],
      "extracted_responsibilities": [
        "Tightly related operations",
        "Supporting functionality"
      ],
      "rationale": "Class has low cohesion estimate 0.50, suggests mixed responsibilities"
    },
    {
      "original_class": "SemanticAnalyzer",
      "file_path": "TestMaster\\core\\ast_abstraction\\universal_ast.py",
      "issue_type": "LOW_COHESION",
      "priority": "LOW",
      "recommended_splits": [
        "related_functionality",
        "separate_concerns"
      ],
      "new_class_names": [
        "SemanticAnalyzerCore",
        "SemanticAnalyzerSupport"
      ],
      "extracted_responsibilities": [
        "Tightly related operations",
        "Supporting functionality"
      ],
      "rationale": "Class has low cohesion estimate 0.50, suggests mixed responsibilities"
    }
  ],
  "summary": {
    "total_classes_analyzed": 708,
    "modularization_priorities": {
      "high_priority": 98,
      "medium_priority": 38,
      "low_priority": 42,
      "minimal_priority": 530
    },
    "average_metrics": {
      "average_line_count": 100.28,
      "average_method_count": 4.45,
      "average_cohesion": 0.3
    },
    "recommendations_generated": 199,
    "modularization_readiness": "READY"
  }
}