{
  "discovery_timestamp": "2025-08-20",
  "total_groups": 5,
  "duplicate_groups": {
    "performance_monitoring": {
      "files": [
        "core/observability/agent_ops.py",
        "monitoring/enhanced_monitor.py"
      ],
      "features": [
        {
          "file_path": "core\\observability\\agent_ops.py",
          "line_number": 24,
          "feature_type": "class",
          "feature_name": "TestSession",
          "signature": "class TestSession",
          "context": "Group: performance_monitoring, Methods: ['duration']"
        },
        {
          "file_path": "core\\observability\\agent_ops.py",
          "line_number": 46,
          "feature_type": "class",
          "feature_name": "AgentAction",
          "signature": "class AgentAction",
          "context": "Group: performance_monitoring, Methods: []"
        },
        {
          "file_path": "core\\observability\\agent_ops.py",
          "line_number": 60,
          "feature_type": "class",
          "feature_name": "LLMCall",
          "signature": "class LLMCall",
          "context": "Group: performance_monitoring, Methods: []"
        },
        {
          "file_path": "core\\observability\\agent_ops.py",
          "line_number": 75,
          "feature_type": "class",
          "feature_name": "CostTracker",
          "signature": "class CostTracker",
          "context": "Group: performance_monitoring, Methods: ['__init__', 'calculate_cost', 'track_llm_call', 'get_session_costs']"
        },
        {
          "file_path": "core\\observability\\agent_ops.py",
          "line_number": 147,
          "feature_type": "class",
          "feature_name": "TestMasterObservability",
          "signature": "class TestMasterObservability",
          "context": "Group: performance_monitoring, Methods: ['__init__', 'start_test_session', 'end_test_session', 'track_agent_action', 'complete_agent_action', 'track_llm_call', 'generate_session_replay', '_generate_session_timeline', '_calculate_session_performance', '_generate_session_analytics', '_calculate_efficiency_score', 'get_observability_status']"
        },
        {
          "file_path": "core\\observability\\agent_ops.py",
          "line_number": 493,
          "feature_type": "function",
          "feature_name": "track_test_execution",
          "signature": "def track_test_execution(session_name, observability_system)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "core\\observability\\agent_ops.py",
          "line_number": 39,
          "feature_type": "function",
          "feature_name": "duration",
          "signature": "def duration(self)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "core\\observability\\agent_ops.py",
          "line_number": 78,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "core\\observability\\agent_ops.py",
          "line_number": 102,
          "feature_type": "function",
          "feature_name": "calculate_cost",
          "signature": "def calculate_cost(self, model, input_tokens, output_tokens)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "core\\observability\\agent_ops.py",
          "line_number": 111,
          "feature_type": "function",
          "feature_name": "track_llm_call",
          "signature": "def track_llm_call(self, session_id, llm_call)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "core\\observability\\agent_ops.py",
          "line_number": 138,
          "feature_type": "function",
          "feature_name": "get_session_costs",
          "signature": "def get_session_costs(self, session_id)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "core\\observability\\agent_ops.py",
          "line_number": 153,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "core\\observability\\agent_ops.py",
          "line_number": 178,
          "feature_type": "function",
          "feature_name": "start_test_session",
          "signature": "def start_test_session(self, session_name, metadata, tags)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "core\\observability\\agent_ops.py",
          "line_number": 203,
          "feature_type": "function",
          "feature_name": "end_test_session",
          "signature": "def end_test_session(self, session_id, status)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "core\\observability\\agent_ops.py",
          "line_number": 236,
          "feature_type": "function",
          "feature_name": "track_agent_action",
          "signature": "def track_agent_action(self, session_id, agent_name, action_type, parameters)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "core\\observability\\agent_ops.py",
          "line_number": 269,
          "feature_type": "function",
          "feature_name": "complete_agent_action",
          "signature": "def complete_agent_action(self, action_id, result, error, llm_calls)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "core\\observability\\agent_ops.py",
          "line_number": 294,
          "feature_type": "function",
          "feature_name": "track_llm_call",
          "signature": "def track_llm_call(self, session_id, model, provider, prompt_tokens, completion_tokens, latency, success, error, metadata)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "core\\observability\\agent_ops.py",
          "line_number": 351,
          "feature_type": "function",
          "feature_name": "generate_session_replay",
          "signature": "def generate_session_replay(self, session_id)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "core\\observability\\agent_ops.py",
          "line_number": 384,
          "feature_type": "function",
          "feature_name": "_generate_session_timeline",
          "signature": "def _generate_session_timeline(self, session, actions, llm_calls)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "core\\observability\\agent_ops.py",
          "line_number": 429,
          "feature_type": "function",
          "feature_name": "_calculate_session_performance",
          "signature": "def _calculate_session_performance(self, session)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "core\\observability\\agent_ops.py",
          "line_number": 451,
          "feature_type": "function",
          "feature_name": "_generate_session_analytics",
          "signature": "def _generate_session_analytics(self, session)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "core\\observability\\agent_ops.py",
          "line_number": 461,
          "feature_type": "function",
          "feature_name": "_calculate_efficiency_score",
          "signature": "def _calculate_efficiency_score(self, session)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "core\\observability\\agent_ops.py",
          "line_number": 479,
          "feature_type": "function",
          "feature_name": "get_observability_status",
          "signature": "def get_observability_status(self)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "core\\observability\\agent_ops.py",
          "line_number": 501,
          "feature_type": "function",
          "feature_name": "decorator",
          "signature": "def decorator(func)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "core\\observability\\agent_ops.py",
          "line_number": 503,
          "feature_type": "function",
          "feature_name": "wrapper",
          "signature": "def wrapper()",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 26,
          "feature_type": "class",
          "feature_name": "MonitoringMode",
          "signature": "class MonitoringMode",
          "context": "Group: performance_monitoring, Methods: []"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 33,
          "feature_type": "class",
          "feature_name": "AlertLevel",
          "signature": "class AlertLevel",
          "context": "Group: performance_monitoring, Methods: []"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 41,
          "feature_type": "class",
          "feature_name": "MonitoringEvent",
          "signature": "class MonitoringEvent",
          "context": "Group: performance_monitoring, Methods: []"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 53,
          "feature_type": "class",
          "feature_name": "MonitoringAgent",
          "signature": "class MonitoringAgent",
          "context": "Group: performance_monitoring, Methods: ['__init__']"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 84,
          "feature_type": "class",
          "feature_name": "ConversationalMonitor",
          "signature": "class ConversationalMonitor",
          "context": "Group: performance_monitoring, Methods: ['__init__', 'add_agent', '_get_system_status', '_get_help_message']"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 217,
          "feature_type": "class",
          "feature_name": "MultiModalAnalyzer",
          "signature": "class MultiModalAnalyzer",
          "context": "Group: performance_monitoring, Methods: ['__init__', '_calculate_dict_depth']"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 412,
          "feature_type": "class",
          "feature_name": "EnhancedTestMonitor",
          "signature": "class EnhancedTestMonitor",
          "context": "Group: performance_monitoring, Methods: ['__init__', 'add_monitoring_agent', 'get_monitoring_status']"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 56,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self, name, capabilities)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 90,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 97,
          "feature_type": "function",
          "feature_name": "add_agent",
          "signature": "def add_agent(self, agent)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 181,
          "feature_type": "function",
          "feature_name": "_get_system_status",
          "signature": "def _get_system_status(self)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 192,
          "feature_type": "function",
          "feature_name": "_get_help_message",
          "signature": "def _get_help_message(self)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 223,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 399,
          "feature_type": "function",
          "feature_name": "_calculate_dict_depth",
          "signature": "def _calculate_dict_depth(self, d, current_depth)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 418,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self, mode)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 461,
          "feature_type": "function",
          "feature_name": "add_monitoring_agent",
          "signature": "def add_monitoring_agent(self, agent)",
          "context": "Group: performance_monitoring"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 603,
          "feature_type": "function",
          "feature_name": "get_monitoring_status",
          "signature": "def get_monitoring_status(self)",
          "context": "Group: performance_monitoring"
        }
      ],
      "duplicate_count": 2
    },
    "agent_orchestration": {
      "files": [
        "core/orchestration/agent_graph.py",
        "deployment/swarm_orchestrator.py",
        "dashboard/api/swarm_orchestration.py"
      ],
      "features": [
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 22,
          "feature_type": "class",
          "feature_name": "AgentStatus",
          "signature": "class AgentStatus",
          "context": "Group: agent_orchestration, Methods: []"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 31,
          "feature_type": "class",
          "feature_name": "OrchestrationMode",
          "signature": "class OrchestrationMode",
          "context": "Group: agent_orchestration, Methods: []"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 39,
          "feature_type": "class",
          "feature_name": "TestAgent",
          "signature": "class TestAgent",
          "context": "Group: agent_orchestration, Methods: ['__post_init__']"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 64,
          "feature_type": "class",
          "feature_name": "OrchestrationTask",
          "signature": "class OrchestrationTask",
          "context": "Group: agent_orchestration, Methods: []"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 80,
          "feature_type": "class",
          "feature_name": "TestOrchestrationEngine",
          "signature": "class TestOrchestrationEngine",
          "context": "Group: agent_orchestration, Methods: ['__init__', 'register_agent', 'create_test_crew', 'create_orchestration_task', '_create_task_from_config', '_update_agent_metrics', '_update_session_metrics', 'get_orchestration_status', '_calculate_system_health', 'cleanup_completed_sessions']"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 51,
          "feature_type": "function",
          "feature_name": "__post_init__",
          "signature": "def __post_init__(self)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 86,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self, monitor)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 110,
          "feature_type": "function",
          "feature_name": "register_agent",
          "signature": "def register_agent(self, agent)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 119,
          "feature_type": "function",
          "feature_name": "create_test_crew",
          "signature": "def create_test_crew(self, crew_type)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 185,
          "feature_type": "function",
          "feature_name": "create_orchestration_task",
          "signature": "def create_orchestration_task(self, name, agent_id, function, parameters, dependencies, timeout)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 371,
          "feature_type": "function",
          "feature_name": "_create_task_from_config",
          "signature": "def _create_task_from_config(self, task_config)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 377,
          "feature_type": "function",
          "feature_name": "_update_agent_metrics",
          "signature": "def _update_agent_metrics(self, agent, execution_time, success)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 397,
          "feature_type": "function",
          "feature_name": "_update_session_metrics",
          "signature": "def _update_session_metrics(self, session_id, execution_time)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 418,
          "feature_type": "function",
          "feature_name": "get_orchestration_status",
          "signature": "def get_orchestration_status(self)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 436,
          "feature_type": "function",
          "feature_name": "_calculate_system_health",
          "signature": "def _calculate_system_health(self)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 457,
          "feature_type": "function",
          "feature_name": "cleanup_completed_sessions",
          "signature": "def cleanup_completed_sessions(self, max_age_hours)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "deployment\\swarm_orchestrator.py",
          "line_number": 26,
          "feature_type": "class",
          "feature_name": "SwarmTaskStatus",
          "signature": "class SwarmTaskStatus",
          "context": "Group: agent_orchestration, Methods: []"
        },
        {
          "file_path": "deployment\\swarm_orchestrator.py",
          "line_number": 37,
          "feature_type": "class",
          "feature_name": "SwarmAgentState",
          "signature": "class SwarmAgentState",
          "context": "Group: agent_orchestration, Methods: []"
        },
        {
          "file_path": "deployment\\swarm_orchestrator.py",
          "line_number": 47,
          "feature_type": "class",
          "feature_name": "SwarmTask",
          "signature": "class SwarmTask",
          "context": "Group: agent_orchestration, Methods: ['is_ready', 'is_timeout']"
        },
        {
          "file_path": "deployment\\swarm_orchestrator.py",
          "line_number": 78,
          "feature_type": "class",
          "feature_name": "SwarmAgent",
          "signature": "class SwarmAgent",
          "context": "Group: agent_orchestration, Methods: ['can_accept_task', 'update_performance']"
        },
        {
          "file_path": "deployment\\swarm_orchestrator.py",
          "line_number": 130,
          "feature_type": "class",
          "feature_name": "SwarmConfig",
          "signature": "class SwarmConfig",
          "context": "Group: agent_orchestration, Methods: []"
        },
        {
          "file_path": "deployment\\swarm_orchestrator.py",
          "line_number": 146,
          "feature_type": "class",
          "feature_name": "SwarmOrchestrator",
          "signature": "class SwarmOrchestrator",
          "context": "Group: agent_orchestration, Methods: ['__init__', 'add_agent', 'remove_agent', 'submit_task', 'submit_batch', '_select_agent', '_update_collective_knowledge', 'get_swarm_status', 'get_agent_details', 'get_task_details']"
        },
        {
          "file_path": "deployment\\swarm_orchestrator.py",
          "line_number": 66,
          "feature_type": "function",
          "feature_name": "is_ready",
          "signature": "def is_ready(self, completed_tasks)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "deployment\\swarm_orchestrator.py",
          "line_number": 70,
          "feature_type": "function",
          "feature_name": "is_timeout",
          "signature": "def is_timeout(self)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "deployment\\swarm_orchestrator.py",
          "line_number": 93,
          "feature_type": "function",
          "feature_name": "can_accept_task",
          "signature": "def can_accept_task(self, task)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "deployment\\swarm_orchestrator.py",
          "line_number": 108,
          "feature_type": "function",
          "feature_name": "update_performance",
          "signature": "def update_performance(self, success, execution_time)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "deployment\\swarm_orchestrator.py",
          "line_number": 160,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self, config)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "deployment\\swarm_orchestrator.py",
          "line_number": 187,
          "feature_type": "function",
          "feature_name": "add_agent",
          "signature": "def add_agent(self, agent)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "deployment\\swarm_orchestrator.py",
          "line_number": 195,
          "feature_type": "function",
          "feature_name": "remove_agent",
          "signature": "def remove_agent(self, agent_id)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "deployment\\swarm_orchestrator.py",
          "line_number": 216,
          "feature_type": "function",
          "feature_name": "submit_task",
          "signature": "def submit_task(self, task)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "deployment\\swarm_orchestrator.py",
          "line_number": 235,
          "feature_type": "function",
          "feature_name": "submit_batch",
          "signature": "def submit_batch(self, tasks)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "deployment\\swarm_orchestrator.py",
          "line_number": 267,
          "feature_type": "function",
          "feature_name": "_select_agent",
          "signature": "def _select_agent(self, task)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "deployment\\swarm_orchestrator.py",
          "line_number": 403,
          "feature_type": "function",
          "feature_name": "_update_collective_knowledge",
          "signature": "def _update_collective_knowledge(self, task, result)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "deployment\\swarm_orchestrator.py",
          "line_number": 630,
          "feature_type": "function",
          "feature_name": "get_swarm_status",
          "signature": "def get_swarm_status(self)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "deployment\\swarm_orchestrator.py",
          "line_number": 667,
          "feature_type": "function",
          "feature_name": "get_agent_details",
          "signature": "def get_agent_details(self, agent_id)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "deployment\\swarm_orchestrator.py",
          "line_number": 689,
          "feature_type": "function",
          "feature_name": "get_task_details",
          "signature": "def get_task_details(self, task_id)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 46,
          "feature_type": "class",
          "feature_name": "SwarmArchitecture",
          "signature": "class SwarmArchitecture",
          "context": "Group: agent_orchestration, Methods: []"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 59,
          "feature_type": "class",
          "feature_name": "TaskPriority",
          "signature": "class TaskPriority",
          "context": "Group: agent_orchestration, Methods: []"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 67,
          "feature_type": "class",
          "feature_name": "SwarmAgent",
          "signature": "class SwarmAgent",
          "context": "Group: agent_orchestration, Methods: []"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 81,
          "feature_type": "class",
          "feature_name": "SwarmTask",
          "signature": "class SwarmTask",
          "context": "Group: agent_orchestration, Methods: []"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 93,
          "feature_type": "class",
          "feature_name": "UniversalSwarmOrchestrator",
          "signature": "class UniversalSwarmOrchestrator",
          "context": "Group: agent_orchestration, Methods: ['__init__', '_initialize_swarm_agents', 'create_swarm', 'execute_swarm_task', '_execute_sequential_workflow', '_execute_concurrent_workflow', '_execute_hierarchical_swarm', '_execute_mixture_of_agents', '_execute_majority_voting', '_execute_deep_research_swarm', '_execute_adaptive_swarm', '_execute_agent_step', '_generate_security_output', '_generate_test_output', '_generate_quality_output', '_generate_consensus_output', '_aggregate_concurrent_outputs', '_aggregate_expert_mixture', '_calculate_majority_vote', '_consolidate_research_findings', '_synthesize_research', '_analyze_task_for_architecture', '_update_performance_metrics', 'get_swarm_status']"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 836,
          "feature_type": "function",
          "feature_name": "list_swarms",
          "signature": "def list_swarms()",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 864,
          "feature_type": "function",
          "feature_name": "create_swarm",
          "signature": "def create_swarm()",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 897,
          "feature_type": "function",
          "feature_name": "execute_swarm_task",
          "signature": "def execute_swarm_task(swarm_id)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 917,
          "feature_type": "function",
          "feature_name": "get_swarm_status",
          "signature": "def get_swarm_status(swarm_id)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 932,
          "feature_type": "function",
          "feature_name": "list_architectures",
          "signature": "def list_architectures()",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 974,
          "feature_type": "function",
          "feature_name": "list_swarm_agents",
          "signature": "def list_swarm_agents()",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 1002,
          "feature_type": "function",
          "feature_name": "get_swarm_analytics",
          "signature": "def get_swarm_analytics()",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 99,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 115,
          "feature_type": "function",
          "feature_name": "_initialize_swarm_agents",
          "signature": "def _initialize_swarm_agents(self)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 238,
          "feature_type": "function",
          "feature_name": "create_swarm",
          "signature": "def create_swarm(self, config)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 285,
          "feature_type": "function",
          "feature_name": "execute_swarm_task",
          "signature": "def execute_swarm_task(self, swarm_id, task)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 358,
          "feature_type": "function",
          "feature_name": "_execute_sequential_workflow",
          "signature": "def _execute_sequential_workflow(self, swarm, task)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 392,
          "feature_type": "function",
          "feature_name": "_execute_concurrent_workflow",
          "signature": "def _execute_concurrent_workflow(self, swarm, task)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 437,
          "feature_type": "function",
          "feature_name": "_execute_hierarchical_swarm",
          "signature": "def _execute_hierarchical_swarm(self, swarm, task)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 492,
          "feature_type": "function",
          "feature_name": "_execute_mixture_of_agents",
          "signature": "def _execute_mixture_of_agents(self, swarm, task)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 519,
          "feature_type": "function",
          "feature_name": "_execute_majority_voting",
          "signature": "def _execute_majority_voting(self, swarm, task)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 546,
          "feature_type": "function",
          "feature_name": "_execute_deep_research_swarm",
          "signature": "def _execute_deep_research_swarm(self, swarm, task)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 601,
          "feature_type": "function",
          "feature_name": "_execute_adaptive_swarm",
          "signature": "def _execute_adaptive_swarm(self, swarm, task)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 633,
          "feature_type": "function",
          "feature_name": "_execute_agent_step",
          "signature": "def _execute_agent_step(self, agent, input_text, task, step_type)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 667,
          "feature_type": "function",
          "feature_name": "_generate_security_output",
          "signature": "def _generate_security_output(self, input_text, task, step_type)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 676,
          "feature_type": "function",
          "feature_name": "_generate_test_output",
          "signature": "def _generate_test_output(self, input_text, task, step_type)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 685,
          "feature_type": "function",
          "feature_name": "_generate_quality_output",
          "signature": "def _generate_quality_output(self, input_text, task, step_type)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 694,
          "feature_type": "function",
          "feature_name": "_generate_consensus_output",
          "signature": "def _generate_consensus_output(self, input_text, task, step_type)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 704,
          "feature_type": "function",
          "feature_name": "_aggregate_concurrent_outputs",
          "signature": "def _aggregate_concurrent_outputs(self, results, task)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 716,
          "feature_type": "function",
          "feature_name": "_aggregate_expert_mixture",
          "signature": "def _aggregate_expert_mixture(self, expert_outputs, task)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 728,
          "feature_type": "function",
          "feature_name": "_calculate_majority_vote",
          "signature": "def _calculate_majority_vote(self, votes, task)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 742,
          "feature_type": "function",
          "feature_name": "_consolidate_research_findings",
          "signature": "def _consolidate_research_findings(self, initial_research)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 750,
          "feature_type": "function",
          "feature_name": "_synthesize_research",
          "signature": "def _synthesize_research(self, initial_research, deep_analysis, task)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 760,
          "feature_type": "function",
          "feature_name": "_analyze_task_for_architecture",
          "signature": "def _analyze_task_for_architecture(self, task)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 784,
          "feature_type": "function",
          "feature_name": "_update_performance_metrics",
          "signature": "def _update_performance_metrics(self, swarm_id, execution_time, success)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 805,
          "feature_type": "function",
          "feature_name": "get_swarm_status",
          "signature": "def get_swarm_status(self, swarm_id)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 32,
          "feature_type": "function",
          "feature_name": "enhanced_api_endpoint",
          "signature": "def enhanced_api_endpoint()",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 36,
          "feature_type": "function",
          "feature_name": "handle_api_error",
          "signature": "def handle_api_error(func)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 38,
          "feature_type": "function",
          "feature_name": "get_real_data_extractor",
          "signature": "def get_real_data_extractor()",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 33,
          "feature_type": "function",
          "feature_name": "decorator",
          "signature": "def decorator(func)",
          "context": "Group: agent_orchestration"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 29,
          "feature_type": "api_endpoint",
          "feature_name": "from core.error_handler import enhanced_api_endpoi...",
          "signature": "from core.error_handler import enhanced_api_endpoint, handle_api_error",
          "context": "Group: agent_orchestration, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 32,
          "feature_type": "api_endpoint",
          "feature_name": "def enhanced_api_endpoint(*args, **kwargs):",
          "signature": "def enhanced_api_endpoint(*args, **kwargs):",
          "context": "Group: agent_orchestration, API endpoint"
        }
      ],
      "duplicate_count": 3
    },
    "dashboard_widgets": {
      "files": [
        "ui_ux/interactive_dashboard.py",
        "dashboard/src/components/",
        "monitoring/enhanced_monitor.py"
      ],
      "features": [
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 24,
          "feature_type": "class",
          "feature_name": "WidgetType",
          "signature": "class WidgetType",
          "context": "Group: dashboard_widgets, Methods: []"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 36,
          "feature_type": "class",
          "feature_name": "ChartType",
          "signature": "class ChartType",
          "context": "Group: dashboard_widgets, Methods: []"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 49,
          "feature_type": "class",
          "feature_name": "DashboardWidget",
          "signature": "class DashboardWidget",
          "context": "Group: dashboard_widgets, Methods: ['update_data', 'get_age_seconds']"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 74,
          "feature_type": "class",
          "feature_name": "RealtimeChart",
          "signature": "class RealtimeChart",
          "context": "Group: dashboard_widgets, Methods: ['add_point', 'get_chart_data']"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 108,
          "feature_type": "class",
          "feature_name": "MetricsPanel",
          "signature": "class MetricsPanel",
          "context": "Group: dashboard_widgets, Methods: ['update_metric', 'get_metric_status']"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 163,
          "feature_type": "class",
          "feature_name": "ControlPanel",
          "signature": "class ControlPanel",
          "context": "Group: dashboard_widgets, Methods: ['add_control', 'trigger_control', 'get_control_state']"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 213,
          "feature_type": "class",
          "feature_name": "InteractiveDashboard",
          "signature": "class InteractiveDashboard",
          "context": "Group: dashboard_widgets, Methods: ['__init__', '_create_default_widgets', 'add_widget', 'remove_widget', 'update_widget_position', 'update_widget_size', 'add_data_source', 'add_alert', 'acknowledge_alert', 'get_active_alerts', 'set_theme', 'export_layout', 'import_layout', 'get_dashboard_data', 'get_widget_data', 'get_dashboard_status']"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 63,
          "feature_type": "function",
          "feature_name": "update_data",
          "signature": "def update_data(self, new_data)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 68,
          "feature_type": "function",
          "feature_name": "get_age_seconds",
          "signature": "def get_age_seconds(self)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 82,
          "feature_type": "function",
          "feature_name": "add_point",
          "signature": "def add_point(self, value, series_name, timestamp)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 96,
          "feature_type": "function",
          "feature_name": "get_chart_data",
          "signature": "def get_chart_data(self)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 114,
          "feature_type": "function",
          "feature_name": "update_metric",
          "signature": "def update_metric(self, name, value, unit)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 155,
          "feature_type": "function",
          "feature_name": "get_metric_status",
          "signature": "def get_metric_status(self, name)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 169,
          "feature_type": "function",
          "feature_name": "add_control",
          "signature": "def add_control(self, name, control_type, config, callback)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 187,
          "feature_type": "function",
          "feature_name": "trigger_control",
          "signature": "def trigger_control(self, control_id, value)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 208,
          "feature_type": "function",
          "feature_name": "get_control_state",
          "signature": "def get_control_state(self, control_id)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 227,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self, name)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 242,
          "feature_type": "function",
          "feature_name": "_create_default_widgets",
          "signature": "def _create_default_widgets(self)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 275,
          "feature_type": "function",
          "feature_name": "add_widget",
          "signature": "def add_widget(self, widget)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 283,
          "feature_type": "function",
          "feature_name": "remove_widget",
          "signature": "def remove_widget(self, widget_id)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 291,
          "feature_type": "function",
          "feature_name": "update_widget_position",
          "signature": "def update_widget_position(self, widget_id, position)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 300,
          "feature_type": "function",
          "feature_name": "update_widget_size",
          "signature": "def update_widget_size(self, widget_id, size)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 309,
          "feature_type": "function",
          "feature_name": "add_data_source",
          "signature": "def add_data_source(self, name, source)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 326,
          "feature_type": "function",
          "feature_name": "add_alert",
          "signature": "def add_alert(self, level, message, source)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 347,
          "feature_type": "function",
          "feature_name": "acknowledge_alert",
          "signature": "def acknowledge_alert(self, alert_id)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 355,
          "feature_type": "function",
          "feature_name": "get_active_alerts",
          "signature": "def get_active_alerts(self)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 359,
          "feature_type": "function",
          "feature_name": "set_theme",
          "signature": "def set_theme(self, theme)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 364,
          "feature_type": "function",
          "feature_name": "export_layout",
          "signature": "def export_layout(self)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 385,
          "feature_type": "function",
          "feature_name": "import_layout",
          "signature": "def import_layout(self, layout_data)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 438,
          "feature_type": "function",
          "feature_name": "get_dashboard_data",
          "signature": "def get_dashboard_data(self)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 464,
          "feature_type": "function",
          "feature_name": "get_widget_data",
          "signature": "def get_widget_data(self, widget_id)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "ui_ux\\interactive_dashboard.py",
          "line_number": 491,
          "feature_type": "function",
          "feature_name": "get_dashboard_status",
          "signature": "def get_dashboard_status(self)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 26,
          "feature_type": "class",
          "feature_name": "MonitoringMode",
          "signature": "class MonitoringMode",
          "context": "Group: dashboard_widgets, Methods: []"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 33,
          "feature_type": "class",
          "feature_name": "AlertLevel",
          "signature": "class AlertLevel",
          "context": "Group: dashboard_widgets, Methods: []"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 41,
          "feature_type": "class",
          "feature_name": "MonitoringEvent",
          "signature": "class MonitoringEvent",
          "context": "Group: dashboard_widgets, Methods: []"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 53,
          "feature_type": "class",
          "feature_name": "MonitoringAgent",
          "signature": "class MonitoringAgent",
          "context": "Group: dashboard_widgets, Methods: ['__init__']"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 84,
          "feature_type": "class",
          "feature_name": "ConversationalMonitor",
          "signature": "class ConversationalMonitor",
          "context": "Group: dashboard_widgets, Methods: ['__init__', 'add_agent', '_get_system_status', '_get_help_message']"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 217,
          "feature_type": "class",
          "feature_name": "MultiModalAnalyzer",
          "signature": "class MultiModalAnalyzer",
          "context": "Group: dashboard_widgets, Methods: ['__init__', '_calculate_dict_depth']"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 412,
          "feature_type": "class",
          "feature_name": "EnhancedTestMonitor",
          "signature": "class EnhancedTestMonitor",
          "context": "Group: dashboard_widgets, Methods: ['__init__', 'add_monitoring_agent', 'get_monitoring_status']"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 56,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self, name, capabilities)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 90,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 97,
          "feature_type": "function",
          "feature_name": "add_agent",
          "signature": "def add_agent(self, agent)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 181,
          "feature_type": "function",
          "feature_name": "_get_system_status",
          "signature": "def _get_system_status(self)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 192,
          "feature_type": "function",
          "feature_name": "_get_help_message",
          "signature": "def _get_help_message(self)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 223,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 399,
          "feature_type": "function",
          "feature_name": "_calculate_dict_depth",
          "signature": "def _calculate_dict_depth(self, d, current_depth)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 418,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self, mode)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 461,
          "feature_type": "function",
          "feature_name": "add_monitoring_agent",
          "signature": "def add_monitoring_agent(self, agent)",
          "context": "Group: dashboard_widgets"
        },
        {
          "file_path": "monitoring\\enhanced_monitor.py",
          "line_number": 603,
          "feature_type": "function",
          "feature_name": "get_monitoring_status",
          "signature": "def get_monitoring_status(self)",
          "context": "Group: dashboard_widgets"
        }
      ],
      "duplicate_count": 3
    },
    "state_management": {
      "files": [
        "agents/team/testing_team.py",
        "deployment/enterprise_deployment.py",
        "core/orchestration/agent_graph.py"
      ],
      "features": [
        {
          "file_path": "agents\\team\\testing_team.py",
          "line_number": 26,
          "feature_type": "class",
          "feature_name": "TeamRole",
          "signature": "class TeamRole",
          "context": "Group: state_management, Methods: []"
        },
        {
          "file_path": "agents\\team\\testing_team.py",
          "line_number": 35,
          "feature_type": "class",
          "feature_name": "TeamConfiguration",
          "signature": "class TeamConfiguration",
          "context": "Group: state_management, Methods: []"
        },
        {
          "file_path": "agents\\team\\testing_team.py",
          "line_number": 45,
          "feature_type": "class",
          "feature_name": "TeamWorkflow",
          "signature": "class TeamWorkflow",
          "context": "Group: state_management, Methods: []"
        },
        {
          "file_path": "agents\\team\\testing_team.py",
          "line_number": 52,
          "feature_type": "class",
          "feature_name": "TestingTeam",
          "signature": "class TestingTeam",
          "context": "Group: state_management, Methods: ['__init__', '_initialize_team', '_setup_collaborations', '_update_team_metrics', 'get_team_status', 'create_standard_team', 'create_minimal_team']"
        },
        {
          "file_path": "agents\\team\\testing_team.py",
          "line_number": 58,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self, configuration)",
          "context": "Group: state_management"
        },
        {
          "file_path": "agents\\team\\testing_team.py",
          "line_number": 86,
          "feature_type": "function",
          "feature_name": "_initialize_team",
          "signature": "def _initialize_team(self)",
          "context": "Group: state_management"
        },
        {
          "file_path": "agents\\team\\testing_team.py",
          "line_number": 109,
          "feature_type": "function",
          "feature_name": "_setup_collaborations",
          "signature": "def _setup_collaborations(self)",
          "context": "Group: state_management"
        },
        {
          "file_path": "agents\\team\\testing_team.py",
          "line_number": 305,
          "feature_type": "function",
          "feature_name": "_update_team_metrics",
          "signature": "def _update_team_metrics(self, workflow_result)",
          "context": "Group: state_management"
        },
        {
          "file_path": "agents\\team\\testing_team.py",
          "line_number": 325,
          "feature_type": "function",
          "feature_name": "get_team_status",
          "signature": "def get_team_status(self)",
          "context": "Group: state_management"
        },
        {
          "file_path": "agents\\team\\testing_team.py",
          "line_number": 351,
          "feature_type": "function",
          "feature_name": "create_standard_team",
          "signature": "def create_standard_team(cls)",
          "context": "Group: state_management"
        },
        {
          "file_path": "agents\\team\\testing_team.py",
          "line_number": 367,
          "feature_type": "function",
          "feature_name": "create_minimal_team",
          "signature": "def create_minimal_team(cls)",
          "context": "Group: state_management"
        },
        {
          "file_path": "deployment\\enterprise_deployment.py",
          "line_number": 25,
          "feature_type": "class",
          "feature_name": "ServiceType",
          "signature": "class ServiceType",
          "context": "Group: state_management, Methods: []"
        },
        {
          "file_path": "deployment\\enterprise_deployment.py",
          "line_number": 37,
          "feature_type": "class",
          "feature_name": "DeploymentMode",
          "signature": "class DeploymentMode",
          "context": "Group: state_management, Methods: []"
        },
        {
          "file_path": "deployment\\enterprise_deployment.py",
          "line_number": 46,
          "feature_type": "class",
          "feature_name": "DeploymentStatus",
          "signature": "class DeploymentStatus",
          "context": "Group: state_management, Methods: []"
        },
        {
          "file_path": "deployment\\enterprise_deployment.py",
          "line_number": 59,
          "feature_type": "class",
          "feature_name": "ServiceConfig",
          "signature": "class ServiceConfig",
          "context": "Group: state_management, Methods: []"
        },
        {
          "file_path": "deployment\\enterprise_deployment.py",
          "line_number": 78,
          "feature_type": "class",
          "feature_name": "ServiceInstance",
          "signature": "class ServiceInstance",
          "context": "Group: state_management, Methods: []"
        },
        {
          "file_path": "deployment\\enterprise_deployment.py",
          "line_number": 93,
          "feature_type": "class",
          "feature_name": "EnterpriseTestDeployment",
          "signature": "class EnterpriseTestDeployment",
          "context": "Group: state_management, Methods: ['__init__', '_get_deployment_config', '_initialize_core_services', 'deploy_service', 'enable_auto_scaling', 'enable_disaster_recovery', 'get_deployment_status']"
        },
        {
          "file_path": "deployment\\enterprise_deployment.py",
          "line_number": 612,
          "feature_type": "class",
          "feature_name": "LoadBalancer",
          "signature": "class LoadBalancer",
          "context": "Group: state_management, Methods: ['__init__', 'get_next_instance']"
        },
        {
          "file_path": "deployment\\enterprise_deployment.py",
          "line_number": 106,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self, deployment_mode)",
          "context": "Group: state_management"
        },
        {
          "file_path": "deployment\\enterprise_deployment.py",
          "line_number": 128,
          "feature_type": "function",
          "feature_name": "_get_deployment_config",
          "signature": "def _get_deployment_config(self)",
          "context": "Group: state_management"
        },
        {
          "file_path": "deployment\\enterprise_deployment.py",
          "line_number": 176,
          "feature_type": "function",
          "feature_name": "_initialize_core_services",
          "signature": "def _initialize_core_services(self)",
          "context": "Group: state_management"
        },
        {
          "file_path": "deployment\\enterprise_deployment.py",
          "line_number": 210,
          "feature_type": "function",
          "feature_name": "deploy_service",
          "signature": "def deploy_service(self, config)",
          "context": "Group: state_management"
        },
        {
          "file_path": "deployment\\enterprise_deployment.py",
          "line_number": 375,
          "feature_type": "function",
          "feature_name": "enable_auto_scaling",
          "signature": "def enable_auto_scaling(self, service_id, scale_up_threshold, scale_down_threshold)",
          "context": "Group: state_management"
        },
        {
          "file_path": "deployment\\enterprise_deployment.py",
          "line_number": 457,
          "feature_type": "function",
          "feature_name": "enable_disaster_recovery",
          "signature": "def enable_disaster_recovery(self)",
          "context": "Group: state_management"
        },
        {
          "file_path": "deployment\\enterprise_deployment.py",
          "line_number": 564,
          "feature_type": "function",
          "feature_name": "get_deployment_status",
          "signature": "def get_deployment_status(self)",
          "context": "Group: state_management"
        },
        {
          "file_path": "deployment\\enterprise_deployment.py",
          "line_number": 615,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self, service_type)",
          "context": "Group: state_management"
        },
        {
          "file_path": "deployment\\enterprise_deployment.py",
          "line_number": 620,
          "feature_type": "function",
          "feature_name": "get_next_instance",
          "signature": "def get_next_instance(self, instances)",
          "context": "Group: state_management"
        },
        {
          "file_path": "deployment\\enterprise_deployment.py",
          "line_number": 84,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint: str = \"\"",
          "signature": "endpoint: str = \"\"",
          "context": "Group: state_management, API endpoint"
        },
        {
          "file_path": "deployment\\enterprise_deployment.py",
          "line_number": 220,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint=f\"http://service-{config.service_id}-{i}:...",
          "signature": "endpoint=f\"http://service-{config.service_id}-{i}:8080\"",
          "context": "Group: state_management, API endpoint"
        },
        {
          "file_path": "deployment\\enterprise_deployment.py",
          "line_number": 258,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint=f\"http://service-{service_id}-{current_re...",
          "signature": "endpoint=f\"http://service-{service_id}-{current_replicas + i}:8080\"",
          "context": "Group: state_management, API endpoint"
        },
        {
          "file_path": "deployment\\enterprise_deployment.py",
          "line_number": 301,
          "feature_type": "api_endpoint",
          "feature_name": "# Simple health logic (would be actual health endp...",
          "signature": "# Simple health logic (would be actual health endpoint in production)",
          "context": "Group: state_management, API endpoint"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 22,
          "feature_type": "class",
          "feature_name": "AgentStatus",
          "signature": "class AgentStatus",
          "context": "Group: state_management, Methods: []"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 31,
          "feature_type": "class",
          "feature_name": "OrchestrationMode",
          "signature": "class OrchestrationMode",
          "context": "Group: state_management, Methods: []"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 39,
          "feature_type": "class",
          "feature_name": "TestAgent",
          "signature": "class TestAgent",
          "context": "Group: state_management, Methods: ['__post_init__']"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 64,
          "feature_type": "class",
          "feature_name": "OrchestrationTask",
          "signature": "class OrchestrationTask",
          "context": "Group: state_management, Methods: []"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 80,
          "feature_type": "class",
          "feature_name": "TestOrchestrationEngine",
          "signature": "class TestOrchestrationEngine",
          "context": "Group: state_management, Methods: ['__init__', 'register_agent', 'create_test_crew', 'create_orchestration_task', '_create_task_from_config', '_update_agent_metrics', '_update_session_metrics', 'get_orchestration_status', '_calculate_system_health', 'cleanup_completed_sessions']"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 51,
          "feature_type": "function",
          "feature_name": "__post_init__",
          "signature": "def __post_init__(self)",
          "context": "Group: state_management"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 86,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self, monitor)",
          "context": "Group: state_management"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 110,
          "feature_type": "function",
          "feature_name": "register_agent",
          "signature": "def register_agent(self, agent)",
          "context": "Group: state_management"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 119,
          "feature_type": "function",
          "feature_name": "create_test_crew",
          "signature": "def create_test_crew(self, crew_type)",
          "context": "Group: state_management"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 185,
          "feature_type": "function",
          "feature_name": "create_orchestration_task",
          "signature": "def create_orchestration_task(self, name, agent_id, function, parameters, dependencies, timeout)",
          "context": "Group: state_management"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 371,
          "feature_type": "function",
          "feature_name": "_create_task_from_config",
          "signature": "def _create_task_from_config(self, task_config)",
          "context": "Group: state_management"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 377,
          "feature_type": "function",
          "feature_name": "_update_agent_metrics",
          "signature": "def _update_agent_metrics(self, agent, execution_time, success)",
          "context": "Group: state_management"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 397,
          "feature_type": "function",
          "feature_name": "_update_session_metrics",
          "signature": "def _update_session_metrics(self, session_id, execution_time)",
          "context": "Group: state_management"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 418,
          "feature_type": "function",
          "feature_name": "get_orchestration_status",
          "signature": "def get_orchestration_status(self)",
          "context": "Group: state_management"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 436,
          "feature_type": "function",
          "feature_name": "_calculate_system_health",
          "signature": "def _calculate_system_health(self)",
          "context": "Group: state_management"
        },
        {
          "file_path": "core\\orchestration\\agent_graph.py",
          "line_number": 457,
          "feature_type": "function",
          "feature_name": "cleanup_completed_sessions",
          "signature": "def cleanup_completed_sessions(self, max_age_hours)",
          "context": "Group: state_management"
        }
      ],
      "duplicate_count": 3
    },
    "api_endpoints": {
      "files": [
        "api/orchestration_api.py",
        "api/phase2_api.py",
        "api/phase3_api.py",
        "dashboard/api/"
      ],
      "features": [
        {
          "file_path": "api\\orchestration_api.py",
          "line_number": 28,
          "feature_type": "class",
          "feature_name": "CreateAgentRequest",
          "signature": "class CreateAgentRequest",
          "context": "Group: api_endpoints, Methods: []"
        },
        {
          "file_path": "api\\orchestration_api.py",
          "line_number": 34,
          "feature_type": "class",
          "feature_name": "CreateTaskRequest",
          "signature": "class CreateTaskRequest",
          "context": "Group: api_endpoints, Methods: []"
        },
        {
          "file_path": "api\\orchestration_api.py",
          "line_number": 42,
          "feature_type": "class",
          "feature_name": "ExecuteSessionRequest",
          "signature": "class ExecuteSessionRequest",
          "context": "Group: api_endpoints, Methods: []"
        },
        {
          "file_path": "api\\orchestration_api.py",
          "line_number": 46,
          "feature_type": "class",
          "feature_name": "ToolExecutionRequest",
          "signature": "class ToolExecutionRequest",
          "context": "Group: api_endpoints, Methods: []"
        },
        {
          "file_path": "api\\orchestration_api.py",
          "line_number": 5,
          "feature_type": "api_endpoint",
          "feature_name": "REST API endpoints for agent orchestration and mul...",
          "signature": "REST API endpoints for agent orchestration and multi-agent coordination.",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\orchestration_api.py",
          "line_number": 55,
          "feature_type": "api_endpoint",
          "feature_name": "@router.get(\"/status\")",
          "signature": "@router.get(\"/status\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\orchestration_api.py",
          "line_number": 74,
          "feature_type": "api_endpoint",
          "feature_name": "@router.get(\"/agents\")",
          "signature": "@router.get(\"/agents\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\orchestration_api.py",
          "line_number": 101,
          "feature_type": "api_endpoint",
          "feature_name": "@router.post(\"/agents\")",
          "signature": "@router.post(\"/agents\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\orchestration_api.py",
          "line_number": 131,
          "feature_type": "api_endpoint",
          "feature_name": "@router.get(\"/agents/{agent_id}\")",
          "signature": "@router.get(\"/agents/{agent_id}\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\orchestration_api.py",
          "line_number": 158,
          "feature_type": "api_endpoint",
          "feature_name": "@router.post(\"/crews/{crew_type}\")",
          "signature": "@router.post(\"/crews/{crew_type}\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\orchestration_api.py",
          "line_number": 194,
          "feature_type": "api_endpoint",
          "feature_name": "@router.get(\"/tasks\")",
          "signature": "@router.get(\"/tasks\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\orchestration_api.py",
          "line_number": 222,
          "feature_type": "api_endpoint",
          "feature_name": "@router.post(\"/sessions/execute\")",
          "signature": "@router.post(\"/sessions/execute\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\orchestration_api.py",
          "line_number": 282,
          "feature_type": "api_endpoint",
          "feature_name": "@router.get(\"/sessions/{session_id}\")",
          "signature": "@router.get(\"/sessions/{session_id}\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\orchestration_api.py",
          "line_number": 300,
          "feature_type": "api_endpoint",
          "feature_name": "@router.get(\"/tools\")",
          "signature": "@router.get(\"/tools\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\orchestration_api.py",
          "line_number": 317,
          "feature_type": "api_endpoint",
          "feature_name": "@router.post(\"/tools/execute\")",
          "signature": "@router.post(\"/tools/execute\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\orchestration_api.py",
          "line_number": 356,
          "feature_type": "api_endpoint",
          "feature_name": "@router.get(\"/observability/sessions\")",
          "signature": "@router.get(\"/observability/sessions\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\orchestration_api.py",
          "line_number": 386,
          "feature_type": "api_endpoint",
          "feature_name": "@router.get(\"/observability/sessions/{session_id}/...",
          "signature": "@router.get(\"/observability/sessions/{session_id}/replay\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\orchestration_api.py",
          "line_number": 405,
          "feature_type": "api_endpoint",
          "feature_name": "@router.get(\"/metrics\")",
          "signature": "@router.get(\"/metrics\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\orchestration_api.py",
          "line_number": 436,
          "feature_type": "api_endpoint",
          "feature_name": "# Health check endpoint",
          "signature": "# Health check endpoint",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\orchestration_api.py",
          "line_number": 437,
          "feature_type": "api_endpoint",
          "feature_name": "@router.get(\"/health\")",
          "signature": "@router.get(\"/health\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\orchestration_api.py",
          "line_number": 439,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Health check endpoint\"\"\"",
          "signature": "\"\"\"Health check endpoint\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\phase2_api.py",
          "line_number": 44,
          "feature_type": "function",
          "feature_name": "async_route",
          "signature": "def async_route(f)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase2_api.py",
          "line_number": 56,
          "feature_type": "function",
          "feature_name": "require_phase2",
          "signature": "def require_phase2(f)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase2_api.py",
          "line_number": 74,
          "feature_type": "function",
          "feature_name": "list_teams",
          "signature": "def list_teams()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase2_api.py",
          "line_number": 143,
          "feature_type": "function",
          "feature_name": "get_team",
          "signature": "def get_team(team_id)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase2_api.py",
          "line_number": 228,
          "feature_type": "function",
          "feature_name": "list_monitors",
          "signature": "def list_monitors()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase2_api.py",
          "line_number": 296,
          "feature_type": "function",
          "feature_name": "get_monitor",
          "signature": "def get_monitor(monitor_id)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase2_api.py",
          "line_number": 404,
          "feature_type": "function",
          "feature_name": "get_phase2_status",
          "signature": "def get_phase2_status()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase2_api.py",
          "line_number": 428,
          "feature_type": "function",
          "feature_name": "get_workflow_templates",
          "signature": "def get_workflow_templates()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase2_api.py",
          "line_number": 465,
          "feature_type": "function",
          "feature_name": "get_phase2_capabilities",
          "signature": "def get_phase2_capabilities()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase2_api.py",
          "line_number": 511,
          "feature_type": "function",
          "feature_name": "phase2_health_check",
          "signature": "def phase2_health_check()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase2_api.py",
          "line_number": 521,
          "feature_type": "function",
          "feature_name": "init_phase2_api",
          "signature": "def init_phase2_api()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase2_api.py",
          "line_number": 47,
          "feature_type": "function",
          "feature_name": "wrapper",
          "signature": "def wrapper()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase2_api.py",
          "line_number": 59,
          "feature_type": "function",
          "feature_name": "wrapper",
          "signature": "def wrapper()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase2_api.py",
          "line_number": 2,
          "feature_type": "api_endpoint",
          "feature_name": "Phase 2 API Endpoints",
          "signature": "Phase 2 API Endpoints",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\phase2_api.py",
          "line_number": 5,
          "feature_type": "api_endpoint",
          "feature_name": "API endpoints for Phase 2 multi-agent testing fram...",
          "signature": "API endpoints for Phase 2 multi-agent testing framework and enhanced monitoring.",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\phase2_api.py",
          "line_number": 69,
          "feature_type": "api_endpoint",
          "feature_name": "# Testing Team API Endpoints",
          "signature": "# Testing Team API Endpoints",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\phase2_api.py",
          "line_number": 223,
          "feature_type": "api_endpoint",
          "feature_name": "# Enhanced Monitoring API Endpoints",
          "signature": "# Enhanced Monitoring API Endpoints",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\phase2_api.py",
          "line_number": 399,
          "feature_type": "api_endpoint",
          "feature_name": "# Phase 2 Integration Endpoints",
          "signature": "# Phase 2 Integration Endpoints",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 36,
          "feature_type": "function",
          "feature_name": "manage_deployments",
          "signature": "def manage_deployments()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 77,
          "feature_type": "function",
          "feature_name": "deployment_detail",
          "signature": "def deployment_detail(deployment_id)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 101,
          "feature_type": "function",
          "feature_name": "scale_service",
          "signature": "def scale_service(deployment_id)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 129,
          "feature_type": "function",
          "feature_name": "deployment_health",
          "signature": "def deployment_health(deployment_id)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 147,
          "feature_type": "function",
          "feature_name": "manage_registry",
          "signature": "def manage_registry()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 180,
          "feature_type": "function",
          "feature_name": "registry_services",
          "signature": "def registry_services(registry_id)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 243,
          "feature_type": "function",
          "feature_name": "manage_swarms",
          "signature": "def manage_swarms()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 292,
          "feature_type": "function",
          "feature_name": "swarm_tasks",
          "signature": "def swarm_tasks(swarm_id)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 340,
          "feature_type": "function",
          "feature_name": "studio_sessions_api",
          "signature": "def studio_sessions_api()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 385,
          "feature_type": "function",
          "feature_name": "studio_workflows",
          "signature": "def studio_workflows(session_id)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 427,
          "feature_type": "function",
          "feature_name": "agentverse_api",
          "signature": "def agentverse_api()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 465,
          "feature_type": "function",
          "feature_name": "agentverse_agents",
          "signature": "def agentverse_agents(ui_id)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 511,
          "feature_type": "function",
          "feature_name": "dashboards_api",
          "signature": "def dashboards_api()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 548,
          "feature_type": "function",
          "feature_name": "dashboard_widgets",
          "signature": "def dashboard_widgets(dashboard_id)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 619,
          "feature_type": "function",
          "feature_name": "phase3_status",
          "signature": "def phase3_status()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 648,
          "feature_type": "function",
          "feature_name": "not_found",
          "signature": "def not_found(error)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 653,
          "feature_type": "function",
          "feature_name": "internal_error",
          "signature": "def internal_error(error)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 658,
          "feature_type": "function",
          "feature_name": "handle_exception",
          "signature": "def handle_exception(error)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 2,
          "feature_type": "api_endpoint",
          "feature_name": "Phase 3 API Endpoints",
          "signature": "Phase 3 API Endpoints",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 5,
          "feature_type": "api_endpoint",
          "feature_name": "Production-ready API endpoints for enterprise depl...",
          "signature": "Production-ready API endpoints for enterprise deployment and advanced UI/UX.",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 33,
          "feature_type": "api_endpoint",
          "feature_name": "# ==================== Deployment Endpoints ======...",
          "signature": "# ==================== Deployment Endpoints ====================",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 144,
          "feature_type": "api_endpoint",
          "feature_name": "# ==================== Service Registry Endpoints ...",
          "signature": "# ==================== Service Registry Endpoints ====================",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 203,
          "feature_type": "api_endpoint",
          "feature_name": "\"endpoints\": len(s.endpoints)",
          "signature": "\"endpoints\": len(s.endpoints)",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 212,
          "feature_type": "api_endpoint",
          "feature_name": "from deployment import ServiceDescriptor, ServiceE...",
          "signature": "from deployment import ServiceDescriptor, ServiceEndpoint",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 216,
          "feature_type": "api_endpoint",
          "feature_name": "endpoints = [",
          "signature": "endpoints = [",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 217,
          "feature_type": "api_endpoint",
          "feature_name": "ServiceEndpoint(",
          "signature": "ServiceEndpoint(",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 222,
          "feature_type": "api_endpoint",
          "feature_name": "for ep in data.get('endpoints', [])",
          "signature": "for ep in data.get('endpoints', [])",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 228,
          "feature_type": "api_endpoint",
          "feature_name": "endpoints=endpoints,",
          "signature": "endpoints=endpoints,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 240,
          "feature_type": "api_endpoint",
          "feature_name": "# ==================== Swarm Orchestration Endpoin...",
          "signature": "# ==================== Swarm Orchestration Endpoints ====================",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 337,
          "feature_type": "api_endpoint",
          "feature_name": "# ==================== Studio Interface Endpoints ...",
          "signature": "# ==================== Studio Interface Endpoints ====================",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 424,
          "feature_type": "api_endpoint",
          "feature_name": "# ==================== AgentVerse UI Endpoints ===...",
          "signature": "# ==================== AgentVerse UI Endpoints ====================",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 508,
          "feature_type": "api_endpoint",
          "feature_name": "# ==================== Dashboard Endpoints =======...",
          "signature": "# ==================== Dashboard Endpoints ====================",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "api\\phase3_api.py",
          "line_number": 616,
          "feature_type": "api_endpoint",
          "feature_name": "# ==================== Status Endpoints ==========...",
          "signature": "# ==================== Status Endpoints ====================",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 40,
          "feature_type": "function",
          "feature_name": "init_analytics_api",
          "signature": "def init_analytics_api(aggregator)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 59,
          "feature_type": "function",
          "feature_name": "get_current_metrics",
          "signature": "def get_current_metrics()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 97,
          "feature_type": "function",
          "feature_name": "get_trend_analysis",
          "signature": "def get_trend_analysis()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 128,
          "feature_type": "function",
          "feature_name": "get_analytics_summary",
          "signature": "def get_analytics_summary()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 212,
          "feature_type": "function",
          "feature_name": "get_recent_analytics",
          "signature": "def get_recent_analytics()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 308,
          "feature_type": "function",
          "feature_name": "get_analytics_export",
          "signature": "def get_analytics_export()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 390,
          "feature_type": "function",
          "feature_name": "get_insights",
          "signature": "def get_insights()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 428,
          "feature_type": "function",
          "feature_name": "get_dashboard_summary",
          "signature": "def get_dashboard_summary()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 512,
          "feature_type": "function",
          "feature_name": "create_analytics_snapshot",
          "signature": "def create_analytics_snapshot()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 541,
          "feature_type": "function",
          "feature_name": "get_historical_data",
          "signature": "def get_historical_data(metric_type)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 576,
          "feature_type": "function",
          "feature_name": "get_trend_calculation",
          "signature": "def get_trend_calculation(metric_type)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 597,
          "feature_type": "function",
          "feature_name": "create_analytics_backup",
          "signature": "def create_analytics_backup()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 630,
          "feature_type": "function",
          "feature_name": "list_analytics_backups",
          "signature": "def list_analytics_backups()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 657,
          "feature_type": "function",
          "feature_name": "export_analytics_data",
          "signature": "def export_analytics_data(format)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 699,
          "feature_type": "function",
          "feature_name": "generate_comprehensive_report",
          "signature": "def generate_comprehensive_report()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 754,
          "feature_type": "function",
          "feature_name": "get_optimization_metrics",
          "signature": "def get_optimization_metrics()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 26,
          "feature_type": "function",
          "feature_name": "enhanced_api_endpoint",
          "signature": "def enhanced_api_endpoint()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 30,
          "feature_type": "function",
          "feature_name": "handle_api_error",
          "signature": "def handle_api_error(func)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 27,
          "feature_type": "function",
          "feature_name": "decorator",
          "signature": "def decorator(func)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 5,
          "feature_type": "api_endpoint",
          "feature_name": "Handles analytics and metrics endpoints.",
          "signature": "Handles analytics and metrics endpoints.",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 22,
          "feature_type": "api_endpoint",
          "feature_name": "from core.error_handler import enhanced_api_endpoi...",
          "signature": "from core.error_handler import enhanced_api_endpoint, handle_api_error",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 26,
          "feature_type": "api_endpoint",
          "feature_name": "def enhanced_api_endpoint(*args, **kwargs):",
          "signature": "def enhanced_api_endpoint(*args, **kwargs):",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 61,
          "feature_type": "api_endpoint",
          "feature_name": "logger.info(\"Analytics metrics endpoint called\")",
          "signature": "logger.info(\"Analytics metrics endpoint called\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 130,
          "feature_type": "api_endpoint",
          "feature_name": "logger.info(\"Analytics summary endpoint called\")",
          "signature": "logger.info(\"Analytics summary endpoint called\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 214,
          "feature_type": "api_endpoint",
          "feature_name": "logger.info(\"Recent analytics endpoint called\")",
          "signature": "logger.info(\"Recent analytics endpoint called\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\analytics.py",
          "line_number": 310,
          "feature_type": "api_endpoint",
          "feature_name": "logger.info(\"Analytics export endpoint called\")",
          "signature": "logger.info(\"Analytics export endpoint called\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\async_processing.py",
          "line_number": 21,
          "feature_type": "class",
          "feature_name": "AsyncProcessingAPI",
          "signature": "class AsyncProcessingAPI",
          "context": "Group: api_endpoints, Methods: ['__init__', '_setup_routes', '_count_by_status', '_count_by_type', '_count_by_priority', '_calculate_worker_utilization', '_create_progress_histogram', '_create_wait_time_distribution', '_count_worker_status', '_generate_resource_timeline', '_count_pipeline_status', '_create_stage_matrix', '_generate_execution_timeline', '_calculate_pipeline_resources']"
        },
        {
          "file_path": "dashboard\\api\\async_processing.py",
          "line_number": 24,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\async_processing.py",
          "line_number": 30,
          "feature_type": "function",
          "feature_name": "_setup_routes",
          "signature": "def _setup_routes(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\async_processing.py",
          "line_number": 454,
          "feature_type": "function",
          "feature_name": "_count_by_status",
          "signature": "def _count_by_status(self, tasks)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\async_processing.py",
          "line_number": 462,
          "feature_type": "function",
          "feature_name": "_count_by_type",
          "signature": "def _count_by_type(self, tasks)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\async_processing.py",
          "line_number": 470,
          "feature_type": "function",
          "feature_name": "_count_by_priority",
          "signature": "def _count_by_priority(self, tasks)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\async_processing.py",
          "line_number": 478,
          "feature_type": "function",
          "feature_name": "_calculate_worker_utilization",
          "signature": "def _calculate_worker_utilization(self, tasks)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\async_processing.py",
          "line_number": 499,
          "feature_type": "function",
          "feature_name": "_create_progress_histogram",
          "signature": "def _create_progress_histogram(self, tasks)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\async_processing.py",
          "line_number": 515,
          "feature_type": "function",
          "feature_name": "_create_wait_time_distribution",
          "signature": "def _create_wait_time_distribution(self, queues)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\async_processing.py",
          "line_number": 527,
          "feature_type": "function",
          "feature_name": "_count_worker_status",
          "signature": "def _count_worker_status(self, workers)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\async_processing.py",
          "line_number": 535,
          "feature_type": "function",
          "feature_name": "_generate_resource_timeline",
          "signature": "def _generate_resource_timeline(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\async_processing.py",
          "line_number": 549,
          "feature_type": "function",
          "feature_name": "_count_pipeline_status",
          "signature": "def _count_pipeline_status(self, pipelines)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\async_processing.py",
          "line_number": 557,
          "feature_type": "function",
          "feature_name": "_create_stage_matrix",
          "signature": "def _create_stage_matrix(self, pipelines)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\async_processing.py",
          "line_number": 576,
          "feature_type": "function",
          "feature_name": "_generate_execution_timeline",
          "signature": "def _generate_execution_timeline(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\async_processing.py",
          "line_number": 590,
          "feature_type": "function",
          "feature_name": "_calculate_pipeline_resources",
          "signature": "def _calculate_pipeline_resources(self, pipelines)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\async_processing.py",
          "line_number": 34,
          "feature_type": "function",
          "feature_name": "active_tasks",
          "signature": "def active_tasks()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\async_processing.py",
          "line_number": 128,
          "feature_type": "function",
          "feature_name": "queue_status",
          "signature": "def queue_status()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\async_processing.py",
          "line_number": 226,
          "feature_type": "function",
          "feature_name": "worker_status",
          "signature": "def worker_status()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\async_processing.py",
          "line_number": 338,
          "feature_type": "function",
          "feature_name": "pipeline_flow",
          "signature": "def pipeline_flow()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\async_processing.py",
          "line_number": 22,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Async Processing and Task Management API endpoi...",
          "signature": "\"\"\"Async Processing and Task Management API endpoints.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 24,
          "feature_type": "class",
          "feature_name": "EndpointHealth",
          "signature": "class EndpointHealth",
          "context": "Group: api_endpoints, Methods: ['success_rate', 'availability']"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 56,
          "feature_type": "class",
          "feature_name": "BackendHealthMonitor",
          "signature": "class BackendHealthMonitor",
          "context": "Group: api_endpoints, Methods: ['__init__', '_register_core_endpoints', '_is_circuit_open', '_open_circuit', '_close_circuit', 'check_endpoint', '_handle_failure', '_validate_frontend_compatibility', '_check_has_data', 'check_all_endpoints', 'get_endpoint_status', 'get_health_summary', 'identify_issues', 'start_monitoring', 'stop_monitoring']"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 495,
          "feature_type": "function",
          "feature_name": "get_backend_status",
          "signature": "def get_backend_status()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 522,
          "feature_type": "function",
          "feature_name": "list_all_endpoints",
          "signature": "def list_all_endpoints()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 542,
          "feature_type": "function",
          "feature_name": "get_endpoint_detail",
          "signature": "def get_endpoint_detail(endpoint_path)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 568,
          "feature_type": "function",
          "feature_name": "run_health_check",
          "signature": "def run_health_check()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 591,
          "feature_type": "function",
          "feature_name": "start_monitoring",
          "signature": "def start_monitoring()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 606,
          "feature_type": "function",
          "feature_name": "stop_monitoring",
          "signature": "def stop_monitoring()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 621,
          "feature_type": "function",
          "feature_name": "get_current_issues",
          "signature": "def get_current_issues()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 643,
          "feature_type": "function",
          "feature_name": "health_monitor_health",
          "signature": "def health_monitor_health()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 39,
          "feature_type": "function",
          "feature_name": "success_rate",
          "signature": "def success_rate(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 45,
          "feature_type": "function",
          "feature_name": "availability",
          "signature": "def availability(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 61,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self, base_url)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 97,
          "feature_type": "function",
          "feature_name": "_register_core_endpoints",
          "signature": "def _register_core_endpoints(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 152,
          "feature_type": "function",
          "feature_name": "_is_circuit_open",
          "signature": "def _is_circuit_open(self, endpoint_path)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 156,
          "feature_type": "function",
          "feature_name": "_open_circuit",
          "signature": "def _open_circuit(self, endpoint_path)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 161,
          "feature_type": "function",
          "feature_name": "_close_circuit",
          "signature": "def _close_circuit(self, endpoint_path)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 167,
          "feature_type": "function",
          "feature_name": "check_endpoint",
          "signature": "def check_endpoint(self, endpoint_path)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 279,
          "feature_type": "function",
          "feature_name": "_handle_failure",
          "signature": "def _handle_failure(self, endpoint_path)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 287,
          "feature_type": "function",
          "feature_name": "_validate_frontend_compatibility",
          "signature": "def _validate_frontend_compatibility(self, data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 303,
          "feature_type": "function",
          "feature_name": "_check_has_data",
          "signature": "def _check_has_data(self, data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 317,
          "feature_type": "function",
          "feature_name": "check_all_endpoints",
          "signature": "def check_all_endpoints(self, max_workers)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 383,
          "feature_type": "function",
          "feature_name": "get_endpoint_status",
          "signature": "def get_endpoint_status(self, endpoint_path)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 402,
          "feature_type": "function",
          "feature_name": "get_health_summary",
          "signature": "def get_health_summary(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 412,
          "feature_type": "function",
          "feature_name": "identify_issues",
          "signature": "def identify_issues(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 457,
          "feature_type": "function",
          "feature_name": "start_monitoring",
          "signature": "def start_monitoring(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 482,
          "feature_type": "function",
          "feature_name": "stop_monitoring",
          "signature": "def stop_monitoring(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 461,
          "feature_type": "function",
          "feature_name": "monitoring_loop",
          "signature": "def monitoring_loop()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 24,
          "feature_type": "api_endpoint",
          "feature_name": "class EndpointHealth:",
          "signature": "class EndpointHealth:",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 25,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Health status of an API endpoint.\"\"\"",
          "signature": "\"\"\"Health status of an API endpoint.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 26,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint: str",
          "signature": "endpoint: str",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 63,
          "feature_type": "api_endpoint",
          "feature_name": "self.endpoints: Dict[str, EndpointHealth] = {}",
          "signature": "self.endpoints: Dict[str, EndpointHealth] = {}",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 76,
          "feature_type": "api_endpoint",
          "feature_name": "'total_endpoints': 0,",
          "signature": "'total_endpoints': 0,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 77,
          "feature_type": "api_endpoint",
          "feature_name": "'healthy_endpoints': 0,",
          "signature": "'healthy_endpoints': 0,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 78,
          "feature_type": "api_endpoint",
          "feature_name": "'degraded_endpoints': 0,",
          "signature": "'degraded_endpoints': 0,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 79,
          "feature_type": "api_endpoint",
          "feature_name": "'down_endpoints': 0,",
          "signature": "'down_endpoints': 0,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 92,
          "feature_type": "api_endpoint",
          "feature_name": "# Initialize endpoint registry",
          "signature": "# Initialize endpoint registry",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 93,
          "feature_type": "api_endpoint",
          "feature_name": "self._register_core_endpoints()",
          "signature": "self._register_core_endpoints()",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 97,
          "feature_type": "api_endpoint",
          "feature_name": "def _register_core_endpoints(self):",
          "signature": "def _register_core_endpoints(self):",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 98,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Register all core endpoints for monitoring.\"\"\"",
          "signature": "\"\"\"Register all core endpoints for monitoring.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 99,
          "feature_type": "api_endpoint",
          "feature_name": "core_endpoints = [",
          "signature": "core_endpoints = [",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 138,
          "feature_type": "api_endpoint",
          "feature_name": "for endpoint, method, name in core_endpoints:",
          "signature": "for endpoint, method, name in core_endpoints:",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 139,
          "feature_type": "api_endpoint",
          "feature_name": "self.endpoints[endpoint] = EndpointHealth(",
          "signature": "self.endpoints[endpoint] = EndpointHealth(",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 140,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint=endpoint,",
          "signature": "endpoint=endpoint,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 150,
          "feature_type": "api_endpoint",
          "feature_name": "self.global_metrics['total_endpoints'] = len(self....",
          "signature": "self.global_metrics['total_endpoints'] = len(self.endpoints)",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 152,
          "feature_type": "api_endpoint",
          "feature_name": "def _is_circuit_open(self, endpoint_path: str) -> ...",
          "signature": "def _is_circuit_open(self, endpoint_path: str) -> bool:",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 153,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Check if circuit breaker is open for endpoint.\"...",
          "signature": "\"\"\"Check if circuit breaker is open for endpoint.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 154,
          "feature_type": "api_endpoint",
          "feature_name": "return self.circuit_breakers.get(endpoint_path, Fa...",
          "signature": "return self.circuit_breakers.get(endpoint_path, False)",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 156,
          "feature_type": "api_endpoint",
          "feature_name": "def _open_circuit(self, endpoint_path: str):",
          "signature": "def _open_circuit(self, endpoint_path: str):",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 157,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Open circuit breaker for endpoint.\"\"\"",
          "signature": "\"\"\"Open circuit breaker for endpoint.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 158,
          "feature_type": "api_endpoint",
          "feature_name": "self.circuit_breakers[endpoint_path] = True",
          "signature": "self.circuit_breakers[endpoint_path] = True",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 159,
          "feature_type": "api_endpoint",
          "feature_name": "self.logger.warning(f\"Circuit breaker opened for {...",
          "signature": "self.logger.warning(f\"Circuit breaker opened for {endpoint_path}\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 161,
          "feature_type": "api_endpoint",
          "feature_name": "def _close_circuit(self, endpoint_path: str):",
          "signature": "def _close_circuit(self, endpoint_path: str):",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 162,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Close circuit breaker for endpoint.\"\"\"",
          "signature": "\"\"\"Close circuit breaker for endpoint.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 163,
          "feature_type": "api_endpoint",
          "feature_name": "if endpoint_path in self.circuit_breakers:",
          "signature": "if endpoint_path in self.circuit_breakers:",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 164,
          "feature_type": "api_endpoint",
          "feature_name": "del self.circuit_breakers[endpoint_path]",
          "signature": "del self.circuit_breakers[endpoint_path]",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 165,
          "feature_type": "api_endpoint",
          "feature_name": "self.retry_counts[endpoint_path] = 0",
          "signature": "self.retry_counts[endpoint_path] = 0",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 167,
          "feature_type": "api_endpoint",
          "feature_name": "def check_endpoint(self, endpoint_path: str) -> En...",
          "signature": "def check_endpoint(self, endpoint_path: str) -> EndpointHealth:",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 168,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Check health of a specific endpoint.\"\"\"",
          "signature": "\"\"\"Check health of a specific endpoint.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 169,
          "feature_type": "api_endpoint",
          "feature_name": "if endpoint_path not in self.endpoints:",
          "signature": "if endpoint_path not in self.endpoints:",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 170,
          "feature_type": "api_endpoint",
          "feature_name": "raise ValueError(f\"Endpoint {endpoint_path} not re...",
          "signature": "raise ValueError(f\"Endpoint {endpoint_path} not registered\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 172,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint = self.endpoints[endpoint_path]",
          "signature": "endpoint = self.endpoints[endpoint_path]",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 175,
          "feature_type": "api_endpoint",
          "feature_name": "if self._is_circuit_open(endpoint_path):",
          "signature": "if self._is_circuit_open(endpoint_path):",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 176,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.status = 'down'",
          "signature": "endpoint.status = 'down'",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 177,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.last_error = \"Circuit breaker open - too ...",
          "signature": "endpoint.last_error = \"Circuit breaker open - too many failures\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 178,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.last_check = datetime.now()",
          "signature": "endpoint.last_check = datetime.now()",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 179,
          "feature_type": "api_endpoint",
          "feature_name": "return endpoint",
          "signature": "return endpoint",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 183,
          "feature_type": "api_endpoint",
          "feature_name": "# Optimized timeout based on endpoint type (target...",
          "signature": "# Optimized timeout based on endpoint type (targeting <1s average)",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 196,
          "feature_type": "api_endpoint",
          "feature_name": "timeout = timeout_map.get(endpoint_path, 3)  # Red...",
          "signature": "timeout = timeout_map.get(endpoint_path, 3)  # Reduced default from 8s to 3s",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 200,
          "feature_type": "api_endpoint",
          "feature_name": "f\"{self.base_url}{endpoint_path}\",",
          "signature": "f\"{self.base_url}{endpoint_path}\",",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 206,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.response_time = response_time",
          "signature": "endpoint.response_time = response_time",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 207,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.last_check = datetime.now()",
          "signature": "endpoint.last_check = datetime.now()",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 214,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.frontend_compatible = self._validate_fron...",
          "signature": "endpoint.frontend_compatible = self._validate_frontend_compatibility(data)",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 216,
          "feature_type": "api_endpoint",
          "feature_name": "# Check if endpoint has useful data",
          "signature": "# Check if endpoint has useful data",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 217,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.has_data = self._check_has_data(data)",
          "signature": "endpoint.has_data = self._check_has_data(data)",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 221,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.status = 'healthy'",
          "signature": "endpoint.status = 'healthy'",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 222,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.success_count += 1",
          "signature": "endpoint.success_count += 1",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 223,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.last_error = None",
          "signature": "endpoint.last_error = None",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 225,
          "feature_type": "api_endpoint",
          "feature_name": "self._close_circuit(endpoint_path)",
          "signature": "self._close_circuit(endpoint_path)",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 227,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.status = 'degraded'",
          "signature": "endpoint.status = 'degraded'",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 228,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.error_count += 1",
          "signature": "endpoint.error_count += 1",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 229,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.last_error = f\"Unexpected response format...",
          "signature": "endpoint.last_error = f\"Unexpected response format: {data.get('status', 'unknown')}\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 230,
          "feature_type": "api_endpoint",
          "feature_name": "self._handle_failure(endpoint_path)",
          "signature": "self._handle_failure(endpoint_path)",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 233,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.status = 'degraded'",
          "signature": "endpoint.status = 'degraded'",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 234,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.error_count += 1",
          "signature": "endpoint.error_count += 1",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 235,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.last_error = \"Invalid JSON response\"",
          "signature": "endpoint.last_error = \"Invalid JSON response\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 236,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.frontend_compatible = False",
          "signature": "endpoint.frontend_compatible = False",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 237,
          "feature_type": "api_endpoint",
          "feature_name": "self._handle_failure(endpoint_path)",
          "signature": "self._handle_failure(endpoint_path)",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 240,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.status = 'down'",
          "signature": "endpoint.status = 'down'",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 241,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.error_count += 1",
          "signature": "endpoint.error_count += 1",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 242,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.last_error = \"Endpoint not found (404)\"",
          "signature": "endpoint.last_error = \"Endpoint not found (404)\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 243,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.frontend_compatible = False",
          "signature": "endpoint.frontend_compatible = False",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 244,
          "feature_type": "api_endpoint",
          "feature_name": "self._handle_failure(endpoint_path)",
          "signature": "self._handle_failure(endpoint_path)",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 247,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.status = 'degraded'",
          "signature": "endpoint.status = 'degraded'",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 248,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.error_count += 1",
          "signature": "endpoint.error_count += 1",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 249,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.last_error = f\"HTTP {response.status_code...",
          "signature": "endpoint.last_error = f\"HTTP {response.status_code}\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 250,
          "feature_type": "api_endpoint",
          "feature_name": "self._handle_failure(endpoint_path)",
          "signature": "self._handle_failure(endpoint_path)",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 253,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.status = 'degraded'",
          "signature": "endpoint.status = 'degraded'",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 254,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.error_count += 1",
          "signature": "endpoint.error_count += 1",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 255,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.last_error = f\"Request timeout after {tim...",
          "signature": "endpoint.last_error = f\"Request timeout after {timeout}s\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 256,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.frontend_compatible = False",
          "signature": "endpoint.frontend_compatible = False",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 257,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.response_time = timeout",
          "signature": "endpoint.response_time = timeout",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 258,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.last_check = datetime.now()",
          "signature": "endpoint.last_check = datetime.now()",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 259,
          "feature_type": "api_endpoint",
          "feature_name": "self._handle_failure(endpoint_path)",
          "signature": "self._handle_failure(endpoint_path)",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 261,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.status = 'down'",
          "signature": "endpoint.status = 'down'",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 262,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.error_count += 1",
          "signature": "endpoint.error_count += 1",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 263,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.last_error = \"Connection failed - service...",
          "signature": "endpoint.last_error = \"Connection failed - service may be down\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 264,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.frontend_compatible = False",
          "signature": "endpoint.frontend_compatible = False",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 265,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.response_time = time.time() - start_time",
          "signature": "endpoint.response_time = time.time() - start_time",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 266,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.last_check = datetime.now()",
          "signature": "endpoint.last_check = datetime.now()",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 267,
          "feature_type": "api_endpoint",
          "feature_name": "self._handle_failure(endpoint_path)",
          "signature": "self._handle_failure(endpoint_path)",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 269,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.status = 'degraded'",
          "signature": "endpoint.status = 'degraded'",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 270,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.error_count += 1",
          "signature": "endpoint.error_count += 1",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 271,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.last_error = f\"Request error: {str(e)[:10...",
          "signature": "endpoint.last_error = f\"Request error: {str(e)[:100]}\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 272,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.frontend_compatible = False",
          "signature": "endpoint.frontend_compatible = False",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 273,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.response_time = time.time() - start_time",
          "signature": "endpoint.response_time = time.time() - start_time",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 274,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint.last_check = datetime.now()",
          "signature": "endpoint.last_check = datetime.now()",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 275,
          "feature_type": "api_endpoint",
          "feature_name": "self._handle_failure(endpoint_path)",
          "signature": "self._handle_failure(endpoint_path)",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 277,
          "feature_type": "api_endpoint",
          "feature_name": "return endpoint",
          "signature": "return endpoint",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 279,
          "feature_type": "api_endpoint",
          "feature_name": "def _handle_failure(self, endpoint_path: str):",
          "signature": "def _handle_failure(self, endpoint_path: str):",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 280,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Handle endpoint failure with circuit breaker lo...",
          "signature": "\"\"\"Handle endpoint failure with circuit breaker logic.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 281,
          "feature_type": "api_endpoint",
          "feature_name": "self.retry_counts[endpoint_path] += 1",
          "signature": "self.retry_counts[endpoint_path] += 1",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 283,
          "feature_type": "api_endpoint",
          "feature_name": "if self.retry_counts[endpoint_path] >= self.circui...",
          "signature": "if self.retry_counts[endpoint_path] >= self.circuit_break_threshold:",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 284,
          "feature_type": "api_endpoint",
          "feature_name": "self._open_circuit(endpoint_path)",
          "signature": "self._open_circuit(endpoint_path)",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 285,
          "feature_type": "api_endpoint",
          "feature_name": "self.logger.warning(f\"Circuit breaker opened for {...",
          "signature": "self.logger.warning(f\"Circuit breaker opened for {endpoint_path} after {self.retry_counts[endpoint_path]} failures\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 304,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Check if endpoint response contains useful data...",
          "signature": "\"\"\"Check if endpoint response contains useful data.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 317,
          "feature_type": "api_endpoint",
          "feature_name": "def check_all_endpoints(self, max_workers: int = 5...",
          "signature": "def check_all_endpoints(self, max_workers: int = 5) -> Dict[str, Any]:",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 318,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Check all registered endpoints concurrently and...",
          "signature": "\"\"\"Check all registered endpoints concurrently and return summary.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 327,
          "feature_type": "api_endpoint",
          "feature_name": "# Check endpoints concurrently",
          "signature": "# Check endpoints concurrently",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 329,
          "feature_type": "api_endpoint",
          "feature_name": "# Submit all endpoint checks",
          "signature": "# Submit all endpoint checks",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 330,
          "feature_type": "api_endpoint",
          "feature_name": "future_to_endpoint = {",
          "signature": "future_to_endpoint = {",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 331,
          "feature_type": "api_endpoint",
          "feature_name": "executor.submit(self.check_endpoint, endpoint_path...",
          "signature": "executor.submit(self.check_endpoint, endpoint_path): endpoint_path",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 332,
          "feature_type": "api_endpoint",
          "feature_name": "for endpoint_path in self.endpoints",
          "signature": "for endpoint_path in self.endpoints",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 336,
          "feature_type": "api_endpoint",
          "feature_name": "for future in as_completed(future_to_endpoint):",
          "signature": "for future in as_completed(future_to_endpoint):",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 337,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint_path = future_to_endpoint[future]",
          "signature": "endpoint_path = future_to_endpoint[future]",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 339,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint = future.result(timeout=20)  # 20 second ...",
          "signature": "endpoint = future.result(timeout=20)  # 20 second timeout for each check",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 341,
          "feature_type": "api_endpoint",
          "feature_name": "if endpoint.status == 'healthy':",
          "signature": "if endpoint.status == 'healthy':",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 342,
          "feature_type": "api_endpoint",
          "feature_name": "results['healthy'].append(endpoint)",
          "signature": "results['healthy'].append(endpoint)",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 343,
          "feature_type": "api_endpoint",
          "feature_name": "elif endpoint.status == 'degraded':",
          "signature": "elif endpoint.status == 'degraded':",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 344,
          "feature_type": "api_endpoint",
          "feature_name": "results['degraded'].append(endpoint)",
          "signature": "results['degraded'].append(endpoint)",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 346,
          "feature_type": "api_endpoint",
          "feature_name": "results['down'].append(endpoint)",
          "signature": "results['down'].append(endpoint)",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 348,
          "feature_type": "api_endpoint",
          "feature_name": "if not endpoint.frontend_compatible:",
          "signature": "if not endpoint.frontend_compatible:",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 349,
          "feature_type": "api_endpoint",
          "feature_name": "results['frontend_issues'].append(endpoint)",
          "signature": "results['frontend_issues'].append(endpoint)",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 351,
          "feature_type": "api_endpoint",
          "feature_name": "if not endpoint.has_data and endpoint.status == 'h...",
          "signature": "if not endpoint.has_data and endpoint.status == 'healthy':",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 352,
          "feature_type": "api_endpoint",
          "feature_name": "results['missing_data'].append(endpoint)",
          "signature": "results['missing_data'].append(endpoint)",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 355,
          "feature_type": "api_endpoint",
          "feature_name": "self.logger.error(f\"Failed to check endpoint {endp...",
          "signature": "self.logger.error(f\"Failed to check endpoint {endpoint_path}: {e}\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 356,
          "feature_type": "api_endpoint",
          "feature_name": "# Create a failed endpoint entry",
          "signature": "# Create a failed endpoint entry",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 357,
          "feature_type": "api_endpoint",
          "feature_name": "failed_endpoint = self.endpoints[endpoint_path]",
          "signature": "failed_endpoint = self.endpoints[endpoint_path]",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 358,
          "feature_type": "api_endpoint",
          "feature_name": "failed_endpoint.status = 'down'",
          "signature": "failed_endpoint.status = 'down'",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 359,
          "feature_type": "api_endpoint",
          "feature_name": "failed_endpoint.last_error = f\"Check failed: {str(...",
          "signature": "failed_endpoint.last_error = f\"Check failed: {str(e)[:100]}\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 360,
          "feature_type": "api_endpoint",
          "feature_name": "failed_endpoint.last_check = datetime.now()",
          "signature": "failed_endpoint.last_check = datetime.now()",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 361,
          "feature_type": "api_endpoint",
          "feature_name": "results['down'].append(failed_endpoint)",
          "signature": "results['down'].append(failed_endpoint)",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 365,
          "feature_type": "api_endpoint",
          "feature_name": "total_endpoints = len(self.endpoints)",
          "signature": "total_endpoints = len(self.endpoints)",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 369,
          "feature_type": "api_endpoint",
          "feature_name": "'healthy_endpoints': healthy_count,",
          "signature": "'healthy_endpoints': healthy_count,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 370,
          "feature_type": "api_endpoint",
          "feature_name": "'degraded_endpoints': len(results['degraded']),",
          "signature": "'degraded_endpoints': len(results['degraded']),",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 371,
          "feature_type": "api_endpoint",
          "feature_name": "'down_endpoints': len(results['down']),",
          "signature": "'down_endpoints': len(results['down']),",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 373,
          "feature_type": "api_endpoint",
          "feature_name": "'uptime_percentage': (healthy_count / total_endpoi...",
          "signature": "'uptime_percentage': (healthy_count / total_endpoints * 100) if total_endpoints > 0 else 0",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 377,
          "feature_type": "api_endpoint",
          "feature_name": "recent_times = [ep.response_time for ep in self.en...",
          "signature": "recent_times = [ep.response_time for ep in self.endpoints.values() if ep.response_time > 0]",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 383,
          "feature_type": "api_endpoint",
          "feature_name": "def get_endpoint_status(self, endpoint_path: str) ...",
          "signature": "def get_endpoint_status(self, endpoint_path: str) -> Dict[str, Any]:",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 384,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Get detailed status of a specific endpoint.\"\"\"",
          "signature": "\"\"\"Get detailed status of a specific endpoint.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 385,
          "feature_type": "api_endpoint",
          "feature_name": "if endpoint_path not in self.endpoints:",
          "signature": "if endpoint_path not in self.endpoints:",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 386,
          "feature_type": "api_endpoint",
          "feature_name": "return {'error': 'Endpoint not found'}",
          "signature": "return {'error': 'Endpoint not found'}",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 388,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint = self.endpoints[endpoint_path]",
          "signature": "endpoint = self.endpoints[endpoint_path]",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 390,
          "feature_type": "api_endpoint",
          "feature_name": "'endpoint': endpoint.endpoint,",
          "signature": "'endpoint': endpoint.endpoint,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 391,
          "feature_type": "api_endpoint",
          "feature_name": "'name': endpoint.name,",
          "signature": "'name': endpoint.name,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 392,
          "feature_type": "api_endpoint",
          "feature_name": "'status': endpoint.status,",
          "signature": "'status': endpoint.status,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 393,
          "feature_type": "api_endpoint",
          "feature_name": "'availability': endpoint.availability,",
          "signature": "'availability': endpoint.availability,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 394,
          "feature_type": "api_endpoint",
          "feature_name": "'success_rate': endpoint.success_rate,",
          "signature": "'success_rate': endpoint.success_rate,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 395,
          "feature_type": "api_endpoint",
          "feature_name": "'response_time': endpoint.response_time,",
          "signature": "'response_time': endpoint.response_time,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 396,
          "feature_type": "api_endpoint",
          "feature_name": "'last_check': endpoint.last_check.isoformat(),",
          "signature": "'last_check': endpoint.last_check.isoformat(),",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 397,
          "feature_type": "api_endpoint",
          "feature_name": "'frontend_compatible': endpoint.frontend_compatibl...",
          "signature": "'frontend_compatible': endpoint.frontend_compatible,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 398,
          "feature_type": "api_endpoint",
          "feature_name": "'has_data': endpoint.has_data,",
          "signature": "'has_data': endpoint.has_data,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 399,
          "feature_type": "api_endpoint",
          "feature_name": "'last_error': endpoint.last_error",
          "signature": "'last_error': endpoint.last_error",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 416,
          "feature_type": "api_endpoint",
          "feature_name": "for endpoint in self.endpoints.values():",
          "signature": "for endpoint in self.endpoints.values():",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 417,
          "feature_type": "api_endpoint",
          "feature_name": "if endpoint.status == 'down':",
          "signature": "if endpoint.status == 'down':",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 419,
          "feature_type": "api_endpoint",
          "feature_name": "'type': 'endpoint_down',",
          "signature": "'type': 'endpoint_down',",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 421,
          "feature_type": "api_endpoint",
          "feature_name": "'endpoint': endpoint.endpoint,",
          "signature": "'endpoint': endpoint.endpoint,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 422,
          "feature_type": "api_endpoint",
          "feature_name": "'name': endpoint.name,",
          "signature": "'name': endpoint.name,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 423,
          "feature_type": "api_endpoint",
          "feature_name": "'error': endpoint.last_error,",
          "signature": "'error': endpoint.last_error,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 424,
          "feature_type": "api_endpoint",
          "feature_name": "'recommendation': 'Check endpoint implementation a...",
          "signature": "'recommendation': 'Check endpoint implementation and routing'",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 427,
          "feature_type": "api_endpoint",
          "feature_name": "elif endpoint.status == 'degraded':",
          "signature": "elif endpoint.status == 'degraded':",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 429,
          "feature_type": "api_endpoint",
          "feature_name": "'type': 'endpoint_degraded',",
          "signature": "'type': 'endpoint_degraded',",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 431,
          "feature_type": "api_endpoint",
          "feature_name": "'endpoint': endpoint.endpoint,",
          "signature": "'endpoint': endpoint.endpoint,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 432,
          "feature_type": "api_endpoint",
          "feature_name": "'name': endpoint.name,",
          "signature": "'name': endpoint.name,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 433,
          "feature_type": "api_endpoint",
          "feature_name": "'error': endpoint.last_error,",
          "signature": "'error': endpoint.last_error,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 434,
          "feature_type": "api_endpoint",
          "feature_name": "'recommendation': 'Review endpoint response format...",
          "signature": "'recommendation': 'Review endpoint response format'",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 437,
          "feature_type": "api_endpoint",
          "feature_name": "elif not endpoint.frontend_compatible:",
          "signature": "elif not endpoint.frontend_compatible:",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 441,
          "feature_type": "api_endpoint",
          "feature_name": "'endpoint': endpoint.endpoint,",
          "signature": "'endpoint': endpoint.endpoint,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 442,
          "feature_type": "api_endpoint",
          "feature_name": "'name': endpoint.name,",
          "signature": "'name': endpoint.name,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 446,
          "feature_type": "api_endpoint",
          "feature_name": "elif not endpoint.has_data and endpoint.status == ...",
          "signature": "elif not endpoint.has_data and endpoint.status == 'healthy':",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 450,
          "feature_type": "api_endpoint",
          "feature_name": "'endpoint': endpoint.endpoint,",
          "signature": "'endpoint': endpoint.endpoint,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 451,
          "feature_type": "api_endpoint",
          "feature_name": "'name': endpoint.name,",
          "signature": "'name': endpoint.name,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 452,
          "feature_type": "api_endpoint",
          "feature_name": "'recommendation': 'Endpoint is healthy but returni...",
          "signature": "'recommendation': 'Endpoint is healthy but returning no data - may need data population'",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 464,
          "feature_type": "api_endpoint",
          "feature_name": "results = self.check_all_endpoints()",
          "signature": "results = self.check_all_endpoints()",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 498,
          "feature_type": "api_endpoint",
          "feature_name": "results = health_monitor.check_all_endpoints()",
          "signature": "results = health_monitor.check_all_endpoints()",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 505,
          "feature_type": "api_endpoint",
          "feature_name": "'endpoints': {",
          "signature": "'endpoints': {",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 521,
          "feature_type": "api_endpoint",
          "feature_name": "@health_monitor_bp.route('/endpoints', methods=['G...",
          "signature": "@health_monitor_bp.route('/endpoints', methods=['GET'])",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 522,
          "feature_type": "api_endpoint",
          "feature_name": "def list_all_endpoints():",
          "signature": "def list_all_endpoints():",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 523,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"List all monitored endpoints with their status....",
          "signature": "\"\"\"List all monitored endpoints with their status.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 525,
          "feature_type": "api_endpoint",
          "feature_name": "endpoints_status = {}",
          "signature": "endpoints_status = {}",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 527,
          "feature_type": "api_endpoint",
          "feature_name": "for endpoint_path in health_monitor.endpoints:",
          "signature": "for endpoint_path in health_monitor.endpoints:",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 528,
          "feature_type": "api_endpoint",
          "feature_name": "endpoints_status[endpoint_path] = health_monitor.g...",
          "signature": "endpoints_status[endpoint_path] = health_monitor.get_endpoint_status(endpoint_path)",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 532,
          "feature_type": "api_endpoint",
          "feature_name": "'endpoints': endpoints_status,",
          "signature": "'endpoints': endpoints_status,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 533,
          "feature_type": "api_endpoint",
          "feature_name": "'total': len(endpoints_status)",
          "signature": "'total': len(endpoints_status)",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 541,
          "feature_type": "api_endpoint",
          "feature_name": "@health_monitor_bp.route('/endpoints/<path:endpoin...",
          "signature": "@health_monitor_bp.route('/endpoints/<path:endpoint_path>', methods=['GET'])",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 542,
          "feature_type": "api_endpoint",
          "feature_name": "def get_endpoint_detail(endpoint_path):",
          "signature": "def get_endpoint_detail(endpoint_path):",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 543,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Get detailed status of a specific endpoint.\"\"\"",
          "signature": "\"\"\"Get detailed status of a specific endpoint.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 546,
          "feature_type": "api_endpoint",
          "feature_name": "if not endpoint_path.startswith('/'):",
          "signature": "if not endpoint_path.startswith('/'):",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 547,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint_path = '/' + endpoint_path",
          "signature": "endpoint_path = '/' + endpoint_path",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 549,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint_status = health_monitor.get_endpoint_stat...",
          "signature": "endpoint_status = health_monitor.get_endpoint_status(endpoint_path)",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 551,
          "feature_type": "api_endpoint",
          "feature_name": "if 'error' in endpoint_status:",
          "signature": "if 'error' in endpoint_status:",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 554,
          "feature_type": "api_endpoint",
          "feature_name": "'error': endpoint_status['error']",
          "signature": "'error': endpoint_status['error']",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 559,
          "feature_type": "api_endpoint",
          "feature_name": "'endpoint': endpoint_status",
          "signature": "'endpoint': endpoint_status",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 569,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Run immediate health check on all endpoints.\"\"\"",
          "signature": "\"\"\"Run immediate health check on all endpoints.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 571,
          "feature_type": "api_endpoint",
          "feature_name": "results = health_monitor.check_all_endpoints()",
          "signature": "results = health_monitor.check_all_endpoints()",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 577,
          "feature_type": "api_endpoint",
          "feature_name": "'healthy': [{'endpoint': ep.endpoint, 'name': ep.n...",
          "signature": "'healthy': [{'endpoint': ep.endpoint, 'name': ep.name} for ep in results['healthy']],",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 578,
          "feature_type": "api_endpoint",
          "feature_name": "'degraded': [{'endpoint': ep.endpoint, 'name': ep....",
          "signature": "'degraded': [{'endpoint': ep.endpoint, 'name': ep.name, 'error': ep.last_error} for ep in results['degraded']],",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 579,
          "feature_type": "api_endpoint",
          "feature_name": "'down': [{'endpoint': ep.endpoint, 'name': ep.name...",
          "signature": "'down': [{'endpoint': ep.endpoint, 'name': ep.name, 'error': ep.last_error} for ep in results['down']]",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 649,
          "feature_type": "api_endpoint",
          "feature_name": "'endpoints_registered': len(health_monitor.endpoin...",
          "signature": "'endpoints_registered': len(health_monitor.endpoints),",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\backend_health_monitor.py",
          "line_number": 656,
          "feature_type": "api_endpoint",
          "feature_name": "'EndpointHealth',",
          "signature": "'EndpointHealth',",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\comprehensive_monitoring.py",
          "line_number": 20,
          "feature_type": "class",
          "feature_name": "ComprehensiveMonitoringAPI",
          "signature": "class ComprehensiveMonitoringAPI",
          "context": "Group: api_endpoints, Methods: ['__init__', '_setup_routes']"
        },
        {
          "file_path": "dashboard\\api\\comprehensive_monitoring.py",
          "line_number": 23,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self, aggregator, delivery_guarantee, realtime_tracker, observability_metrics)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\comprehensive_monitoring.py",
          "line_number": 43,
          "feature_type": "function",
          "feature_name": "_setup_routes",
          "signature": "def _setup_routes(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\comprehensive_monitoring.py",
          "line_number": 47,
          "feature_type": "function",
          "feature_name": "system_overview",
          "signature": "def system_overview()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\comprehensive_monitoring.py",
          "line_number": 158,
          "feature_type": "function",
          "feature_name": "analytics_flow_status",
          "signature": "def analytics_flow_status()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\comprehensive_monitoring.py",
          "line_number": 198,
          "feature_type": "function",
          "feature_name": "analytics_journey",
          "signature": "def analytics_journey(analytics_id)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\comprehensive_monitoring.py",
          "line_number": 254,
          "feature_type": "function",
          "feature_name": "component_performance",
          "signature": "def component_performance(component)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\comprehensive_monitoring.py",
          "line_number": 317,
          "feature_type": "function",
          "feature_name": "comprehensive_delivery_test",
          "signature": "def comprehensive_delivery_test()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\comprehensive_monitoring.py",
          "line_number": 444,
          "feature_type": "function",
          "feature_name": "health_dashboard",
          "signature": "def health_dashboard()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\comprehensive_monitoring.py",
          "line_number": 578,
          "feature_type": "function",
          "feature_name": "system_alerts",
          "signature": "def system_alerts()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\comprehensive_monitoring.py",
          "line_number": 5,
          "feature_type": "api_endpoint",
          "feature_name": "Advanced monitoring endpoints that provide complet...",
          "signature": "Advanced monitoring endpoints that provide complete visibility into",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\coverage.py",
          "line_number": 25,
          "feature_type": "class",
          "feature_name": "CoverageAPI",
          "signature": "class CoverageAPI",
          "context": "Group: api_endpoints, Methods: ['__init__', '_setup_routes', '_get_module_list', '_generate_coverage_distribution', '_generate_coverage_heatmap', '_generate_coverage_trends', '_generate_risk_matrix', '_generate_branch_analysis', '_calculate_directory_coverage', '_calculate_file_type_coverage', '_generate_sunburst_data', '_coverage_by_complexity', '_branch_hit_distribution', '_calculate_velocity_chart', '_priority_distribution', '_effort_to_hours', '_impact_to_number', '_generate_coverage_recommendations']"
        },
        {
          "file_path": "dashboard\\api\\coverage.py",
          "line_number": 28,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\coverage.py",
          "line_number": 35,
          "feature_type": "function",
          "feature_name": "_setup_routes",
          "signature": "def _setup_routes(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\coverage.py",
          "line_number": 364,
          "feature_type": "function",
          "feature_name": "_get_module_list",
          "signature": "def _get_module_list(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\coverage.py",
          "line_number": 371,
          "feature_type": "function",
          "feature_name": "_generate_coverage_distribution",
          "signature": "def _generate_coverage_distribution(self, data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\coverage.py",
          "line_number": 388,
          "feature_type": "function",
          "feature_name": "_generate_coverage_heatmap",
          "signature": "def _generate_coverage_heatmap(self, data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\coverage.py",
          "line_number": 402,
          "feature_type": "function",
          "feature_name": "_generate_coverage_trends",
          "signature": "def _generate_coverage_trends(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\coverage.py",
          "line_number": 419,
          "feature_type": "function",
          "feature_name": "_generate_risk_matrix",
          "signature": "def _generate_risk_matrix(self, data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\coverage.py",
          "line_number": 432,
          "feature_type": "function",
          "feature_name": "_generate_branch_analysis",
          "signature": "def _generate_branch_analysis(self, data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\coverage.py",
          "line_number": 443,
          "feature_type": "function",
          "feature_name": "_calculate_directory_coverage",
          "signature": "def _calculate_directory_coverage(self, heatmap_data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\coverage.py",
          "line_number": 461,
          "feature_type": "function",
          "feature_name": "_calculate_file_type_coverage",
          "signature": "def _calculate_file_type_coverage(self, heatmap_data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\coverage.py",
          "line_number": 475,
          "feature_type": "function",
          "feature_name": "_generate_sunburst_data",
          "signature": "def _generate_sunburst_data(self, heatmap_data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\coverage.py",
          "line_number": 495,
          "feature_type": "function",
          "feature_name": "_coverage_by_complexity",
          "signature": "def _coverage_by_complexity(self, branches)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\coverage.py",
          "line_number": 506,
          "feature_type": "function",
          "feature_name": "_branch_hit_distribution",
          "signature": "def _branch_hit_distribution(self, branches)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\coverage.py",
          "line_number": 524,
          "feature_type": "function",
          "feature_name": "_calculate_velocity_chart",
          "signature": "def _calculate_velocity_chart(self, trends)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\coverage.py",
          "line_number": 535,
          "feature_type": "function",
          "feature_name": "_priority_distribution",
          "signature": "def _priority_distribution(self, recommendations)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\coverage.py",
          "line_number": 545,
          "feature_type": "function",
          "feature_name": "_effort_to_hours",
          "signature": "def _effort_to_hours(self, effort_str)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\coverage.py",
          "line_number": 553,
          "feature_type": "function",
          "feature_name": "_impact_to_number",
          "signature": "def _impact_to_number(self, impact)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\coverage.py",
          "line_number": 557,
          "feature_type": "function",
          "feature_name": "_generate_coverage_recommendations",
          "signature": "def _generate_coverage_recommendations(self, coverage_data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\coverage.py",
          "line_number": 39,
          "feature_type": "function",
          "feature_name": "coverage_intelligence",
          "signature": "def coverage_intelligence()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\coverage.py",
          "line_number": 106,
          "feature_type": "function",
          "feature_name": "coverage_heatmap",
          "signature": "def coverage_heatmap()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\coverage.py",
          "line_number": 150,
          "feature_type": "function",
          "feature_name": "branch_analysis",
          "signature": "def branch_analysis()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\coverage.py",
          "line_number": 213,
          "feature_type": "function",
          "feature_name": "coverage_trends",
          "signature": "def coverage_trends()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\coverage.py",
          "line_number": 282,
          "feature_type": "function",
          "feature_name": "coverage_recommendations",
          "signature": "def coverage_recommendations()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\coverage.py",
          "line_number": 26,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Coverage Intelligence API endpoints.\"\"\"",
          "signature": "\"\"\"Coverage Intelligence API endpoints.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 64,
          "feature_type": "class",
          "feature_name": "CrewRole",
          "signature": "class CrewRole",
          "context": "Group: api_endpoints, Methods: []"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 74,
          "feature_type": "class",
          "feature_name": "SwarmType",
          "signature": "class SwarmType",
          "context": "Group: api_endpoints, Methods: []"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 83,
          "feature_type": "class",
          "feature_name": "CrewAgent",
          "signature": "class CrewAgent",
          "context": "Group: api_endpoints, Methods: []"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 95,
          "feature_type": "class",
          "feature_name": "CrewTask",
          "signature": "class CrewTask",
          "context": "Group: api_endpoints, Methods: []"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 105,
          "feature_type": "class",
          "feature_name": "TestMasterCrew",
          "signature": "class TestMasterCrew",
          "context": "Group: api_endpoints, Methods: ['__init__', '_initialize_testmaster_agents', 'create_crew', 'execute_crew_task', '_execute_hierarchical_task', '_execute_concurrent_task', '_execute_consensus_task', '_execute_sequential_task', '_generate_task_output', '_generate_agent_contribution', '_generate_agent_analysis', '_aggregate_concurrent_results', '_reach_consensus', '_execute_sequential_step', 'get_crew_status']"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 616,
          "feature_type": "function",
          "feature_name": "list_crews",
          "signature": "def list_crews()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 643,
          "feature_type": "function",
          "feature_name": "create_crew",
          "signature": "def create_crew()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 677,
          "feature_type": "function",
          "feature_name": "get_crew_status",
          "signature": "def get_crew_status(crew_id)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 692,
          "feature_type": "function",
          "feature_name": "execute_crew_task",
          "signature": "def execute_crew_task(crew_id)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 712,
          "feature_type": "function",
          "feature_name": "list_agents",
          "signature": "def list_agents()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 738,
          "feature_type": "function",
          "feature_name": "list_swarm_types",
          "signature": "def list_swarm_types()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 766,
          "feature_type": "function",
          "feature_name": "get_crew_analytics",
          "signature": "def get_crew_analytics()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 110,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 119,
          "feature_type": "function",
          "feature_name": "_initialize_testmaster_agents",
          "signature": "def _initialize_testmaster_agents(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 202,
          "feature_type": "function",
          "feature_name": "create_crew",
          "signature": "def create_crew(self, crew_config)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 242,
          "feature_type": "function",
          "feature_name": "execute_crew_task",
          "signature": "def execute_crew_task(self, crew_id, task)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 370,
          "feature_type": "function",
          "feature_name": "_execute_hierarchical_task",
          "signature": "def _execute_hierarchical_task(self, crew, task)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 403,
          "feature_type": "function",
          "feature_name": "_execute_concurrent_task",
          "signature": "def _execute_concurrent_task(self, crew, task)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 429,
          "feature_type": "function",
          "feature_name": "_execute_consensus_task",
          "signature": "def _execute_consensus_task(self, crew, task)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 460,
          "feature_type": "function",
          "feature_name": "_execute_sequential_task",
          "signature": "def _execute_sequential_task(self, crew, task)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 493,
          "feature_type": "function",
          "feature_name": "_generate_task_output",
          "signature": "def _generate_task_output(self, agent, task)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 535,
          "feature_type": "function",
          "feature_name": "_generate_agent_contribution",
          "signature": "def _generate_agent_contribution(self, agent, task)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 545,
          "feature_type": "function",
          "feature_name": "_generate_agent_analysis",
          "signature": "def _generate_agent_analysis(self, agent, task)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 554,
          "feature_type": "function",
          "feature_name": "_aggregate_concurrent_results",
          "signature": "def _aggregate_concurrent_results(self, results, task)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 567,
          "feature_type": "function",
          "feature_name": "_reach_consensus",
          "signature": "def _reach_consensus(self, analyses, task)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 584,
          "feature_type": "function",
          "feature_name": "_execute_sequential_step",
          "signature": "def _execute_sequential_step(self, agent, step_input, task)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 588,
          "feature_type": "function",
          "feature_name": "get_crew_status",
          "signature": "def get_crew_status(self, crew_id)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 30,
          "feature_type": "function",
          "feature_name": "enhanced_api_endpoint",
          "signature": "def enhanced_api_endpoint()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 34,
          "feature_type": "function",
          "feature_name": "handle_api_error",
          "signature": "def handle_api_error(func)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 36,
          "feature_type": "function",
          "feature_name": "get_real_data_extractor",
          "signature": "def get_real_data_extractor()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 44,
          "feature_type": "class",
          "feature_name": "MockObservability",
          "signature": "class MockObservability",
          "context": "Group: api_endpoints, Methods: ['track_agent_performance', 'track_event', 'start_session']"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 54,
          "feature_type": "function",
          "feature_name": "track_performance",
          "signature": "def track_performance()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 31,
          "feature_type": "function",
          "feature_name": "decorator",
          "signature": "def decorator(func)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 45,
          "feature_type": "function",
          "feature_name": "track_agent_performance",
          "signature": "def track_agent_performance(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 47,
          "feature_type": "function",
          "feature_name": "track_event",
          "signature": "def track_event(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 49,
          "feature_type": "function",
          "feature_name": "start_session",
          "signature": "def start_session(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 55,
          "feature_type": "function",
          "feature_name": "decorator",
          "signature": "def decorator(func)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 27,
          "feature_type": "api_endpoint",
          "feature_name": "from core.error_handler import enhanced_api_endpoi...",
          "signature": "from core.error_handler import enhanced_api_endpoint, handle_api_error",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 30,
          "feature_type": "api_endpoint",
          "feature_name": "def enhanced_api_endpoint(*args, **kwargs):",
          "signature": "def enhanced_api_endpoint(*args, **kwargs):",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\crew_orchestration.py",
          "line_number": 502,
          "feature_type": "api_endpoint",
          "feature_name": "'Add rate limiting to API endpoints'",
          "signature": "'Add rate limiting to API endpoints'",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\enhanced_analytics.py",
          "line_number": 24,
          "feature_type": "class",
          "feature_name": "TimeSeriesPoint",
          "signature": "class TimeSeriesPoint",
          "context": "Group: api_endpoints, Methods: []"
        },
        {
          "file_path": "dashboard\\api\\enhanced_analytics.py",
          "line_number": 31,
          "feature_type": "class",
          "feature_name": "AnalyticsMetric",
          "signature": "class AnalyticsMetric",
          "context": "Group: api_endpoints, Methods: ['__post_init__']"
        },
        {
          "file_path": "dashboard\\api\\enhanced_analytics.py",
          "line_number": 58,
          "feature_type": "class",
          "feature_name": "EnhancedAnalyticsEngine",
          "signature": "class EnhancedAnalyticsEngine",
          "context": "Group: api_endpoints, Methods: ['__init__', 'record_metric', 'record_event', 'get_metric_trend', 'get_system_overview', 'get_performance_dashboard', 'get_agent_analytics', 'get_real_time_metrics', 'get_historical_analysis', '_generate_alerts', '_format_duration', '_percentile']"
        },
        {
          "file_path": "dashboard\\api\\enhanced_analytics.py",
          "line_number": 426,
          "feature_type": "function",
          "feature_name": "get_analytics_overview",
          "signature": "def get_analytics_overview()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_analytics.py",
          "line_number": 441,
          "feature_type": "function",
          "feature_name": "get_dashboard_data",
          "signature": "def get_dashboard_data()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_analytics.py",
          "line_number": 456,
          "feature_type": "function",
          "feature_name": "get_realtime_metrics",
          "signature": "def get_realtime_metrics()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_analytics.py",
          "line_number": 473,
          "feature_type": "function",
          "feature_name": "get_agent_analytics",
          "signature": "def get_agent_analytics()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_analytics.py",
          "line_number": 488,
          "feature_type": "function",
          "feature_name": "get_metric_trend",
          "signature": "def get_metric_trend(metric_name)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_analytics.py",
          "line_number": 511,
          "feature_type": "function",
          "feature_name": "get_metric_history",
          "signature": "def get_metric_history(metric_name)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_analytics.py",
          "line_number": 528,
          "feature_type": "function",
          "feature_name": "record_analytics_data",
          "signature": "def record_analytics_data()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_analytics.py",
          "line_number": 560,
          "feature_type": "function",
          "feature_name": "enhanced_analytics_health",
          "signature": "def enhanced_analytics_health()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_analytics.py",
          "line_number": 42,
          "feature_type": "function",
          "feature_name": "__post_init__",
          "signature": "def __post_init__(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_analytics.py",
          "line_number": 63,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_analytics.py",
          "line_number": 104,
          "feature_type": "function",
          "feature_name": "record_metric",
          "signature": "def record_metric(self, name, value, category, metadata)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_analytics.py",
          "line_number": 125,
          "feature_type": "function",
          "feature_name": "record_event",
          "signature": "def record_event(self, event_type, data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_analytics.py",
          "line_number": 138,
          "feature_type": "function",
          "feature_name": "get_metric_trend",
          "signature": "def get_metric_trend(self, name, window)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_analytics.py",
          "line_number": 182,
          "feature_type": "function",
          "feature_name": "get_system_overview",
          "signature": "def get_system_overview(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_analytics.py",
          "line_number": 217,
          "feature_type": "function",
          "feature_name": "get_performance_dashboard",
          "signature": "def get_performance_dashboard(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_analytics.py",
          "line_number": 254,
          "feature_type": "function",
          "feature_name": "get_agent_analytics",
          "signature": "def get_agent_analytics(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_analytics.py",
          "line_number": 285,
          "feature_type": "function",
          "feature_name": "get_real_time_metrics",
          "signature": "def get_real_time_metrics(self, window_minutes)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_analytics.py",
          "line_number": 323,
          "feature_type": "function",
          "feature_name": "get_historical_analysis",
          "signature": "def get_historical_analysis(self, metric_name, hours)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_analytics.py",
          "line_number": 364,
          "feature_type": "function",
          "feature_name": "_generate_alerts",
          "signature": "def _generate_alerts(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_analytics.py",
          "line_number": 394,
          "feature_type": "function",
          "feature_name": "_format_duration",
          "signature": "def _format_duration(self, seconds)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_analytics.py",
          "line_number": 405,
          "feature_type": "function",
          "feature_name": "_percentile",
          "signature": "def _percentile(self, values, p)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 25,
          "feature_type": "class",
          "feature_name": "TelemetrySpan",
          "signature": "class TelemetrySpan",
          "context": "Group: api_endpoints, Methods: ['__post_init__', 'duration', 'finish']"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 55,
          "feature_type": "class",
          "feature_name": "TelemetryMetric",
          "signature": "class TelemetryMetric",
          "context": "Group: api_endpoints, Methods: ['__post_init__']"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 66,
          "feature_type": "class",
          "feature_name": "EnhancedTelemetryCollector",
          "signature": "class EnhancedTelemetryCollector",
          "context": "Group: api_endpoints, Methods: ['__init__', 'create_span', 'finish_span', 'trace', 'trace_agent_execution', 'trace_crew_execution', 'trace_swarm_orchestration', 'record_metric', 'record_cost', 'record_event', 'increment_counter', 'get_metrics', 'get_spans', 'get_custom_metrics', 'get_events', 'export_data', '_generate_summary', 'reset', 'enable', 'disable']"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 385,
          "feature_type": "function",
          "feature_name": "trace_operation",
          "signature": "def trace_operation(operation_name, telemetry_collector)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 415,
          "feature_type": "function",
          "feature_name": "get_enhanced_metrics",
          "signature": "def get_enhanced_metrics()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 432,
          "feature_type": "function",
          "feature_name": "get_telemetry_spans",
          "signature": "def get_telemetry_spans()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 450,
          "feature_type": "function",
          "feature_name": "get_custom_telemetry_metrics",
          "signature": "def get_custom_telemetry_metrics()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 468,
          "feature_type": "function",
          "feature_name": "get_telemetry_events",
          "signature": "def get_telemetry_events()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 486,
          "feature_type": "function",
          "feature_name": "export_telemetry_data",
          "signature": "def export_telemetry_data()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 506,
          "feature_type": "function",
          "feature_name": "record_custom_metric",
          "signature": "def record_custom_metric()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 533,
          "feature_type": "function",
          "feature_name": "record_custom_event",
          "signature": "def record_custom_event()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 559,
          "feature_type": "function",
          "feature_name": "control_telemetry",
          "signature": "def control_telemetry()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 595,
          "feature_type": "function",
          "feature_name": "enhanced_telemetry_health",
          "signature": "def enhanced_telemetry_health()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 36,
          "feature_type": "function",
          "feature_name": "__post_init__",
          "signature": "def __post_init__(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 41,
          "feature_type": "function",
          "feature_name": "duration",
          "signature": "def duration(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 47,
          "feature_type": "function",
          "feature_name": "finish",
          "signature": "def finish(self, status, error)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 62,
          "feature_type": "function",
          "feature_name": "__post_init__",
          "signature": "def __post_init__(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 72,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self, service_name, backend, exporter)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 113,
          "feature_type": "function",
          "feature_name": "create_span",
          "signature": "def create_span(self, name, parent_id, metadata)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 136,
          "feature_type": "function",
          "feature_name": "finish_span",
          "signature": "def finish_span(self, span_id, status, error, metadata)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 175,
          "feature_type": "function",
          "feature_name": "trace",
          "signature": "def trace(self, name)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 185,
          "feature_type": "function",
          "feature_name": "trace_agent_execution",
          "signature": "def trace_agent_execution(self, agent_name)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 192,
          "feature_type": "function",
          "feature_name": "trace_crew_execution",
          "signature": "def trace_crew_execution(self, crew_id)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 199,
          "feature_type": "function",
          "feature_name": "trace_swarm_orchestration",
          "signature": "def trace_swarm_orchestration(self, swarm_id)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 206,
          "feature_type": "function",
          "feature_name": "record_metric",
          "signature": "def record_metric(self, name, value, tags)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 224,
          "feature_type": "function",
          "feature_name": "record_cost",
          "signature": "def record_cost(self, cost, model, tokens, operation)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 238,
          "feature_type": "function",
          "feature_name": "record_event",
          "signature": "def record_event(self, event_type, data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 254,
          "feature_type": "function",
          "feature_name": "increment_counter",
          "signature": "def increment_counter(self, counter_name, value)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 265,
          "feature_type": "function",
          "feature_name": "get_metrics",
          "signature": "def get_metrics(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 277,
          "feature_type": "function",
          "feature_name": "get_spans",
          "signature": "def get_spans(self, include_active)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 287,
          "feature_type": "function",
          "feature_name": "get_custom_metrics",
          "signature": "def get_custom_metrics(self, metric_name)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 294,
          "feature_type": "function",
          "feature_name": "get_events",
          "signature": "def get_events(self, event_type)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 301,
          "feature_type": "function",
          "feature_name": "export_data",
          "signature": "def export_data(self, format)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 319,
          "feature_type": "function",
          "feature_name": "_generate_summary",
          "signature": "def _generate_summary(self, data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 351,
          "feature_type": "function",
          "feature_name": "reset",
          "signature": "def reset(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 373,
          "feature_type": "function",
          "feature_name": "enable",
          "signature": "def enable(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 378,
          "feature_type": "function",
          "feature_name": "disable",
          "signature": "def disable(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 393,
          "feature_type": "function",
          "feature_name": "decorator",
          "signature": "def decorator(func)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\enhanced_telemetry.py",
          "line_number": 395,
          "feature_type": "function",
          "feature_name": "wrapper",
          "signature": "def wrapper()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 18,
          "feature_type": "class",
          "feature_name": "FlowOptimizationAPI",
          "signature": "class FlowOptimizationAPI",
          "context": "Group: api_endpoints, Methods: ['__init__', '_setup_routes', '_generate_critical_path_timeline', '_find_parallel_opportunities', '_generate_dependency_matrix', '_generate_optimization_timeline', '_generate_efficiency_comparison', '_calculate_dependency_depth', '_calculate_coupling', '_calculate_execution_plan', '_generate_gantt_chart', '_calculate_resource_utilization', '_generate_task_timeline', '_aggregate_by_type', '_generate_resolution_timeline', '_effort_to_number', '_impact_to_number']"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 21,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 27,
          "feature_type": "function",
          "feature_name": "_setup_routes",
          "signature": "def _setup_routes(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 486,
          "feature_type": "function",
          "feature_name": "_generate_critical_path_timeline",
          "signature": "def _generate_critical_path_timeline(self, path)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 501,
          "feature_type": "function",
          "feature_name": "_find_parallel_opportunities",
          "signature": "def _find_parallel_opportunities(self, nodes, edges)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 513,
          "feature_type": "function",
          "feature_name": "_generate_dependency_matrix",
          "signature": "def _generate_dependency_matrix(self, nodes, edges)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 525,
          "feature_type": "function",
          "feature_name": "_generate_optimization_timeline",
          "signature": "def _generate_optimization_timeline(self, optimizations)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 538,
          "feature_type": "function",
          "feature_name": "_generate_efficiency_comparison",
          "signature": "def _generate_efficiency_comparison(self, optimizations)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 549,
          "feature_type": "function",
          "feature_name": "_calculate_dependency_depth",
          "signature": "def _calculate_dependency_depth(self, modules, dependencies)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 561,
          "feature_type": "function",
          "feature_name": "_calculate_coupling",
          "signature": "def _calculate_coupling(self, modules, dependencies)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 575,
          "feature_type": "function",
          "feature_name": "_calculate_execution_plan",
          "signature": "def _calculate_execution_plan(self, tasks)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 590,
          "feature_type": "function",
          "feature_name": "_generate_gantt_chart",
          "signature": "def _generate_gantt_chart(self, execution_plan)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 606,
          "feature_type": "function",
          "feature_name": "_calculate_resource_utilization",
          "signature": "def _calculate_resource_utilization(self, tasks)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 618,
          "feature_type": "function",
          "feature_name": "_generate_task_timeline",
          "signature": "def _generate_task_timeline(self, execution_plan)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 631,
          "feature_type": "function",
          "feature_name": "_aggregate_by_type",
          "signature": "def _aggregate_by_type(self, bottlenecks)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 644,
          "feature_type": "function",
          "feature_name": "_generate_resolution_timeline",
          "signature": "def _generate_resolution_timeline(self, bottlenecks)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 656,
          "feature_type": "function",
          "feature_name": "_effort_to_number",
          "signature": "def _effort_to_number(self, effort)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 660,
          "feature_type": "function",
          "feature_name": "_impact_to_number",
          "signature": "def _impact_to_number(self, impact)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 31,
          "feature_type": "function",
          "feature_name": "workflow_dag",
          "signature": "def workflow_dag()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 114,
          "feature_type": "function",
          "feature_name": "flow_optimizer",
          "signature": "def flow_optimizer()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 199,
          "feature_type": "function",
          "feature_name": "dependency_graph",
          "signature": "def dependency_graph()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 260,
          "feature_type": "function",
          "feature_name": "parallel_execution",
          "signature": "def parallel_execution()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 313,
          "feature_type": "function",
          "feature_name": "bottleneck_analysis",
          "signature": "def bottleneck_analysis()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 378,
          "feature_type": "function",
          "feature_name": "workflow_status",
          "signature": "def workflow_status()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 426,
          "feature_type": "function",
          "feature_name": "workflow_dependencies",
          "signature": "def workflow_dependencies()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 19,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Flow Optimization and DAG Visualization API end...",
          "signature": "\"\"\"Flow Optimization and DAG Visualization API endpoints.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\flow_optimization.py",
          "line_number": 204,
          "feature_type": "api_endpoint",
          "feature_name": "'core.engine', 'core.processor', 'api.endpoints', ...",
          "signature": "'core.engine', 'core.processor', 'api.endpoints', 'api.auth',",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 20,
          "feature_type": "class",
          "feature_name": "ResponseStatus",
          "signature": "class ResponseStatus",
          "context": "Group: api_endpoints, Methods: []"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 29,
          "feature_type": "class",
          "feature_name": "StandardResponse",
          "signature": "class StandardResponse",
          "context": "Group: api_endpoints, Methods: ['__post_init__']"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 44,
          "feature_type": "class",
          "feature_name": "PaginatedResponse",
          "signature": "class PaginatedResponse",
          "context": "Group: api_endpoints, Methods: []"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 55,
          "feature_type": "class",
          "feature_name": "MetricsData",
          "signature": "class MetricsData",
          "context": "Group: api_endpoints, Methods: ['__post_init__']"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 70,
          "feature_type": "class",
          "feature_name": "HealthStatus",
          "signature": "class HealthStatus",
          "context": "Group: api_endpoints, Methods: ['__post_init__']"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 87,
          "feature_type": "class",
          "feature_name": "FrontendDataContract",
          "signature": "class FrontendDataContract",
          "context": "Group: api_endpoints, Methods: ['__init__', 'create_standard_response', 'create_success_response', 'create_error_response', 'create_health_response', 'create_paginated_response', 'validate_agent_data', 'validate_crew_data', 'validate_metrics_data', 'ensure_response_format', 'add_response_headers']"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 286,
          "feature_type": "function",
          "feature_name": "validate_data",
          "signature": "def validate_data()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 320,
          "feature_type": "function",
          "feature_name": "get_data_schemas",
          "signature": "def get_data_schemas()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 337,
          "feature_type": "function",
          "feature_name": "transform_response",
          "signature": "def transform_response()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 351,
          "feature_type": "function",
          "feature_name": "data_contract_health",
          "signature": "def data_contract_health()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 363,
          "feature_type": "function",
          "feature_name": "standardize_response_middleware",
          "signature": "def standardize_response_middleware()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 37,
          "feature_type": "function",
          "feature_name": "__post_init__",
          "signature": "def __post_init__(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 63,
          "feature_type": "function",
          "feature_name": "__post_init__",
          "signature": "def __post_init__(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 79,
          "feature_type": "function",
          "feature_name": "__post_init__",
          "signature": "def __post_init__(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 92,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 115,
          "feature_type": "function",
          "feature_name": "create_standard_response",
          "signature": "def create_standard_response(self, status, data, message, metadata)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 129,
          "feature_type": "function",
          "feature_name": "create_success_response",
          "signature": "def create_success_response(self, data, message)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 133,
          "feature_type": "function",
          "feature_name": "create_error_response",
          "signature": "def create_error_response(self, error, details)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 141,
          "feature_type": "function",
          "feature_name": "create_health_response",
          "signature": "def create_health_response(self, service, status, metrics, dependencies)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 154,
          "feature_type": "function",
          "feature_name": "create_paginated_response",
          "signature": "def create_paginated_response(self, items, page, page_size, total_items)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 177,
          "feature_type": "function",
          "feature_name": "validate_agent_data",
          "signature": "def validate_agent_data(self, data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 199,
          "feature_type": "function",
          "feature_name": "validate_crew_data",
          "signature": "def validate_crew_data(self, data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 223,
          "feature_type": "function",
          "feature_name": "validate_metrics_data",
          "signature": "def validate_metrics_data(self, data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 250,
          "feature_type": "function",
          "feature_name": "ensure_response_format",
          "signature": "def ensure_response_format(self, response_data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 271,
          "feature_type": "function",
          "feature_name": "add_response_headers",
          "signature": "def add_response_headers(self, response, cache_seconds)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 365,
          "feature_type": "function",
          "feature_name": "middleware",
          "signature": "def middleware(response)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 5,
          "feature_type": "api_endpoint",
          "feature_name": "Ensures all backend endpoints return consistent, f...",
          "signature": "Ensures all backend endpoints return consistent, frontend-friendly data formats.",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\frontend_data_contracts.py",
          "line_number": 30,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Standard response format for all endpoints.\"\"\"",
          "signature": "\"\"\"Standard response format for all endpoints.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 27,
          "feature_type": "class",
          "feature_name": "HealthCheckAPI",
          "signature": "class HealthCheckAPI",
          "context": "Group: api_endpoints, Methods: ['__init__', '_setup_routes', '_basic_health_check', '_readiness_check', '_liveness_check', '_generate_availability_timeline', '_detailed_health_check', '_components_health_check', '_health_metrics', '_dependencies_check', '_version_info', '_prometheus_health_metrics', '_get_system_health', '_check_database_health', '_check_filesystem_health', '_check_network_health']"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 30,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self, aggregator)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 51,
          "feature_type": "function",
          "feature_name": "_setup_routes",
          "signature": "def _setup_routes(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 99,
          "feature_type": "function",
          "feature_name": "_basic_health_check",
          "signature": "def _basic_health_check(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 138,
          "feature_type": "function",
          "feature_name": "_readiness_check",
          "signature": "def _readiness_check(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 261,
          "feature_type": "function",
          "feature_name": "_liveness_check",
          "signature": "def _liveness_check(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 309,
          "feature_type": "function",
          "feature_name": "_generate_availability_timeline",
          "signature": "def _generate_availability_timeline(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 346,
          "feature_type": "function",
          "feature_name": "_detailed_health_check",
          "signature": "def _detailed_health_check(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 526,
          "feature_type": "function",
          "feature_name": "_components_health_check",
          "signature": "def _components_health_check(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 584,
          "feature_type": "function",
          "feature_name": "_health_metrics",
          "signature": "def _health_metrics(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 615,
          "feature_type": "function",
          "feature_name": "_dependencies_check",
          "signature": "def _dependencies_check(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 639,
          "feature_type": "function",
          "feature_name": "_version_info",
          "signature": "def _version_info(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 664,
          "feature_type": "function",
          "feature_name": "_prometheus_health_metrics",
          "signature": "def _prometheus_health_metrics(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 698,
          "feature_type": "function",
          "feature_name": "_get_system_health",
          "signature": "def _get_system_health(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 716,
          "feature_type": "function",
          "feature_name": "_check_database_health",
          "signature": "def _check_database_health(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 731,
          "feature_type": "function",
          "feature_name": "_check_filesystem_health",
          "signature": "def _check_filesystem_health(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 747,
          "feature_type": "function",
          "feature_name": "_check_network_health",
          "signature": "def _check_network_health(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 55,
          "feature_type": "function",
          "feature_name": "health_check",
          "signature": "def health_check()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 60,
          "feature_type": "function",
          "feature_name": "readiness_check",
          "signature": "def readiness_check()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 65,
          "feature_type": "function",
          "feature_name": "liveness_check",
          "signature": "def liveness_check()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 70,
          "feature_type": "function",
          "feature_name": "detailed_health",
          "signature": "def detailed_health()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 75,
          "feature_type": "function",
          "feature_name": "components_health",
          "signature": "def components_health()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 80,
          "feature_type": "function",
          "feature_name": "health_metrics",
          "signature": "def health_metrics()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 85,
          "feature_type": "function",
          "feature_name": "dependencies_check",
          "signature": "def dependencies_check()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 90,
          "feature_type": "function",
          "feature_name": "version_info",
          "signature": "def version_info()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 95,
          "feature_type": "function",
          "feature_name": "prometheus_metrics",
          "signature": "def prometheus_metrics()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 5,
          "feature_type": "api_endpoint",
          "feature_name": "Comprehensive health check endpoints for monitorin...",
          "signature": "Comprehensive health check endpoints for monitoring all analytics",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 56,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Basic health check endpoint.\"\"\"",
          "signature": "\"\"\"Basic health check endpoint.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 61,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Readiness check endpoint.\"\"\"",
          "signature": "\"\"\"Readiness check endpoint.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 66,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Liveness check endpoint.\"\"\"",
          "signature": "\"\"\"Liveness check endpoint.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\health.py",
          "line_number": 81,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Health metrics endpoint.\"\"\"",
          "signature": "\"\"\"Health metrics endpoint.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\intelligence.py",
          "line_number": 24,
          "feature_type": "class",
          "feature_name": "IntelligenceAPI",
          "signature": "class IntelligenceAPI",
          "context": "Group: api_endpoints, Methods: ['__init__', '_setup_routes', '_generate_heatmap_data', '_generate_flow_data', '_generate_activity_timeline', '_generate_action_frequency', '_generate_performance_scatter', '_calculate_voting_effectiveness', '_calculate_topic_distribution', '_calculate_tradeoffs']"
        },
        {
          "file_path": "dashboard\\api\\intelligence.py",
          "line_number": 27,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\intelligence.py",
          "line_number": 36,
          "feature_type": "function",
          "feature_name": "_setup_routes",
          "signature": "def _setup_routes(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\intelligence.py",
          "line_number": 422,
          "feature_type": "function",
          "feature_name": "_generate_heatmap_data",
          "signature": "def _generate_heatmap_data(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\intelligence.py",
          "line_number": 439,
          "feature_type": "function",
          "feature_name": "_generate_flow_data",
          "signature": "def _generate_flow_data(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\intelligence.py",
          "line_number": 454,
          "feature_type": "function",
          "feature_name": "_generate_activity_timeline",
          "signature": "def _generate_activity_timeline(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\intelligence.py",
          "line_number": 473,
          "feature_type": "function",
          "feature_name": "_generate_action_frequency",
          "signature": "def _generate_action_frequency(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\intelligence.py",
          "line_number": 482,
          "feature_type": "function",
          "feature_name": "_generate_performance_scatter",
          "signature": "def _generate_performance_scatter(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\intelligence.py",
          "line_number": 498,
          "feature_type": "function",
          "feature_name": "_calculate_voting_effectiveness",
          "signature": "def _calculate_voting_effectiveness(self, decisions)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\intelligence.py",
          "line_number": 517,
          "feature_type": "function",
          "feature_name": "_calculate_topic_distribution",
          "signature": "def _calculate_topic_distribution(self, decisions)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\intelligence.py",
          "line_number": 527,
          "feature_type": "function",
          "feature_name": "_calculate_tradeoffs",
          "signature": "def _calculate_tradeoffs(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\intelligence.py",
          "line_number": 40,
          "feature_type": "function",
          "feature_name": "agents_status",
          "signature": "def agents_status()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\intelligence.py",
          "line_number": 123,
          "feature_type": "function",
          "feature_name": "coordination_patterns",
          "signature": "def coordination_patterns()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\intelligence.py",
          "line_number": 228,
          "feature_type": "function",
          "feature_name": "agent_activities",
          "signature": "def agent_activities()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\intelligence.py",
          "line_number": 298,
          "feature_type": "function",
          "feature_name": "consensus_decisions",
          "signature": "def consensus_decisions()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\intelligence.py",
          "line_number": 358,
          "feature_type": "function",
          "feature_name": "optimization_metrics",
          "signature": "def optimization_metrics()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\intelligence.py",
          "line_number": 25,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Multi-Agent Intelligence Dashboard API endpoint...",
          "signature": "\"\"\"Multi-Agent Intelligence Dashboard API endpoints.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\llm.py",
          "line_number": 45,
          "feature_type": "function",
          "feature_name": "init_llm_api",
          "signature": "def init_llm_api(monitor, api_enabled)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\llm.py",
          "line_number": 61,
          "feature_type": "function",
          "feature_name": "get_llm_status",
          "signature": "def get_llm_status()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\llm.py",
          "line_number": 133,
          "feature_type": "function",
          "feature_name": "toggle_llm_mode",
          "signature": "def toggle_llm_mode()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\llm.py",
          "line_number": 186,
          "feature_type": "function",
          "feature_name": "get_llm_metrics",
          "signature": "def get_llm_metrics()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\llm.py",
          "line_number": 229,
          "feature_type": "function",
          "feature_name": "analyze_with_llm",
          "signature": "def analyze_with_llm()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\llm.py",
          "line_number": 287,
          "feature_type": "function",
          "feature_name": "estimate_cost",
          "signature": "def estimate_cost()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\llm.py",
          "line_number": 330,
          "feature_type": "function",
          "feature_name": "toggle_llm_api",
          "signature": "def toggle_llm_api()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\llm.py",
          "line_number": 377,
          "feature_type": "function",
          "feature_name": "get_llm_safety_status",
          "signature": "def get_llm_safety_status()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\llm.py",
          "line_number": 26,
          "feature_type": "function",
          "feature_name": "enhanced_api_endpoint",
          "signature": "def enhanced_api_endpoint()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\llm.py",
          "line_number": 30,
          "feature_type": "function",
          "feature_name": "handle_api_error",
          "signature": "def handle_api_error(func)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\llm.py",
          "line_number": 32,
          "feature_type": "class",
          "feature_name": "ValidationError",
          "signature": "class ValidationError",
          "context": "Group: api_endpoints, Methods: []"
        },
        {
          "file_path": "dashboard\\api\\llm.py",
          "line_number": 27,
          "feature_type": "function",
          "feature_name": "decorator",
          "signature": "def decorator(func)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\llm.py",
          "line_number": 5,
          "feature_type": "api_endpoint",
          "feature_name": "Handles LLM status, toggle, and analysis endpoints...",
          "signature": "Handles LLM status, toggle, and analysis endpoints.",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\llm.py",
          "line_number": 22,
          "feature_type": "api_endpoint",
          "feature_name": "enhanced_api_endpoint, ValidationError, handle_api...",
          "signature": "enhanced_api_endpoint, ValidationError, handle_api_error",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\llm.py",
          "line_number": 26,
          "feature_type": "api_endpoint",
          "feature_name": "def enhanced_api_endpoint(*args, **kwargs):",
          "signature": "def enhanced_api_endpoint(*args, **kwargs):",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\llm.py",
          "line_number": 132,
          "feature_type": "api_endpoint",
          "feature_name": "@enhanced_api_endpoint()",
          "signature": "@enhanced_api_endpoint()",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\monitoring.py",
          "line_number": 16,
          "feature_type": "class",
          "feature_name": "MonitoringAPI",
          "signature": "class MonitoringAPI",
          "context": "Group: api_endpoints, Methods: ['__init__', '_setup_routes']"
        },
        {
          "file_path": "dashboard\\api\\monitoring.py",
          "line_number": 19,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self, aggregator)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\monitoring.py",
          "line_number": 32,
          "feature_type": "function",
          "feature_name": "_setup_routes",
          "signature": "def _setup_routes(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\monitoring.py",
          "line_number": 36,
          "feature_type": "function",
          "feature_name": "robustness_status",
          "signature": "def robustness_status()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\monitoring.py",
          "line_number": 84,
          "feature_type": "function",
          "feature_name": "heartbeat_status",
          "signature": "def heartbeat_status()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\monitoring.py",
          "line_number": 125,
          "feature_type": "function",
          "feature_name": "fallback_status",
          "signature": "def fallback_status()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\monitoring.py",
          "line_number": 170,
          "feature_type": "function",
          "feature_name": "dead_letter_status",
          "signature": "def dead_letter_status()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\monitoring.py",
          "line_number": 194,
          "feature_type": "function",
          "feature_name": "batch_status",
          "signature": "def batch_status()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\monitoring.py",
          "line_number": 218,
          "feature_type": "function",
          "feature_name": "flow_status",
          "signature": "def flow_status()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\monitoring.py",
          "line_number": 242,
          "feature_type": "function",
          "feature_name": "compression_stats",
          "signature": "def compression_stats()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\monitoring.py",
          "line_number": 266,
          "feature_type": "function",
          "feature_name": "test_delivery",
          "signature": "def test_delivery()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\monitoring.py",
          "line_number": 293,
          "feature_type": "class",
          "feature_name": "BatchPriority",
          "signature": "class BatchPriority",
          "context": "Group: api_endpoints, Methods: []"
        },
        {
          "file_path": "dashboard\\api\\monitoring.py",
          "line_number": 337,
          "feature_type": "class",
          "feature_name": "FlowStage",
          "signature": "class FlowStage",
          "context": "Group: api_endpoints, Methods: []"
        },
        {
          "file_path": "dashboard\\api\\monitoring.py",
          "line_number": 339,
          "feature_type": "class",
          "feature_name": "FlowStatus",
          "signature": "class FlowStatus",
          "context": "Group: api_endpoints, Methods: []"
        },
        {
          "file_path": "dashboard\\api\\monitoring.py",
          "line_number": 5,
          "feature_type": "api_endpoint",
          "feature_name": "Comprehensive monitoring endpoints for all robustn...",
          "signature": "Comprehensive monitoring endpoints for all robustness features.",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\monitoring.py",
          "line_number": 17,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Analytics monitoring API endpoints.\"\"\"",
          "signature": "\"\"\"Analytics monitoring API endpoints.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\monitoring.py",
          "line_number": 102,
          "feature_type": "api_endpoint",
          "feature_name": "'endpoint_status': status.get('endpoint_status', {...",
          "signature": "'endpoint_status': status.get('endpoint_status', {})",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\monitoring.py",
          "line_number": 309,
          "feature_type": "api_endpoint",
          "feature_name": "endpoint='main_dashboard',",
          "signature": "endpoint='main_dashboard',",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\observability.py",
          "line_number": 20,
          "feature_type": "class",
          "feature_name": "TestMasterObservability",
          "signature": "class TestMasterObservability",
          "context": "Group: api_endpoints, Methods: ['__init__', 'start_session', 'end_session', 'track_event', 'track_agent_performance', 'get_session_summary', 'get_global_metrics', 'get_performance_analytics']"
        },
        {
          "file_path": "dashboard\\api\\observability.py",
          "line_number": 289,
          "feature_type": "function",
          "feature_name": "track_performance",
          "signature": "def track_performance(operation_name, agent_type)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\observability.py",
          "line_number": 342,
          "feature_type": "function",
          "feature_name": "start_observability_session",
          "signature": "def start_observability_session()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\observability.py",
          "line_number": 364,
          "feature_type": "function",
          "feature_name": "end_observability_session",
          "signature": "def end_observability_session(session_id)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\observability.py",
          "line_number": 384,
          "feature_type": "function",
          "feature_name": "track_session_event",
          "signature": "def track_session_event(session_id)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\observability.py",
          "line_number": 406,
          "feature_type": "function",
          "feature_name": "get_session_summary",
          "signature": "def get_session_summary(session_id)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\observability.py",
          "line_number": 428,
          "feature_type": "function",
          "feature_name": "get_global_metrics",
          "signature": "def get_global_metrics()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\observability.py",
          "line_number": 444,
          "feature_type": "function",
          "feature_name": "get_performance_analytics",
          "signature": "def get_performance_analytics()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\observability.py",
          "line_number": 460,
          "feature_type": "function",
          "feature_name": "track_agent_performance_endpoint",
          "signature": "def track_agent_performance_endpoint(agent_id)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\observability.py",
          "line_number": 485,
          "feature_type": "function",
          "feature_name": "observability_health_check",
          "signature": "def observability_health_check()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\observability.py",
          "line_number": 504,
          "feature_type": "function",
          "feature_name": "integrate_with_crew_orchestration",
          "signature": "def integrate_with_crew_orchestration()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\observability.py",
          "line_number": 509,
          "feature_type": "function",
          "feature_name": "integrate_with_swarm_orchestration",
          "signature": "def integrate_with_swarm_orchestration()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\observability.py",
          "line_number": 26,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\observability.py",
          "line_number": 42,
          "feature_type": "function",
          "feature_name": "start_session",
          "signature": "def start_session(self, session_name, tags, metadata)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\observability.py",
          "line_number": 81,
          "feature_type": "function",
          "feature_name": "end_session",
          "signature": "def end_session(self, session_id, status)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\observability.py",
          "line_number": 116,
          "feature_type": "function",
          "feature_name": "track_event",
          "signature": "def track_event(self, session_id, event_type, event_data, duration)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\observability.py",
          "line_number": 155,
          "feature_type": "function",
          "feature_name": "track_agent_performance",
          "signature": "def track_agent_performance(self, agent_id, agent_type, operation, duration, success, metadata)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\observability.py",
          "line_number": 204,
          "feature_type": "function",
          "feature_name": "get_session_summary",
          "signature": "def get_session_summary(self, session_id)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\observability.py",
          "line_number": 220,
          "feature_type": "function",
          "feature_name": "get_global_metrics",
          "signature": "def get_global_metrics(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\observability.py",
          "line_number": 237,
          "feature_type": "function",
          "feature_name": "get_performance_analytics",
          "signature": "def get_performance_analytics(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\observability.py",
          "line_number": 297,
          "feature_type": "function",
          "feature_name": "decorator",
          "signature": "def decorator(func)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\observability.py",
          "line_number": 299,
          "feature_type": "function",
          "feature_name": "wrapper",
          "signature": "def wrapper()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\observability.py",
          "line_number": 460,
          "feature_type": "api_endpoint",
          "feature_name": "def track_agent_performance_endpoint(agent_id):",
          "signature": "def track_agent_performance_endpoint(agent_id):",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 55,
          "feature_type": "function",
          "feature_name": "init_performance_api",
          "signature": "def init_performance_api(monitor_instance, cache_instance)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 64,
          "feature_type": "function",
          "feature_name": "get_performance_metrics",
          "signature": "def get_performance_metrics()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 143,
          "feature_type": "function",
          "feature_name": "init_performance_api",
          "signature": "def init_performance_api(real_time_monitor, metrics_cache)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 159,
          "feature_type": "function",
          "feature_name": "get_realtime_metrics",
          "signature": "def get_realtime_metrics()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 222,
          "feature_type": "function",
          "feature_name": "get_performance_history",
          "signature": "def get_performance_history()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 259,
          "feature_type": "function",
          "feature_name": "get_performance_summary",
          "signature": "def get_performance_summary()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 285,
          "feature_type": "function",
          "feature_name": "get_monitoring_status",
          "signature": "def get_monitoring_status()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 311,
          "feature_type": "function",
          "feature_name": "get_performance_flamegraph",
          "signature": "def get_performance_flamegraph()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 471,
          "feature_type": "function",
          "feature_name": "_calculate_node_samples",
          "signature": "def _calculate_node_samples(node)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 479,
          "feature_type": "function",
          "feature_name": "_calculate_max_depth",
          "signature": "def _calculate_max_depth(node, current_depth)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 486,
          "feature_type": "function",
          "feature_name": "_count_nodes",
          "signature": "def _count_nodes(node)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 494,
          "feature_type": "function",
          "feature_name": "_get_top_functions",
          "signature": "def _get_top_functions(node, top_list)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 508,
          "feature_type": "function",
          "feature_name": "_find_cpu_intensive",
          "signature": "def _find_cpu_intensive(node, cpu_list)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 522,
          "feature_type": "function",
          "feature_name": "_find_memory_intensive",
          "signature": "def _find_memory_intensive(node, mem_list)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 536,
          "feature_type": "function",
          "feature_name": "_identify_bottlenecks",
          "signature": "def _identify_bottlenecks(node)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 556,
          "feature_type": "function",
          "feature_name": "performance_health_check",
          "signature": "def performance_health_check()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 33,
          "feature_type": "function",
          "feature_name": "enhanced_api_endpoint",
          "signature": "def enhanced_api_endpoint()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 37,
          "feature_type": "function",
          "feature_name": "handle_api_error",
          "signature": "def handle_api_error(func)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 39,
          "feature_type": "class",
          "feature_name": "MonitorError",
          "signature": "class MonitorError",
          "context": "Group: api_endpoints, Methods: []"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 41,
          "feature_type": "class",
          "feature_name": "CacheError",
          "signature": "class CacheError",
          "context": "Group: api_endpoints, Methods: []"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 43,
          "feature_type": "class",
          "feature_name": "ValidationError",
          "signature": "class ValidationError",
          "context": "Group: api_endpoints, Methods: []"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 34,
          "feature_type": "function",
          "feature_name": "decorator",
          "signature": "def decorator(func)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 5,
          "feature_type": "api_endpoint",
          "feature_name": "Handles real-time performance monitoring endpoints...",
          "signature": "Handles real-time performance monitoring endpoints.",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 25,
          "feature_type": "api_endpoint",
          "feature_name": "enhanced_api_endpoint, MonitorError, CacheError,",
          "signature": "enhanced_api_endpoint, MonitorError, CacheError,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 33,
          "feature_type": "api_endpoint",
          "feature_name": "def enhanced_api_endpoint(*args, **kwargs):",
          "signature": "def enhanced_api_endpoint(*args, **kwargs):",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 66,
          "feature_type": "api_endpoint",
          "feature_name": "logger.info(\"Performance metrics endpoint called\")",
          "signature": "logger.info(\"Performance metrics endpoint called\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 158,
          "feature_type": "api_endpoint",
          "feature_name": "@enhanced_api_endpoint(optional_params={'codebase'...",
          "signature": "@enhanced_api_endpoint(optional_params={'codebase': '/testmaster'})",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 163,
          "feature_type": "api_endpoint",
          "feature_name": "This endpoint is called every 100ms by the fronten...",
          "signature": "This endpoint is called every 100ms by the frontend performance charts.",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 188,
          "feature_type": "api_endpoint",
          "feature_name": "details={'service': 'performance_monitor', 'endpoi...",
          "signature": "details={'service': 'performance_monitor', 'endpoint': 'realtime'})",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 221,
          "feature_type": "api_endpoint",
          "feature_name": "@enhanced_api_endpoint(optional_params={'codebase'...",
          "signature": "@enhanced_api_endpoint(optional_params={'codebase': '/testmaster', 'hours': 1})",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 243,
          "feature_type": "api_endpoint",
          "feature_name": "details={'service': 'performance_monitor', 'endpoi...",
          "signature": "details={'service': 'performance_monitor', 'endpoint': 'history'})",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 258,
          "feature_type": "api_endpoint",
          "feature_name": "@enhanced_api_endpoint(optional_params={'codebase'...",
          "signature": "@enhanced_api_endpoint(optional_params={'codebase': '/testmaster'})",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\performance.py",
          "line_number": 270,
          "feature_type": "api_endpoint",
          "feature_name": "details={'service': 'performance_monitor', 'endpoi...",
          "signature": "details={'service': 'performance_monitor', 'endpoint': 'summary'})",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\production_deployment.py",
          "line_number": 24,
          "feature_type": "class",
          "feature_name": "TestMasterProductionAPI",
          "signature": "class TestMasterProductionAPI",
          "context": "Group: api_endpoints, Methods: ['__init__', 'track_request', 'execute_completion_async', 'execute_streaming_completion', '_execute_crew_task', '_execute_swarm_task', '_execute_general_task', 'get_metrics', 'shutdown']"
        },
        {
          "file_path": "dashboard\\api\\production_deployment.py",
          "line_number": 291,
          "feature_type": "function",
          "feature_name": "get_completion",
          "signature": "def get_completion()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\production_deployment.py",
          "line_number": 319,
          "feature_type": "function",
          "feature_name": "get_completion_stream",
          "signature": "def get_completion_stream()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\production_deployment.py",
          "line_number": 386,
          "feature_type": "function",
          "feature_name": "crew_completion",
          "signature": "def crew_completion()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\production_deployment.py",
          "line_number": 406,
          "feature_type": "function",
          "feature_name": "swarm_completion",
          "signature": "def swarm_completion()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\production_deployment.py",
          "line_number": 426,
          "feature_type": "function",
          "feature_name": "get_production_metrics",
          "signature": "def get_production_metrics()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\production_deployment.py",
          "line_number": 443,
          "feature_type": "function",
          "feature_name": "production_health_check",
          "signature": "def production_health_check()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\production_deployment.py",
          "line_number": 468,
          "feature_type": "function",
          "feature_name": "get_active_streams",
          "signature": "def get_active_streams()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\production_deployment.py",
          "line_number": 30,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self, max_workers)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\production_deployment.py",
          "line_number": 50,
          "feature_type": "function",
          "feature_name": "track_request",
          "signature": "def track_request(self, request_type, duration, success)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\production_deployment.py",
          "line_number": 66,
          "feature_type": "function",
          "feature_name": "execute_completion_async",
          "signature": "def execute_completion_async(self, request_data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\production_deployment.py",
          "line_number": 110,
          "feature_type": "function",
          "feature_name": "execute_streaming_completion",
          "signature": "def execute_streaming_completion(self, request_data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\production_deployment.py",
          "line_number": 171,
          "feature_type": "function",
          "feature_name": "_execute_crew_task",
          "signature": "def _execute_crew_task(self, request_data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\production_deployment.py",
          "line_number": 185,
          "feature_type": "function",
          "feature_name": "_execute_swarm_task",
          "signature": "def _execute_swarm_task(self, request_data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\production_deployment.py",
          "line_number": 199,
          "feature_type": "function",
          "feature_name": "_execute_general_task",
          "signature": "def _execute_general_task(self, request_data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\production_deployment.py",
          "line_number": 268,
          "feature_type": "function",
          "feature_name": "get_metrics",
          "signature": "def get_metrics(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\production_deployment.py",
          "line_number": 277,
          "feature_type": "function",
          "feature_name": "shutdown",
          "signature": "def shutdown(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\production_deployment.py",
          "line_number": 331,
          "feature_type": "function",
          "feature_name": "generate_stream",
          "signature": "def generate_stream()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\production_deployment.py",
          "line_number": 6,
          "feature_type": "api_endpoint",
          "feature_name": "Provides streaming endpoints, async execution, and...",
          "signature": "Provides streaming endpoints, async execution, and production monitoring for TestMaster.",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\production_deployment.py",
          "line_number": 292,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Non-streaming completion endpoint.\"\"\"",
          "signature": "\"\"\"Non-streaming completion endpoint.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\production_deployment.py",
          "line_number": 312,
          "feature_type": "api_endpoint",
          "feature_name": "production_api.logger.error(f\"Completion endpoint ...",
          "signature": "production_api.logger.error(f\"Completion endpoint error: {e}\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\production_deployment.py",
          "line_number": 320,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Streaming completion endpoint with SSE.\"\"\"",
          "signature": "\"\"\"Streaming completion endpoint with SSE.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\production_deployment.py",
          "line_number": 379,
          "feature_type": "api_endpoint",
          "feature_name": "production_api.logger.error(f\"Streaming endpoint e...",
          "signature": "production_api.logger.error(f\"Streaming endpoint error: {e}\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\production_deployment.py",
          "line_number": 387,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Crew-specific completion endpoint.\"\"\"",
          "signature": "\"\"\"Crew-specific completion endpoint.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\production_deployment.py",
          "line_number": 407,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Swarm-specific completion endpoint.\"\"\"",
          "signature": "\"\"\"Swarm-specific completion endpoint.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 19,
          "feature_type": "class",
          "feature_name": "QualityAssuranceAPI",
          "signature": "class QualityAssuranceAPI",
          "context": "Group: api_endpoints, Methods: ['__init__', '_setup_routes', '_setup_quality_routes', '_calculate_grade', '_generate_score_distribution', '_generate_quality_trends', '_generate_component_matrix', '_identify_improvements', '_generate_recommendations', '_calculate_percentiles', '_group_by_type', '_validation_score_distribution', '_execution_time_trend', '_failure_analysis', '_categorize_issues', '_analyze_inspection_types', '_analyze_agent_performance', '_generate_correlation_matrix', '_calculate_predictive_accuracy']"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 22,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 31,
          "feature_type": "function",
          "feature_name": "_setup_routes",
          "signature": "def _setup_routes(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 336,
          "feature_type": "function",
          "feature_name": "_setup_quality_routes",
          "signature": "def _setup_quality_routes(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 427,
          "feature_type": "function",
          "feature_name": "_calculate_grade",
          "signature": "def _calculate_grade(self, score)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 440,
          "feature_type": "function",
          "feature_name": "_generate_score_distribution",
          "signature": "def _generate_score_distribution(self, components)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 458,
          "feature_type": "function",
          "feature_name": "_generate_quality_trends",
          "signature": "def _generate_quality_trends(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 471,
          "feature_type": "function",
          "feature_name": "_generate_component_matrix",
          "signature": "def _generate_component_matrix(self, components)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 484,
          "feature_type": "function",
          "feature_name": "_identify_improvements",
          "signature": "def _identify_improvements(self, metrics)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 498,
          "feature_type": "function",
          "feature_name": "_generate_recommendations",
          "signature": "def _generate_recommendations(self, metrics)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 510,
          "feature_type": "function",
          "feature_name": "_calculate_percentiles",
          "signature": "def _calculate_percentiles(self, benchmarks)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 529,
          "feature_type": "function",
          "feature_name": "_group_by_type",
          "signature": "def _group_by_type(self, validations)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 544,
          "feature_type": "function",
          "feature_name": "_validation_score_distribution",
          "signature": "def _validation_score_distribution(self, validations)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 562,
          "feature_type": "function",
          "feature_name": "_execution_time_trend",
          "signature": "def _execution_time_trend(self, validations)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 575,
          "feature_type": "function",
          "feature_name": "_failure_analysis",
          "signature": "def _failure_analysis(self, validations)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 587,
          "feature_type": "function",
          "feature_name": "_categorize_issues",
          "signature": "def _categorize_issues(self, reports)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 595,
          "feature_type": "function",
          "feature_name": "_analyze_inspection_types",
          "signature": "def _analyze_inspection_types(self, reports)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 611,
          "feature_type": "function",
          "feature_name": "_analyze_agent_performance",
          "signature": "def _analyze_agent_performance(self, reports)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 630,
          "feature_type": "function",
          "feature_name": "_generate_correlation_matrix",
          "signature": "def _generate_correlation_matrix(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 645,
          "feature_type": "function",
          "feature_name": "_calculate_predictive_accuracy",
          "signature": "def _calculate_predictive_accuracy(self, accuracy_data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 35,
          "feature_type": "function",
          "feature_name": "quality_scorecard",
          "signature": "def quality_scorecard()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 89,
          "feature_type": "function",
          "feature_name": "quality_benchmarks",
          "signature": "def quality_benchmarks()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 151,
          "feature_type": "function",
          "feature_name": "validation_results",
          "signature": "def validation_results()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 210,
          "feature_type": "function",
          "feature_name": "inspector_reports",
          "signature": "def inspector_reports()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 269,
          "feature_type": "function",
          "feature_name": "scoring_system",
          "signature": "def scoring_system()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 340,
          "feature_type": "function",
          "feature_name": "quality_metrics",
          "signature": "def quality_metrics()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\quality_assurance.py",
          "line_number": 20,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Quality Assurance Scorecard API endpoints.\"\"\"",
          "signature": "\"\"\"Quality Assurance Scorecard API endpoints.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 26,
          "feature_type": "class",
          "feature_name": "RealCodebaseScanner",
          "signature": "class RealCodebaseScanner",
          "context": "Group: api_endpoints, Methods: ['__init__', '_setup_routes', '_scan_real_codebase_structure', '_scan_real_test_coverage', '_collect_real_performance_data', '_discover_real_features', '_scan_real_intelligence_agents', '_categorize_agent_by_name', '_calculate_real_file_distribution', '_calculate_real_directory_sizes', '_analyze_real_code_complexity', '_extract_real_dependencies', '_get_real_coverage_history', '_calculate_real_test_ratio', '_categorize_real_features', '_check_real_implementation_status', '_assess_real_feature_complexity', '_map_real_api_endpoints', '_categorize_real_agents', '_extract_real_agent_capabilities', '_map_real_agent_integrations', '_check_real_active_components']"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 29,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 36,
          "feature_type": "function",
          "feature_name": "_setup_routes",
          "signature": "def _setup_routes(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 140,
          "feature_type": "function",
          "feature_name": "_scan_real_codebase_structure",
          "signature": "def _scan_real_codebase_structure(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 200,
          "feature_type": "function",
          "feature_name": "_scan_real_test_coverage",
          "signature": "def _scan_real_test_coverage(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 259,
          "feature_type": "function",
          "feature_name": "_collect_real_performance_data",
          "signature": "def _collect_real_performance_data(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 307,
          "feature_type": "function",
          "feature_name": "_discover_real_features",
          "signature": "def _discover_real_features(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 357,
          "feature_type": "function",
          "feature_name": "_scan_real_intelligence_agents",
          "signature": "def _scan_real_intelligence_agents(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 405,
          "feature_type": "function",
          "feature_name": "_categorize_agent_by_name",
          "signature": "def _categorize_agent_by_name(self, name)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 424,
          "feature_type": "function",
          "feature_name": "_calculate_real_file_distribution",
          "signature": "def _calculate_real_file_distribution(self, structure)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 431,
          "feature_type": "function",
          "feature_name": "_calculate_real_directory_sizes",
          "signature": "def _calculate_real_directory_sizes(self, structure)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 436,
          "feature_type": "function",
          "feature_name": "_analyze_real_code_complexity",
          "signature": "def _analyze_real_code_complexity(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 441,
          "feature_type": "function",
          "feature_name": "_extract_real_dependencies",
          "signature": "def _extract_real_dependencies(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 446,
          "feature_type": "function",
          "feature_name": "_get_real_coverage_history",
          "signature": "def _get_real_coverage_history(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 450,
          "feature_type": "function",
          "feature_name": "_calculate_real_test_ratio",
          "signature": "def _calculate_real_test_ratio(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 454,
          "feature_type": "function",
          "feature_name": "_categorize_real_features",
          "signature": "def _categorize_real_features(self, features)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 472,
          "feature_type": "function",
          "feature_name": "_check_real_implementation_status",
          "signature": "def _check_real_implementation_status(self, features)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 480,
          "feature_type": "function",
          "feature_name": "_assess_real_feature_complexity",
          "signature": "def _assess_real_feature_complexity(self, features)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 491,
          "feature_type": "function",
          "feature_name": "_map_real_api_endpoints",
          "signature": "def _map_real_api_endpoints(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 509,
          "feature_type": "function",
          "feature_name": "_categorize_real_agents",
          "signature": "def _categorize_real_agents(self, agents)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 518,
          "feature_type": "function",
          "feature_name": "_extract_real_agent_capabilities",
          "signature": "def _extract_real_agent_capabilities(self, agents)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 529,
          "feature_type": "function",
          "feature_name": "_map_real_agent_integrations",
          "signature": "def _map_real_agent_integrations(self, agents)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 540,
          "feature_type": "function",
          "feature_name": "_check_real_active_components",
          "signature": "def _check_real_active_components(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 40,
          "feature_type": "function",
          "feature_name": "real_codebase_structure",
          "signature": "def real_codebase_structure()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 61,
          "feature_type": "function",
          "feature_name": "real_test_coverage",
          "signature": "def real_test_coverage()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 81,
          "feature_type": "function",
          "feature_name": "real_performance_metrics",
          "signature": "def real_performance_metrics()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 101,
          "feature_type": "function",
          "feature_name": "discovered_features",
          "signature": "def discovered_features()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 121,
          "feature_type": "function",
          "feature_name": "real_intelligence_agents",
          "signature": "def real_intelligence_agents()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 113,
          "feature_type": "api_endpoint",
          "feature_name": "'api_endpoints_real': self._map_real_api_endpoints...",
          "signature": "'api_endpoints_real': self._map_real_api_endpoints()",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 491,
          "feature_type": "api_endpoint",
          "feature_name": "def _map_real_api_endpoints(self) -> List[Dict]:",
          "signature": "def _map_real_api_endpoints(self) -> List[Dict]:",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 492,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Map real API endpoints.\"\"\"",
          "signature": "\"\"\"Map real API endpoints.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 493,
          "feature_type": "api_endpoint",
          "feature_name": "endpoints = []",
          "signature": "endpoints = []",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 499,
          "feature_type": "api_endpoint",
          "feature_name": "endpoints.append({",
          "signature": "endpoints.append({",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 505,
          "feature_type": "api_endpoint",
          "feature_name": "logger.error(f\"API endpoint mapping failed: {e}\")",
          "signature": "logger.error(f\"API endpoint mapping failed: {e}\")",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\real_codebase_scanner.py",
          "line_number": 507,
          "feature_type": "api_endpoint",
          "feature_name": "return endpoints",
          "signature": "return endpoints",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\refactor.py",
          "line_number": 23,
          "feature_type": "function",
          "feature_name": "init_refactor_api",
          "signature": "def init_refactor_api(analyzer, roadmaps)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\refactor.py",
          "line_number": 31,
          "feature_type": "function",
          "feature_name": "get_refactor_analysis",
          "signature": "def get_refactor_analysis()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\refactor.py",
          "line_number": 50,
          "feature_type": "function",
          "feature_name": "get_code_hierarchy",
          "signature": "def get_code_hierarchy()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\refactor.py",
          "line_number": 5,
          "feature_type": "api_endpoint",
          "feature_name": "Handles refactoring analysis and hierarchy endpoin...",
          "signature": "Handles refactoring analysis and hierarchy endpoints.",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 18,
          "feature_type": "class",
          "feature_name": "SecurityAPI",
          "signature": "class SecurityAPI",
          "context": "Group: api_endpoints, Methods: ['__init__', '_setup_routes', '_calculate_module_risk', '_generate_vulnerability_trends', '_get_top_vulnerabilities', '_get_compliance_level', '_calculate_status_distribution', '_identify_improvement_areas', '_generate_threat_timeline', '_calculate_threat_distribution', '_calculate_severity_breakdown', '_calculate_target_frequency', '_generate_scan_history', '_generate_finding_trends', '_generate_priority_matrix', '_effort_to_number', '_impact_to_number', '_generate_remediation_timeline', '_generate_risk_projection']"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 21,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 27,
          "feature_type": "function",
          "feature_name": "_setup_routes",
          "signature": "def _setup_routes(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 346,
          "feature_type": "function",
          "feature_name": "_calculate_module_risk",
          "signature": "def _calculate_module_risk(self, heatmap_data, modules)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 357,
          "feature_type": "function",
          "feature_name": "_generate_vulnerability_trends",
          "signature": "def _generate_vulnerability_trends(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 368,
          "feature_type": "function",
          "feature_name": "_get_top_vulnerabilities",
          "signature": "def _get_top_vulnerabilities(self, heatmap_data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 380,
          "feature_type": "function",
          "feature_name": "_get_compliance_level",
          "signature": "def _get_compliance_level(self, compliance)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 393,
          "feature_type": "function",
          "feature_name": "_calculate_status_distribution",
          "signature": "def _calculate_status_distribution(self, categories)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 403,
          "feature_type": "function",
          "feature_name": "_identify_improvement_areas",
          "signature": "def _identify_improvement_areas(self, categories)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 408,
          "feature_type": "function",
          "feature_name": "_generate_threat_timeline",
          "signature": "def _generate_threat_timeline(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 419,
          "feature_type": "function",
          "feature_name": "_calculate_threat_distribution",
          "signature": "def _calculate_threat_distribution(self, threats)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 429,
          "feature_type": "function",
          "feature_name": "_calculate_severity_breakdown",
          "signature": "def _calculate_severity_breakdown(self, threats)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 439,
          "feature_type": "function",
          "feature_name": "_calculate_target_frequency",
          "signature": "def _calculate_target_frequency(self, threats)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 449,
          "feature_type": "function",
          "feature_name": "_generate_scan_history",
          "signature": "def _generate_scan_history(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 461,
          "feature_type": "function",
          "feature_name": "_generate_finding_trends",
          "signature": "def _generate_finding_trends(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 472,
          "feature_type": "function",
          "feature_name": "_generate_priority_matrix",
          "signature": "def _generate_priority_matrix(self, recommendations)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 484,
          "feature_type": "function",
          "feature_name": "_effort_to_number",
          "signature": "def _effort_to_number(self, effort)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 488,
          "feature_type": "function",
          "feature_name": "_impact_to_number",
          "signature": "def _impact_to_number(self, impact)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 492,
          "feature_type": "function",
          "feature_name": "_generate_remediation_timeline",
          "signature": "def _generate_remediation_timeline(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 503,
          "feature_type": "function",
          "feature_name": "_generate_risk_projection",
          "signature": "def _generate_risk_projection(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 31,
          "feature_type": "function",
          "feature_name": "vulnerability_heatmap",
          "signature": "def vulnerability_heatmap()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 96,
          "feature_type": "function",
          "feature_name": "owasp_compliance",
          "signature": "def owasp_compliance()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 146,
          "feature_type": "function",
          "feature_name": "realtime_threats",
          "signature": "def realtime_threats()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 195,
          "feature_type": "function",
          "feature_name": "scanning_status",
          "signature": "def scanning_status()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 269,
          "feature_type": "function",
          "feature_name": "remediation_recommendations",
          "signature": "def remediation_recommendations()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\security.py",
          "line_number": 19,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Security Vulnerability Heatmap API endpoints.\"\"...",
          "signature": "\"\"\"Security Vulnerability Heatmap API endpoints.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 46,
          "feature_type": "class",
          "feature_name": "SwarmArchitecture",
          "signature": "class SwarmArchitecture",
          "context": "Group: api_endpoints, Methods: []"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 59,
          "feature_type": "class",
          "feature_name": "TaskPriority",
          "signature": "class TaskPriority",
          "context": "Group: api_endpoints, Methods: []"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 67,
          "feature_type": "class",
          "feature_name": "SwarmAgent",
          "signature": "class SwarmAgent",
          "context": "Group: api_endpoints, Methods: []"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 81,
          "feature_type": "class",
          "feature_name": "SwarmTask",
          "signature": "class SwarmTask",
          "context": "Group: api_endpoints, Methods: []"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 93,
          "feature_type": "class",
          "feature_name": "UniversalSwarmOrchestrator",
          "signature": "class UniversalSwarmOrchestrator",
          "context": "Group: api_endpoints, Methods: ['__init__', '_initialize_swarm_agents', 'create_swarm', 'execute_swarm_task', '_execute_sequential_workflow', '_execute_concurrent_workflow', '_execute_hierarchical_swarm', '_execute_mixture_of_agents', '_execute_majority_voting', '_execute_deep_research_swarm', '_execute_adaptive_swarm', '_execute_agent_step', '_generate_security_output', '_generate_test_output', '_generate_quality_output', '_generate_consensus_output', '_aggregate_concurrent_outputs', '_aggregate_expert_mixture', '_calculate_majority_vote', '_consolidate_research_findings', '_synthesize_research', '_analyze_task_for_architecture', '_update_performance_metrics', 'get_swarm_status']"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 836,
          "feature_type": "function",
          "feature_name": "list_swarms",
          "signature": "def list_swarms()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 864,
          "feature_type": "function",
          "feature_name": "create_swarm",
          "signature": "def create_swarm()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 897,
          "feature_type": "function",
          "feature_name": "execute_swarm_task",
          "signature": "def execute_swarm_task(swarm_id)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 917,
          "feature_type": "function",
          "feature_name": "get_swarm_status",
          "signature": "def get_swarm_status(swarm_id)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 932,
          "feature_type": "function",
          "feature_name": "list_architectures",
          "signature": "def list_architectures()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 974,
          "feature_type": "function",
          "feature_name": "list_swarm_agents",
          "signature": "def list_swarm_agents()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 1002,
          "feature_type": "function",
          "feature_name": "get_swarm_analytics",
          "signature": "def get_swarm_analytics()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 99,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 115,
          "feature_type": "function",
          "feature_name": "_initialize_swarm_agents",
          "signature": "def _initialize_swarm_agents(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 238,
          "feature_type": "function",
          "feature_name": "create_swarm",
          "signature": "def create_swarm(self, config)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 285,
          "feature_type": "function",
          "feature_name": "execute_swarm_task",
          "signature": "def execute_swarm_task(self, swarm_id, task)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 358,
          "feature_type": "function",
          "feature_name": "_execute_sequential_workflow",
          "signature": "def _execute_sequential_workflow(self, swarm, task)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 392,
          "feature_type": "function",
          "feature_name": "_execute_concurrent_workflow",
          "signature": "def _execute_concurrent_workflow(self, swarm, task)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 437,
          "feature_type": "function",
          "feature_name": "_execute_hierarchical_swarm",
          "signature": "def _execute_hierarchical_swarm(self, swarm, task)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 492,
          "feature_type": "function",
          "feature_name": "_execute_mixture_of_agents",
          "signature": "def _execute_mixture_of_agents(self, swarm, task)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 519,
          "feature_type": "function",
          "feature_name": "_execute_majority_voting",
          "signature": "def _execute_majority_voting(self, swarm, task)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 546,
          "feature_type": "function",
          "feature_name": "_execute_deep_research_swarm",
          "signature": "def _execute_deep_research_swarm(self, swarm, task)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 601,
          "feature_type": "function",
          "feature_name": "_execute_adaptive_swarm",
          "signature": "def _execute_adaptive_swarm(self, swarm, task)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 633,
          "feature_type": "function",
          "feature_name": "_execute_agent_step",
          "signature": "def _execute_agent_step(self, agent, input_text, task, step_type)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 667,
          "feature_type": "function",
          "feature_name": "_generate_security_output",
          "signature": "def _generate_security_output(self, input_text, task, step_type)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 676,
          "feature_type": "function",
          "feature_name": "_generate_test_output",
          "signature": "def _generate_test_output(self, input_text, task, step_type)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 685,
          "feature_type": "function",
          "feature_name": "_generate_quality_output",
          "signature": "def _generate_quality_output(self, input_text, task, step_type)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 694,
          "feature_type": "function",
          "feature_name": "_generate_consensus_output",
          "signature": "def _generate_consensus_output(self, input_text, task, step_type)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 704,
          "feature_type": "function",
          "feature_name": "_aggregate_concurrent_outputs",
          "signature": "def _aggregate_concurrent_outputs(self, results, task)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 716,
          "feature_type": "function",
          "feature_name": "_aggregate_expert_mixture",
          "signature": "def _aggregate_expert_mixture(self, expert_outputs, task)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 728,
          "feature_type": "function",
          "feature_name": "_calculate_majority_vote",
          "signature": "def _calculate_majority_vote(self, votes, task)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 742,
          "feature_type": "function",
          "feature_name": "_consolidate_research_findings",
          "signature": "def _consolidate_research_findings(self, initial_research)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 750,
          "feature_type": "function",
          "feature_name": "_synthesize_research",
          "signature": "def _synthesize_research(self, initial_research, deep_analysis, task)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 760,
          "feature_type": "function",
          "feature_name": "_analyze_task_for_architecture",
          "signature": "def _analyze_task_for_architecture(self, task)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 784,
          "feature_type": "function",
          "feature_name": "_update_performance_metrics",
          "signature": "def _update_performance_metrics(self, swarm_id, execution_time, success)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 805,
          "feature_type": "function",
          "feature_name": "get_swarm_status",
          "signature": "def get_swarm_status(self, swarm_id)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 32,
          "feature_type": "function",
          "feature_name": "enhanced_api_endpoint",
          "signature": "def enhanced_api_endpoint()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 36,
          "feature_type": "function",
          "feature_name": "handle_api_error",
          "signature": "def handle_api_error(func)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 38,
          "feature_type": "function",
          "feature_name": "get_real_data_extractor",
          "signature": "def get_real_data_extractor()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 33,
          "feature_type": "function",
          "feature_name": "decorator",
          "signature": "def decorator(func)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 29,
          "feature_type": "api_endpoint",
          "feature_name": "from core.error_handler import enhanced_api_endpoi...",
          "signature": "from core.error_handler import enhanced_api_endpoint, handle_api_error",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\swarm_orchestration.py",
          "line_number": 32,
          "feature_type": "api_endpoint",
          "feature_name": "def enhanced_api_endpoint(*args, **kwargs):",
          "signature": "def enhanced_api_endpoint(*args, **kwargs):",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\telemetry.py",
          "line_number": 20,
          "feature_type": "class",
          "feature_name": "TelemetryAPI",
          "signature": "class TelemetryAPI",
          "context": "Group: api_endpoints, Methods: ['__init__', '_setup_routes', '_generate_memory_timeline', '_count_by_field', '_create_duration_distribution', '_create_events_timeline', '_generate_metrics_trend']"
        },
        {
          "file_path": "dashboard\\api\\telemetry.py",
          "line_number": 23,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\telemetry.py",
          "line_number": 29,
          "feature_type": "function",
          "feature_name": "_setup_routes",
          "signature": "def _setup_routes(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\telemetry.py",
          "line_number": 509,
          "feature_type": "function",
          "feature_name": "_generate_memory_timeline",
          "signature": "def _generate_memory_timeline(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\telemetry.py",
          "line_number": 521,
          "feature_type": "function",
          "feature_name": "_count_by_field",
          "signature": "def _count_by_field(self, events, field)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\telemetry.py",
          "line_number": 529,
          "feature_type": "function",
          "feature_name": "_create_duration_distribution",
          "signature": "def _create_duration_distribution(self, events)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\telemetry.py",
          "line_number": 551,
          "feature_type": "function",
          "feature_name": "_create_events_timeline",
          "signature": "def _create_events_timeline(self, events)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\telemetry.py",
          "line_number": 562,
          "feature_type": "function",
          "feature_name": "_generate_metrics_trend",
          "signature": "def _generate_metrics_trend(self, metrics)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\telemetry.py",
          "line_number": 33,
          "feature_type": "function",
          "feature_name": "system_performance",
          "signature": "def system_performance()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\telemetry.py",
          "line_number": 159,
          "feature_type": "function",
          "feature_name": "application_performance",
          "signature": "def application_performance()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\telemetry.py",
          "line_number": 250,
          "feature_type": "function",
          "feature_name": "telemetry_events",
          "signature": "def telemetry_events()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\telemetry.py",
          "line_number": 321,
          "feature_type": "function",
          "feature_name": "performance_hotspots",
          "signature": "def performance_hotspots()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\telemetry.py",
          "line_number": 415,
          "feature_type": "function",
          "feature_name": "custom_metrics",
          "signature": "def custom_metrics()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\telemetry.py",
          "line_number": 21,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Telemetry and Performance Profiling API endpoin...",
          "signature": "\"\"\"Telemetry and Performance Profiling API endpoints.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\telemetry.py",
          "line_number": 190,
          "feature_type": "api_endpoint",
          "feature_name": "api_endpoints = []",
          "signature": "api_endpoints = []",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\telemetry.py",
          "line_number": 191,
          "feature_type": "api_endpoint",
          "feature_name": "endpoints = [",
          "signature": "endpoints = [",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\telemetry.py",
          "line_number": 197,
          "feature_type": "api_endpoint",
          "feature_name": "for endpoint in endpoints:",
          "signature": "for endpoint in endpoints:",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\telemetry.py",
          "line_number": 198,
          "feature_type": "api_endpoint",
          "feature_name": "api_endpoints.append({",
          "signature": "api_endpoints.append({",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\telemetry.py",
          "line_number": 199,
          "feature_type": "api_endpoint",
          "feature_name": "'endpoint': endpoint,",
          "signature": "'endpoint': endpoint,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\telemetry.py",
          "line_number": 218,
          "feature_type": "api_endpoint",
          "feature_name": "'api_performance': api_endpoints,",
          "signature": "'api_performance': api_endpoints,",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\telemetry.py",
          "line_number": 234,
          "feature_type": "api_endpoint",
          "feature_name": "'endpoint': api['endpoint'].split('/')[-1],",
          "signature": "'endpoint': api['endpoint'].split('/')[-1],",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\telemetry.py",
          "line_number": 239,
          "feature_type": "api_endpoint",
          "feature_name": "for api in api_endpoints",
          "signature": "for api in api_endpoints",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\tests.py",
          "line_number": 18,
          "feature_type": "function",
          "feature_name": "get_test_status",
          "signature": "def get_test_status()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\tests.py",
          "line_number": 62,
          "feature_type": "function",
          "feature_name": "get_coverage_metrics",
          "signature": "def get_coverage_metrics()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\tests.py",
          "line_number": 5,
          "feature_type": "api_endpoint",
          "feature_name": "Handles test status and execution endpoints.",
          "signature": "Handles test status and execution endpoints.",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\test_generation.py",
          "line_number": 18,
          "feature_type": "class",
          "feature_name": "TestGenerationAPI",
          "signature": "class TestGenerationAPI",
          "context": "Group: api_endpoints, Methods: ['__init__', '_setup_routes', '_calculate_status_distribution', '_generate_generation_heatmap', '_calculate_coverage_impact', '_calculate_quality_distribution', '_calculate_velocity_trend', '_calculate_module_focus', '_calculate_priority_distribution', '_generate_wait_time_histogram', '_generate_throughput_timeline', '_generate_quality_trends', '_generate_coverage_projection', '_calculate_optimization_potential']"
        },
        {
          "file_path": "dashboard\\api\\test_generation.py",
          "line_number": 21,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\test_generation.py",
          "line_number": 27,
          "feature_type": "function",
          "feature_name": "_setup_routes",
          "signature": "def _setup_routes(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\test_generation.py",
          "line_number": 340,
          "feature_type": "function",
          "feature_name": "_calculate_status_distribution",
          "signature": "def _calculate_status_distribution(self, generators)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\test_generation.py",
          "line_number": 350,
          "feature_type": "function",
          "feature_name": "_generate_generation_heatmap",
          "signature": "def _generate_generation_heatmap(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\test_generation.py",
          "line_number": 364,
          "feature_type": "function",
          "feature_name": "_calculate_coverage_impact",
          "signature": "def _calculate_coverage_impact(self, activities)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\test_generation.py",
          "line_number": 377,
          "feature_type": "function",
          "feature_name": "_calculate_quality_distribution",
          "signature": "def _calculate_quality_distribution(self, activities)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\test_generation.py",
          "line_number": 390,
          "feature_type": "function",
          "feature_name": "_calculate_velocity_trend",
          "signature": "def _calculate_velocity_trend(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\test_generation.py",
          "line_number": 401,
          "feature_type": "function",
          "feature_name": "_calculate_module_focus",
          "signature": "def _calculate_module_focus(self, activities)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\test_generation.py",
          "line_number": 411,
          "feature_type": "function",
          "feature_name": "_calculate_priority_distribution",
          "signature": "def _calculate_priority_distribution(self, queue_items)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\test_generation.py",
          "line_number": 421,
          "feature_type": "function",
          "feature_name": "_generate_wait_time_histogram",
          "signature": "def _generate_wait_time_histogram(self, queue_items)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\test_generation.py",
          "line_number": 438,
          "feature_type": "function",
          "feature_name": "_generate_throughput_timeline",
          "signature": "def _generate_throughput_timeline(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\test_generation.py",
          "line_number": 449,
          "feature_type": "function",
          "feature_name": "_generate_quality_trends",
          "signature": "def _generate_quality_trends(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\test_generation.py",
          "line_number": 460,
          "feature_type": "function",
          "feature_name": "_generate_coverage_projection",
          "signature": "def _generate_coverage_projection(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\test_generation.py",
          "line_number": 473,
          "feature_type": "function",
          "feature_name": "_calculate_optimization_potential",
          "signature": "def _calculate_optimization_potential(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\test_generation.py",
          "line_number": 31,
          "feature_type": "function",
          "feature_name": "generators_status",
          "signature": "def generators_status()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\test_generation.py",
          "line_number": 91,
          "feature_type": "function",
          "feature_name": "live_generation",
          "signature": "def live_generation()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\test_generation.py",
          "line_number": 140,
          "feature_type": "function",
          "feature_name": "generation_queue",
          "signature": "def generation_queue()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\test_generation.py",
          "line_number": 196,
          "feature_type": "function",
          "feature_name": "generation_performance",
          "signature": "def generation_performance()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\test_generation.py",
          "line_number": 266,
          "feature_type": "function",
          "feature_name": "generation_insights",
          "signature": "def generation_insights()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\test_generation.py",
          "line_number": 19,
          "feature_type": "api_endpoint",
          "feature_name": "\"\"\"Real-time Test Generation Monitor API endpoints...",
          "signature": "\"\"\"Real-time Test Generation Monitor API endpoints.\"\"\"",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 22,
          "feature_type": "class",
          "feature_name": "WebSocketHealthDashboard",
          "signature": "class WebSocketHealthDashboard",
          "context": "Group: api_endpoints, Methods: ['__init__', '_setup_socketio_handlers', '_send_initial_data', '_send_room_data', '_broadcast_loop', '_broadcast_health_updates', '_broadcast_analytics_updates', '_broadcast_robustness_updates', '_get_health_data', '_get_analytics_data', '_get_robustness_data', '_get_detailed_health_data', '_get_detailed_analytics_data', '_get_detailed_robustness_data', '_get_monitoring_data', '_data_changed', 'send_alert', 'broadcast_event', 'get_dashboard_stats', 'shutdown']"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 27,
          "feature_type": "function",
          "feature_name": "__init__",
          "signature": "def __init__(self, app, aggregator)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 87,
          "feature_type": "function",
          "feature_name": "_setup_socketio_handlers",
          "signature": "def _setup_socketio_handlers(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 192,
          "feature_type": "function",
          "feature_name": "_send_initial_data",
          "signature": "def _send_initial_data(self, client_id)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 225,
          "feature_type": "function",
          "feature_name": "_send_room_data",
          "signature": "def _send_room_data(self, client_id, room_name)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 248,
          "feature_type": "function",
          "feature_name": "_broadcast_loop",
          "signature": "def _broadcast_loop(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 268,
          "feature_type": "function",
          "feature_name": "_broadcast_health_updates",
          "signature": "def _broadcast_health_updates(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 282,
          "feature_type": "function",
          "feature_name": "_broadcast_analytics_updates",
          "signature": "def _broadcast_analytics_updates(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 296,
          "feature_type": "function",
          "feature_name": "_broadcast_robustness_updates",
          "signature": "def _broadcast_robustness_updates(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 310,
          "feature_type": "function",
          "feature_name": "_get_health_data",
          "signature": "def _get_health_data(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 334,
          "feature_type": "function",
          "feature_name": "_get_analytics_data",
          "signature": "def _get_analytics_data(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 359,
          "feature_type": "function",
          "feature_name": "_get_robustness_data",
          "signature": "def _get_robustness_data(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 386,
          "feature_type": "function",
          "feature_name": "_get_detailed_health_data",
          "signature": "def _get_detailed_health_data(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 409,
          "feature_type": "function",
          "feature_name": "_get_detailed_analytics_data",
          "signature": "def _get_detailed_analytics_data(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 432,
          "feature_type": "function",
          "feature_name": "_get_detailed_robustness_data",
          "signature": "def _get_detailed_robustness_data(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 455,
          "feature_type": "function",
          "feature_name": "_get_monitoring_data",
          "signature": "def _get_monitoring_data(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 472,
          "feature_type": "function",
          "feature_name": "_data_changed",
          "signature": "def _data_changed(self, current, previous)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 487,
          "feature_type": "function",
          "feature_name": "send_alert",
          "signature": "def send_alert(self, alert_type, message, severity)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 506,
          "feature_type": "function",
          "feature_name": "broadcast_event",
          "signature": "def broadcast_event(self, event_name, data, room)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 525,
          "feature_type": "function",
          "feature_name": "get_dashboard_stats",
          "signature": "def get_dashboard_stats(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 537,
          "feature_type": "function",
          "feature_name": "shutdown",
          "signature": "def shutdown(self)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 91,
          "feature_type": "function",
          "feature_name": "handle_connect",
          "signature": "def handle_connect()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 112,
          "feature_type": "function",
          "feature_name": "handle_disconnect",
          "signature": "def handle_disconnect()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 125,
          "feature_type": "function",
          "feature_name": "handle_join_room",
          "signature": "def handle_join_room(data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 150,
          "feature_type": "function",
          "feature_name": "handle_leave_room",
          "signature": "def handle_leave_room(data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 167,
          "feature_type": "function",
          "feature_name": "handle_get_stats",
          "signature": "def handle_get_stats()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 178,
          "feature_type": "function",
          "feature_name": "handle_set_update_rate",
          "signature": "def handle_set_update_rate(data)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\websocket_dashboard.py",
          "line_number": 326,
          "feature_type": "api_endpoint",
          "feature_name": "'endpoints': heartbeat_status.get('endpoints', {})...",
          "signature": "'endpoints': heartbeat_status.get('endpoints', {}),",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\workflow.py",
          "line_number": 25,
          "feature_type": "function",
          "feature_name": "init_workflow_api",
          "signature": "def init_workflow_api(manager, roadmaps)",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\workflow.py",
          "line_number": 40,
          "feature_type": "function",
          "feature_name": "get_workflow_status",
          "signature": "def get_workflow_status()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\workflow.py",
          "line_number": 121,
          "feature_type": "function",
          "feature_name": "get_workflow_dag",
          "signature": "def get_workflow_dag()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\workflow.py",
          "line_number": 182,
          "feature_type": "function",
          "feature_name": "start_workflow",
          "signature": "def start_workflow()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\workflow.py",
          "line_number": 233,
          "feature_type": "function",
          "feature_name": "stop_workflow",
          "signature": "def stop_workflow()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\workflow.py",
          "line_number": 281,
          "feature_type": "function",
          "feature_name": "get_workflow_history",
          "signature": "def get_workflow_history()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\workflow.py",
          "line_number": 324,
          "feature_type": "function",
          "feature_name": "get_workflow_dag",
          "signature": "def get_workflow_dag()",
          "context": "Group: api_endpoints"
        },
        {
          "file_path": "dashboard\\api\\workflow.py",
          "line_number": 5,
          "feature_type": "api_endpoint",
          "feature_name": "Handles workflow status and management endpoints.",
          "signature": "Handles workflow status and management endpoints.",
          "context": "Group: api_endpoints, API endpoint"
        },
        {
          "file_path": "dashboard\\api\\workflow.py",
          "line_number": 44,
          "feature_type": "api_endpoint",
          "feature_name": "This endpoint was returning 404 errors before refa...",
          "signature": "This endpoint was returning 404 errors before refactoring.",
          "context": "Group: api_endpoints, API endpoint"
        }
      ],
      "duplicate_count": 4
    }
  },
  "consolidation_plan": {
    "timestamp": "2025-08-20",
    "total_duplicate_groups": 5,
    "consolidation_targets": {
      "performance_monitoring": {
        "target_file": "observability/unified_monitor.py",
        "source_files": [
          "core/observability/agent_ops.py",
          "monitoring/enhanced_monitor.py"
        ],
        "features_to_merge": 42,
        "priority": 1
      },
      "agent_orchestration": {
        "target_file": "orchestration/unified_orchestrator.py",
        "source_files": [
          "core/orchestration/agent_graph.py",
          "deployment/swarm_orchestrator.py",
          "dashboard/api/swarm_orchestration.py"
        ],
        "features_to_merge": 78,
        "priority": 3
      },
      "dashboard_widgets": {
        "target_file": "ui/unified_dashboard.py",
        "source_files": [
          "ui_ux/interactive_dashboard.py",
          "dashboard/src/components/",
          "monitoring/enhanced_monitor.py"
        ],
        "features_to_merge": 49,
        "priority": 5
      },
      "state_management": {
        "target_file": "state/unified_state.py",
        "source_files": [
          "agents/team/testing_team.py",
          "deployment/enterprise_deployment.py",
          "core/orchestration/agent_graph.py"
        ],
        "features_to_merge": 47,
        "priority": 2
      },
      "api_endpoints": {
        "target_file": "api/unified_api.py",
        "source_files": [
          "api/orchestration_api.py",
          "api/phase2_api.py",
          "api/phase3_api.py",
          "dashboard/api/"
        ],
        "features_to_merge": 912,
        "priority": 4
      }
    },
    "archive_requirements": [
      {
        "file": "core/observability/agent_ops.py",
        "group": "performance_monitoring",
        "reason": "Consolidation of performance_monitoring"
      },
      {
        "file": "monitoring/enhanced_monitor.py",
        "group": "performance_monitoring",
        "reason": "Consolidation of performance_monitoring"
      },
      {
        "file": "core/orchestration/agent_graph.py",
        "group": "agent_orchestration",
        "reason": "Consolidation of agent_orchestration"
      },
      {
        "file": "deployment/swarm_orchestrator.py",
        "group": "agent_orchestration",
        "reason": "Consolidation of agent_orchestration"
      },
      {
        "file": "dashboard/api/swarm_orchestration.py",
        "group": "agent_orchestration",
        "reason": "Consolidation of agent_orchestration"
      },
      {
        "file": "ui_ux/interactive_dashboard.py",
        "group": "dashboard_widgets",
        "reason": "Consolidation of dashboard_widgets"
      },
      {
        "file": "dashboard/src/components/",
        "group": "dashboard_widgets",
        "reason": "Consolidation of dashboard_widgets"
      },
      {
        "file": "monitoring/enhanced_monitor.py",
        "group": "dashboard_widgets",
        "reason": "Consolidation of dashboard_widgets"
      },
      {
        "file": "agents/team/testing_team.py",
        "group": "state_management",
        "reason": "Consolidation of state_management"
      },
      {
        "file": "deployment/enterprise_deployment.py",
        "group": "state_management",
        "reason": "Consolidation of state_management"
      },
      {
        "file": "core/orchestration/agent_graph.py",
        "group": "state_management",
        "reason": "Consolidation of state_management"
      },
      {
        "file": "api/orchestration_api.py",
        "group": "api_endpoints",
        "reason": "Consolidation of api_endpoints"
      },
      {
        "file": "api/phase2_api.py",
        "group": "api_endpoints",
        "reason": "Consolidation of api_endpoints"
      },
      {
        "file": "api/phase3_api.py",
        "group": "api_endpoints",
        "reason": "Consolidation of api_endpoints"
      },
      {
        "file": "dashboard/api/",
        "group": "api_endpoints",
        "reason": "Consolidation of api_endpoints"
      }
    ],
    "validation_checks": [
      {
        "group": "performance_monitoring",
        "feature_count": 42,
        "files_count": 2
      },
      {
        "group": "agent_orchestration",
        "feature_count": 78,
        "files_count": 3
      },
      {
        "group": "dashboard_widgets",
        "feature_count": 49,
        "files_count": 3
      },
      {
        "group": "state_management",
        "feature_count": 47,
        "files_count": 3
      },
      {
        "group": "api_endpoints",
        "feature_count": 912,
        "files_count": 4
      }
    ]
  },
  "functional_duplicates": {
    "testmasterobservability": [
      {
        "file_path": "core\\observability\\agent_ops.py",
        "line_number": 147,
        "feature_type": "class",
        "feature_name": "TestMasterObservability",
        "signature": "class TestMasterObservability",
        "context": "Group: performance_monitoring, Methods: ['__init__', 'start_test_session', 'end_test_session', 'track_agent_action', 'complete_agent_action', 'track_llm_call', 'generate_session_replay', '_generate_session_timeline', '_calculate_session_performance', '_generate_session_analytics', '_calculate_efficiency_score', 'get_observability_status']"
      },
      {
        "file_path": "dashboard\\api\\observability.py",
        "line_number": 20,
        "feature_type": "class",
        "feature_name": "TestMasterObservability",
        "signature": "class TestMasterObservability",
        "context": "Group: api_endpoints, Methods: ['__init__', 'start_session', 'end_session', 'track_event', 'track_agent_performance', 'get_session_summary', 'get_global_metrics', 'get_performance_analytics']"
      }
    ],
    "duration": [
      {
        "file_path": "core\\observability\\agent_ops.py",
        "line_number": 39,
        "feature_type": "function",
        "feature_name": "duration",
        "signature": "def duration(self)",
        "context": "Group: performance_monitoring"
      },
      {
        "file_path": "dashboard\\api\\enhanced_telemetry.py",
        "line_number": 41,
        "feature_type": "function",
        "feature_name": "duration",
        "signature": "def duration(self)",
        "context": "Group: api_endpoints"
      }
    ],
    "__init__": [
      {
        "file_path": "core\\observability\\agent_ops.py",
        "line_number": 78,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self)",
        "context": "Group: performance_monitoring"
      },
      {
        "file_path": "core\\observability\\agent_ops.py",
        "line_number": 153,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self)",
        "context": "Group: performance_monitoring"
      },
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 56,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self, name, capabilities)",
        "context": "Group: performance_monitoring"
      },
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 90,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self)",
        "context": "Group: performance_monitoring"
      },
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 223,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self)",
        "context": "Group: performance_monitoring"
      },
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 418,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self, mode)",
        "context": "Group: performance_monitoring"
      },
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 86,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self, monitor)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "deployment\\swarm_orchestrator.py",
        "line_number": 160,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self, config)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 99,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "ui_ux\\interactive_dashboard.py",
        "line_number": 227,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self, name)",
        "context": "Group: dashboard_widgets"
      },
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 56,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self, name, capabilities)",
        "context": "Group: dashboard_widgets"
      },
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 90,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self)",
        "context": "Group: dashboard_widgets"
      },
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 223,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self)",
        "context": "Group: dashboard_widgets"
      },
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 418,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self, mode)",
        "context": "Group: dashboard_widgets"
      },
      {
        "file_path": "agents\\team\\testing_team.py",
        "line_number": 58,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self, configuration)",
        "context": "Group: state_management"
      },
      {
        "file_path": "deployment\\enterprise_deployment.py",
        "line_number": 106,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self, deployment_mode)",
        "context": "Group: state_management"
      },
      {
        "file_path": "deployment\\enterprise_deployment.py",
        "line_number": 615,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self, service_type)",
        "context": "Group: state_management"
      },
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 86,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self, monitor)",
        "context": "Group: state_management"
      },
      {
        "file_path": "dashboard\\api\\async_processing.py",
        "line_number": 24,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 61,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self, base_url)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\comprehensive_monitoring.py",
        "line_number": 23,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self, aggregator, delivery_guarantee, realtime_tracker, observability_metrics)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\coverage.py",
        "line_number": 28,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\crew_orchestration.py",
        "line_number": 110,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\enhanced_analytics.py",
        "line_number": 63,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\enhanced_telemetry.py",
        "line_number": 72,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self, service_name, backend, exporter)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\flow_optimization.py",
        "line_number": 21,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\frontend_data_contracts.py",
        "line_number": 92,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\health.py",
        "line_number": 30,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self, aggregator)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\intelligence.py",
        "line_number": 27,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\monitoring.py",
        "line_number": 19,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self, aggregator)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\observability.py",
        "line_number": 26,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\production_deployment.py",
        "line_number": 30,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self, max_workers)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\quality_assurance.py",
        "line_number": 22,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\real_codebase_scanner.py",
        "line_number": 29,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\security.py",
        "line_number": 21,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 99,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\telemetry.py",
        "line_number": 23,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\test_generation.py",
        "line_number": 21,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\websocket_dashboard.py",
        "line_number": 27,
        "feature_type": "function",
        "feature_name": "__init__",
        "signature": "def __init__(self, app, aggregator)",
        "context": "Group: api_endpoints"
      }
    ],
    "track_llm_call": [
      {
        "file_path": "core\\observability\\agent_ops.py",
        "line_number": 111,
        "feature_type": "function",
        "feature_name": "track_llm_call",
        "signature": "def track_llm_call(self, session_id, llm_call)",
        "context": "Group: performance_monitoring"
      },
      {
        "file_path": "core\\observability\\agent_ops.py",
        "line_number": 294,
        "feature_type": "function",
        "feature_name": "track_llm_call",
        "signature": "def track_llm_call(self, session_id, model, provider, prompt_tokens, completion_tokens, latency, success, error, metadata)",
        "context": "Group: performance_monitoring"
      }
    ],
    "decorator": [
      {
        "file_path": "core\\observability\\agent_ops.py",
        "line_number": 501,
        "feature_type": "function",
        "feature_name": "decorator",
        "signature": "def decorator(func)",
        "context": "Group: performance_monitoring"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 33,
        "feature_type": "function",
        "feature_name": "decorator",
        "signature": "def decorator(func)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\analytics.py",
        "line_number": 27,
        "feature_type": "function",
        "feature_name": "decorator",
        "signature": "def decorator(func)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\crew_orchestration.py",
        "line_number": 31,
        "feature_type": "function",
        "feature_name": "decorator",
        "signature": "def decorator(func)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\crew_orchestration.py",
        "line_number": 55,
        "feature_type": "function",
        "feature_name": "decorator",
        "signature": "def decorator(func)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\enhanced_telemetry.py",
        "line_number": 393,
        "feature_type": "function",
        "feature_name": "decorator",
        "signature": "def decorator(func)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\llm.py",
        "line_number": 27,
        "feature_type": "function",
        "feature_name": "decorator",
        "signature": "def decorator(func)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\observability.py",
        "line_number": 297,
        "feature_type": "function",
        "feature_name": "decorator",
        "signature": "def decorator(func)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\performance.py",
        "line_number": 34,
        "feature_type": "function",
        "feature_name": "decorator",
        "signature": "def decorator(func)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 33,
        "feature_type": "function",
        "feature_name": "decorator",
        "signature": "def decorator(func)",
        "context": "Group: api_endpoints"
      }
    ],
    "wrapper": [
      {
        "file_path": "core\\observability\\agent_ops.py",
        "line_number": 503,
        "feature_type": "function",
        "feature_name": "wrapper",
        "signature": "def wrapper()",
        "context": "Group: performance_monitoring"
      },
      {
        "file_path": "api\\phase2_api.py",
        "line_number": 47,
        "feature_type": "function",
        "feature_name": "wrapper",
        "signature": "def wrapper()",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "api\\phase2_api.py",
        "line_number": 59,
        "feature_type": "function",
        "feature_name": "wrapper",
        "signature": "def wrapper()",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\enhanced_telemetry.py",
        "line_number": 395,
        "feature_type": "function",
        "feature_name": "wrapper",
        "signature": "def wrapper()",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\observability.py",
        "line_number": 299,
        "feature_type": "function",
        "feature_name": "wrapper",
        "signature": "def wrapper()",
        "context": "Group: api_endpoints"
      }
    ],
    "monitoringmode": [
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 26,
        "feature_type": "class",
        "feature_name": "MonitoringMode",
        "signature": "class MonitoringMode",
        "context": "Group: performance_monitoring, Methods: []"
      },
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 26,
        "feature_type": "class",
        "feature_name": "MonitoringMode",
        "signature": "class MonitoringMode",
        "context": "Group: dashboard_widgets, Methods: []"
      }
    ],
    "alertlevel": [
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 33,
        "feature_type": "class",
        "feature_name": "AlertLevel",
        "signature": "class AlertLevel",
        "context": "Group: performance_monitoring, Methods: []"
      },
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 33,
        "feature_type": "class",
        "feature_name": "AlertLevel",
        "signature": "class AlertLevel",
        "context": "Group: dashboard_widgets, Methods: []"
      }
    ],
    "monitoringevent": [
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 41,
        "feature_type": "class",
        "feature_name": "MonitoringEvent",
        "signature": "class MonitoringEvent",
        "context": "Group: performance_monitoring, Methods: []"
      },
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 41,
        "feature_type": "class",
        "feature_name": "MonitoringEvent",
        "signature": "class MonitoringEvent",
        "context": "Group: dashboard_widgets, Methods: []"
      }
    ],
    "monitoringagent": [
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 53,
        "feature_type": "class",
        "feature_name": "MonitoringAgent",
        "signature": "class MonitoringAgent",
        "context": "Group: performance_monitoring, Methods: ['__init__']"
      },
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 53,
        "feature_type": "class",
        "feature_name": "MonitoringAgent",
        "signature": "class MonitoringAgent",
        "context": "Group: dashboard_widgets, Methods: ['__init__']"
      }
    ],
    "conversationalmonitor": [
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 84,
        "feature_type": "class",
        "feature_name": "ConversationalMonitor",
        "signature": "class ConversationalMonitor",
        "context": "Group: performance_monitoring, Methods: ['__init__', 'add_agent', '_get_system_status', '_get_help_message']"
      },
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 84,
        "feature_type": "class",
        "feature_name": "ConversationalMonitor",
        "signature": "class ConversationalMonitor",
        "context": "Group: dashboard_widgets, Methods: ['__init__', 'add_agent', '_get_system_status', '_get_help_message']"
      }
    ],
    "multimodalanalyzer": [
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 217,
        "feature_type": "class",
        "feature_name": "MultiModalAnalyzer",
        "signature": "class MultiModalAnalyzer",
        "context": "Group: performance_monitoring, Methods: ['__init__', '_calculate_dict_depth']"
      },
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 217,
        "feature_type": "class",
        "feature_name": "MultiModalAnalyzer",
        "signature": "class MultiModalAnalyzer",
        "context": "Group: dashboard_widgets, Methods: ['__init__', '_calculate_dict_depth']"
      }
    ],
    "enhancedtestmonitor": [
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 412,
        "feature_type": "class",
        "feature_name": "EnhancedTestMonitor",
        "signature": "class EnhancedTestMonitor",
        "context": "Group: performance_monitoring, Methods: ['__init__', 'add_monitoring_agent', 'get_monitoring_status']"
      },
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 412,
        "feature_type": "class",
        "feature_name": "EnhancedTestMonitor",
        "signature": "class EnhancedTestMonitor",
        "context": "Group: dashboard_widgets, Methods: ['__init__', 'add_monitoring_agent', 'get_monitoring_status']"
      }
    ],
    "add_agent": [
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 97,
        "feature_type": "function",
        "feature_name": "add_agent",
        "signature": "def add_agent(self, agent)",
        "context": "Group: performance_monitoring"
      },
      {
        "file_path": "deployment\\swarm_orchestrator.py",
        "line_number": 187,
        "feature_type": "function",
        "feature_name": "add_agent",
        "signature": "def add_agent(self, agent)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 97,
        "feature_type": "function",
        "feature_name": "add_agent",
        "signature": "def add_agent(self, agent)",
        "context": "Group: dashboard_widgets"
      }
    ],
    "_get_system_status": [
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 181,
        "feature_type": "function",
        "feature_name": "_get_system_status",
        "signature": "def _get_system_status(self)",
        "context": "Group: performance_monitoring"
      },
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 181,
        "feature_type": "function",
        "feature_name": "_get_system_status",
        "signature": "def _get_system_status(self)",
        "context": "Group: dashboard_widgets"
      }
    ],
    "_get_help_message": [
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 192,
        "feature_type": "function",
        "feature_name": "_get_help_message",
        "signature": "def _get_help_message(self)",
        "context": "Group: performance_monitoring"
      },
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 192,
        "feature_type": "function",
        "feature_name": "_get_help_message",
        "signature": "def _get_help_message(self)",
        "context": "Group: dashboard_widgets"
      }
    ],
    "_calculate_dict_depth": [
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 399,
        "feature_type": "function",
        "feature_name": "_calculate_dict_depth",
        "signature": "def _calculate_dict_depth(self, d, current_depth)",
        "context": "Group: performance_monitoring"
      },
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 399,
        "feature_type": "function",
        "feature_name": "_calculate_dict_depth",
        "signature": "def _calculate_dict_depth(self, d, current_depth)",
        "context": "Group: dashboard_widgets"
      }
    ],
    "add_monitoring_agent": [
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 461,
        "feature_type": "function",
        "feature_name": "add_monitoring_agent",
        "signature": "def add_monitoring_agent(self, agent)",
        "context": "Group: performance_monitoring"
      },
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 461,
        "feature_type": "function",
        "feature_name": "add_monitoring_agent",
        "signature": "def add_monitoring_agent(self, agent)",
        "context": "Group: dashboard_widgets"
      }
    ],
    "get_monitoring_status": [
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 603,
        "feature_type": "function",
        "feature_name": "get_monitoring_status",
        "signature": "def get_monitoring_status(self)",
        "context": "Group: performance_monitoring"
      },
      {
        "file_path": "monitoring\\enhanced_monitor.py",
        "line_number": 603,
        "feature_type": "function",
        "feature_name": "get_monitoring_status",
        "signature": "def get_monitoring_status(self)",
        "context": "Group: dashboard_widgets"
      },
      {
        "file_path": "dashboard\\api\\performance.py",
        "line_number": 285,
        "feature_type": "function",
        "feature_name": "get_monitoring_status",
        "signature": "def get_monitoring_status()",
        "context": "Group: api_endpoints"
      }
    ],
    "agentstatus": [
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 22,
        "feature_type": "class",
        "feature_name": "AgentStatus",
        "signature": "class AgentStatus",
        "context": "Group: agent_orchestration, Methods: []"
      },
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 22,
        "feature_type": "class",
        "feature_name": "AgentStatus",
        "signature": "class AgentStatus",
        "context": "Group: state_management, Methods: []"
      }
    ],
    "orchestrationmode": [
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 31,
        "feature_type": "class",
        "feature_name": "OrchestrationMode",
        "signature": "class OrchestrationMode",
        "context": "Group: agent_orchestration, Methods: []"
      },
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 31,
        "feature_type": "class",
        "feature_name": "OrchestrationMode",
        "signature": "class OrchestrationMode",
        "context": "Group: state_management, Methods: []"
      }
    ],
    "testagent": [
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 39,
        "feature_type": "class",
        "feature_name": "TestAgent",
        "signature": "class TestAgent",
        "context": "Group: agent_orchestration, Methods: ['__post_init__']"
      },
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 39,
        "feature_type": "class",
        "feature_name": "TestAgent",
        "signature": "class TestAgent",
        "context": "Group: state_management, Methods: ['__post_init__']"
      }
    ],
    "orchestrationtask": [
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 64,
        "feature_type": "class",
        "feature_name": "OrchestrationTask",
        "signature": "class OrchestrationTask",
        "context": "Group: agent_orchestration, Methods: []"
      },
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 64,
        "feature_type": "class",
        "feature_name": "OrchestrationTask",
        "signature": "class OrchestrationTask",
        "context": "Group: state_management, Methods: []"
      }
    ],
    "testorchestrationengine": [
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 80,
        "feature_type": "class",
        "feature_name": "TestOrchestrationEngine",
        "signature": "class TestOrchestrationEngine",
        "context": "Group: agent_orchestration, Methods: ['__init__', 'register_agent', 'create_test_crew', 'create_orchestration_task', '_create_task_from_config', '_update_agent_metrics', '_update_session_metrics', 'get_orchestration_status', '_calculate_system_health', 'cleanup_completed_sessions']"
      },
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 80,
        "feature_type": "class",
        "feature_name": "TestOrchestrationEngine",
        "signature": "class TestOrchestrationEngine",
        "context": "Group: state_management, Methods: ['__init__', 'register_agent', 'create_test_crew', 'create_orchestration_task', '_create_task_from_config', '_update_agent_metrics', '_update_session_metrics', 'get_orchestration_status', '_calculate_system_health', 'cleanup_completed_sessions']"
      }
    ],
    "__post_init__": [
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 51,
        "feature_type": "function",
        "feature_name": "__post_init__",
        "signature": "def __post_init__(self)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 51,
        "feature_type": "function",
        "feature_name": "__post_init__",
        "signature": "def __post_init__(self)",
        "context": "Group: state_management"
      },
      {
        "file_path": "dashboard\\api\\enhanced_analytics.py",
        "line_number": 42,
        "feature_type": "function",
        "feature_name": "__post_init__",
        "signature": "def __post_init__(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\enhanced_telemetry.py",
        "line_number": 36,
        "feature_type": "function",
        "feature_name": "__post_init__",
        "signature": "def __post_init__(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\enhanced_telemetry.py",
        "line_number": 62,
        "feature_type": "function",
        "feature_name": "__post_init__",
        "signature": "def __post_init__(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\frontend_data_contracts.py",
        "line_number": 37,
        "feature_type": "function",
        "feature_name": "__post_init__",
        "signature": "def __post_init__(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\frontend_data_contracts.py",
        "line_number": 63,
        "feature_type": "function",
        "feature_name": "__post_init__",
        "signature": "def __post_init__(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\frontend_data_contracts.py",
        "line_number": 79,
        "feature_type": "function",
        "feature_name": "__post_init__",
        "signature": "def __post_init__(self)",
        "context": "Group: api_endpoints"
      }
    ],
    "register_agent": [
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 110,
        "feature_type": "function",
        "feature_name": "register_agent",
        "signature": "def register_agent(self, agent)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 110,
        "feature_type": "function",
        "feature_name": "register_agent",
        "signature": "def register_agent(self, agent)",
        "context": "Group: state_management"
      }
    ],
    "create_test_crew": [
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 119,
        "feature_type": "function",
        "feature_name": "create_test_crew",
        "signature": "def create_test_crew(self, crew_type)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 119,
        "feature_type": "function",
        "feature_name": "create_test_crew",
        "signature": "def create_test_crew(self, crew_type)",
        "context": "Group: state_management"
      }
    ],
    "create_orchestration_task": [
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 185,
        "feature_type": "function",
        "feature_name": "create_orchestration_task",
        "signature": "def create_orchestration_task(self, name, agent_id, function, parameters, dependencies, timeout)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 185,
        "feature_type": "function",
        "feature_name": "create_orchestration_task",
        "signature": "def create_orchestration_task(self, name, agent_id, function, parameters, dependencies, timeout)",
        "context": "Group: state_management"
      }
    ],
    "_create_task_from_config": [
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 371,
        "feature_type": "function",
        "feature_name": "_create_task_from_config",
        "signature": "def _create_task_from_config(self, task_config)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 371,
        "feature_type": "function",
        "feature_name": "_create_task_from_config",
        "signature": "def _create_task_from_config(self, task_config)",
        "context": "Group: state_management"
      }
    ],
    "_update_agent_metrics": [
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 377,
        "feature_type": "function",
        "feature_name": "_update_agent_metrics",
        "signature": "def _update_agent_metrics(self, agent, execution_time, success)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 377,
        "feature_type": "function",
        "feature_name": "_update_agent_metrics",
        "signature": "def _update_agent_metrics(self, agent, execution_time, success)",
        "context": "Group: state_management"
      }
    ],
    "_update_session_metrics": [
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 397,
        "feature_type": "function",
        "feature_name": "_update_session_metrics",
        "signature": "def _update_session_metrics(self, session_id, execution_time)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 397,
        "feature_type": "function",
        "feature_name": "_update_session_metrics",
        "signature": "def _update_session_metrics(self, session_id, execution_time)",
        "context": "Group: state_management"
      }
    ],
    "get_orchestration_status": [
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 418,
        "feature_type": "function",
        "feature_name": "get_orchestration_status",
        "signature": "def get_orchestration_status(self)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 418,
        "feature_type": "function",
        "feature_name": "get_orchestration_status",
        "signature": "def get_orchestration_status(self)",
        "context": "Group: state_management"
      }
    ],
    "_calculate_system_health": [
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 436,
        "feature_type": "function",
        "feature_name": "_calculate_system_health",
        "signature": "def _calculate_system_health(self)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 436,
        "feature_type": "function",
        "feature_name": "_calculate_system_health",
        "signature": "def _calculate_system_health(self)",
        "context": "Group: state_management"
      }
    ],
    "cleanup_completed_sessions": [
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 457,
        "feature_type": "function",
        "feature_name": "cleanup_completed_sessions",
        "signature": "def cleanup_completed_sessions(self, max_age_hours)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "core\\orchestration\\agent_graph.py",
        "line_number": 457,
        "feature_type": "function",
        "feature_name": "cleanup_completed_sessions",
        "signature": "def cleanup_completed_sessions(self, max_age_hours)",
        "context": "Group: state_management"
      }
    ],
    "swarmtask": [
      {
        "file_path": "deployment\\swarm_orchestrator.py",
        "line_number": 47,
        "feature_type": "class",
        "feature_name": "SwarmTask",
        "signature": "class SwarmTask",
        "context": "Group: agent_orchestration, Methods: ['is_ready', 'is_timeout']"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 81,
        "feature_type": "class",
        "feature_name": "SwarmTask",
        "signature": "class SwarmTask",
        "context": "Group: agent_orchestration, Methods: []"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 81,
        "feature_type": "class",
        "feature_name": "SwarmTask",
        "signature": "class SwarmTask",
        "context": "Group: api_endpoints, Methods: []"
      }
    ],
    "swarmagent": [
      {
        "file_path": "deployment\\swarm_orchestrator.py",
        "line_number": 78,
        "feature_type": "class",
        "feature_name": "SwarmAgent",
        "signature": "class SwarmAgent",
        "context": "Group: agent_orchestration, Methods: ['can_accept_task', 'update_performance']"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 67,
        "feature_type": "class",
        "feature_name": "SwarmAgent",
        "signature": "class SwarmAgent",
        "context": "Group: agent_orchestration, Methods: []"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 67,
        "feature_type": "class",
        "feature_name": "SwarmAgent",
        "signature": "class SwarmAgent",
        "context": "Group: api_endpoints, Methods: []"
      }
    ],
    "get_swarm_status": [
      {
        "file_path": "deployment\\swarm_orchestrator.py",
        "line_number": 630,
        "feature_type": "function",
        "feature_name": "get_swarm_status",
        "signature": "def get_swarm_status(self)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 917,
        "feature_type": "function",
        "feature_name": "get_swarm_status",
        "signature": "def get_swarm_status(swarm_id)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 805,
        "feature_type": "function",
        "feature_name": "get_swarm_status",
        "signature": "def get_swarm_status(self, swarm_id)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 917,
        "feature_type": "function",
        "feature_name": "get_swarm_status",
        "signature": "def get_swarm_status(swarm_id)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 805,
        "feature_type": "function",
        "feature_name": "get_swarm_status",
        "signature": "def get_swarm_status(self, swarm_id)",
        "context": "Group: api_endpoints"
      }
    ],
    "swarmarchitecture": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 46,
        "feature_type": "class",
        "feature_name": "SwarmArchitecture",
        "signature": "class SwarmArchitecture",
        "context": "Group: agent_orchestration, Methods: []"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 46,
        "feature_type": "class",
        "feature_name": "SwarmArchitecture",
        "signature": "class SwarmArchitecture",
        "context": "Group: api_endpoints, Methods: []"
      }
    ],
    "taskpriority": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 59,
        "feature_type": "class",
        "feature_name": "TaskPriority",
        "signature": "class TaskPriority",
        "context": "Group: agent_orchestration, Methods: []"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 59,
        "feature_type": "class",
        "feature_name": "TaskPriority",
        "signature": "class TaskPriority",
        "context": "Group: api_endpoints, Methods: []"
      }
    ],
    "universalswarmorchestrator": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 93,
        "feature_type": "class",
        "feature_name": "UniversalSwarmOrchestrator",
        "signature": "class UniversalSwarmOrchestrator",
        "context": "Group: agent_orchestration, Methods: ['__init__', '_initialize_swarm_agents', 'create_swarm', 'execute_swarm_task', '_execute_sequential_workflow', '_execute_concurrent_workflow', '_execute_hierarchical_swarm', '_execute_mixture_of_agents', '_execute_majority_voting', '_execute_deep_research_swarm', '_execute_adaptive_swarm', '_execute_agent_step', '_generate_security_output', '_generate_test_output', '_generate_quality_output', '_generate_consensus_output', '_aggregate_concurrent_outputs', '_aggregate_expert_mixture', '_calculate_majority_vote', '_consolidate_research_findings', '_synthesize_research', '_analyze_task_for_architecture', '_update_performance_metrics', 'get_swarm_status']"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 93,
        "feature_type": "class",
        "feature_name": "UniversalSwarmOrchestrator",
        "signature": "class UniversalSwarmOrchestrator",
        "context": "Group: api_endpoints, Methods: ['__init__', '_initialize_swarm_agents', 'create_swarm', 'execute_swarm_task', '_execute_sequential_workflow', '_execute_concurrent_workflow', '_execute_hierarchical_swarm', '_execute_mixture_of_agents', '_execute_majority_voting', '_execute_deep_research_swarm', '_execute_adaptive_swarm', '_execute_agent_step', '_generate_security_output', '_generate_test_output', '_generate_quality_output', '_generate_consensus_output', '_aggregate_concurrent_outputs', '_aggregate_expert_mixture', '_calculate_majority_vote', '_consolidate_research_findings', '_synthesize_research', '_analyze_task_for_architecture', '_update_performance_metrics', 'get_swarm_status']"
      }
    ],
    "list_swarms": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 836,
        "feature_type": "function",
        "feature_name": "list_swarms",
        "signature": "def list_swarms()",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 836,
        "feature_type": "function",
        "feature_name": "list_swarms",
        "signature": "def list_swarms()",
        "context": "Group: api_endpoints"
      }
    ],
    "create_swarm": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 864,
        "feature_type": "function",
        "feature_name": "create_swarm",
        "signature": "def create_swarm()",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 238,
        "feature_type": "function",
        "feature_name": "create_swarm",
        "signature": "def create_swarm(self, config)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 864,
        "feature_type": "function",
        "feature_name": "create_swarm",
        "signature": "def create_swarm()",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 238,
        "feature_type": "function",
        "feature_name": "create_swarm",
        "signature": "def create_swarm(self, config)",
        "context": "Group: api_endpoints"
      }
    ],
    "execute_swarm_task": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 897,
        "feature_type": "function",
        "feature_name": "execute_swarm_task",
        "signature": "def execute_swarm_task(swarm_id)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 285,
        "feature_type": "function",
        "feature_name": "execute_swarm_task",
        "signature": "def execute_swarm_task(self, swarm_id, task)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 897,
        "feature_type": "function",
        "feature_name": "execute_swarm_task",
        "signature": "def execute_swarm_task(swarm_id)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 285,
        "feature_type": "function",
        "feature_name": "execute_swarm_task",
        "signature": "def execute_swarm_task(self, swarm_id, task)",
        "context": "Group: api_endpoints"
      }
    ],
    "list_architectures": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 932,
        "feature_type": "function",
        "feature_name": "list_architectures",
        "signature": "def list_architectures()",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 932,
        "feature_type": "function",
        "feature_name": "list_architectures",
        "signature": "def list_architectures()",
        "context": "Group: api_endpoints"
      }
    ],
    "list_swarm_agents": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 974,
        "feature_type": "function",
        "feature_name": "list_swarm_agents",
        "signature": "def list_swarm_agents()",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 974,
        "feature_type": "function",
        "feature_name": "list_swarm_agents",
        "signature": "def list_swarm_agents()",
        "context": "Group: api_endpoints"
      }
    ],
    "get_swarm_analytics": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 1002,
        "feature_type": "function",
        "feature_name": "get_swarm_analytics",
        "signature": "def get_swarm_analytics()",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 1002,
        "feature_type": "function",
        "feature_name": "get_swarm_analytics",
        "signature": "def get_swarm_analytics()",
        "context": "Group: api_endpoints"
      }
    ],
    "_initialize_swarm_agents": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 115,
        "feature_type": "function",
        "feature_name": "_initialize_swarm_agents",
        "signature": "def _initialize_swarm_agents(self)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 115,
        "feature_type": "function",
        "feature_name": "_initialize_swarm_agents",
        "signature": "def _initialize_swarm_agents(self)",
        "context": "Group: api_endpoints"
      }
    ],
    "_execute_sequential_workflow": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 358,
        "feature_type": "function",
        "feature_name": "_execute_sequential_workflow",
        "signature": "def _execute_sequential_workflow(self, swarm, task)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 358,
        "feature_type": "function",
        "feature_name": "_execute_sequential_workflow",
        "signature": "def _execute_sequential_workflow(self, swarm, task)",
        "context": "Group: api_endpoints"
      }
    ],
    "_execute_concurrent_workflow": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 392,
        "feature_type": "function",
        "feature_name": "_execute_concurrent_workflow",
        "signature": "def _execute_concurrent_workflow(self, swarm, task)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 392,
        "feature_type": "function",
        "feature_name": "_execute_concurrent_workflow",
        "signature": "def _execute_concurrent_workflow(self, swarm, task)",
        "context": "Group: api_endpoints"
      }
    ],
    "_execute_hierarchical_swarm": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 437,
        "feature_type": "function",
        "feature_name": "_execute_hierarchical_swarm",
        "signature": "def _execute_hierarchical_swarm(self, swarm, task)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 437,
        "feature_type": "function",
        "feature_name": "_execute_hierarchical_swarm",
        "signature": "def _execute_hierarchical_swarm(self, swarm, task)",
        "context": "Group: api_endpoints"
      }
    ],
    "_execute_mixture_of_agents": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 492,
        "feature_type": "function",
        "feature_name": "_execute_mixture_of_agents",
        "signature": "def _execute_mixture_of_agents(self, swarm, task)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 492,
        "feature_type": "function",
        "feature_name": "_execute_mixture_of_agents",
        "signature": "def _execute_mixture_of_agents(self, swarm, task)",
        "context": "Group: api_endpoints"
      }
    ],
    "_execute_majority_voting": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 519,
        "feature_type": "function",
        "feature_name": "_execute_majority_voting",
        "signature": "def _execute_majority_voting(self, swarm, task)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 519,
        "feature_type": "function",
        "feature_name": "_execute_majority_voting",
        "signature": "def _execute_majority_voting(self, swarm, task)",
        "context": "Group: api_endpoints"
      }
    ],
    "_execute_deep_research_swarm": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 546,
        "feature_type": "function",
        "feature_name": "_execute_deep_research_swarm",
        "signature": "def _execute_deep_research_swarm(self, swarm, task)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 546,
        "feature_type": "function",
        "feature_name": "_execute_deep_research_swarm",
        "signature": "def _execute_deep_research_swarm(self, swarm, task)",
        "context": "Group: api_endpoints"
      }
    ],
    "_execute_adaptive_swarm": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 601,
        "feature_type": "function",
        "feature_name": "_execute_adaptive_swarm",
        "signature": "def _execute_adaptive_swarm(self, swarm, task)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 601,
        "feature_type": "function",
        "feature_name": "_execute_adaptive_swarm",
        "signature": "def _execute_adaptive_swarm(self, swarm, task)",
        "context": "Group: api_endpoints"
      }
    ],
    "_execute_agent_step": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 633,
        "feature_type": "function",
        "feature_name": "_execute_agent_step",
        "signature": "def _execute_agent_step(self, agent, input_text, task, step_type)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 633,
        "feature_type": "function",
        "feature_name": "_execute_agent_step",
        "signature": "def _execute_agent_step(self, agent, input_text, task, step_type)",
        "context": "Group: api_endpoints"
      }
    ],
    "_generate_security_output": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 667,
        "feature_type": "function",
        "feature_name": "_generate_security_output",
        "signature": "def _generate_security_output(self, input_text, task, step_type)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 667,
        "feature_type": "function",
        "feature_name": "_generate_security_output",
        "signature": "def _generate_security_output(self, input_text, task, step_type)",
        "context": "Group: api_endpoints"
      }
    ],
    "_generate_test_output": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 676,
        "feature_type": "function",
        "feature_name": "_generate_test_output",
        "signature": "def _generate_test_output(self, input_text, task, step_type)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 676,
        "feature_type": "function",
        "feature_name": "_generate_test_output",
        "signature": "def _generate_test_output(self, input_text, task, step_type)",
        "context": "Group: api_endpoints"
      }
    ],
    "_generate_quality_output": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 685,
        "feature_type": "function",
        "feature_name": "_generate_quality_output",
        "signature": "def _generate_quality_output(self, input_text, task, step_type)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 685,
        "feature_type": "function",
        "feature_name": "_generate_quality_output",
        "signature": "def _generate_quality_output(self, input_text, task, step_type)",
        "context": "Group: api_endpoints"
      }
    ],
    "_generate_consensus_output": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 694,
        "feature_type": "function",
        "feature_name": "_generate_consensus_output",
        "signature": "def _generate_consensus_output(self, input_text, task, step_type)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 694,
        "feature_type": "function",
        "feature_name": "_generate_consensus_output",
        "signature": "def _generate_consensus_output(self, input_text, task, step_type)",
        "context": "Group: api_endpoints"
      }
    ],
    "_aggregate_concurrent_outputs": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 704,
        "feature_type": "function",
        "feature_name": "_aggregate_concurrent_outputs",
        "signature": "def _aggregate_concurrent_outputs(self, results, task)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 704,
        "feature_type": "function",
        "feature_name": "_aggregate_concurrent_outputs",
        "signature": "def _aggregate_concurrent_outputs(self, results, task)",
        "context": "Group: api_endpoints"
      }
    ],
    "_aggregate_expert_mixture": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 716,
        "feature_type": "function",
        "feature_name": "_aggregate_expert_mixture",
        "signature": "def _aggregate_expert_mixture(self, expert_outputs, task)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 716,
        "feature_type": "function",
        "feature_name": "_aggregate_expert_mixture",
        "signature": "def _aggregate_expert_mixture(self, expert_outputs, task)",
        "context": "Group: api_endpoints"
      }
    ],
    "_calculate_majority_vote": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 728,
        "feature_type": "function",
        "feature_name": "_calculate_majority_vote",
        "signature": "def _calculate_majority_vote(self, votes, task)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 728,
        "feature_type": "function",
        "feature_name": "_calculate_majority_vote",
        "signature": "def _calculate_majority_vote(self, votes, task)",
        "context": "Group: api_endpoints"
      }
    ],
    "_consolidate_research_findings": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 742,
        "feature_type": "function",
        "feature_name": "_consolidate_research_findings",
        "signature": "def _consolidate_research_findings(self, initial_research)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 742,
        "feature_type": "function",
        "feature_name": "_consolidate_research_findings",
        "signature": "def _consolidate_research_findings(self, initial_research)",
        "context": "Group: api_endpoints"
      }
    ],
    "_synthesize_research": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 750,
        "feature_type": "function",
        "feature_name": "_synthesize_research",
        "signature": "def _synthesize_research(self, initial_research, deep_analysis, task)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 750,
        "feature_type": "function",
        "feature_name": "_synthesize_research",
        "signature": "def _synthesize_research(self, initial_research, deep_analysis, task)",
        "context": "Group: api_endpoints"
      }
    ],
    "_analyze_task_for_architecture": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 760,
        "feature_type": "function",
        "feature_name": "_analyze_task_for_architecture",
        "signature": "def _analyze_task_for_architecture(self, task)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 760,
        "feature_type": "function",
        "feature_name": "_analyze_task_for_architecture",
        "signature": "def _analyze_task_for_architecture(self, task)",
        "context": "Group: api_endpoints"
      }
    ],
    "_update_performance_metrics": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 784,
        "feature_type": "function",
        "feature_name": "_update_performance_metrics",
        "signature": "def _update_performance_metrics(self, swarm_id, execution_time, success)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 784,
        "feature_type": "function",
        "feature_name": "_update_performance_metrics",
        "signature": "def _update_performance_metrics(self, swarm_id, execution_time, success)",
        "context": "Group: api_endpoints"
      }
    ],
    "api_endpoint": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 32,
        "feature_type": "function",
        "feature_name": "enhanced_api_endpoint",
        "signature": "def enhanced_api_endpoint()",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\analytics.py",
        "line_number": 26,
        "feature_type": "function",
        "feature_name": "enhanced_api_endpoint",
        "signature": "def enhanced_api_endpoint()",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\crew_orchestration.py",
        "line_number": 30,
        "feature_type": "function",
        "feature_name": "enhanced_api_endpoint",
        "signature": "def enhanced_api_endpoint()",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\llm.py",
        "line_number": 26,
        "feature_type": "function",
        "feature_name": "enhanced_api_endpoint",
        "signature": "def enhanced_api_endpoint()",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\performance.py",
        "line_number": 33,
        "feature_type": "function",
        "feature_name": "enhanced_api_endpoint",
        "signature": "def enhanced_api_endpoint()",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 32,
        "feature_type": "function",
        "feature_name": "enhanced_api_endpoint",
        "signature": "def enhanced_api_endpoint()",
        "context": "Group: api_endpoints"
      }
    ],
    "handle_api_error": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 36,
        "feature_type": "function",
        "feature_name": "handle_api_error",
        "signature": "def handle_api_error(func)",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\analytics.py",
        "line_number": 30,
        "feature_type": "function",
        "feature_name": "handle_api_error",
        "signature": "def handle_api_error(func)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\crew_orchestration.py",
        "line_number": 34,
        "feature_type": "function",
        "feature_name": "handle_api_error",
        "signature": "def handle_api_error(func)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\llm.py",
        "line_number": 30,
        "feature_type": "function",
        "feature_name": "handle_api_error",
        "signature": "def handle_api_error(func)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\performance.py",
        "line_number": 37,
        "feature_type": "function",
        "feature_name": "handle_api_error",
        "signature": "def handle_api_error(func)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 36,
        "feature_type": "function",
        "feature_name": "handle_api_error",
        "signature": "def handle_api_error(func)",
        "context": "Group: api_endpoints"
      }
    ],
    "get_real_data_extractor": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 38,
        "feature_type": "function",
        "feature_name": "get_real_data_extractor",
        "signature": "def get_real_data_extractor()",
        "context": "Group: agent_orchestration"
      },
      {
        "file_path": "dashboard\\api\\crew_orchestration.py",
        "line_number": 36,
        "feature_type": "function",
        "feature_name": "get_real_data_extractor",
        "signature": "def get_real_data_extractor()",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 38,
        "feature_type": "function",
        "feature_name": "get_real_data_extractor",
        "signature": "def get_real_data_extractor()",
        "context": "Group: api_endpoints"
      }
    ],
    "from core.error_handler import enhanced_api_endpoi...": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 29,
        "feature_type": "api_endpoint",
        "feature_name": "from core.error_handler import enhanced_api_endpoi...",
        "signature": "from core.error_handler import enhanced_api_endpoint, handle_api_error",
        "context": "Group: agent_orchestration, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\analytics.py",
        "line_number": 22,
        "feature_type": "api_endpoint",
        "feature_name": "from core.error_handler import enhanced_api_endpoi...",
        "signature": "from core.error_handler import enhanced_api_endpoint, handle_api_error",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\crew_orchestration.py",
        "line_number": 27,
        "feature_type": "api_endpoint",
        "feature_name": "from core.error_handler import enhanced_api_endpoi...",
        "signature": "from core.error_handler import enhanced_api_endpoint, handle_api_error",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 29,
        "feature_type": "api_endpoint",
        "feature_name": "from core.error_handler import enhanced_api_endpoi...",
        "signature": "from core.error_handler import enhanced_api_endpoint, handle_api_error",
        "context": "Group: api_endpoints, API endpoint"
      }
    ],
    "def enhanced_api_endpoint(*args, **kwargs):": [
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 32,
        "feature_type": "api_endpoint",
        "feature_name": "def enhanced_api_endpoint(*args, **kwargs):",
        "signature": "def enhanced_api_endpoint(*args, **kwargs):",
        "context": "Group: agent_orchestration, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\analytics.py",
        "line_number": 26,
        "feature_type": "api_endpoint",
        "feature_name": "def enhanced_api_endpoint(*args, **kwargs):",
        "signature": "def enhanced_api_endpoint(*args, **kwargs):",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\crew_orchestration.py",
        "line_number": 30,
        "feature_type": "api_endpoint",
        "feature_name": "def enhanced_api_endpoint(*args, **kwargs):",
        "signature": "def enhanced_api_endpoint(*args, **kwargs):",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\llm.py",
        "line_number": 26,
        "feature_type": "api_endpoint",
        "feature_name": "def enhanced_api_endpoint(*args, **kwargs):",
        "signature": "def enhanced_api_endpoint(*args, **kwargs):",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\performance.py",
        "line_number": 33,
        "feature_type": "api_endpoint",
        "feature_name": "def enhanced_api_endpoint(*args, **kwargs):",
        "signature": "def enhanced_api_endpoint(*args, **kwargs):",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\swarm_orchestration.py",
        "line_number": 32,
        "feature_type": "api_endpoint",
        "feature_name": "def enhanced_api_endpoint(*args, **kwargs):",
        "signature": "def enhanced_api_endpoint(*args, **kwargs):",
        "context": "Group: api_endpoints, API endpoint"
      }
    ],
    "get_dashboard_data": [
      {
        "file_path": "ui_ux\\interactive_dashboard.py",
        "line_number": 438,
        "feature_type": "function",
        "feature_name": "get_dashboard_data",
        "signature": "def get_dashboard_data(self)",
        "context": "Group: dashboard_widgets"
      },
      {
        "file_path": "dashboard\\api\\enhanced_analytics.py",
        "line_number": 441,
        "feature_type": "function",
        "feature_name": "get_dashboard_data",
        "signature": "def get_dashboard_data()",
        "context": "Group: api_endpoints"
      }
    ],
    "endpoints = [": [
      {
        "file_path": "api\\phase3_api.py",
        "line_number": 216,
        "feature_type": "api_endpoint",
        "feature_name": "endpoints = [",
        "signature": "endpoints = [",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\telemetry.py",
        "line_number": 191,
        "feature_type": "api_endpoint",
        "feature_name": "endpoints = [",
        "signature": "endpoints = [",
        "context": "Group: api_endpoints, API endpoint"
      }
    ],
    "_setup_routes": [
      {
        "file_path": "dashboard\\api\\async_processing.py",
        "line_number": 30,
        "feature_type": "function",
        "feature_name": "_setup_routes",
        "signature": "def _setup_routes(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\comprehensive_monitoring.py",
        "line_number": 43,
        "feature_type": "function",
        "feature_name": "_setup_routes",
        "signature": "def _setup_routes(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\coverage.py",
        "line_number": 35,
        "feature_type": "function",
        "feature_name": "_setup_routes",
        "signature": "def _setup_routes(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\flow_optimization.py",
        "line_number": 27,
        "feature_type": "function",
        "feature_name": "_setup_routes",
        "signature": "def _setup_routes(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\health.py",
        "line_number": 51,
        "feature_type": "function",
        "feature_name": "_setup_routes",
        "signature": "def _setup_routes(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\intelligence.py",
        "line_number": 36,
        "feature_type": "function",
        "feature_name": "_setup_routes",
        "signature": "def _setup_routes(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\monitoring.py",
        "line_number": 32,
        "feature_type": "function",
        "feature_name": "_setup_routes",
        "signature": "def _setup_routes(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\quality_assurance.py",
        "line_number": 31,
        "feature_type": "function",
        "feature_name": "_setup_routes",
        "signature": "def _setup_routes(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\real_codebase_scanner.py",
        "line_number": 36,
        "feature_type": "function",
        "feature_name": "_setup_routes",
        "signature": "def _setup_routes(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\security.py",
        "line_number": 27,
        "feature_type": "function",
        "feature_name": "_setup_routes",
        "signature": "def _setup_routes(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\telemetry.py",
        "line_number": 29,
        "feature_type": "function",
        "feature_name": "_setup_routes",
        "signature": "def _setup_routes(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\test_generation.py",
        "line_number": 27,
        "feature_type": "function",
        "feature_name": "_setup_routes",
        "signature": "def _setup_routes(self)",
        "context": "Group: api_endpoints"
      }
    ],
    "start_monitoring": [
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 591,
        "feature_type": "function",
        "feature_name": "start_monitoring",
        "signature": "def start_monitoring()",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 457,
        "feature_type": "function",
        "feature_name": "start_monitoring",
        "signature": "def start_monitoring(self)",
        "context": "Group: api_endpoints"
      }
    ],
    "stop_monitoring": [
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 606,
        "feature_type": "function",
        "feature_name": "stop_monitoring",
        "signature": "def stop_monitoring()",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 482,
        "feature_type": "function",
        "feature_name": "stop_monitoring",
        "signature": "def stop_monitoring(self)",
        "context": "Group: api_endpoints"
      }
    ],
    "self.logger.warning(f\"circuit breaker opened for {...": [
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 159,
        "feature_type": "api_endpoint",
        "feature_name": "self.logger.warning(f\"Circuit breaker opened for {...",
        "signature": "self.logger.warning(f\"Circuit breaker opened for {endpoint_path}\")",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 285,
        "feature_type": "api_endpoint",
        "feature_name": "self.logger.warning(f\"Circuit breaker opened for {...",
        "signature": "self.logger.warning(f\"Circuit breaker opened for {endpoint_path} after {self.retry_counts[endpoint_path]} failures\")",
        "context": "Group: api_endpoints, API endpoint"
      }
    ],
    "if endpoint_path not in self.endpoints:": [
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 169,
        "feature_type": "api_endpoint",
        "feature_name": "if endpoint_path not in self.endpoints:",
        "signature": "if endpoint_path not in self.endpoints:",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 385,
        "feature_type": "api_endpoint",
        "feature_name": "if endpoint_path not in self.endpoints:",
        "signature": "if endpoint_path not in self.endpoints:",
        "context": "Group: api_endpoints, API endpoint"
      }
    ],
    "endpoint = self.endpoints[endpoint_path]": [
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 172,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint = self.endpoints[endpoint_path]",
        "signature": "endpoint = self.endpoints[endpoint_path]",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 388,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint = self.endpoints[endpoint_path]",
        "signature": "endpoint = self.endpoints[endpoint_path]",
        "context": "Group: api_endpoints, API endpoint"
      }
    ],
    "endpoint.status = 'down'": [
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 176,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.status = 'down'",
        "signature": "endpoint.status = 'down'",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 240,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.status = 'down'",
        "signature": "endpoint.status = 'down'",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 261,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.status = 'down'",
        "signature": "endpoint.status = 'down'",
        "context": "Group: api_endpoints, API endpoint"
      }
    ],
    "endpoint.last_check = datetime.now()": [
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 178,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.last_check = datetime.now()",
        "signature": "endpoint.last_check = datetime.now()",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 207,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.last_check = datetime.now()",
        "signature": "endpoint.last_check = datetime.now()",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 258,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.last_check = datetime.now()",
        "signature": "endpoint.last_check = datetime.now()",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 266,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.last_check = datetime.now()",
        "signature": "endpoint.last_check = datetime.now()",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 274,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.last_check = datetime.now()",
        "signature": "endpoint.last_check = datetime.now()",
        "context": "Group: api_endpoints, API endpoint"
      }
    ],
    "return endpoint": [
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 179,
        "feature_type": "api_endpoint",
        "feature_name": "return endpoint",
        "signature": "return endpoint",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 277,
        "feature_type": "api_endpoint",
        "feature_name": "return endpoint",
        "signature": "return endpoint",
        "context": "Group: api_endpoints, API endpoint"
      }
    ],
    "endpoint.status = 'degraded'": [
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 227,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.status = 'degraded'",
        "signature": "endpoint.status = 'degraded'",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 233,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.status = 'degraded'",
        "signature": "endpoint.status = 'degraded'",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 247,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.status = 'degraded'",
        "signature": "endpoint.status = 'degraded'",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 253,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.status = 'degraded'",
        "signature": "endpoint.status = 'degraded'",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 269,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.status = 'degraded'",
        "signature": "endpoint.status = 'degraded'",
        "context": "Group: api_endpoints, API endpoint"
      }
    ],
    "endpoint.error_count += 1": [
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 228,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.error_count += 1",
        "signature": "endpoint.error_count += 1",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 234,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.error_count += 1",
        "signature": "endpoint.error_count += 1",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 241,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.error_count += 1",
        "signature": "endpoint.error_count += 1",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 248,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.error_count += 1",
        "signature": "endpoint.error_count += 1",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 254,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.error_count += 1",
        "signature": "endpoint.error_count += 1",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 262,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.error_count += 1",
        "signature": "endpoint.error_count += 1",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 270,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.error_count += 1",
        "signature": "endpoint.error_count += 1",
        "context": "Group: api_endpoints, API endpoint"
      }
    ],
    "self._handle_failure(endpoint_path)": [
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 230,
        "feature_type": "api_endpoint",
        "feature_name": "self._handle_failure(endpoint_path)",
        "signature": "self._handle_failure(endpoint_path)",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 237,
        "feature_type": "api_endpoint",
        "feature_name": "self._handle_failure(endpoint_path)",
        "signature": "self._handle_failure(endpoint_path)",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 244,
        "feature_type": "api_endpoint",
        "feature_name": "self._handle_failure(endpoint_path)",
        "signature": "self._handle_failure(endpoint_path)",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 250,
        "feature_type": "api_endpoint",
        "feature_name": "self._handle_failure(endpoint_path)",
        "signature": "self._handle_failure(endpoint_path)",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 259,
        "feature_type": "api_endpoint",
        "feature_name": "self._handle_failure(endpoint_path)",
        "signature": "self._handle_failure(endpoint_path)",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 267,
        "feature_type": "api_endpoint",
        "feature_name": "self._handle_failure(endpoint_path)",
        "signature": "self._handle_failure(endpoint_path)",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 275,
        "feature_type": "api_endpoint",
        "feature_name": "self._handle_failure(endpoint_path)",
        "signature": "self._handle_failure(endpoint_path)",
        "context": "Group: api_endpoints, API endpoint"
      }
    ],
    "endpoint.frontend_compatible = false": [
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 236,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.frontend_compatible = False",
        "signature": "endpoint.frontend_compatible = False",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 243,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.frontend_compatible = False",
        "signature": "endpoint.frontend_compatible = False",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 256,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.frontend_compatible = False",
        "signature": "endpoint.frontend_compatible = False",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 264,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.frontend_compatible = False",
        "signature": "endpoint.frontend_compatible = False",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 272,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.frontend_compatible = False",
        "signature": "endpoint.frontend_compatible = False",
        "context": "Group: api_endpoints, API endpoint"
      }
    ],
    "endpoint.response_time = time.time() - start_time": [
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 265,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.response_time = time.time() - start_time",
        "signature": "endpoint.response_time = time.time() - start_time",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 273,
        "feature_type": "api_endpoint",
        "feature_name": "endpoint.response_time = time.time() - start_time",
        "signature": "endpoint.response_time = time.time() - start_time",
        "context": "Group: api_endpoints, API endpoint"
      }
    ],
    "elif endpoint.status == 'degraded':": [
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 343,
        "feature_type": "api_endpoint",
        "feature_name": "elif endpoint.status == 'degraded':",
        "signature": "elif endpoint.status == 'degraded':",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 427,
        "feature_type": "api_endpoint",
        "feature_name": "elif endpoint.status == 'degraded':",
        "signature": "elif endpoint.status == 'degraded':",
        "context": "Group: api_endpoints, API endpoint"
      }
    ],
    "\"\"\"get detailed status of a specific endpoint.\"\"\"": [
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 384,
        "feature_type": "api_endpoint",
        "feature_name": "\"\"\"Get detailed status of a specific endpoint.\"\"\"",
        "signature": "\"\"\"Get detailed status of a specific endpoint.\"\"\"",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 543,
        "feature_type": "api_endpoint",
        "feature_name": "\"\"\"Get detailed status of a specific endpoint.\"\"\"",
        "signature": "\"\"\"Get detailed status of a specific endpoint.\"\"\"",
        "context": "Group: api_endpoints, API endpoint"
      }
    ],
    "'endpoint': endpoint.endpoint,": [
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 390,
        "feature_type": "api_endpoint",
        "feature_name": "'endpoint': endpoint.endpoint,",
        "signature": "'endpoint': endpoint.endpoint,",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 421,
        "feature_type": "api_endpoint",
        "feature_name": "'endpoint': endpoint.endpoint,",
        "signature": "'endpoint': endpoint.endpoint,",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 431,
        "feature_type": "api_endpoint",
        "feature_name": "'endpoint': endpoint.endpoint,",
        "signature": "'endpoint': endpoint.endpoint,",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 441,
        "feature_type": "api_endpoint",
        "feature_name": "'endpoint': endpoint.endpoint,",
        "signature": "'endpoint': endpoint.endpoint,",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 450,
        "feature_type": "api_endpoint",
        "feature_name": "'endpoint': endpoint.endpoint,",
        "signature": "'endpoint': endpoint.endpoint,",
        "context": "Group: api_endpoints, API endpoint"
      }
    ],
    "'name': endpoint.name,": [
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 391,
        "feature_type": "api_endpoint",
        "feature_name": "'name': endpoint.name,",
        "signature": "'name': endpoint.name,",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 422,
        "feature_type": "api_endpoint",
        "feature_name": "'name': endpoint.name,",
        "signature": "'name': endpoint.name,",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 432,
        "feature_type": "api_endpoint",
        "feature_name": "'name': endpoint.name,",
        "signature": "'name': endpoint.name,",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 442,
        "feature_type": "api_endpoint",
        "feature_name": "'name': endpoint.name,",
        "signature": "'name': endpoint.name,",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 451,
        "feature_type": "api_endpoint",
        "feature_name": "'name': endpoint.name,",
        "signature": "'name': endpoint.name,",
        "context": "Group: api_endpoints, API endpoint"
      }
    ],
    "'error': endpoint.last_error,": [
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 423,
        "feature_type": "api_endpoint",
        "feature_name": "'error': endpoint.last_error,",
        "signature": "'error': endpoint.last_error,",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 433,
        "feature_type": "api_endpoint",
        "feature_name": "'error': endpoint.last_error,",
        "signature": "'error': endpoint.last_error,",
        "context": "Group: api_endpoints, API endpoint"
      }
    ],
    "results = health_monitor.check_all_endpoints()": [
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 498,
        "feature_type": "api_endpoint",
        "feature_name": "results = health_monitor.check_all_endpoints()",
        "signature": "results = health_monitor.check_all_endpoints()",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\backend_health_monitor.py",
        "line_number": 571,
        "feature_type": "api_endpoint",
        "feature_name": "results = health_monitor.check_all_endpoints()",
        "signature": "results = health_monitor.check_all_endpoints()",
        "context": "Group: api_endpoints, API endpoint"
      }
    ],
    "_impact_to_number": [
      {
        "file_path": "dashboard\\api\\coverage.py",
        "line_number": 553,
        "feature_type": "function",
        "feature_name": "_impact_to_number",
        "signature": "def _impact_to_number(self, impact)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\flow_optimization.py",
        "line_number": 660,
        "feature_type": "function",
        "feature_name": "_impact_to_number",
        "signature": "def _impact_to_number(self, impact)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\security.py",
        "line_number": 488,
        "feature_type": "function",
        "feature_name": "_impact_to_number",
        "signature": "def _impact_to_number(self, impact)",
        "context": "Group: api_endpoints"
      }
    ],
    "create_crew": [
      {
        "file_path": "dashboard\\api\\crew_orchestration.py",
        "line_number": 643,
        "feature_type": "function",
        "feature_name": "create_crew",
        "signature": "def create_crew()",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\crew_orchestration.py",
        "line_number": 202,
        "feature_type": "function",
        "feature_name": "create_crew",
        "signature": "def create_crew(self, crew_config)",
        "context": "Group: api_endpoints"
      }
    ],
    "get_crew_status": [
      {
        "file_path": "dashboard\\api\\crew_orchestration.py",
        "line_number": 677,
        "feature_type": "function",
        "feature_name": "get_crew_status",
        "signature": "def get_crew_status(crew_id)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\crew_orchestration.py",
        "line_number": 588,
        "feature_type": "function",
        "feature_name": "get_crew_status",
        "signature": "def get_crew_status(self, crew_id)",
        "context": "Group: api_endpoints"
      }
    ],
    "execute_crew_task": [
      {
        "file_path": "dashboard\\api\\crew_orchestration.py",
        "line_number": 692,
        "feature_type": "function",
        "feature_name": "execute_crew_task",
        "signature": "def execute_crew_task(crew_id)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\crew_orchestration.py",
        "line_number": 242,
        "feature_type": "function",
        "feature_name": "execute_crew_task",
        "signature": "def execute_crew_task(self, crew_id, task)",
        "context": "Group: api_endpoints"
      }
    ],
    "track_performance": [
      {
        "file_path": "dashboard\\api\\crew_orchestration.py",
        "line_number": 54,
        "feature_type": "function",
        "feature_name": "track_performance",
        "signature": "def track_performance()",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\observability.py",
        "line_number": 289,
        "feature_type": "function",
        "feature_name": "track_performance",
        "signature": "def track_performance(operation_name, agent_type)",
        "context": "Group: api_endpoints"
      }
    ],
    "track_agent_performance": [
      {
        "file_path": "dashboard\\api\\crew_orchestration.py",
        "line_number": 45,
        "feature_type": "function",
        "feature_name": "track_agent_performance",
        "signature": "def track_agent_performance(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\observability.py",
        "line_number": 155,
        "feature_type": "function",
        "feature_name": "track_agent_performance",
        "signature": "def track_agent_performance(self, agent_id, agent_type, operation, duration, success, metadata)",
        "context": "Group: api_endpoints"
      }
    ],
    "track_event": [
      {
        "file_path": "dashboard\\api\\crew_orchestration.py",
        "line_number": 47,
        "feature_type": "function",
        "feature_name": "track_event",
        "signature": "def track_event(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\observability.py",
        "line_number": 116,
        "feature_type": "function",
        "feature_name": "track_event",
        "signature": "def track_event(self, session_id, event_type, event_data, duration)",
        "context": "Group: api_endpoints"
      }
    ],
    "start_session": [
      {
        "file_path": "dashboard\\api\\crew_orchestration.py",
        "line_number": 49,
        "feature_type": "function",
        "feature_name": "start_session",
        "signature": "def start_session(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\observability.py",
        "line_number": 42,
        "feature_type": "function",
        "feature_name": "start_session",
        "signature": "def start_session(self, session_name, tags, metadata)",
        "context": "Group: api_endpoints"
      }
    ],
    "get_realtime_metrics": [
      {
        "file_path": "dashboard\\api\\enhanced_analytics.py",
        "line_number": 456,
        "feature_type": "function",
        "feature_name": "get_realtime_metrics",
        "signature": "def get_realtime_metrics()",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\performance.py",
        "line_number": 159,
        "feature_type": "function",
        "feature_name": "get_realtime_metrics",
        "signature": "def get_realtime_metrics()",
        "context": "Group: api_endpoints"
      }
    ],
    "get_agent_analytics": [
      {
        "file_path": "dashboard\\api\\enhanced_analytics.py",
        "line_number": 473,
        "feature_type": "function",
        "feature_name": "get_agent_analytics",
        "signature": "def get_agent_analytics()",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\enhanced_analytics.py",
        "line_number": 254,
        "feature_type": "function",
        "feature_name": "get_agent_analytics",
        "signature": "def get_agent_analytics(self)",
        "context": "Group: api_endpoints"
      }
    ],
    "get_metric_trend": [
      {
        "file_path": "dashboard\\api\\enhanced_analytics.py",
        "line_number": 488,
        "feature_type": "function",
        "feature_name": "get_metric_trend",
        "signature": "def get_metric_trend(metric_name)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\enhanced_analytics.py",
        "line_number": 138,
        "feature_type": "function",
        "feature_name": "get_metric_trend",
        "signature": "def get_metric_trend(self, name, window)",
        "context": "Group: api_endpoints"
      }
    ],
    "record_metric": [
      {
        "file_path": "dashboard\\api\\enhanced_analytics.py",
        "line_number": 104,
        "feature_type": "function",
        "feature_name": "record_metric",
        "signature": "def record_metric(self, name, value, category, metadata)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\enhanced_telemetry.py",
        "line_number": 206,
        "feature_type": "function",
        "feature_name": "record_metric",
        "signature": "def record_metric(self, name, value, tags)",
        "context": "Group: api_endpoints"
      }
    ],
    "record_event": [
      {
        "file_path": "dashboard\\api\\enhanced_analytics.py",
        "line_number": 125,
        "feature_type": "function",
        "feature_name": "record_event",
        "signature": "def record_event(self, event_type, data)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\enhanced_telemetry.py",
        "line_number": 238,
        "feature_type": "function",
        "feature_name": "record_event",
        "signature": "def record_event(self, event_type, data)",
        "context": "Group: api_endpoints"
      }
    ],
    "get_metrics": [
      {
        "file_path": "dashboard\\api\\enhanced_telemetry.py",
        "line_number": 265,
        "feature_type": "function",
        "feature_name": "get_metrics",
        "signature": "def get_metrics(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\production_deployment.py",
        "line_number": 268,
        "feature_type": "function",
        "feature_name": "get_metrics",
        "signature": "def get_metrics(self)",
        "context": "Group: api_endpoints"
      }
    ],
    "_effort_to_number": [
      {
        "file_path": "dashboard\\api\\flow_optimization.py",
        "line_number": 656,
        "feature_type": "function",
        "feature_name": "_effort_to_number",
        "signature": "def _effort_to_number(self, effort)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\security.py",
        "line_number": 484,
        "feature_type": "function",
        "feature_name": "_effort_to_number",
        "signature": "def _effort_to_number(self, effort)",
        "context": "Group: api_endpoints"
      }
    ],
    "validationerror": [
      {
        "file_path": "dashboard\\api\\llm.py",
        "line_number": 32,
        "feature_type": "class",
        "feature_name": "ValidationError",
        "signature": "class ValidationError",
        "context": "Group: api_endpoints, Methods: []"
      },
      {
        "file_path": "dashboard\\api\\performance.py",
        "line_number": 43,
        "feature_type": "class",
        "feature_name": "ValidationError",
        "signature": "class ValidationError",
        "context": "Group: api_endpoints, Methods: []"
      }
    ],
    "get_session_summary": [
      {
        "file_path": "dashboard\\api\\observability.py",
        "line_number": 406,
        "feature_type": "function",
        "feature_name": "get_session_summary",
        "signature": "def get_session_summary(session_id)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\observability.py",
        "line_number": 204,
        "feature_type": "function",
        "feature_name": "get_session_summary",
        "signature": "def get_session_summary(self, session_id)",
        "context": "Group: api_endpoints"
      }
    ],
    "get_global_metrics": [
      {
        "file_path": "dashboard\\api\\observability.py",
        "line_number": 428,
        "feature_type": "function",
        "feature_name": "get_global_metrics",
        "signature": "def get_global_metrics()",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\observability.py",
        "line_number": 220,
        "feature_type": "function",
        "feature_name": "get_global_metrics",
        "signature": "def get_global_metrics(self)",
        "context": "Group: api_endpoints"
      }
    ],
    "get_performance_analytics": [
      {
        "file_path": "dashboard\\api\\observability.py",
        "line_number": 444,
        "feature_type": "function",
        "feature_name": "get_performance_analytics",
        "signature": "def get_performance_analytics()",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\observability.py",
        "line_number": 237,
        "feature_type": "function",
        "feature_name": "get_performance_analytics",
        "signature": "def get_performance_analytics(self)",
        "context": "Group: api_endpoints"
      }
    ],
    "init_performance_api": [
      {
        "file_path": "dashboard\\api\\performance.py",
        "line_number": 55,
        "feature_type": "function",
        "feature_name": "init_performance_api",
        "signature": "def init_performance_api(monitor_instance, cache_instance)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\performance.py",
        "line_number": 143,
        "feature_type": "function",
        "feature_name": "init_performance_api",
        "signature": "def init_performance_api(real_time_monitor, metrics_cache)",
        "context": "Group: api_endpoints"
      }
    ],
    "@enhanced_api_endpoint(optional_params={'codebase'...": [
      {
        "file_path": "dashboard\\api\\performance.py",
        "line_number": 158,
        "feature_type": "api_endpoint",
        "feature_name": "@enhanced_api_endpoint(optional_params={'codebase'...",
        "signature": "@enhanced_api_endpoint(optional_params={'codebase': '/testmaster'})",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\performance.py",
        "line_number": 221,
        "feature_type": "api_endpoint",
        "feature_name": "@enhanced_api_endpoint(optional_params={'codebase'...",
        "signature": "@enhanced_api_endpoint(optional_params={'codebase': '/testmaster', 'hours': 1})",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\performance.py",
        "line_number": 258,
        "feature_type": "api_endpoint",
        "feature_name": "@enhanced_api_endpoint(optional_params={'codebase'...",
        "signature": "@enhanced_api_endpoint(optional_params={'codebase': '/testmaster'})",
        "context": "Group: api_endpoints, API endpoint"
      }
    ],
    "details={'service': 'performance_monitor', 'endpoi...": [
      {
        "file_path": "dashboard\\api\\performance.py",
        "line_number": 188,
        "feature_type": "api_endpoint",
        "feature_name": "details={'service': 'performance_monitor', 'endpoi...",
        "signature": "details={'service': 'performance_monitor', 'endpoint': 'realtime'})",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\performance.py",
        "line_number": 243,
        "feature_type": "api_endpoint",
        "feature_name": "details={'service': 'performance_monitor', 'endpoi...",
        "signature": "details={'service': 'performance_monitor', 'endpoint': 'history'})",
        "context": "Group: api_endpoints, API endpoint"
      },
      {
        "file_path": "dashboard\\api\\performance.py",
        "line_number": 270,
        "feature_type": "api_endpoint",
        "feature_name": "details={'service': 'performance_monitor', 'endpoi...",
        "signature": "details={'service': 'performance_monitor', 'endpoint': 'summary'})",
        "context": "Group: api_endpoints, API endpoint"
      }
    ],
    "shutdown": [
      {
        "file_path": "dashboard\\api\\production_deployment.py",
        "line_number": 277,
        "feature_type": "function",
        "feature_name": "shutdown",
        "signature": "def shutdown(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\websocket_dashboard.py",
        "line_number": 537,
        "feature_type": "function",
        "feature_name": "shutdown",
        "signature": "def shutdown(self)",
        "context": "Group: api_endpoints"
      }
    ],
    "_generate_quality_trends": [
      {
        "file_path": "dashboard\\api\\quality_assurance.py",
        "line_number": 458,
        "feature_type": "function",
        "feature_name": "_generate_quality_trends",
        "signature": "def _generate_quality_trends(self)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\test_generation.py",
        "line_number": 449,
        "feature_type": "function",
        "feature_name": "_generate_quality_trends",
        "signature": "def _generate_quality_trends(self)",
        "context": "Group: api_endpoints"
      }
    ],
    "_calculate_status_distribution": [
      {
        "file_path": "dashboard\\api\\security.py",
        "line_number": 393,
        "feature_type": "function",
        "feature_name": "_calculate_status_distribution",
        "signature": "def _calculate_status_distribution(self, categories)",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\test_generation.py",
        "line_number": 340,
        "feature_type": "function",
        "feature_name": "_calculate_status_distribution",
        "signature": "def _calculate_status_distribution(self, generators)",
        "context": "Group: api_endpoints"
      }
    ],
    "get_workflow_dag": [
      {
        "file_path": "dashboard\\api\\workflow.py",
        "line_number": 121,
        "feature_type": "function",
        "feature_name": "get_workflow_dag",
        "signature": "def get_workflow_dag()",
        "context": "Group: api_endpoints"
      },
      {
        "file_path": "dashboard\\api\\workflow.py",
        "line_number": 324,
        "feature_type": "function",
        "feature_name": "get_workflow_dag",
        "signature": "def get_workflow_dag()",
        "context": "Group: api_endpoints"
      }
    ]
  },
  "summary": {
    "total_files_with_duplicates": 15,
    "total_features_found": 1128,
    "highest_priority_group": "performance_monitoring"
  }
}